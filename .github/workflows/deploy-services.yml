name: Deploy Services

env:
  CI: false

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment name'
        required: true
        type: choice
        default: 'development'
        options:
          - development
          - testing
          - staging
          - demo
      incrementVersion:
        description: 'Bump Version?'
        type: boolean
        required: false
      versionType:
        description: 'Version to bump (major.minor.patch)'
        type: choice
        default: 'patch'
        options:
          - patch
          - minor
          - major
      confirmProduction:
        description: 'If you are 100% sure you want to deploy to demo, type: Yes'
        required: false

jobs:
  deploy:
    env:
      NODE_OPTIONS: '--max_old_space_size=4096'
      ENVIRONMENT: ${{ github.event.inputs.environment }}

    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 15

    permissions:
      id-token: write # Required for OIDC
      contents: write # Required for version bumping
      pull-requests: write # Required for version bumping
      issues: write # Required for version bumping

    strategy:
      matrix:
        node-version:
          - "20"

    steps:
      - name: Install SSH Client
        uses: webfactory/ssh-agent@836c84ec59a0e7bc0eabc79988384eb567561ee2 # v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.DEPLOY_OTTEHR_KEY }}
            ${{ secrets.BUMP_VERSION_KEY }}

      - name: If environment is demo, ensure keys are coming in through input parameters.
        if: ${{ github.event.inputs.environment == 'demo' && !(github.event.inputs.confirmProduction == 'Yes') }}
        run: echo 'Please confirm you want to deploy to demo.' && exit 1

      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3 (3.6.0)
        with:
          ssh-key: ${{ secrets.BUMP_VERSION_KEY }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@7c12f8017d5436eb855f1ed4399f037a36fbd9e8 # v2 (v2.5.2)
        with:
          node-version: ${{ matrix.node-version }}

      - name: TruffleHog -- Check for secrets committed to the repository
        uses: trufflesecurity/trufflehog@1aa1871f9ae24a8c8a3a48a9345514acf42beb39 # v3.82.13
        with:
          extra_args: --only-verified

      - name: Increase version if input dictates.
        if: ${{ github.event.inputs.incrementVersion == 'true' }}
        run: cd ${{ github.workspace }} && npm version ${{ github.event.inputs.versionType }} --allow-same-version --no-git-tag-version

      - name: Get Version Number from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c # v1.1.0

      - name: Create Pull Request to the base branch with version bump
        if: ${{ github.event.inputs.incrementVersion == 'true' }}
        uses: peter-evans/create-pull-request@4e1beaa7521e8b457b572c090b25bd3db56bf1c5 # v5 (v5.0.3)
        with:
          branch: version-bump-${{ github.run_id }}
          commit-message: Bump version to ${{ steps.package-version.outputs.current-version }}
          title: "Version Bump ${{ steps.package-version.outputs.current-version }}"
          body: "This PR updates package versions automatically."

      - name: Auto-merge PR
        if: ${{ github.event.inputs.incrementVersion == 'true' }}
        run: |
          gh pr merge --auto --squash --delete-branch version-bump-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Check out secrets repo to grab the env file.
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3 (3.6.0)
        with:
          repository: masslight/ottehr-secrets
          ssh-key: ${{ secrets.DEPLOY_OTTEHR_KEY }}
          path: 'secrets'

      - name: Move zambda secrets file into zambdas dir.
        run: mkdir -p packages/zambdas/.env; cp secrets/zambdas/* packages/zambdas/.env

      - name: Move app secrets file into app dirs.
        run: |
          mkdir -p apps/intake/env; cp secrets/intake/app/.env.${{ github.event.inputs.environment }} apps/intake/env
          mkdir -p apps/ehr/env; cp secrets/ehr/app/.env.${{ github.event.inputs.environment }} apps/ehr/env

      - name: Lint Intake
        run: npm run intake:lint

      - name: Lint EHR
        run: npm run ehr:lint

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@50ac8dd1e1b10d09dac7b8727528b91bed831ac0 # v3 (v3.0.2)
        with:
          role-to-assume: arn:aws:iam::381491874541:role/deploy-ottehr
          aws-region: us-east-1

      - name: Deploy Intake
        run: cd apps/intake && npm run ci-deploy:${{ env.ENVIRONMENT }}

      - name: Deploy EHR
        run: cd apps/ehr && npm run ci-deploy:${{ env.ENVIRONMENT }}

      - name: Deploy zambdas
        run: cd packages/zambdas && ENV=${{ env.ENVIRONMENT }} npm run deploy-zambdas ${{ env.ENVIRONMENT }}

      - name: Update user roles
        run: cd packages/zambdas && npm run update-user-roles ${{ env.ENVIRONMENT }}

      - name: Ensure insurance plans and payer orgs created from CSV
        run: cd packages/zambdas && npm run update-insurances-and-payer-orgs ${{ env.ENVIRONMENT }}

      - name: Setup secrets in Oystehr console
        run: cd packages/zambdas && npm run setup-secrets ${{ env.ENVIRONMENT }}

      - name: Ensure deployed resources are in place
        env:
          ENV:  ${{ env.ENVIRONMENT }}
        run: cd packages/zambdas && npm run setup-deployed-resources

      - name: Create/update in-house medication resources
        run: cd packages/zambdas && npm run create-update-in-house-medications-list --env=${{ env.ENVIRONMENT }}

      - name: Setup Document explorer resources
        run: cd packages/zambdas && npm run setup-document-explorer --env=${{ env.ENVIRONMENT }}

      - name: Notify Slack
        if: always()
        uses: edge/simple-slack-notify@d841831738af1d83ecc27186e722322145c21488 # v1.1.2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          BRANCH: ${{ github.ref }}
          PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
        with:
          channel: '#ottehr-notifications'
          status: ${{ job.status }}
          success_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build completed successfully'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed'
          cancelled_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled'
          fields: |
            [{ "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"},
            { "title": "Branch", "value": "${env.BRANCH}", "short": true },
            { "title": "Environment", "value": "${env.ENVIRONMENT}", "short": true },
            { "title": "Version", "value": "${env.PACKAGE_VERSION}", "short": true }]
