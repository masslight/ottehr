{"version":3,"file":"api.js","sourceRoot":"","sources":["api.ts"],"names":[],"mappings":"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","sourcesContent":["import Oystehr, { User } from '@oystehr/sdk';\nimport { DocumentReference, Schedule, Slot } from 'fhir/r4b';\nimport {\n  apiErrorToThrow,\n  AssignPractitionerInput,\n  AssignPractitionerResponse,\n  CancelAppointmentZambdaInput,\n  CancelAppointmentZambdaOutput,\n  CancelRadiologyOrderZambdaInput,\n  CancelRadiologyOrderZambdaOutput,\n  CancelTelemedAppointmentZambdaInput,\n  CancelTelemedAppointmentZambdaOutput,\n  ChangeInPersonVisitStatusInput,\n  ChangeInPersonVisitStatusResponse,\n  chooseJson,\n  CollectInHouseLabSpecimenParameters,\n  CollectInHouseLabSpecimenZambdaOutput,\n  CreateAppointmentInputParams,\n  CreateAppointmentResponse,\n  CreateInHouseLabOrderParameters,\n  CreateInHouseLabOrderResponse,\n  CreateLabOrderParameters,\n  CreateLabOrderZambdaOutput,\n  CreateNursingOrderInput,\n  CreateRadiologyZambdaOrderInput,\n  CreateRadiologyZambdaOrderOutput,\n  CreateScheduleParams,\n  CreateSlotParams,\n  CreateUserOutput,\n  CreateUserParams,\n  DeleteInHouseLabOrderParameters,\n  DeleteInHouseLabOrderZambdaOutput,\n  DeleteLabOrderZambdaInput,\n  DeleteLabOrderZambdaOutput,\n  DownloadPatientProfilePhotoInput,\n  GetAppointmentsZambdaInput,\n  GetAppointmentsZambdaOutput,\n  GetConversationInput,\n  GetConversationZambdaOutput,\n  GetCreateInHouseLabOrderResourcesParameters,\n  GetCreateInHouseLabOrderResourcesResponse,\n  GetEmployeesResponse,\n  GetInHouseOrdersParameters,\n  GetLabelPdfParameters,\n  GetLabOrdersParameters,\n  GetNursingOrdersInput,\n  GetOrUploadPatientProfilePhotoZambdaResponse,\n  GetRadiologyOrderListZambdaInput,\n  GetRadiologyOrderListZambdaOutput,\n  GetScheduleParams,\n  GetScheduleRequestParams,\n  GetScheduleResponse,\n  GetUserParams,\n  GetUserResponse,\n  GetVisitLabelInput,\n  HandleInHouseLabResultsParameters,\n  HandleInHouseLabResultsZambdaOutput,\n  InHouseGetOrdersResponseDTO,\n  InviteParticipantRequestParameters,\n  LabelPdf,\n  ListScheduleOwnersParams,\n  ListScheduleOwnersResponse,\n  PaginatedResponse,\n  RadiologyLaunchViewerZambdaInput,\n  RadiologyLaunchViewerZambdaOutput,\n  SaveFollowupEncounterZambdaInput,\n  SaveFollowupEncounterZambdaOutput,\n  ScheduleDTO,\n  SubmitLabOrderDTO,\n  SubmitLabOrderInput,\n  UnassignPractitionerZambdaInput,\n  UnassignPractitionerZambdaOutput,\n  UpdateLabOrderResourcesParameters,\n  UpdateNursingOrderInput,\n  UpdateScheduleParams,\n  UpdateUserParams,\n  UpdateUserZambdaOutput,\n  UploadPatientProfilePhotoInput,\n  UserActivationZambdaInput,\n  UserActivationZambdaOutput,\n} from 'utils';\n\nexport interface PatchOperation {\n  // https://www.hl7.org/fhir/fhirpatch.html\n  op: 'add' | 'insert' | 'delete' | 'replace' | 'move';\n  path: string;\n  value: string | object | boolean;\n}\n\nconst VITE_APP_IS_LOCAL = import.meta.env.VITE_APP_IS_LOCAL;\nconst SUBMIT_LAB_ORDER_ZAMBDA_ID = import.meta.env.VITE_APP_SUBMIT_LAB_ORDER_ZAMBDA_ID;\nconst GET_APPOINTMENTS_ZAMBDA_ID = import.meta.env.VITE_APP_GET_APPOINTMENTS_ZAMBDA_ID;\nconst CREATE_APPOINTMENT_ZAMBDA_ID = import.meta.env.VITE_APP_CREATE_APPOINTMENT_ZAMBDA_ID;\nconst CANCEL_TELEMED_APPOINTMENT_ZAMBDA_ID = import.meta.env.VITE_APP_CANCEL_TELEMED_APPOINTMENT_ZAMBDA_ID;\nconst INVITE_PARTICIPANT_ZAMBDA_ID = import.meta.env.VITE_APP_INVITE_PARTICIPANT_ZAMBDA_ID;\nconst CREATE_USER_ZAMBDA_ID = import.meta.env.VITE_APP_CREATE_USER_ZAMBDA_ID;\nconst UPDATE_USER_ZAMBDA_ID = import.meta.env.VITE_APP_UPDATE_USER_ZAMBDA_ID;\nconst ASSIGN_PRACTITIONER_ZAMBDA_ID = import.meta.env.VITE_APP_ASSIGN_PRACTITIONER_ZAMBDA_ID;\nconst UNASSIGN_PRACTITIONER_ZAMBDA_ID = import.meta.env.VITE_APP_UNASSIGN_PRACTITIONER_ZAMBDA_ID;\nconst CHANGE_IN_PERSON_VISIT_STATUS_ZAMBDA_ID = import.meta.env.VITE_APP_CHANGE_IN_PERSON_VISIT_STATUS_ZAMBDA_ID;\nconst GET_USER_ZAMBDA_ID = import.meta.env.VITE_APP_GET_USER_ZAMBDA_ID;\nconst USER_ACTIVATION_ZAMBDA_ID = import.meta.env.VITE_APP_USER_ACTIVATION_ZAMBDA_ID;\nconst GET_CONVERSATION_ZAMBDA_ID = import.meta.env.VITE_APP_GET_CONVERSATION_ZAMBDA_ID;\nconst GET_SCHEDULE_ZAMBDA_ID = import.meta.env.VITE_APP_GET_SCHEDULE_ZAMBDA_ID;\nconst CANCEL_APPOINTMENT_ZAMBDA_ID = import.meta.env.VITE_APP_CANCEL_APPOINTMENT_ID;\nconst GET_EMPLOYEES_ZAMBDA_ID = import.meta.env.VITE_APP_GET_EMPLOYEES_ZAMBDA_ID;\nconst GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID = import.meta.env.VITE_APP_GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID;\nconst SAVE_PATIENT_FOLLOWUP_ZAMBDA_ID = import.meta.env.VITE_APP_SAVE_PATIENT_FOLLOWUP_ZAMBDA_ID;\nconst CREATE_LAB_ORDER_ZAMBDA_ID = import.meta.env.VITE_APP_CREATE_LAB_ORDER_ZAMBDA_ID;\nconst GET_LAB_ORDERS_ZAMBDA_ID = import.meta.env.VITE_APP_GET_LAB_ORDERS_ZAMBDA_ID;\nconst DELETE_LAB_ORDER_ZAMBDA_ID = import.meta.env.VITE_APP_DELETE_LAB_ORDER_ZAMBDA_ID;\nconst UPDATE_LAB_ORDER_RESOURCES_ZAMBDA_ID = import.meta.env.VITE_APP_UPDATE_LAB_ORDER_RESOURCES_ZAMBDA_ID;\nconst EHR_GET_SCHEDULE_ZAMBDA_ID = import.meta.env.VITE_APP_EHR_GET_SCHEDULE_ZAMBDA_ID;\nconst UPDATE_SCHEDULE_ZAMBDA_ID = import.meta.env.VITE_APP_UPDATE_SCHEDULE_ZAMBDA_ID;\nconst LIST_SCHEDULE_OWNERS_ZAMBDA_ID = import.meta.env.VITE_APP_LIST_SCHEDULE_OWNERS_ZAMBDA_ID;\nconst CREATE_SCHEDULE_ZAMBDA_ID = 'create-schedule';\nconst CREATE_SLOT_ZAMBDA_ID = 'create-slot';\nconst CREATE_IN_HOUSE_LAB_ORDER_ZAMBDA_ID = import.meta.env.VITE_APP_CREATE_IN_HOUSE_LAB_ORDER_ZAMBDA_ID;\nconst GET_IN_HOUSE_ORDERS_ZAMBDA_ID = import.meta.env.VITE_APP_GET_IN_HOUSE_ORDERS_ZAMBDA_ID;\nconst GET_CREATE_IN_HOUSE_LAB_ORDER_RESOURCES = import.meta.env.VITE_APP_GET_CREATE_IN_HOUSE_LAB_ORDER_RESOURCES;\nconst COLLECT_IN_HOUSE_LAB_SPECIMEN = import.meta.env.VITE_APP_COLLECT_IN_HOUSE_LAB_SPECIMEN;\nconst HANDLE_IN_HOUSE_LAB_RESULTS = import.meta.env.VITE_APP_HANDLE_IN_HOUSE_LAB_RESULTS;\nconst DELETE_IN_HOUSE_LAB_ORDER = import.meta.env.VITE_APP_DELETE_IN_HOUSE_LAB_ORDER;\nconst GET_NURSING_ORDERS_ZAMBDA_ID = 'get-nursing-orders';\nconst CREATE_NURSING_ORDER_ZAMBDA_ID = 'create-nursing-order';\nconst UPDATE_NURSING_ORDER = 'update-nursing-order';\nconst GET_LABEL_PDF_ZAMBDA_ID = import.meta.env.VITE_APP_GET_LABEL_PDF_ZAMBDA_ID;\nconst GET_OR_CREATE_VISIT_LABEL_PDF_ZAMBDA_ID = import.meta.env.VITE_APP_GET_OR_CREATE_VISIT_LABEL_PDF_ZAMBDA_ID;\nconst PAPERWORK_TO_PDF_ZAMBDA_ID = 'paperwork-to-pdf';\n\nexport const getUser = async (token: string): Promise<User> => {\n  const oystehr = new Oystehr({\n    accessToken: token,\n    projectApiUrl: import.meta.env.VITE_APP_PROJECT_API_URL,\n  });\n  return oystehr.user.me();\n};\n\nif (!VITE_APP_IS_LOCAL) {\n  throw new Error('VITE_APP_IS_LOCAL is not defined');\n}\n\nexport const submitLabOrder = async (oystehr: Oystehr, parameters: SubmitLabOrderInput): Promise<SubmitLabOrderDTO> => {\n  try {\n    if (SUBMIT_LAB_ORDER_ZAMBDA_ID == null) {\n      throw new Error('submit external lab order zambda environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: SUBMIT_LAB_ORDER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getLabelPdf = async (oystehr: Oystehr, parameters: GetLabelPdfParameters): Promise<LabelPdf[]> => {\n  try {\n    if (GET_LABEL_PDF_ZAMBDA_ID == null) {\n      throw new Error('get-label-pdf environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_LABEL_PDF_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getOrCreateVisitLabel = async (oystehr: Oystehr, parameters: GetVisitLabelInput): Promise<LabelPdf[]> => {\n  try {\n    if (GET_OR_CREATE_VISIT_LABEL_PDF_ZAMBDA_ID == null) {\n      throw new Error('get-or-create-visit-label-pdf environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_OR_CREATE_VISIT_LABEL_PDF_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getAppointments = async (\n  oystehr: Oystehr,\n  parameters: GetAppointmentsZambdaInput\n): Promise<GetAppointmentsZambdaOutput> => {\n  try {\n    if (GET_APPOINTMENTS_ZAMBDA_ID == null) {\n      throw new Error('get appointments environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_APPOINTMENTS_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createAppointment = async (\n  oystehr: Oystehr,\n  parameters: CreateAppointmentInputParams\n): Promise<CreateAppointmentResponse> => {\n  try {\n    if (CREATE_APPOINTMENT_ZAMBDA_ID == null) {\n      throw new Error('create appointment environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: CREATE_APPOINTMENT_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const saveFollowup = async (\n  oystehr: Oystehr,\n  parameters: SaveFollowupEncounterZambdaInput\n): Promise<SaveFollowupEncounterZambdaOutput> => {\n  try {\n    if (SAVE_PATIENT_FOLLOWUP_ZAMBDA_ID == null) {\n      throw new Error('save followup environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: SAVE_PATIENT_FOLLOWUP_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const cancelTelemedAppointment = async (\n  oystehr: Oystehr,\n  parameters: CancelTelemedAppointmentZambdaInput\n): Promise<CancelTelemedAppointmentZambdaOutput> => {\n  try {\n    if (CANCEL_TELEMED_APPOINTMENT_ZAMBDA_ID == null) {\n      throw new Error('cancel appointment environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: CANCEL_TELEMED_APPOINTMENT_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error, 'error');\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const inviteParticipant = async (\n  oystehr: Oystehr,\n  parameters: InviteParticipantRequestParameters\n): Promise<void> => {\n  try {\n    if (INVITE_PARTICIPANT_ZAMBDA_ID == null) {\n      throw new Error('invite participant environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: INVITE_PARTICIPANT_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error, 'Error occurred trying to invite participant');\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const createUser = async (oystehr: Oystehr, parameters: CreateUserParams): Promise<CreateUserOutput> => {\n  try {\n    if (CREATE_USER_ZAMBDA_ID == null) {\n      throw new Error('create user environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: CREATE_USER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const updateUser = async (oystehr: Oystehr, parameters: UpdateUserParams): Promise<UpdateUserZambdaOutput> => {\n  try {\n    if (UPDATE_USER_ZAMBDA_ID == null) {\n      throw new Error('update user environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: UPDATE_USER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const assignPractitioner = async (\n  oystehr: Oystehr,\n  parameters: AssignPractitionerInput\n): Promise<AssignPractitionerResponse> => {\n  try {\n    if (ASSIGN_PRACTITIONER_ZAMBDA_ID == null) {\n      throw new Error('assign practitioner environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: ASSIGN_PRACTITIONER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n\nexport const unassignPractitioner = async (\n  oystehr: Oystehr,\n  parameters: UnassignPractitionerZambdaInput\n): Promise<UnassignPractitionerZambdaOutput> => {\n  try {\n    if (UNASSIGN_PRACTITIONER_ZAMBDA_ID == null) {\n      throw new Error('unassign practitioner environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: UNASSIGN_PRACTITIONER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const changeInPersonVisitStatus = async (\n  oystehr: Oystehr,\n  parameters: ChangeInPersonVisitStatusInput\n): Promise<ChangeInPersonVisitStatusResponse> => {\n  try {\n    if (CHANGE_IN_PERSON_VISIT_STATUS_ZAMBDA_ID == null) {\n      throw new Error('change in person visit status environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: CHANGE_IN_PERSON_VISIT_STATUS_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const getUserDetails = async (oystehr: Oystehr, parameters: GetUserParams): Promise<GetUserResponse> => {\n  try {\n    if (GET_USER_ZAMBDA_ID == null) {\n      throw new Error('get user details environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_USER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const userActivation = async (\n  oystehr: Oystehr,\n  parameters: UserActivationZambdaInput\n): Promise<UserActivationZambdaOutput> => {\n  try {\n    if (USER_ACTIVATION_ZAMBDA_ID == null) {\n      throw new Error('user-activation environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: USER_ACTIVATION_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const getConversation = async (\n  oystehr: Oystehr,\n  parameters: GetConversationInput\n): Promise<GetConversationZambdaOutput> => {\n  try {\n    if (GET_CONVERSATION_ZAMBDA_ID == null) {\n      throw new Error('GET_CONVERSATION_ZAMBDA_ID environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_CONVERSATION_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    throw new Error(JSON.stringify(error));\n  }\n};\n\nexport const getLocations = async (\n  oystehr: Oystehr,\n  parameters: GetScheduleRequestParams\n): Promise<GetScheduleResponse> => {\n  try {\n    if (GET_SCHEDULE_ZAMBDA_ID == null || VITE_APP_IS_LOCAL == null) {\n      throw new Error('get location environment variable could not be loaded');\n    }\n    console.log(import.meta.env);\n    const response = await oystehr.zambda.executePublic({\n      id: GET_SCHEDULE_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const cancelAppointment = async (\n  oystehr: Oystehr,\n  parameters: CancelAppointmentZambdaInput\n): Promise<CancelAppointmentZambdaOutput> => {\n  try {\n    if (CANCEL_APPOINTMENT_ZAMBDA_ID == null) {\n      throw new Error('cancel appointment environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.executePublic({\n      id: CANCEL_APPOINTMENT_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getEmployees = async (oystehr: Oystehr): Promise<GetEmployeesResponse> => {\n  try {\n    if (GET_EMPLOYEES_ZAMBDA_ID == null) {\n      throw new Error('get employees environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: GET_EMPLOYEES_ZAMBDA_ID,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const listScheduleOwners = async (\n  params: ListScheduleOwnersParams,\n  oystehr: Oystehr\n): Promise<ListScheduleOwnersResponse> => {\n  try {\n    if (LIST_SCHEDULE_OWNERS_ZAMBDA_ID == null) {\n      throw new Error('list-schedule-owners zambda environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: LIST_SCHEDULE_OWNERS_ZAMBDA_ID,\n      ...params,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getSchedule = async (params: GetScheduleParams, oystehr: Oystehr): Promise<ScheduleDTO> => {\n  try {\n    if (EHR_GET_SCHEDULE_ZAMBDA_ID == null) {\n      throw new Error('ehr-get-schedule zambda environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: EHR_GET_SCHEDULE_ZAMBDA_ID,\n      ...params,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const updateSchedule = async (params: UpdateScheduleParams, oystehr: Oystehr): Promise<Schedule> => {\n  try {\n    if (UPDATE_SCHEDULE_ZAMBDA_ID == null) {\n      throw new Error('update-schedule zambda environment variable could not be loaded');\n    }\n\n    const response = await oystehr.zambda.execute({\n      id: UPDATE_SCHEDULE_ZAMBDA_ID,\n      ...params,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createSchedule = async (params: CreateScheduleParams, oystehr: Oystehr): Promise<Schedule> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: CREATE_SCHEDULE_ZAMBDA_ID,\n      ...params,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport type UploadPatientProfilePhotoParameters = Omit<UploadPatientProfilePhotoInput, 'action'> & {\n  patientPhotoFile: File;\n};\n\nexport const uploadPatientProfilePhoto = async (\n  oystehr: Oystehr,\n  parameters: UploadPatientProfilePhotoParameters\n): Promise<GetOrUploadPatientProfilePhotoZambdaResponse> => {\n  try {\n    if (GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID == null) {\n      throw new Error('Could not find environment variable GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID');\n    }\n\n    const { patientPhotoFile, ...zambdaInput } = parameters;\n\n    const urlSigningResponse = await oystehr.zambda.execute({\n      id: GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID,\n      ...zambdaInput,\n      action: 'upload',\n    });\n\n    const { presignedImageUrl } = chooseJson(urlSigningResponse);\n\n    // Upload the file to S3\n    const uploadResponse = await fetch(presignedImageUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': patientPhotoFile.type,\n      },\n      body: patientPhotoFile,\n    });\n\n    if (!uploadResponse.ok) {\n      throw new Error('Failed to upload file');\n    }\n\n    return chooseJson(urlSigningResponse);\n  } catch (error: unknown) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport type GetPatientProfilePhotoParameters = Omit<DownloadPatientProfilePhotoInput, 'action'>;\n\nexport const getSignedPatientProfilePhotoUrl = async (\n  oystehr: Oystehr,\n  parameters: GetPatientProfilePhotoParameters\n): Promise<GetOrUploadPatientProfilePhotoZambdaResponse> => {\n  try {\n    if (GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID == null) {\n      throw new Error('Could not find environment variable GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID');\n    }\n\n    const urlSigningResponse = await oystehr.zambda.execute({\n      id: GET_PATIENT_PROFILE_PHOTO_URL_ZAMBDA_ID,\n      ...parameters,\n      action: 'download',\n    });\n\n    return chooseJson(urlSigningResponse);\n  } catch (error: unknown) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const createExternalLabOrder = async (\n  oystehr: Oystehr,\n  parameters: CreateLabOrderParameters\n): Promise<CreateLabOrderZambdaOutput> => {\n  try {\n    if (CREATE_LAB_ORDER_ZAMBDA_ID == null) {\n      throw new Error('create external lab order environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: CREATE_LAB_ORDER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getExternalLabOrders = async <RequestParameters extends GetLabOrdersParameters>(\n  oystehr: Oystehr,\n  parameters: RequestParameters\n): Promise<PaginatedResponse<RequestParameters>> => {\n  try {\n    if (GET_LAB_ORDERS_ZAMBDA_ID == null) {\n      throw new Error('get external lab orders zambda environment variable could not be loaded');\n    }\n    const { searchBy } = parameters;\n    if (!searchBy) {\n      throw new Error(\n        `Missing one of the required parameters (serviceRequestId | encounterId | patientId): ${JSON.stringify(\n          parameters\n        )}`\n      );\n    }\n    const response = await oystehr.zambda.execute({\n      id: GET_LAB_ORDERS_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const deleteLabOrder = async (\n  oystehr: Oystehr,\n  parameters: DeleteLabOrderZambdaInput\n): Promise<DeleteLabOrderZambdaOutput> => {\n  try {\n    if (DELETE_LAB_ORDER_ZAMBDA_ID == null) {\n      throw new Error('delete lab order zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: DELETE_LAB_ORDER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const updateLabOrderResources = async (\n  oystehr: Oystehr,\n  parameters: UpdateLabOrderResourcesParameters\n): Promise<any> => {\n  try {\n    if (UPDATE_LAB_ORDER_RESOURCES_ZAMBDA_ID == null) {\n      throw new Error('update lab order resources zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: UPDATE_LAB_ORDER_RESOURCES_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createRadiologyOrder = async (\n  oystehr: Oystehr,\n  parameters: CreateRadiologyZambdaOrderInput\n): Promise<CreateRadiologyZambdaOrderOutput> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: 'radiology-create-order',\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const cancelRadiologyOrder = async (\n  oystehr: Oystehr,\n  parameters: CancelRadiologyOrderZambdaInput\n): Promise<CancelRadiologyOrderZambdaOutput> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: 'radiology-cancel-order',\n      ...parameters,\n    });\n    return response ? chooseJson(response) : {};\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const radiologyLaunchViewer = async (\n  oystehr: Oystehr,\n  parameters: RadiologyLaunchViewerZambdaInput\n): Promise<RadiologyLaunchViewerZambdaOutput> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: 'radiology-launch-viewer',\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getRadiologyOrders = async (\n  oystehr: Oystehr,\n  parameters: GetRadiologyOrderListZambdaInput\n): Promise<GetRadiologyOrderListZambdaOutput> => {\n  try {\n    const searchBy = parameters.encounterIds || parameters.patientId || parameters.serviceRequestId;\n    if (!searchBy) {\n      throw new Error(\n        `Missing one of the required parameters (serviceRequestId | encounterId | patientId): ${JSON.stringify(\n          parameters\n        )}`\n      );\n    }\n    const response = await oystehr.zambda.execute({\n      id: 'radiology-order-list',\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createSlot = async (input: CreateSlotParams, oystehr: Oystehr): Promise<Slot> => {\n  try {\n    const response = await oystehr.zambda.executePublic({ id: CREATE_SLOT_ZAMBDA_ID, ...input });\n    const jsonToUse = chooseJson(response);\n    return jsonToUse;\n  } catch (error: unknown) {\n    throw apiErrorToThrow(error);\n  }\n};\n\nexport const createInHouseLabOrder = async (\n  oystehr: Oystehr,\n  parameters: CreateInHouseLabOrderParameters\n): Promise<CreateInHouseLabOrderResponse> => {\n  try {\n    if (CREATE_IN_HOUSE_LAB_ORDER_ZAMBDA_ID == null) {\n      throw new Error('create in house lab order zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: CREATE_IN_HOUSE_LAB_ORDER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getInHouseOrders = async <RequestParameters extends GetInHouseOrdersParameters>(\n  oystehr: Oystehr,\n  parameters: RequestParameters\n): Promise<InHouseGetOrdersResponseDTO<RequestParameters>> => {\n  try {\n    if (GET_IN_HOUSE_ORDERS_ZAMBDA_ID == null) {\n      throw new Error('get in house orders zambda environment variable could not be loaded');\n    }\n    const { searchBy } = parameters;\n    if (!searchBy) {\n      throw new Error(\n        `Missing one of the required parameters (serviceRequestId | encounterId | patientId): ${JSON.stringify(\n          parameters\n        )}`\n      );\n    }\n    const response = await oystehr.zambda.execute({\n      id: GET_IN_HOUSE_ORDERS_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getCreateInHouseLabOrderResources = async (\n  oystehr: Oystehr,\n  parameters: GetCreateInHouseLabOrderResourcesParameters\n): Promise<GetCreateInHouseLabOrderResourcesResponse> => {\n  try {\n    if (GET_CREATE_IN_HOUSE_LAB_ORDER_RESOURCES == null) {\n      throw new Error('get create in house lab order resources zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: GET_CREATE_IN_HOUSE_LAB_ORDER_RESOURCES,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const collectInHouseLabSpecimen = async (\n  oystehr: Oystehr,\n  parameters: CollectInHouseLabSpecimenParameters\n): Promise<CollectInHouseLabSpecimenZambdaOutput> => {\n  try {\n    if (COLLECT_IN_HOUSE_LAB_SPECIMEN == null) {\n      throw new Error('collect in house lab specimen zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: COLLECT_IN_HOUSE_LAB_SPECIMEN,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const handleInHouseLabResults = async (\n  oystehr: Oystehr,\n  parameters: HandleInHouseLabResultsParameters\n): Promise<HandleInHouseLabResultsZambdaOutput> => {\n  try {\n    if (HANDLE_IN_HOUSE_LAB_RESULTS == null) {\n      throw new Error('handle in house lab results zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: HANDLE_IN_HOUSE_LAB_RESULTS,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const deleteInHouseLabOrder = async (\n  oystehr: Oystehr,\n  parameters: DeleteInHouseLabOrderParameters\n): Promise<DeleteInHouseLabOrderZambdaOutput> => {\n  try {\n    if (DELETE_IN_HOUSE_LAB_ORDER == null) {\n      throw new Error('delete in house lab order zambda environment variable could not be loaded');\n    }\n    const response = await oystehr.zambda.execute({\n      id: DELETE_IN_HOUSE_LAB_ORDER,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getNursingOrders = async (oystehr: Oystehr, parameters: GetNursingOrdersInput): Promise<any> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: GET_NURSING_ORDERS_ZAMBDA_ID,\n      ...parameters,\n    });\n\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const createNursingOrder = async (oystehr: Oystehr, parameters: CreateNursingOrderInput): Promise<any> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: CREATE_NURSING_ORDER_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const updateNursingOrder = async (oystehr: Oystehr, parameters: UpdateNursingOrderInput): Promise<any> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: UPDATE_NURSING_ORDER,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const generatePaperworkPdf = async (\n  oystehr: Oystehr,\n  parameters: { questionnaireResponseId: string; documentReference: DocumentReference }\n): Promise<{ documentReference: string }> => {\n  try {\n    const response = await oystehr.zambda.execute({\n      id: PAPERWORK_TO_PDF_ZAMBDA_ID,\n      ...parameters,\n    });\n    return chooseJson(response);\n  } catch (error: unknown) {\n    console.log(error);\n    throw error;\n  }\n};\n"]}