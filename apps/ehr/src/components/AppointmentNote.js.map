{"version":3,"file":"AppointmentNote.js","sourceRoot":"","sources":["AppointmentNote.tsx"],"names":[],"mappings":"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","sourcesContent":["import EditNoteIcon from '@mui/icons-material/EditNote';\nimport { LoadingButton } from '@mui/lab';\nimport { Input, InputAdornment, useTheme } from '@mui/material';\nimport Oystehr from '@oystehr/sdk';\nimport { ReactElement, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { InPersonAppointmentInformation } from 'utils';\nimport { patchAppointmentComment } from '../helpers';\nimport { EvolveUser } from '../hooks/useEvolveUser';\nimport { GenericToolTip } from './GenericToolTip';\n\ninterface AppointmentNoteProps {\n  appointment: InPersonAppointmentInformation;\n  oystehr: Oystehr | undefined;\n  user: EvolveUser | undefined;\n  updateAppointments: () => void;\n  setEditingComment: (editingComment: boolean) => void;\n}\n\nconst AppointmentNote = ({\n  appointment,\n  oystehr,\n  user,\n  updateAppointments,\n  setEditingComment,\n}: AppointmentNoteProps): ReactElement => {\n  const theme = useTheme();\n  const [apptComment, setApptComment] = useState<string>(appointment.comment || '');\n  const [noteSaving, setNoteSaving] = useState<boolean>(false);\n  const [editingRow, setEditingRow] = useState<boolean>(false);\n  const [isOverflowing, setIsOverflowing] = useState(false);\n  const inputRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    if (inputRef.current && !editingRow) {\n      const isOverflow = inputRef.current.scrollHeight > inputRef.current.clientHeight;\n      setIsOverflowing(isOverflow);\n    }\n  }, [apptComment, editingRow]);\n\n  const saveNote = useCallback(\n    async (_event: React.MouseEvent<HTMLElement>): Promise<void> => {\n      if (!oystehr) {\n        throw new Error('error getting oystehr client');\n      }\n      if (!appointment.id) {\n        throw new Error('error getting appointment id');\n      }\n      try {\n        setNoteSaving(true);\n        await patchAppointmentComment(appointment, apptComment, user, oystehr);\n      } catch (error: unknown) {\n        // todo tell the user there was an error\n        console.log('error adding comment: ', error);\n        setApptComment(appointment.comment || '');\n      }\n      setNoteSaving(false);\n      setEditingRow(false);\n      setEditingComment(false);\n      await updateAppointments();\n    },\n    [oystehr, appointment, setEditingComment, updateAppointments, apptComment, user]\n  );\n\n  const inputComponent = useMemo(\n    () => (\n      <>\n        <Input\n          inputRef={inputRef}\n          placeholder={'Add internal note...'}\n          value={apptComment}\n          onChange={(e) => setApptComment(e.target.value)}\n          multiline\n          disableUnderline={!editingRow}\n          inputProps={{\n            maxLength: 160,\n            style: editingRow\n              ? {}\n              : {\n                  display: '-webkit-box',\n                  overflow: 'hidden',\n                  WebkitBoxOrient: 'vertical',\n                  WebkitLineClamp: 2,\n                  height: '3em', // Approximate height for 2 lines of text\n                },\n          }}\n          onClick={(_event) => {\n            setEditingRow(true);\n          }}\n          fullWidth\n          sx={{ alignItems: 'baseline' }}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <EditNoteIcon sx={{ fill: theme.palette.text.disabled }} />\n            </InputAdornment>\n          }\n        />\n        {editingRow && (\n          <LoadingButton loading={noteSaving} sx={{ marginTop: '8px', padding: '5px' }} onClick={saveNote}>\n            Save\n          </LoadingButton>\n        )}\n      </>\n    ),\n    [apptComment, editingRow, noteSaving, saveNote, theme.palette.text.disabled]\n  );\n\n  return isOverflowing && !editingRow ? (\n    <GenericToolTip title={apptComment}>\n      <span style={{ display: 'inline-block', width: '100%' }}>{inputComponent}</span>\n    </GenericToolTip>\n  ) : (\n    inputComponent\n  );\n};\n\nexport default AppointmentNote;\n"]}