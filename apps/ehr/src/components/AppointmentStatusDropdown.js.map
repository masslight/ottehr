{"version":3,"file":"AppointmentStatusDropdown.js","sourceRoot":"","sources":["AppointmentStatusDropdown.tsx"],"names":[],"mappings":";;AA8BA,4CAsCC;AApED,0CASuB;AACvB,+BAAsE;AAEtE,IAAM,WAAW,GAAG,EAAE,CAAC;AACvB,IAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,IAAM,SAAS,GAAG;IAChB,UAAU,EAAE;QACV,KAAK,EAAE;YACL,SAAS,EAAE,WAAW,GAAG,GAAG,GAAG,gBAAgB;YAC/C,KAAK,EAAE,GAAG;SACX;KACF;CACF,CAAC;AAEF,IAAM,QAAQ,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;AAO/D,SAAwB,yBAAyB,CAAC,EAGhB;QAFhC,iBAAiB,uBAAA,EACjB,oBAAoB,0BAAA;IAEpB,IAAM,YAAY,GAAG,UAAC,KAAkD;QACtE,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,KAAK,IAAI,oBAAoB,EAAE,CAAC;YAClC,oBAAoB;YAClB,0CAA0C;YAC1C,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CACrD,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,GAAG,CACF;MAAA,CAAC,sBAAW,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CACrC;QAAA,CAAC,qBAAU,CAAC,EAAE,CAAC,yBAAyB,CAAC,MAAM,EAAE,qBAAU,CAC3D;QAAA,CAAC,iBAAM,CACL,OAAO,CAAC,yBAAyB,CACjC,EAAE,CAAC,mBAAmB,CACtB,QAAQ,CACR,KAAK,CAAC,CAAC,iBAAiB,CAAC,CACzB,QAAQ,CAAC,CAAC,YAAY,CAAC,CACvB,KAAK,CAAC,CAAC,CAAC,wBAAa,CAAC,KAAK,CAAC,QAAQ,EAAG,CAAC,CACxC,WAAW,CAAC,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAnB,CAAmB,CAAC,CAC/C,SAAS,CAAC,CAAC,SAAS,CAAC,CAErB;UAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CACxB,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CACnC;cAAA,CAAC,mBAAQ,CAAC,OAAO,CAAC,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC3E;cAAA,CAAC,uBAAY,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAChC;YAAA,EAAE,mBAAQ,CAAC,CACZ,EALyB,CAKzB,CAAC,CACJ;QAAA,EAAE,iBAAM,CACV;MAAA,EAAE,sBAAW,CACf;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import {\n  Checkbox,\n  FormControl,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  SelectChangeEvent,\n} from '@mui/material';\nimport React, { Dispatch, ReactElement, SetStateAction } from 'react';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst statuses = ['Pending', 'Booked', 'Arrived', 'Cancelled'];\n\ninterface AppointmentsStatusDropdownProps {\n  appointmentStatus: string[];\n  setAppointmentStatus?: Dispatch<SetStateAction<string[]>>;\n}\n\nexport default function AppointmentStatusDropdown({\n  appointmentStatus,\n  setAppointmentStatus,\n}: AppointmentsStatusDropdownProps): ReactElement {\n  const handleChange = (event: SelectChangeEvent<typeof appointmentStatus>): void => {\n    const value = event.target.value;\n    if (value && setAppointmentStatus) {\n      setAppointmentStatus(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value\n      );\n    }\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ mt: 2, width: 300 }}>\n        <InputLabel id=\"multiple-checkbox-label\">Status</InputLabel>\n        <Select\n          labelId=\"multiple-checkbox-label\"\n          id=\"multiple-checkbox\"\n          multiple\n          value={appointmentStatus}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Status\" />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {statuses.map((status) => (\n            <MenuItem key={status} value={status}>\n              <Checkbox checked={appointmentStatus && appointmentStatus.includes(status)} />\n              <ListItemText primary={status} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"]}