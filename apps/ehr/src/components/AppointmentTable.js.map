{"version":3,"file":"AppointmentTable.js","sourceRoot":"","sources":["AppointmentTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowDropDownCircleOutlinedIcon from '@mui/icons-material/ArrowDropDownCircleOutlined';\nimport {\n  alpha,\n  Box,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { ReactElement, useState } from 'react';\nimport { LocationWithWalkinSchedule } from 'src/pages/AddPatient';\nimport { InPersonAppointmentInformation, OrdersForTrackingBoardRow, OrdersForTrackingBoardTable } from 'utils';\nimport {\n  ACTION_WIDTH_MIN,\n  CHAT_WIDTH_MIN,\n  GO_TO_MANY_BUTTONS_WIDTH_MIN,\n  GO_TO_ONE_BUTTON_WIDTH_MIN,\n  NOTES_WIDTH_MIN,\n  PATIENT_AND_REASON_WIDTH_MIN,\n  PROVIDER_WIDTH_MIN,\n  ROOM_WIDTH_MIN,\n  TIME_WIDTH_MIN,\n  TYPE_WIDTH_MIN,\n  VISIT_ICONS_WIDTH_MIN,\n} from '../constants';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport { AppointmentsStatusChipsCount } from './AppointmentStatusChipsCount';\nimport AppointmentTableRow from './AppointmentTableRow';\nimport { ApptTab } from './AppointmentTabs';\n\ninterface AppointmentTableProps {\n  appointments: InPersonAppointmentInformation[];\n  location: LocationWithWalkinSchedule | undefined;\n  tab: ApptTab;\n  now: DateTime;\n  updateAppointments: () => void;\n  setEditingComment: (editingComment: boolean) => void;\n  orders: OrdersForTrackingBoardTable;\n}\n\nexport default function AppointmentTable({\n  appointments,\n  location,\n  tab,\n  now,\n  updateAppointments,\n  setEditingComment,\n  orders,\n}: AppointmentTableProps): ReactElement {\n  const theme = useTheme();\n  const actionButtons = tab === ApptTab.prebooked ? true : false;\n  const showTime = tab !== ApptTab.prebooked ? true : false;\n  const [collapseWaiting, setCollapseWaiting] = useState<boolean>(false);\n  const [collapseExam, setCollapseExam] = useState<boolean>(false);\n\n  const {\n    inHouseLabOrdersByAppointmentId,\n    externalLabOrdersByAppointmentId,\n    nursingOrdersByAppointmentId,\n    inHouseMedicationsByEncounterId,\n    radiologyOrdersByAppointmentId,\n  } = orders;\n\n  const ordersForAppointment = (appointmentId: string, encounterId: string): OrdersForTrackingBoardRow => ({\n    inHouseLabOrders: inHouseLabOrdersByAppointmentId[appointmentId],\n    externalLabOrders: externalLabOrdersByAppointmentId[appointmentId],\n    nursingOrders: nursingOrdersByAppointmentId[appointmentId],\n    inHouseMedications: inHouseMedicationsByEncounterId[encounterId],\n    radiologyOrders: radiologyOrdersByAppointmentId[appointmentId],\n  });\n\n  return (\n    <>\n      <AppointmentsStatusChipsCount appointments={appointments} />\n      <Paper>\n        <TableContainer sx={{ overflow: 'auto' }} data-testid={dataTestIds.dashboard.appointmentsTable(tab)}>\n          <Table style={{ tableLayout: 'auto', width: '100%', maxWidth: '100%' }}>\n            {/* column widths must add up to the table width ^ */}\n            <TableHead>\n              <TableRow\n                sx={{ '& .MuiTableCell-root': { px: '8px' }, display: { xs: 'none', sm: 'none', md: 'table-row' } }}\n              >\n                <TableCell></TableCell>\n                <TableCell style={{ minWidth: TYPE_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    {tab !== ApptTab.prebooked ? 'Type & Status' : 'Type'}\n                  </Typography>\n                </TableCell>\n                {showTime && (\n                  <TableCell style={{ minWidth: TIME_WIDTH_MIN }}>\n                    <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                      Time\n                    </Typography>\n                  </TableCell>\n                )}\n                <TableCell style={{ minWidth: PATIENT_AND_REASON_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    Patient & Reason\n                  </Typography>\n                </TableCell>\n                {(tab === ApptTab['in-office'] || tab === ApptTab.completed) && (\n                  <TableCell style={{ minWidth: ROOM_WIDTH_MIN }}>\n                    <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                      Room\n                    </Typography>\n                  </TableCell>\n                )}\n                <TableCell style={{ minWidth: PROVIDER_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    Provider\n                  </Typography>\n                </TableCell>\n                <TableCell style={{ minWidth: VISIT_ICONS_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    {tab === ApptTab.completed ? 'Orders' : 'Visit Components'}\n                  </Typography>\n                </TableCell>\n                <TableCell style={{ minWidth: NOTES_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    Notes\n                  </Typography>\n                </TableCell>\n                <TableCell style={{ minWidth: CHAT_WIDTH_MIN }}>\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    Chat\n                  </Typography>\n                </TableCell>\n                <TableCell\n                  style={{\n                    minWidth: tab === ApptTab.prebooked ? GO_TO_ONE_BUTTON_WIDTH_MIN : GO_TO_MANY_BUTTONS_WIDTH_MIN,\n                  }}\n                >\n                  <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                    Actions\n                  </Typography>\n                </TableCell>\n                {tab === ApptTab.prebooked && (\n                  <TableCell style={{ minWidth: ACTION_WIDTH_MIN }}>\n                    <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                      Arrived\n                    </Typography>\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tab === ApptTab['in-office'] ? (\n                <>\n                  <TableRow>\n                    <TableCell sx={{ backgroundColor: alpha(theme.palette.secondary.main, 0.08) }} colSpan={10}>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        <IconButton onClick={() => setCollapseWaiting(!collapseWaiting)} sx={{ mr: 0.75, p: 0 }}>\n                          <ArrowDropDownCircleOutlinedIcon\n                            sx={{\n                              color: theme.palette.primary.main,\n                              rotate: collapseWaiting ? '' : '180deg',\n                            }}\n                          ></ArrowDropDownCircleOutlinedIcon>\n                        </IconButton>\n                        {/* todo add a count to the this title */}\n                        <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                          Waiting Room (\n                          {\n                            appointments.filter((appointmentTemp) => {\n                              return appointmentTemp.status === 'arrived' || appointmentTemp.status === 'ready';\n                            }).length\n                          }\n                          )\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                  {!collapseWaiting &&\n                    // todo add logic to filter out appointments that are not waiting\n                    appointments\n                      .filter((appointmentTemp) => {\n                        return appointmentTemp.status === 'arrived' || appointmentTemp.status === 'ready';\n                      })\n                      .map((appointment) => {\n                        return (\n                          <AppointmentTableRow\n                            key={appointment.id}\n                            appointment={appointment}\n                            location={location}\n                            actionButtons={actionButtons}\n                            showTime={showTime}\n                            now={now}\n                            updateAppointments={updateAppointments}\n                            setEditingComment={setEditingComment}\n                            tab={tab}\n                            orders={ordersForAppointment(appointment.id, appointment.encounterId)}\n                          ></AppointmentTableRow>\n                        );\n                      })}\n                </>\n              ) : (\n                appointments?.map((appointment) => {\n                  return (\n                    <AppointmentTableRow\n                      key={appointment.id}\n                      appointment={appointment}\n                      location={location}\n                      actionButtons={actionButtons}\n                      showTime={showTime}\n                      now={now}\n                      updateAppointments={updateAppointments}\n                      setEditingComment={setEditingComment}\n                      tab={tab}\n                      orders={ordersForAppointment(appointment.id, appointment.encounterId)}\n                    ></AppointmentTableRow>\n                  );\n                })\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n      {tab === ApptTab['in-office'] && (\n        <Paper sx={{ marginTop: '16px' }}>\n          <TableContainer sx={{ overflow: 'auto' }}>\n            <Table style={{ tableLayout: 'auto', width: '100%', maxWidth: '100%' }}>\n              <TableHead>\n                <TableRow\n                  sx={{ '& .MuiTableCell-root': { px: '8px' }, display: { xs: 'none', sm: 'none', md: 'table-row' } }}\n                >\n                  <TableCell></TableCell>\n                  <TableCell style={{ minWidth: TYPE_WIDTH_MIN }}></TableCell>\n                  {showTime && <TableCell style={{ minWidth: TIME_WIDTH_MIN }}></TableCell>}\n                  <TableCell style={{ minWidth: PATIENT_AND_REASON_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: ROOM_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: PROVIDER_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: VISIT_ICONS_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: NOTES_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: CHAT_WIDTH_MIN }}></TableCell>\n                  <TableCell style={{ minWidth: GO_TO_MANY_BUTTONS_WIDTH_MIN }}></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <TableRow>\n                  <TableCell sx={{ backgroundColor: alpha(theme.palette.secondary.main, 0.08) }} colSpan={10}>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <IconButton onClick={() => setCollapseExam(!collapseExam)} sx={{ mr: 0.75, p: 0 }}>\n                        <ArrowDropDownCircleOutlinedIcon\n                          sx={{\n                            color: theme.palette.primary.main,\n                            rotate: collapseExam ? '' : '180deg',\n                          }}\n                        ></ArrowDropDownCircleOutlinedIcon>\n                      </IconButton>\n                      {/* todo add a count to the this title */}\n                      <Typography variant=\"subtitle2\" sx={{ fontSize: '14px' }}>\n                        Exam Rooms (\n                        {\n                          appointments.filter((appointmentTemp) => {\n                            return appointmentTemp.status !== 'arrived' && appointmentTemp.status !== 'ready';\n                          }).length\n                        }\n                        )\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n                {!collapseExam &&\n                  // todo add logic to filter out appointments that are not in exam\n                  appointments\n                    .filter((appointmentTemp) => {\n                      return appointmentTemp.status !== 'arrived' && appointmentTemp.status !== 'ready';\n                    })\n                    .map((appointment) => {\n                      return (\n                        <AppointmentTableRow\n                          key={appointment.id}\n                          appointment={appointment}\n                          location={location}\n                          actionButtons={actionButtons}\n                          showTime={showTime}\n                          now={now}\n                          updateAppointments={updateAppointments}\n                          setEditingComment={setEditingComment}\n                          tab={tab}\n                          orders={ordersForAppointment(appointment.id, appointment.encounterId)}\n                        ></AppointmentTableRow>\n                      );\n                    })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      )}\n    </>\n  );\n}\n"]}