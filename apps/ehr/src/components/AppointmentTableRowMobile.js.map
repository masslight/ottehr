{"version":3,"file":"AppointmentTableRowMobile.js","sourceRoot":"","sources":["AppointmentTableRowMobile.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Box, capitalize, Grid, Modal, TableCell, TableRow, Typography } from '@mui/material';\nimport { CSSProperties, ReactElement, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { InPersonAppointmentInformation } from 'utils';\nimport { MOBILE_MODAL_STYLE } from '../constants';\nimport { ApptTab } from './AppointmentTabs';\nimport { PatientDateOfBirth } from './PatientDateOfBirth';\nimport ReasonsForVisit from './ReasonForVisit';\n\ninterface AppointmentTableRowMobileProps {\n  appointment: InPersonAppointmentInformation;\n  patientName: string;\n  start: string | undefined;\n  tab: ApptTab;\n  formattedPriorityHighIcon: ReactElement;\n  statusTime: string;\n  statusChip: ReactElement;\n  isLongWaitingTime: boolean;\n  patientDateOfBirth: string;\n  statusTimeEl?: ReactElement;\n  linkStyle: CSSProperties;\n  timeToolTip: ReactElement;\n}\n\nexport default function AppointmentTableRowMobile({\n  appointment,\n  patientName,\n  start,\n  tab,\n  formattedPriorityHighIcon,\n  statusChip,\n  patientDateOfBirth,\n  statusTimeEl,\n  linkStyle,\n  timeToolTip,\n}: AppointmentTableRowMobileProps): ReactElement {\n  const [timeModalOpen, setTimeModalOpen] = useState<boolean>(false);\n\n  return (\n    <TableRow\n      sx={{\n        '&:last-child td, &:last-child th': { border: 0 },\n        '&:hover': {\n          backgroundColor: otherColors.apptHover,\n        },\n        '& .MuiTableCell-root': { p: '8px' },\n        position: 'relative',\n      }}\n    >\n      <TableCell colSpan={9}>\n        <Link to={`/visit/${appointment.id}`} style={linkStyle}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} justifyContent=\"space-between\">\n              <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                sx={{ overflow: 'hidden' }}\n              >\n                <Box display=\"flex\" gap={1} flex=\"1 1 auto\" flexWrap=\"nowrap\" marginRight={2}>\n                  <Typography variant=\"body1\" sx={{ textWrap: 'nowrap' }}>\n                    {capitalize?.(\n                      appointment.appointmentType === 'post-telemed'\n                        ? 'Post Telemed'\n                        : (appointment.appointmentType || '').toString()\n                    )}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ textWrap: 'nowrap' }}>\n                    <strong>{start}</strong>\n                  </Typography>\n                </Box>\n                <Box\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                  }}\n                >\n                  <ReasonsForVisit\n                    reasonsForVisit={appointment.reasonForVisit}\n                    tab={tab}\n                    formattedPriorityHighIcon={formattedPriorityHighIcon}\n                    lineMax={1}\n                    isMobile={true}\n                  ></ReasonsForVisit>\n                </Box>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} justifyContent=\"space-between\">\n              <Grid container justifyContent=\"space-between\" alignItems=\"flex-start\">\n                <Grid item xs={11}>\n                  <Box sx={{ marginBottom: 1, display: 'flex' }} gap={1}>\n                    {statusChip}\n                    {statusTimeEl && (\n                      <Grid\n                        sx={{ display: 'flex', alignItems: 'center' }}\n                        gap={1}\n                        onClick={(e) => {\n                          console.log('i work');\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setTimeModalOpen(true);\n                        }}\n                      >\n                        {statusTimeEl}\n                      </Grid>\n                    )}\n                  </Box>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }} gap={1}>\n                    <Typography variant=\"body1\" sx={{ fontWeight: 500, wordBreak: 'break-word' }}>\n                      {patientName}\n                    </Typography>{' '}\n                    <PatientDateOfBirth dateOfBirth={patientDateOfBirth} />\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Link>\n        <Modal open={timeModalOpen} onClose={() => setTimeModalOpen(false)}>\n          <Box sx={MOBILE_MODAL_STYLE}>{timeToolTip}</Box>\n        </Modal>\n      </TableCell>\n    </TableRow>\n  );\n}\n"]}