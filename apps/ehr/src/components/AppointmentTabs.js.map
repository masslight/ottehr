{"version":3,"file":"AppointmentTabs.js","sourceRoot":"","sources":["AppointmentTabs.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport FmdBadOutlinedIcon from '@mui/icons-material/FmdBadOutlined';\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\nimport { Box, Grid, Tab, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { ReactElement, useState } from 'react';\nimport { LocationWithWalkinSchedule } from 'src/pages/AddPatient';\nimport { InPersonAppointmentInformation, OrdersForTrackingBoardTable } from 'utils';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport AppointmentTable from './AppointmentTable';\nimport Loading from './Loading';\n\nexport enum ApptTab {\n  'prebooked' = 'prebooked',\n  'in-office' = 'in-office',\n  'completed' = 'completed',\n  'cancelled' = 'cancelled',\n}\n\ninterface AppointmentsTabProps {\n  location: LocationWithWalkinSchedule | undefined;\n  providers: string[] | undefined;\n  groups: string[] | undefined;\n  preBookedAppointments: InPersonAppointmentInformation[];\n  completedAppointments: InPersonAppointmentInformation[];\n  cancelledAppointments: InPersonAppointmentInformation[];\n  inOfficeAppointments: InPersonAppointmentInformation[];\n  loading: boolean;\n  updateAppointments: () => void;\n  setEditingComment: (editingComment: boolean) => void;\n  orders: OrdersForTrackingBoardTable;\n}\n\nexport default function AppointmentTabs({\n  location,\n  providers,\n  groups,\n  preBookedAppointments,\n  completedAppointments,\n  cancelledAppointments,\n  inOfficeAppointments,\n  loading,\n  updateAppointments,\n  setEditingComment,\n  orders,\n}: AppointmentsTabProps): ReactElement {\n  const [value, setValue] = useState<ApptTab>(ApptTab['in-office']);\n  const [now, setNow] = useState<DateTime>(DateTime.now());\n\n  const handleChange = (event: any, newValue: ApptTab): any => {\n    setValue(newValue);\n  };\n\n  React.useEffect(() => {\n    function updateTime(): void {\n      setNow(DateTime.now());\n    }\n\n    const timeInterval = setInterval(updateTime, 1000);\n    // Call updateTime so we don't need to wait for it to be called\n    updateTime();\n\n    return () => clearInterval(timeInterval);\n  }, []);\n\n  const selectLocationMsg = !location && providers?.length === 0 && groups?.length === 0 && (\n    <Grid container sx={{ width: '100%' }} padding={4}>\n      <Grid item>\n        <FmdBadOutlinedIcon\n          sx={{\n            width: 62,\n            height: 62,\n            color: otherColors.orange700,\n            borderRadius: '50%',\n            backgroundColor: otherColors.orange100,\n            padding: 1.4,\n            marginRight: 2,\n          }}\n        ></FmdBadOutlinedIcon>\n      </Grid>\n      <Grid\n        item\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography sx={{ fontWeight: 'bold' }}>Please select an office, provider, or group</Typography>\n        <Typography>Please select an office, provider, or group to get appointments</Typography>\n      </Grid>\n    </Grid>\n  );\n\n  const renderAppointmentTable = (appointments: InPersonAppointmentInformation[]): ReactElement => {\n    return (\n      <AppointmentTable\n        appointments={appointments}\n        orders={orders}\n        location={location}\n        tab={value}\n        now={now}\n        updateAppointments={updateAppointments}\n        setEditingComment={setEditingComment}\n      />\n    );\n  };\n\n  return (\n    <Box sx={{ width: '100%', marginTop: 3 }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList\n            variant=\"scrollable\"\n            allowScrollButtonsMobile={true}\n            onChange={handleChange}\n            aria-label=\"appointment tabs\"\n          >\n            <Tab\n              data-testid={dataTestIds.dashboard.prebookedTab}\n              label={`Pre-booked${preBookedAppointments ? ` – ${preBookedAppointments?.length}` : ''}`}\n              value={ApptTab.prebooked}\n              sx={{ textTransform: 'none', fontWeight: 500 }}\n            />\n            <Tab\n              data-testid={dataTestIds.dashboard.inOfficeTab}\n              label={`In Office${inOfficeAppointments ? ` – ${inOfficeAppointments?.length}` : ''}`}\n              value={ApptTab['in-office']}\n              sx={{ textTransform: 'none', fontWeight: 500 }}\n            />\n            <Tab\n              data-testid={dataTestIds.dashboard.dischargedTab}\n              label={`Discharged${completedAppointments ? ` – ${completedAppointments?.length}` : ''}`}\n              value={ApptTab.completed}\n              sx={{ textTransform: 'none', fontWeight: 500 }}\n            />\n            <Tab\n              data-testid={dataTestIds.dashboard.cancelledTab}\n              label=\"Cancelled\"\n              value={ApptTab.cancelled}\n              sx={{ textTransform: 'none', fontWeight: 500 }}\n            />\n            {loading && <Loading />}\n          </TabList>\n        </Box>\n        <TabPanel value={ApptTab.prebooked} sx={{ padding: 0 }}>\n          {selectLocationMsg || renderAppointmentTable(preBookedAppointments)}\n        </TabPanel>\n        <TabPanel value={ApptTab['in-office']} sx={{ padding: 0 }}>\n          {selectLocationMsg || renderAppointmentTable(inOfficeAppointments)}\n        </TabPanel>\n        <TabPanel value={ApptTab.completed} sx={{ padding: 0 }}>\n          {selectLocationMsg || renderAppointmentTable(completedAppointments)}\n        </TabPanel>\n        <TabPanel value={ApptTab.cancelled} sx={{ padding: 0 }}>\n          {selectLocationMsg || renderAppointmentTable(cancelledAppointments)}\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n"]}