{"version":3,"file":"CardGridItem.js","sourceRoot":"","sources":["CardGridItem.tsx"],"names":[],"mappings":";;AAkBA,+BAmCC;AArDD,2CAA+C;AAC/C,0CAA0C;AAG1C,+DAA0D;AAc1D,SAAwB,YAAY,CAAC,EAUjB;QATlB,IAAI,UAAA,EACJ,KAAK,WAAA,EACL,aAAa,mBAAA,EACb,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,YAAY,kBAAA,EACZ,YAAY,kBAAA,EACZ,KAAK,WAAA,EACL,cAAU,EAAV,MAAM,mBAAG,CAAC,KAAA;IAEV,OAAO,CACL,CAAC,eAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAC9D;MAAA,CAAC,cAAG,CAAC,MAAM,CAAC,CAAC,oBAAa,oBAAW,CAAC,UAAU,CAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CACrG;QAAA,CAAC,cAAG,CACF,OAAO,CAAC,CAAC;YACP,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;YAC7B,YAAY,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CACF,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAC1B,OAAO,CAAC,MAAM,CACd,cAAc,CAAC,QAAQ,CACvB,UAAU,CAAC,QAAQ,CACnB,MAAM,CAAC,MAAM,CAEb;UAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,EAC9F;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,cAAG,CACL;MAAA,CAAC,aAAa,IAAI,KAAK,KAAK,CAAC,IAAI,CAC/B,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACT;UAAA,CAAC,8BAAoB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAC3G;QAAA,EAAE,cAAG,CAAC,CACP,CACH;IAAA,EAAE,eAAI,CAAC,CACR,CAAC;AACJ,CAAC","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Box, Grid } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { DocumentInfo } from '../types/types';\nimport DownloadImagesButton from './DownloadImagesButton';\n\ninterface CardGridItemProps {\n  card: DocumentInfo;\n  index: number;\n  appointmentID: string | undefined;\n  cards: DocumentInfo[];\n  fullCardPdf: DocumentInfo | undefined;\n  setZoomedIdx: (value: React.SetStateAction<number>) => void;\n  setPhotoZoom: (value: React.SetStateAction<boolean>) => void;\n  title: string;\n  offset?: number;\n}\n\nexport default function CardGridItem({\n  card,\n  index,\n  appointmentID,\n  cards,\n  fullCardPdf,\n  setZoomedIdx,\n  setPhotoZoom,\n  title,\n  offset = 0,\n}: CardGridItemProps): ReactElement {\n  return (\n    <Grid key={card.type} item xs={12} sm={6} boxSizing=\"border-box\">\n      <Box border={`1px solid ${otherColors.dottedLine}`} height=\"170px\" width=\"100%\" my={1} borderRadius={2}>\n        <Box\n          onClick={() => {\n            setZoomedIdx(index + offset);\n            setPhotoZoom(true);\n          }}\n          sx={{ cursor: 'pointer' }}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          height=\"100%\"\n        >\n          <img src={card.presignedUrl} alt={card.type} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n        </Box>\n      </Box>\n      {appointmentID && index === 0 && (\n        <Box mt={2}>\n          <DownloadImagesButton cards={cards} fullCardPdf={fullCardPdf} appointmentId={appointmentID} title={title} />\n        </Box>\n      )}\n    </Grid>\n  );\n}\n"]}