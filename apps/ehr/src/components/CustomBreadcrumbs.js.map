{"version":3,"file":"CustomBreadcrumbs.js","sourceRoot":"","sources":["CustomBreadcrumbs.tsx"],"names":[],"mappings":";;AAeA,oCAwBC;AAvCD,0CAAsD;AAEtD,qDAAqD;AACrD,6DAA0D;AAY1D,SAAwB,iBAAiB,CAAC,EAAiC;QAA/B,KAAK,WAAA;IAC/C,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAC/B,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,sBAAW,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,2BAAW,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAC9F;MAAA,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,KAAK;;YACf,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;YACnF,OAAO,CACL,CAAC,uBAAI,CACH,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAChB,KAAK,CAAC,CAAC;oBACL,cAAc,EAAE,MAAM;oBACtB,KAAK,EAAE,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;iBACpE,CAAC,CACF,EAAE,CAAC,CAAC,IAAI,CAAC,CACT,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,MAAA,KAAK,CAAC,KAAK,0CAAE,UAAU,EAAE,CAAC,CAE/C;YAAA,CAAC,KAAK,CAAC,QAAQ,CACjB;UAAA,EAAE,uBAAI,CAAC,CACR,CAAC;QACJ,CAAC,CAAC,CACJ;IAAA,EAAE,sBAAW,CAAC,CACf,CAAC;AACJ,CAAC","sourcesContent":["import { Breadcrumbs, useTheme } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { dataTestIds } from 'src/constants/data-test-ids';\n\ninterface ChainProps {\n  link: string;\n  children: ReactElement | string;\n  state?: { defaultTab?: string };\n}\n\ninterface CustomBreadcrumbsProps {\n  chain: ChainProps[];\n}\n\nexport default function CustomBreadcrumbs({ chain }: CustomBreadcrumbsProps): ReactElement {\n  const location = useLocation();\n  const theme = useTheme();\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" data-testid={dataTestIds.patientInformationPage.breadcrumb}>\n      {chain.map((child) => {\n        const link = child.link === '#' ? location.pathname + location.search : child.link;\n        return (\n          <Link\n            key={child.link}\n            style={{\n              textDecoration: 'none',\n              color: child.link === '#' ? 'black' : theme.palette.secondary.light,\n            }}\n            to={link}\n            state={{ defaultTab: child.state?.defaultTab }}\n          >\n            {child.children}\n          </Link>\n        );\n      })}\n    </Breadcrumbs>\n  );\n}\n"]}