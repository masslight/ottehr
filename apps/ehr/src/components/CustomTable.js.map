{"version":3,"file":"CustomTable.js","sourceRoot":"","sources":["CustomTable.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAsCA,8BAmEC;AAzGD,0CAAqD;AACrD,wDAQ8B;AAC9B,+BAAiC;AAGpB,QAAA,sBAAsB,GAAuB;IACxD,KAAK,EAAE,UAAU;IACjB,+BAA+B;IAC/B,KAAK,EAAE,UAAU;IACjB,gBAAgB,EAAE,UAAC,UAA0B;QAC3C,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACnE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,UAAC,MAAsB;YAC5B,OAAO,gBAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,KAAe,CAAC,CAAC,SAAS,EAAE,KAAK,UAAU,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;QAC/F,CAAC,CAAC;IACJ,CAAC;IACD,mBAAmB,EAAE,EAAE,IAAI,EAAE,gBAAQ,EAAE;CACxC,CAAC;AAWF,SAAwB,WAAW,CAAC,EAOjB;QANjB,WAAW,iBAAA,EACX,YAAY,kBAAA,EACZ,WAAW,iBAAA,EACX,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,OAAO,aAAA;IAEP,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,UAAU,GAAG,cAAoB,OAAA,CACrC,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,QAAQ;YACpB,cAAc,EAAE,QAAQ;SACzB,CAAC,CAEF;MAAA,CAAC,YAAY,CACf;IAAA,EAAE,cAAG,CAAC,CACP,EAZsC,CAYtC,CAAC;IAEF,OAAO,CACL,CAAC,6BAAW,CACV,UAAU,CACV,kBAAkB,CAAC,CAAC,EAAE,CAAC,CACvB,mBAAmB,CACnB,iBAAiB,CACjB,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,0BAA0B,CAC1B,YAAY,CAAC,CAAC;YACZ,UAAU,EAAE;gBACV,eAAe,EAAE;oBACf,QAAQ,EAAE,EAAE;oBACZ,IAAI,EAAE,CAAC;iBACR;aACF;YACD,OAAO,EAAE,EAAE,SAAS,EAAE,CAAC,WAAW,CAAC,EAAE;SACtC,CAAC,CACF,OAAO,CAAC,CAAC,SAAS,CAAC,CACnB,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACtB,IAAI,CAAC,CAAC,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,EAAE,CAAC,CACjB,OAAO,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,uBAAM,MAAM,KAAE,IAAI,EAAE,CAAC,IAAG,EAAxB,CAAwB,CAAC,CAAC,CAC3D,KAAK,CAAC,CAAC;YACL,aAAa,EAAE,UAAU;YACzB,gBAAgB,EAAE,UAAU;SAC7B,CAAC,CACF,EAAE,CAAC,CAAC;YACF,MAAM,EAAE,MAAM;YACd,EAAE,EAAE,GAAG;YACP,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;YACb,gCAAgC,EAAE;gBAChC,OAAO,EAAE,MAAM;aAChB;YACD,0BAA0B,EAAE;gBAC1B,MAAM,EAAE,SAAS;gBACjB,eAAe,EAAE,IAAA,gBAAK,EAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;aAC1D;YACD,kCAAkC,EAAE;gBAClC,UAAU,EAAE,MAAM;aACnB;SACF,CAAC,EACF,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { alpha, Box, useTheme } from '@mui/material';\nimport {\n  DataGridPro,\n  GridCellParams,\n  GridColDef,\n  GridFilterItem,\n  GridFilterModel,\n  GridFilterOperator,\n  GridSortDirection,\n} from '@mui/x-data-grid-pro';\nimport { DateTime } from 'luxon';\nimport { ReactElement } from 'react';\n\nexport const dateTimeEqualsOperator: GridFilterOperator = {\n  label: 'DTEquals',\n  // cSpell:disable-next dtequals\n  value: 'dtequals',\n  getApplyFilterFn: (filterItem: GridFilterItem) => {\n    if (!filterItem.field || !filterItem.value || !filterItem.operator) {\n      return null;\n    }\n\n    return (params: GridCellParams): boolean => {\n      return DateTime.fromISO(params.value as string).toISODate() === filterItem.value.toISODate();\n    };\n  },\n  InputComponentProps: { type: DateTime },\n};\n\ninterface CustomTableProps {\n  defaultSort: { field: string; sort: GridSortDirection };\n  emptyMessage: string;\n  filterModel?: GridFilterModel;\n  isLoading: boolean;\n  rows: any;\n  columns: GridColDef[];\n}\n\nexport default function CustomTable({\n  defaultSort,\n  emptyMessage,\n  filterModel,\n  isLoading,\n  rows,\n  columns,\n}: CustomTableProps): ReactElement {\n  const theme = useTheme();\n\n  const emptyTable = (): ReactElement => (\n    <Box\n      sx={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {emptyMessage}\n    </Box>\n  );\n\n  return (\n    <DataGridPro\n      autoHeight\n      columnHeaderHeight={52}\n      disableColumnFilter\n      disableColumnMenu\n      filterModel={filterModel}\n      hideFooterSelectedRowCount\n      initialState={{\n        pagination: {\n          paginationModel: {\n            pageSize: 10,\n            page: 0,\n          },\n        },\n        sorting: { sortModel: [defaultSort] },\n      }}\n      loading={isLoading}\n      pageSizeOptions={[10]}\n      rows={rows ?? []}\n      columns={columns.map((column) => ({ ...column, flex: 1 }))}\n      slots={{\n        noRowsOverlay: emptyTable,\n        noResultsOverlay: emptyTable,\n      }}\n      sx={{\n        border: 'none',\n        mt: 1.5,\n        height: '100%',\n        width: '100%',\n        '& .MuiDataGrid-columnSeparator': {\n          display: 'none',\n        },\n        '& .MuiDataGrid-row:hover': {\n          cursor: 'pointer',\n          backgroundColor: alpha(theme.palette.primary.light, 0.08),\n        },\n        '& .MuiDataGrid-columnHeaderTitle': {\n          fontWeight: 'bold',\n        },\n      }}\n    />\n  );\n}\n"]}