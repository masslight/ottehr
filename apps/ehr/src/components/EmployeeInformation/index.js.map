{"version":3,"file":"index.js","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Button, Grid, Paper, Skeleton, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { useEffect, useState } from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { FHIR_IDENTIFIER_NPI, PractitionerLicense, PractitionerQualificationCode, RoleType, User } from 'utils';\nimport { updateUser } from '../../api/api';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport useEvolveUser from '../../hooks/useEvolveUser';\nimport { BasicInformation } from './BasicInformation';\nimport { ProviderDetails } from './ProviderDetails';\nimport { ProviderQualifications } from './ProviderQualifications';\nimport { RoleSelection } from './RoleSelection';\nimport { EditEmployeeInformationProps, EmployeeForm } from './types';\n\nexport default function EmployeeInformationForm({\n  submitLabel,\n  existingUser,\n  isActive,\n  licenses,\n  getUserAndUpdatePage,\n}: EditEmployeeInformationProps): JSX.Element {\n  const { oystehrZambda } = useApiClients();\n  const evolveUser = useEvolveUser();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errors, setErrors] = useState({\n    submit: false,\n    roles: false,\n    qualification: false,\n    state: false,\n    number: false,\n    date: false,\n    duplicateLicense: false,\n  });\n\n  const [newLicenses, setNewLicenses] = useState<PractitionerLicense[]>(licenses);\n\n  const [user, setUser] = useState<User>({\n    name: '',\n    email: '',\n    id: '',\n    profile: '',\n    accessPolicy: { rule: [] },\n    authenticationMethod: 'email',\n    roles: [],\n    phoneNumber: '',\n    faxNumber: '',\n    addressLine1: '',\n    addressLine2: '',\n    addressCity: '',\n    addressState: '',\n    addressZip: '',\n    birthDate: '',\n    profileResource: undefined,\n  });\n\n  let photoSrc = '';\n  if (existingUser?.profileResource?.photo) {\n    const photo = existingUser.profileResource.photo[0];\n    if (photo.url) {\n      photoSrc = photo.url;\n    } else if (photo.data) {\n      photoSrc = `data:${photo.contentType};base64,${photo.data}`;\n    }\n  }\n\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    getValues,\n    setError,\n    formState: { errors: formErrors },\n  } = useForm<EmployeeForm>();\n\n  useWatch({ control, name: 'roles' });\n\n  const scrollToFirstError = (): void => {\n    const firstErrorElement = document.querySelector('.Mui-error');\n    if (firstErrorElement) {\n      firstErrorElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length > 0) {\n      scrollToFirstError();\n    }\n  }, [formErrors]);\n\n  console.log(5, formErrors);\n\n  useEffect(() => {\n    if (existingUser) {\n      setUser(existingUser);\n      setValue('roles', (existingUser as User).roles?.map((role) => role.name as RoleType) || []);\n\n      let firstName = '';\n      let middleName = '';\n      let lastName = '';\n      let nameSuffix = '';\n      if (existingUser.profileResource?.name && existingUser.profileResource?.name.length > 0) {\n        const name = existingUser.profileResource?.name[0];\n        firstName = name.given?.[0] ?? '';\n        middleName = name.given?.length && name.given.length > 1 ? name.given.slice(1).join(' ') : '';\n        lastName = name.family ?? '';\n        nameSuffix = name.suffix?.join(' ') ?? '';\n      }\n      setValue('firstName', firstName);\n      setValue('middleName', middleName);\n      setValue('lastName', lastName);\n      setValue('nameSuffix', nameSuffix);\n\n      if (existingUser?.profileResource?.telecom) {\n        const phone = existingUser.profileResource.telecom.find((tel) => tel.system === 'phone')?.value;\n        if (phone) {\n          setValue('phoneNumber', phone || '');\n        }\n      }\n\n      if (existingUser?.profileResource?.telecom) {\n        const fax = existingUser.profileResource.telecom.find((tel) => tel.system === 'fax')?.value;\n        if (fax) {\n          setValue('faxNumber', fax || '');\n        }\n      }\n\n      if (existingUser?.profileResource?.birthDate) {\n        setValue('birthDate', DateTime.fromISO(existingUser.profileResource.birthDate) || '');\n      }\n\n      if (existingUser?.profileResource?.address) {\n        const address = existingUser.profileResource.address[0];\n        if (address) {\n          setValue('addressLine1', address.line?.[0] ?? '');\n          setValue('addressLine2', address.line?.[1] ?? '');\n          setValue('addressCity', address.city ?? '');\n          setValue('addressState', address.state ?? '');\n          setValue('addressZip', address.postalCode ?? '');\n        }\n      }\n\n      if (existingUser?.profileResource?.identifier) {\n        const npi = existingUser.profileResource.identifier.find(\n          (identifier) => identifier.system === FHIR_IDENTIFIER_NPI\n        );\n        if (npi && npi.value) {\n          setValue('npi', npi.value || 'n/a');\n        }\n      }\n    }\n  }, [existingUser, setValue]);\n\n  const isProviderRoleSelected = getValues('roles')?.includes(RoleType.Provider) ?? false;\n\n  const updateUserRequest = async (data: EmployeeForm): Promise<void> => {\n    console.log('updateUserRequest');\n    if (!oystehrZambda) {\n      throw new Error('Zambda Client not found');\n    }\n    let isError = false;\n\n    if (data.roles.length < 1) {\n      setError('roles', { message: 'Roles are required' });\n      isError = true;\n    }\n\n    if (data.addressLine2 && !data.addressLine1) {\n      setError('addressLine2', { message: 'Address line 2 cannot be filled without address line 1' });\n      isError = true;\n    }\n\n    if (isError) {\n      scrollToFirstError();\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await updateUser(oystehrZambda, {\n        userId: user.id,\n        firstName: data.firstName,\n        middleName: data.middleName,\n        lastName: data.lastName,\n        nameSuffix: data.nameSuffix,\n        selectedRoles: data.roles,\n        licenses: newLicenses,\n        phoneNumber: data.phoneNumber,\n        npi: data.npi,\n        birthDate: data.birthDate ? data.birthDate.toISODate() || '' : undefined,\n        faxNumber: data.faxNumber,\n        addressLine1: data.addressLine1,\n        addressLine2: data.addressLine2,\n        addressCity: data.addressCity,\n        addressState: data.addressState,\n        addressZip: data.addressZip,\n      });\n      await getUserAndUpdatePage();\n      const successMessage = `User ${data.firstName} ${data.lastName} was updated successfully.`;\n      if (evolveUser?.id === user.id) {\n        enqueueSnackbar(`${successMessage} The page will be refreshed in 3 seconds.`, {\n          variant: 'success',\n        });\n        // wait 3 seconds for the snackbar to be seen before reloading\n        await new Promise((resolve) => setTimeout(resolve, 3000));\n        window.location.reload();\n      }\n      enqueueSnackbar(successMessage, { variant: 'success' });\n    } catch (error) {\n      console.log(`Failed to update user: ${error}`);\n      enqueueSnackbar('An error has occurred while updating user. Please try again.', {\n        variant: 'error',\n      });\n      setErrors((prev) => ({ ...prev, submit: true }));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddLicense = async (): Promise<void> => {\n    setErrors((prev) => ({\n      ...prev,\n      state: false,\n      qualification: false,\n      number: false,\n      date: false,\n      duplicateLicense: false,\n    }));\n\n    const formValues = getValues();\n\n    if (\n      newLicenses.find(\n        (license) => license.state === formValues.newLicenseState && license.code === formValues.newLicenseCode\n      )\n    ) {\n      setErrors((prev) => ({ ...prev, duplicateLicense: true }));\n      return;\n    }\n    if (\n      !formValues.newLicenseCode ||\n      !formValues.newLicenseState ||\n      !formValues.newLicenseNumber ||\n      !formValues.newLicenseExpirationDate\n    ) {\n      setErrors((prev) => ({\n        ...prev,\n        qualification: !formValues.newLicenseCode,\n        state: !formValues.newLicenseState,\n        number: !formValues.newLicenseNumber,\n        date: !formValues.newLicenseExpirationDate,\n      }));\n      return;\n    }\n\n    const updatedLicenses = [...newLicenses];\n    updatedLicenses.push({\n      state: formValues.newLicenseState,\n      code: formValues.newLicenseCode as PractitionerQualificationCode,\n      number: formValues.newLicenseNumber,\n      date: formValues.newLicenseExpirationDate.toISODate() || undefined,\n      active: true,\n    });\n    setNewLicenses(updatedLicenses);\n    setValue('newLicenseState', undefined);\n    setValue('newLicenseCode', undefined);\n    setValue('newLicenseNumber', undefined);\n    setValue('newLicenseExpirationDate', undefined);\n  };\n\n  return isActive === undefined ? (\n    <Skeleton height={300} sx={{ marginY: -5 }} />\n  ) : (\n    <Paper sx={{ padding: 3 }}>\n      <form onSubmit={handleSubmit(updateUserRequest)} data-testid={dataTestIds.employeesPage.informationForm}>\n        <BasicInformation control={control} existingUser={existingUser} errors={errors} isActive={isActive} />\n\n        <RoleSelection\n          control={control}\n          errors={errors}\n          isActive={isActive}\n          getValues={getValues}\n          setValue={setValue}\n        />\n\n        {isProviderRoleSelected && (\n          <>\n            <ProviderDetails control={control} photoSrc={photoSrc} roles={getValues('roles')} />\n\n            <ProviderQualifications\n              newLicenses={newLicenses}\n              setNewLicenses={setNewLicenses}\n              control={control}\n              errors={errors}\n              handleAddLicense={handleAddLicense}\n            />\n          </>\n        )}\n\n        {errors.submit && (\n          <Typography color=\"error\" variant=\"body2\" mt={1}>\n            Failed to update user. Please try again.\n          </Typography>\n        )}\n\n        <Grid sx={{ marginTop: 4, marginBottom: 2 }}>\n          <LoadingButton\n            variant=\"contained\"\n            color=\"primary\"\n            data-testid={dataTestIds.employeesPage.submitButton}\n            sx={{\n              textTransform: 'none',\n              borderRadius: 28,\n              fontWeight: 'bold',\n              marginRight: 1,\n            }}\n            type=\"submit\"\n            loading={loading}\n            disabled={!isActive}\n          >\n            {submitLabel}\n          </LoadingButton>\n\n          <Link to=\"/employees\">\n            <Button\n              variant=\"text\"\n              type=\"submit\"\n              color=\"primary\"\n              sx={{\n                textTransform: 'none',\n                borderRadius: 28,\n                fontWeight: 'bold',\n              }}\n            >\n              Cancel\n            </Button>\n          </Link>\n        </Grid>\n      </form>\n    </Paper>\n  );\n}\n"]}