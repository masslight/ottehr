{"version":3,"file":"ImageCarousel.js","sourceRoot":"","sources":["ImageCarousel.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, useTheme } from '@mui/material';\nimport React from 'react';\n\nexport interface ImageCarouselObject {\n  alt: string;\n  url: string;\n}\ninterface ImageCarouselProps {\n  imagesObj: ImageCarouselObject[]; // list of image objects\n  imageIndex: number; // index of the starting image\n  setImageIndex: React.Dispatch<React.SetStateAction<number>>; // used to switch between imagesObj using the arrows\n  open: boolean; // if true the dialog is open\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>; // used to control the dialog\n}\n\nexport default function ImageCarousel({\n  imagesObj,\n  imageIndex,\n  setImageIndex,\n  open,\n  setOpen,\n}: ImageCarouselProps): React.ReactElement {\n  // handle functions\n  const theme = useTheme();\n  const handleLeftArrowClick = (): void => {\n    if (imageIndex === 0) {\n      return;\n    }\n    setImageIndex(imageIndex - 1);\n  };\n\n  const handleRightArrowClick = (): void => {\n    if (imageIndex === imagesObj.length - 1) {\n      return;\n    }\n    setImageIndex(imageIndex + 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n    const key: string = event.key;\n    if (key === 'ArrowLeft') {\n      handleLeftArrowClick();\n    } else if (key === 'ArrowRight') {\n      handleRightArrowClick();\n    }\n  };\n\n  // html\n  return (\n    <Dialog\n      open={open}\n      onClose={() => {\n        setOpen(false);\n      }}\n      PaperProps={{\n        style: {\n          backgroundColor: 'transparent',\n          boxShadow: 'none',\n          maxWidth: '900px',\n        },\n      }}\n      onKeyDown={handleKeyDown}\n    >\n      <DialogTitle marginBottom={4}>\n        <IconButton\n          onClick={() => {\n            setOpen(false);\n          }}\n          sx={{\n            position: 'absolute',\n            right: 0,\n          }}\n        >\n          <CloseIcon style={{ color: theme.palette.background.paper }} />\n        </IconButton>\n      </DialogTitle>\n\n      <Box\n        sx={{\n          width: 900,\n          height: 600,\n          overflow: 'hidden',\n          position: 'relative',\n          '& img': {\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n          },\n        }}\n      >\n        <img src={imagesObj[imageIndex]?.url} alt={imagesObj[imageIndex]?.alt} />\n      </Box>\n\n      <DialogContent style={{ overflow: 'hidden' }}>\n        <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\n          <IconButton onClick={handleLeftArrowClick}>\n            <ArrowBackIosIcon sx={{ color: imageIndex === 0 ? 'transparent' : 'white' }} />\n          </IconButton>\n\n          {imagesObj.map((image, index) => (\n            <CircleIcon\n              key={image.alt}\n              sx={{ fontSize: index === imageIndex ? 10 : 6, color: 'white', marginRight: 1 }}\n            />\n          ))}\n\n          <IconButton onClick={handleRightArrowClick}>\n            <ArrowForwardIosIcon style={{ color: imageIndex === imagesObj.length - 1 ? 'transparent' : 'white' }} />\n          </IconButton>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"]}