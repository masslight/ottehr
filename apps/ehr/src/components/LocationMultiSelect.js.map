{"version":3,"file":"LocationMultiSelect.js","sourceRoot":"","sources":["LocationMultiSelect.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,sCAgEC;AA9ED,0CAA4E;AAE5E,+BAA0E;AAC1E,wDAAuD;AAWvD,SAAwB,mBAAmB,CAAC,EAKjB;QAJzB,YAAY,kBAAA,EACZ,oBAAoB,0BAAA,EACpB,SAAS,eAAA,EACT,iBAAiB,uBAAA;IAET,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAA,iBAAS,EAAC;QACR,SAAe,gBAAgB;;;;;;4BAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gCACb,sBAAO;4BACT,CAAC;4BAGC,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAW;oCAClC,YAAY,EAAE,UAAU;oCACxB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;iCAC5C,CAAC,EAAA;;4BAJE,gBAAgB,GAAG,CACvB,SAGE,CACH,CAAC,QAAQ,EAAE;4BACZ,YAAY,CAAC,gBAAgB,CAAC,CAAC;;;;;SAChC;QAED,gBAAgB,EAAE,CAAC,KAAK,CAAC,UAAC,KAAK,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC1D,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;IAE5B,IAAM,WAAW,GACf,SAAS,CAAC,MAAM,GAAG,CAAC;QAClB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ;YACrB,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QACvE,CAAC,CAAC;QACJ,CAAC,CAAC,EAAE,CAAC;IAET,OAAO,CACL,CAAC,GAAG,CACF;MAAA,CAAC,uBAAY,CACX,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,KAAK,CAAC,CAAC,iBAAiB,CAAC,CACzB,QAAQ,CAAC,CAAC,UAAC,CAAC,EAAE,QAAQ;YACpB,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC,CACF,cAAc,CAAC,CAAC,UAAC,MAAM,YAAK,OAAA,MAAA,MAAM,CAAC,KAAK,mCAAI,EAAE,CAAA,EAAA,CAAC,CAC/C,QAAQ,CACR,oBAAoB,CACpB,WAAW,CAAC,CAAC,UAAC,MAAM,IAAK,OAAA,CAAC,oBAAS,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,CAAC,wBAAwB,EAAG,EAAxD,CAAwD,CAAC,CAClF,oBAAoB,CAAC,CAAC,UAAC,MAAM,EAAE,KAAK,IAAK,OAAA,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAtB,CAAsB,CAAC,CAChE,YAAY,CAAC,CAAC,UAAC,KAAK,EAAE,MAAM,IAAK,OAAA,CAC/B,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CACZ;YAAA,CAAC,mBAAQ,CACP,OAAO,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAApB,CAAoB,CAAC,CAAC,CAC/D,EAAE,CAAC,CAAC;gBACF,eAAe,EAAE;oBACf,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI;iBAClC;aACF,CAAC,EAGJ;;YAAA,CAAC,MAAM,CAAC,KAAK,CACf;UAAA,EAAE,EAAE,CAAC,CACN,EAbgC,CAahC,CAAC,EAEN;IAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import { Autocomplete, Checkbox, TextField, useTheme } from '@mui/material';\nimport { Location } from 'fhir/r4b';\nimport { Dispatch, ReactElement, SetStateAction, useEffect } from 'react';\nimport { useApiClients } from '../hooks/useAppClients';\n\ninterface LocationMultiSelectProps {\n  setLocations: Dispatch<SetStateAction<Location[]>>;\n  setSelectedLocations: Dispatch<\n    SetStateAction<{ label: string | undefined; id: string | undefined; location: Location }[]>\n  >;\n  locations: Location[];\n  selectedLocations: { label: string | undefined; id: string | undefined; location: Location }[];\n}\n\nexport default function LocationMultiSelect({\n  setLocations,\n  setSelectedLocations,\n  locations,\n  selectedLocations,\n}: LocationMultiSelectProps): ReactElement {\n  const { oystehr } = useApiClients();\n  const theme = useTheme();\n\n  useEffect(() => {\n    async function locationsResults(): Promise<void> {\n      if (!oystehr) {\n        return;\n      }\n\n      const locationsResults = (\n        await oystehr.fhir.search<Location>({\n          resourceType: 'Location',\n          params: [{ name: '_count', value: '1000' }],\n        })\n      ).unbundle();\n      setLocations(locationsResults);\n    }\n\n    locationsResults().catch((error) => console.log(error));\n  }, [oystehr, setLocations]);\n\n  const suggestions =\n    locations.length > 0\n      ? locations.map((location) => {\n          return { label: location.name, id: location.id, location: location };\n        })\n      : [];\n\n  return (\n    <div>\n      <Autocomplete\n        options={suggestions}\n        value={selectedLocations}\n        onChange={(_, newValue) => {\n          setSelectedLocations(newValue);\n        }}\n        getOptionLabel={(option) => option.label ?? ''}\n        multiple\n        disableCloseOnSelect\n        renderInput={(params) => <TextField {...params} label=\"Search to add location\" />}\n        isOptionEqualToValue={(option, value) => option.id === value.id}\n        renderOption={(props, option) => (\n          <li {...props}>\n            <Checkbox\n              checked={selectedLocations.some((loc) => loc.id === option.id)}\n              sx={{\n                '&.Mui-checked': {\n                  color: theme.palette.primary.main,\n                },\n              }}\n            />\n\n            {option.label}\n          </li>\n        )}\n      />\n    </div>\n  );\n}\n"]}