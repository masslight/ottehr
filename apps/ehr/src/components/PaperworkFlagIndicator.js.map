{"version":3,"file":"PaperworkFlagIndicator.js","sourceRoot":"","sources":["PaperworkFlagIndicator.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,yCAqEC;AArFD,mDAAkD;AAClD,gCAAyC;AACzC,0CAAgD;AAChD,+BAAiC;AACjC,+BAA+C;AAY/C,SAAwB,sBAAsB,CAAC,EAQjB;QAP5B,KAAK,WAAA,EACL,KAAK,WAAA,EACL,eAAe,qBAAA,EACf,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,QAAQ,cAAA;IAEF,IAAA,KAAwB,IAAA,gBAAQ,EAAU,KAAK,CAAC,EAA/C,OAAO,QAAA,EAAE,UAAU,QAA4B,CAAC;IACvD,IAAM,gBAAgB,GAAG,QAAQ,IAAI,gBAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAClF,IAAM,aAAa,GAAG,gBAAgB;QACpC,CAAC,CAAC,gBAAgB,CAAC,cAAc,CAAC;YAC9B,KAAK,EAAE,MAAM;YACb,GAAG,EAAE,SAAS;YACd,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;YACjB,YAAY,EAAE,OAAO;SACtB,CAAC;QACJ,CAAC,CAAC,SAAS,CAAC;IAEd,SAAe,YAAY;;;;;;;wBAEvB,UAAU,CAAC,IAAI,CAAC,CAAC;6BACb,SAAS,EAAT,wBAAS;wBACX,qBAAM,SAAS,EAAE,EAAA;;wBAAjB,SAAiB,CAAC;;;;;wBAGpB,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAAC,SAAS,CAAC,GAAC,CAAC,CAAC,CAAC;;;wBAE3D,UAAU,CAAC,KAAK,CAAC,CAAC;;;;;;KAErB;IAED,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,eAAe;YAC3B,OAAO,EAAE,MAAM;YACf,YAAY,EAAE,KAAK;YACnB,OAAO,EAAE,MAAM;YACf,cAAc,EAAE,eAAe;YAC/B,UAAU,EAAE,QAAQ;SACrB,CAAC,CAEF;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACjD;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,cAAG,CAC5F;QAAA,CAAC,qBAAU,CACT,OAAO,CAAC,OAAO,CACf,EAAE,CAAC,CAAC;YACF,UAAU,EAAE,GAAG;YACf,UAAU,EAAE,KAAK;YACjB,oBAAoB,EAAE,MAAM;YAC5B,mBAAmB,EAAE,aAAa;SACnC,CAAC,CAEF;UAAA,CAAC,UAAG,KAAK,cAAI,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAE,CAC9C;QAAA,EAAE,qBAAU,CACd;MAAA,EAAE,cAAG,CACL;MAAA,CAAC,SAAS,IAAI,CACZ,CAAC,mBAAa,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CACrD;UAAA,CAAC,uFAAuF,CACxF;UAAA,CAAC,CAAC,OAAO,IAAI,CAAC,eAAS,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,eAAS,CAAC,CAC5D;QAAA,EAAE,mBAAa,CAAC,CACjB,CACH;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import ClearIcon from '@mui/icons-material/Clear';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { ReactElement, useState } from 'react';\n\ninterface PaperworkFlagIndicatorProps {\n  title: string;\n  color: string;\n  backgroundColor: string;\n  icon: ReactElement;\n  onDismiss?(): Promise<void>;\n  dateTime?: string;\n  timezone?: string;\n}\n\nexport default function PaperworkFlagIndicator({\n  title,\n  color,\n  backgroundColor,\n  icon,\n  onDismiss,\n  dateTime,\n  timezone,\n}: PaperworkFlagIndicatorProps): ReactElement {\n  const [loading, setLoading] = useState<boolean>(false);\n  const adjustedDateTime = dateTime && DateTime.fromISO(dateTime).setZone(timezone);\n  const formattedDate = adjustedDateTime\n    ? adjustedDateTime.toLocaleString({\n        month: 'long',\n        day: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        timeZoneName: 'short',\n      })\n    : 'Unknown';\n\n  async function dismissAlert(): Promise<void> {\n    try {\n      setLoading(true);\n      if (onDismiss) {\n        await onDismiss();\n      }\n    } catch (e) {\n      console.log('error dismissing alert: ', JSON.stringify(e));\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        background: backgroundColor,\n        padding: '16px',\n        borderRadius: '4px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}\n    >\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', padding: '7px 12px 7px 0px' }}>{icon}</Box>\n        <Typography\n          variant=\"body1\"\n          sx={{\n            fontWeight: 500,\n            background: color,\n            WebkitBackgroundClip: 'text',\n            WebkitTextFillColor: 'transparent',\n          }}\n        >\n          {`${title} ${dateTime ? formattedDate : ''}`}\n        </Typography>\n      </Box>\n      {onDismiss && (\n        <LoadingButton loading={loading} onClick={dismissAlert}>\n          {/* svg icon doesn't support layered linear gradients. need to provide hex color here */}\n          {!loading && <ClearIcon sx={{ color: color }}></ClearIcon>}\n        </LoadingButton>\n      )}\n    </Box>\n  );\n}\n"]}