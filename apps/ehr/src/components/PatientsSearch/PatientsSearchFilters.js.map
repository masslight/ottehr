{"version":3,"file":"PatientsSearchFilters.js","sourceRoot":"","sources":["PatientsSearchFilters.tsx"],"names":[],"mappings":"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","sourcesContent":["import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box, Button, FormControl, MenuItem, TextField } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { useState } from 'react';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport DateSearch from '../DateSearch';\nimport { PartialSearchOptionsState, SearchOptionsFilters } from './types';\nimport { useLocationsOptions } from './useLocationsOptions';\n\nexport const PatientsSearchFilters: React.FC<{\n  searchFilters: SearchOptionsFilters;\n  setSearchField: ({ field, value }: { field: keyof SearchOptionsFilters; value: string }) => void;\n  resetFilters: () => void;\n  search: (overriddenParams?: PartialSearchOptionsState) => void;\n}> = ({ searchFilters, setSearchField, resetFilters: resetFilters, search }) => {\n  const [showAdditionalSearch, setShowAdditionalSearch] = useState(true);\n  const { location: locationOptions } = useLocationsOptions();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    search({ pagination: { offset: 0 } });\n  };\n\n  return (\n    <FormControl component=\"form\" onSubmit={handleSubmit} fullWidth>\n      <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n        <TextField\n          data-testid={dataTestIds.patients.searchByLastNameField}\n          sx={{ flex: 1 }}\n          label=\"Last Name\"\n          placeholder=\"Doe\"\n          value={searchFilters.lastName}\n          onChange={(e) => setSearchField({ field: 'lastName', value: e.target.value })}\n        />\n        <TextField\n          data-testid={dataTestIds.patients.searchByGivenNamesField}\n          sx={{ flex: 1 }}\n          label=\"Given Names\"\n          placeholder=\"John Henry\"\n          value={searchFilters.givenNames}\n          onChange={(e) => setSearchField({ field: 'givenNames', value: e.target.value })}\n        />\n        <Box sx={{ flex: 1 }}>\n          <DateSearch\n            date={searchFilters.dob ? DateTime.fromISO(searchFilters.dob) : null}\n            setDate={(date: DateTime | null) =>\n              setSearchField({ field: 'dob', value: date ? date.toISODate() || '' : '' })\n            }\n            label=\"DOB\"\n            closeOnSelect\n            data-testid={dataTestIds.patients.searchByDateOfBirthField}\n          />\n        </Box>\n      </Box>\n      <Box sx={{ mb: 2 }}>\n        <Button\n          type=\"button\"\n          onClick={() => setShowAdditionalSearch(!showAdditionalSearch)}\n          startIcon={showAdditionalSearch ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          color=\"primary\"\n        >\n          Additional search\n        </Button>\n      </Box>\n\n      {showAdditionalSearch && (\n        <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: 2, mb: 3 }}>\n          <TextField\n            label=\"Phone\"\n            data-testid={dataTestIds.patients.searchByPhoneField}\n            placeholder=\"(XXX) XX-XXXX\"\n            value={searchFilters.phone}\n            onChange={(e) => setSearchField({ field: 'phone', value: e.target.value })}\n          />\n          <TextField\n            label=\"Address\"\n            data-testid={dataTestIds.patients.searchByAddressField}\n            value={searchFilters.address}\n            onChange={(e) => setSearchField({ field: 'address', value: e.target.value })}\n          />\n          <TextField\n            label=\"Email\"\n            data-testid={dataTestIds.patients.searchByEmailField}\n            placeholder=\"example@mail.com\"\n            value={searchFilters.email}\n            onChange={(e) => setSearchField({ field: 'email', value: e.target.value })}\n          />\n          {/* <TextField\n                label=\"Subscriber Number (Insurance)\"\n                value={searchFilters.subscriberNumber}\n                onChange={(e) => setSearchField({ field: 'subscriberNumber', value: e.target.value })}\n              /> */}\n          <FormControl fullWidth>\n            <TextField\n              data-testid={dataTestIds.patients.searchByStatusName}\n              select\n              label=\"Status\"\n              value={searchFilters.status}\n              onChange={(e) => setSearchField({ field: 'status', value: e.target.value })}\n            >\n              <MenuItem value=\"All\">All</MenuItem>\n              <MenuItem value=\"Active\">Active</MenuItem>\n              <MenuItem value=\"Deceased\">Deceased</MenuItem>\n              <MenuItem value=\"Inactive\">Inactive</MenuItem>\n            </TextField>\n          </FormControl>\n          <FormControl fullWidth>\n            <TextField\n              data-testid={dataTestIds.patients.searchByLocationName}\n              select\n              label=\"Location\"\n              value={searchFilters.location}\n              onChange={(e) => setSearchField({ field: 'location', value: e.target.value })}\n            >\n              <MenuItem value=\"All\">All</MenuItem>\n              {locationOptions.options.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n          </FormControl>\n        </Box>\n      )}\n\n      <Box sx={{ mb: 2, display: 'flex', justifyContent: 'end', gap: 3 }}>\n        <Button type=\"button\" onClick={resetFilters} data-testid={dataTestIds.patients.resetFiltersButton}>\n          Reset filters\n        </Button>\n        <Button\n          data-testid={dataTestIds.patients.searchButton}\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<SearchIcon />}\n          type=\"submit\"\n          sx={{ mr: 1, borderRadius: 28 }}\n        >\n          Search\n        </Button>\n      </Box>\n    </FormControl>\n  );\n};\n"]}