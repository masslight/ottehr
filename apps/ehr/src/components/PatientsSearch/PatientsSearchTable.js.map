{"version":3,"file":"PatientsSearchTable.js","sourceRoot":"","sources":["PatientsSearchTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Box,\n  Paper,\n  Skeleton,\n  styled,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Tabs,\n  Typography,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { COLUMN_CONFIG, SEARCH_CONFIG } from './constants';\nimport { PartialSearchOptionsState, SearchOptionsState, SearchResult, SortField, SortOrder } from './types';\n\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\n  color: theme.palette.background.paper,\n  padding: 0,\n  '& .MuiTabs-indicator': {\n    display: 'none',\n  },\n  '& .MuiTab-root': {\n    borderRadius: 0,\n    minHeight: 40,\n    textTransform: 'none',\n    fontWeight: 400,\n    padding: '6px 16px',\n  },\n  '& .Mui-selected': {\n    backgroundColor: `${theme.palette.primary.main} !important`,\n    color: `${theme.palette.background.paper} !important`,\n  },\n}));\n\nexport const PatientsSearchTable: React.FC<{\n  searchResult: SearchResult | null;\n  arePatientsLoading: boolean;\n  searchOptions: SearchOptionsState;\n  search: (params?: PartialSearchOptionsState) => void;\n}> = ({ searchResult, arePatientsLoading, searchOptions, search }) => {\n  const navigate = useNavigate();\n\n  const [activeTab, setActiveTab] = useState('allPatients');\n  const page = Math.floor(searchOptions.pagination.offset / searchOptions.pagination.pageSize);\n\n  const sort = (field: SortField) => () => {\n    const order: SortOrder = searchOptions.sort.field === field && searchOptions.sort.order === 'asc' ? 'desc' : 'asc';\n    void search({ sort: { field, order }, pagination: { offset: 0 } });\n  };\n\n  if (!searchResult?.patients.length && !arePatientsLoading) {\n    return (\n      <Box sx={{ textAlign: 'center', p: 3 }}>\n        <Typography variant=\"body1\">Set up search filter and press Search to find patients</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2, p: 2 }}>\n        <StyledTabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)}>\n          <Tab value=\"allPatients\" label=\"All Patients\" />\n        </StyledTabs>\n      </Box>\n\n      <TableContainer\n        component={Paper}\n        sx={{\n          '& .MuiTableCell-root': {\n            overflowWrap: 'anywhere',\n          },\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell width={COLUMN_CONFIG.pid.width}>PID</TableCell>\n              <TableCell width={COLUMN_CONFIG.name.width}>\n                <TableSortLabel\n                  active={searchOptions.sort.field === 'name'}\n                  direction={searchOptions.sort.field === 'name' ? searchOptions.sort.order : 'asc'}\n                  onClick={sort('name')}\n                  hideSortIcon={false}\n                  sx={{\n                    '& .MuiTableSortLabel-icon': {\n                      opacity: searchOptions.sort.field === 'name' ? 1 : 0.55,\n                      color: searchOptions.sort.field === 'name' ? 'inherit' : 'grey.500',\n                    },\n                  }}\n                >\n                  Name\n                </TableSortLabel>\n              </TableCell>\n              <TableCell width={COLUMN_CONFIG.dob.width}>\n                <TableSortLabel\n                  active={searchOptions.sort.field === 'dob'}\n                  direction={searchOptions.sort.field === 'dob' ? searchOptions.sort.order : 'asc'}\n                  onClick={sort('dob')}\n                  hideSortIcon={false}\n                  sx={{\n                    '& .MuiTableSortLabel-icon': {\n                      opacity: searchOptions.sort.field === 'dob' ? 1 : 0.55,\n                      color: searchOptions.sort.field === 'dob' ? 'inherit' : 'grey.500',\n                    },\n                  }}\n                >\n                  DOB\n                </TableSortLabel>\n              </TableCell>\n              <TableCell width={COLUMN_CONFIG.email.width}>Email</TableCell>\n              <TableCell width={COLUMN_CONFIG.phone.width}>Phone</TableCell>\n              <TableCell width={COLUMN_CONFIG.address.width}>Address</TableCell>\n              <TableCell width={COLUMN_CONFIG.lastVisit.width}>Last Visit</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {arePatientsLoading\n              ? Array.from(new Array(searchResult?.patients.length || searchOptions.pagination.pageSize)).map(\n                  (_, index) => (\n                    <TableRow key={`skeleton-${index}`}>\n                      <TableCell width={COLUMN_CONFIG.pid.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.name.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.dob.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.email.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.phone.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.address.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                      <TableCell width={COLUMN_CONFIG.lastVisit.width}>\n                        <Skeleton animation=\"wave\" width={'100%'} />\n                      </TableCell>\n                    </TableRow>\n                  )\n                )\n              : searchResult?.patients.map((patient) => (\n                  <TableRow\n                    key={patient.id}\n                    data-testid={dataTestIds.patients.searchResultRow(patient.id)}\n                    onClick={() => {\n                      navigate(`/patient/${patient.id}`);\n                    }}\n                    sx={{ cursor: 'pointer' }}\n                  >\n                    <TableCell data-testid={dataTestIds.patients.patientId} width={COLUMN_CONFIG.pid.width}>\n                      {patient.id}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.name.width} data-testid={dataTestIds.patients.patientName}>\n                      {patient.name}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.dob.width} data-testid={dataTestIds.patients.patientDateOfBirth}>\n                      {patient.birthDate ? DateTime.fromISO(patient.birthDate).toFormat('MM/dd/yyyy') : ''}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.email.width} data-testid={dataTestIds.patients.patientEmail}>\n                      {patient.email}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.phone.width} data-testid={dataTestIds.patients.patientPhoneNumber}>\n                      {patient.phone}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.address.width} data-testid={dataTestIds.patients.patientAddress}>\n                      {patient.address ? (\n                        <>\n                          {patient?.address?.line}\n                          {patient?.address?.line && patient?.address?.city && `, `}\n                          {patient?.address?.city}\n                          {patient?.address?.city && patient?.address?.state && <br />}\n                          {patient?.address?.state}\n                          {patient?.address?.state && patient?.address?.zip && ' '}\n                          {patient?.address?.zip}\n                        </>\n                      ) : (\n                        '-'\n                      )}\n                    </TableCell>\n                    <TableCell width={COLUMN_CONFIG.lastVisit.width}>\n                      {patient.lastVisit\n                        ? `${new Date(patient.lastVisit.date).toLocaleDateString()} at ${patient.lastVisit.location}`\n                        : '-'}\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={SEARCH_CONFIG.ROWS_PER_PAGE_OPTIONS.map((option) => ({\n                  value: option,\n                  label: option.toString(),\n                }))}\n                colSpan={7}\n                count={searchResult?.pagination.totalItems || 0}\n                rowsPerPage={searchOptions.pagination.pageSize}\n                page={page}\n                onPageChange={(_, newPage) => {\n                  void search({ pagination: { offset: searchOptions.pagination.pageSize * newPage } });\n                }}\n                onRowsPerPageChange={(event) => {\n                  const newItemsPerPage = parseInt(event.target.value, 10);\n                  void search({ pagination: { pageSize: newItemsPerPage, offset: 0 } });\n                }}\n                slotProps={{\n                  actions: {\n                    nextButton: {\n                      disabled: !searchResult?.pagination.next || arePatientsLoading,\n                    },\n                    previousButton: {\n                      disabled: !searchResult?.pagination.prev || arePatientsLoading,\n                    },\n                  },\n                }}\n                data-testid={dataTestIds.pagination.paginationContainer}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n"]}