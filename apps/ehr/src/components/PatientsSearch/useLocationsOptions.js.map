{"version":3,"file":"useLocationsOptions.js","sourceRoot":"","sources":["useLocationsOptions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,+BAA4C;AAC5C,qDAA6C;AAC7C,+BAA0C;AAE1C,2DAA0D;AAEnD,IAAM,mBAAmB,GAAG;IAM3B,IAAA,KAA0C,IAAA,gBAAQ,EAAW,EAAE,CAAC,EAA/D,gBAAgB,QAAA,EAAE,mBAAmB,QAA0B,CAAC;IACjE,IAAA,KAA4C,IAAA,gBAAQ,EAAC,IAAI,CAAC,EAAzD,iBAAiB,QAAA,EAAE,oBAAoB,QAAkB,CAAC;IACzD,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAC5B,IAAA,WAAW,GAAK,IAAA,4BAAS,GAAE,YAAhB,CAAiB;IAEpC,IAAA,iBAAS,EAAC;QACR,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO;QACT,CAAC;QAED,SAAe,mBAAmB,CAAC,OAAgB;;;;;;;;4BAE/C,oBAAoB,CAAC,IAAI,CAAC,CAAC;4BACT,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAW;oCACpD,YAAY,EAAE,UAAU;oCACxB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;iCAC5C,CAAC,EAAA;;4BAHI,SAAS,GAAG,SAGhB;4BACI,gBAAgB,GAAG,MAAA,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,0CACzD,MAAM,CAAC,UAAC,GAAQ,IAAK,OAAA,CAAC,IAAA,yBAAiB,EAAC,GAAG,CAAC,QAAQ,CAAC,EAAhC,CAAgC,EACtD,GAAG,CAAC,UAAC,GAAQ;;gCAAK,OAAA,CAAC;oCAClB,KAAK,EAAE,MAAA,GAAG,CAAC,QAAQ,0CAAE,IAAc;oCACnC,KAAK,EAAE,MAAA,GAAG,CAAC,QAAQ,0CAAE,IAAc;iCACpC,CAAC,CAAA;6BAAA,EACD,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;4BAClD,mBAAmB,CAAC,gBAAgB,CAAC,CAAC;;;;4BAEtC,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAC,CAAC,CAAC;;;4BAE5C,oBAAoB,CAAC,KAAK,CAAC,CAAC;;;;;;SAE/B;QAED,KAAK,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;IAE3B,OAAO;QACL,QAAQ,EAAE;YACR,OAAO,EAAE,gBAAgB;YACzB,MAAM,EAAE,iBAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ;SACjD;KACF,CAAC;AACJ,CAAC,CAAC;AA/CW,QAAA,mBAAmB,uBA+C9B","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { Location } from 'fhir/r4b';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { isLocationVirtual } from 'utils';\nimport { Option } from '../../features/css-module/components/medication-administration/medicationTypes';\nimport { useApiClients } from '../../hooks/useAppClients';\n\nexport const useLocationsOptions = (): {\n  location: {\n    options: Option[];\n    status: 'loading' | 'loaded';\n  };\n} => {\n  const [locationsOptions, setLocationsOptions] = useState<Option[]>([]);\n  const [isLocationLoading, setIsLocationLoading] = useState(true);\n  const { oystehr } = useApiClients();\n  const { encounterId } = useParams();\n\n  useEffect(() => {\n    if (!oystehr) {\n      return;\n    }\n\n    async function getLocationsResults(oystehr: Oystehr): Promise<void> {\n      try {\n        setIsLocationLoading(true);\n        const locations = await oystehr.fhir.search<Location>({\n          resourceType: 'Location',\n          params: [{ name: '_count', value: '1000' }],\n        });\n        const locationsResults = Array.from(new Set(locations.entry))\n          ?.filter((loc: any) => !isLocationVirtual(loc.resource))\n          .map((loc: any) => ({\n            value: loc.resource?.name as string,\n            label: loc.resource?.name as string,\n          }))\n          .sort((a, b) => a.label.localeCompare(b.label));\n        setLocationsOptions(locationsResults);\n      } catch (e) {\n        console.error('error loading locations', e);\n      } finally {\n        setIsLocationLoading(false);\n      }\n    }\n\n    void getLocationsResults(oystehr);\n  }, [encounterId, oystehr]);\n\n  return {\n    location: {\n      options: locationsOptions,\n      status: isLocationLoading ? 'loading' : 'loaded',\n    },\n  };\n};\n"]}