{"version":3,"file":"parseSearchResults.js","sourceRoot":"","sources":["parseSearchResults.ts"],"names":[],"mappings":";;;AAIO,IAAM,kBAAkB,GAAG,UAAC,YAAoB;;IACrD,IAAM,QAAQ,GAAgC,EAAE,CAAC;IAEjD,IAAI,CAAC,YAAY,CAAC,KAAK;QACrB,OAAO;YACL,QAAQ,UAAA;YACR,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;SACtD,CAAC;IAEJ,IAAM,WAAW,GAAG,IAAI,GAAG,CACzB,YAAY,CAAC,KAAK;SACf,MAAM,CAAC,UAAC,CAAC,YAAK,OAAA,CAAA,MAAA,CAAC,CAAC,QAAQ,0CAAE,YAAY,MAAK,UAAU,CAAA,EAAA,CAAC;SACtD,GAAG,CAAC,UAAC,CAAC,gBAAK,OAAA,CAAC,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,QAAQ,0CAAE,EAAE,EAAE,MAAC,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,QAAqB,0CAAE,IAAI,CAAC,CAAA,EAAA,CAAC,CAClE,CAAC;4BAES,KAAK;QACd,IAAI,CAAA,MAAA,KAAK,CAAC,QAAQ,0CAAE,YAAY,MAAK,SAAS;8BAAW;QAEzD,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;QAE/B,IAAM,YAAY,GAAI,YAAY,CAAC,KAAoC;aACpE,MAAM,CACL,UAAC,CAAC;;YACA,OAAA,CAAA,MAAA,CAAC,CAAC,QAAQ,0CAAE,YAAY,MAAK,aAAa;iBAC1C,MAAA,CAAC,CAAC,QAAQ,CAAC,WAAW,0CAAE,IAAI,CAAC,UAAC,CAAC,YAAK,OAAA,CAAA,MAAA,CAAC,CAAC,KAAK,0CAAE,SAAS,MAAK,kBAAW,OAAO,CAAC,EAAE,CAAE,CAAA,EAAA,CAAC,CAAA,CAAA;SAAA,CACtF;aACA,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,QAAQ,EAAV,CAAU,CAAC;aACtB,MAAM,CAAC,OAAO,CAAC,CAAC;QAElB,YAA8B,CAAC,IAAI,CAClC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,IAAI,IAAI,CAAC,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAe,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,KAAe,CAAC,CAAC,OAAO,EAAE,EAA/E,CAA+E,CAC1F,CAAC;QAEF,IAAM,eAAe,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAExC,IAAI,SAAS,SAAoD,CAAC;QAElE,IAAI,eAAe,EAAE,CAAC;YACpB,IAAM,WAAW,GAAG,MAAA,MAAA,MAAA,eAAe,CAAC,WAAW,0CAAE,IAAI,CAAC,UAAC,CAAC,gBAAK,OAAA,MAAA,MAAA,CAAC,CAAC,KAAK,0CAAE,SAAS,0CAAE,UAAU,CAAC,WAAW,CAAC,CAAA,EAAA,CAAC,0CAAE,KAAK,0CAC5G,SAAS,CAAC;YAEd,IAAM,UAAU,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAE9C,SAAS,GAAG;gBACV,IAAI,EAAE,eAAe,CAAC,KAAe;gBACrC,QAAQ,EAAE,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;aAC5C,CAAC;QACJ,CAAC;QAED,IAAM,QAAQ,GAAG,MAAA,MAAA,OAAO,CAAC,IAAI,0CAAG,CAAC,CAAC,0CAAE,MAAM,CAAC;QAE3C,IAAM,aAAa,GAA8B;YAC/C,EAAE,EAAE,OAAO,CAAC,EAAY;YACxB,IAAI,EAAE,UAAG,QAAQ,IAAI,EAAE,eAAK,CAAA,MAAA,MAAA,MAAA,OAAO,CAAC,IAAI,0CAAG,CAAC,CAAC,0CAAE,KAAK,0CAAE,IAAI,CAAC,GAAG,CAAC,KAAI,EAAE,CAAE;YACvE,SAAS,EAAE,OAAO,CAAC,SAAS;YAC5B,KAAK,EAAE,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,KAAK,OAAO,EAApB,CAAoB,CAAC,0CAAE,KAAK;YAChE,KAAK,EAAE,MAAA,MAAA,OAAO,CAAC,OAAO,0CAAE,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,KAAK,OAAO,EAApB,CAAoB,CAAC,0CAAE,KAAK;YAChE,OAAO,EAAE,CAAA,MAAA,OAAO,CAAC,OAAO,0CAAG,CAAC,CAAC;gBAC3B,CAAC,CAAC;oBACE,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;oBACnC,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,EAAE;oBACxC,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;oBACrC,IAAI,EAAE,CAAA,MAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,0CAAE,IAAI,CAAC,IAAI,CAAC,KAAI,EAAE;iBAChD;gBACH,CAAC,CAAC,SAAS;YACb,SAAS,WAAA;SACV,CAAC;QAEF,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;IArD/B,KAAoB,UAAkB,EAAlB,KAAA,YAAY,CAAC,KAAK,EAAlB,cAAkB,EAAlB,IAAkB;QAAjC,IAAM,KAAK,SAAA;gBAAL,KAAK;KAsDf;IAED,IAAM,UAAU,GAA+B;QAC7C,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,YAAY,CAAC,KAAK,IAAI,CAAC;KACpC,CAAC;IAEF,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,IAAM,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAxB,CAAwB,CAAC,CAAC;QAC5E,IAAM,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,QAAQ,KAAK,UAAU,EAA5B,CAA4B,CAAC,CAAC;QAEpF,UAAU,CAAC,IAAI,GAAG,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,GAAG,KAAI,IAAI,CAAC;QACxC,UAAU,CAAC,IAAI,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,GAAG,KAAI,IAAI,CAAC;IAC9C,CAAC;IAED,OAAO;QACL,QAAQ,UAAA;QACR,UAAU,YAAA;KACX,CAAC;AACJ,CAAC,CAAC;AAzFW,QAAA,kBAAkB,sBAyF7B","sourcesContent":["import { Appointment, Bundle, BundleEntry, Location } from 'fhir/r4b';\nimport { SearchResultPaginationInfo, SearchResultParsedPatient } from '../types';\nimport { SearchResult } from '../types';\n\nexport const parseSearchResults = (fhirResponse: Bundle): SearchResult => {\n  const patients: SearchResultParsedPatient[] = [];\n\n  if (!fhirResponse.entry)\n    return {\n      patients,\n      pagination: { next: null, prev: null, totalItems: 0 },\n    };\n\n  const locationMap = new Map(\n    fhirResponse.entry\n      .filter((e) => e.resource?.resourceType === 'Location')\n      .map((e) => [e?.resource?.id, (e?.resource as Location)?.name])\n  );\n\n  for (const entry of fhirResponse.entry) {\n    if (entry.resource?.resourceType !== 'Patient') continue;\n\n    const patient = entry.resource;\n\n    const appointments = (fhirResponse.entry as BundleEntry<Appointment>[])\n      .filter(\n        (e) =>\n          e.resource?.resourceType === 'Appointment' &&\n          e.resource.participant?.some((p) => p.actor?.reference === `Patient/${patient.id}`)\n      )\n      .map((e) => e.resource)\n      .filter(Boolean);\n\n    (appointments as Appointment[]).sort(\n      (a, b) => new Date(b?.start as string).getTime() - new Date(a?.start as string).getTime()\n    );\n\n    const lastAppointment = appointments[0];\n\n    let lastVisit: SearchResultParsedPatient['lastVisit'] | undefined;\n\n    if (lastAppointment) {\n      const locationRef = lastAppointment.participant?.find((p) => p.actor?.reference?.startsWith('Location/'))?.actor\n        ?.reference;\n\n      const locationId = locationRef?.split('/')[1];\n\n      lastVisit = {\n        date: lastAppointment.start as string,\n        location: locationMap.get(locationId) || '',\n      };\n    }\n\n    const lastName = patient.name?.[0]?.family;\n\n    const parsedPatient: SearchResultParsedPatient = {\n      id: patient.id as string,\n      name: `${lastName || ''}, ${patient.name?.[0]?.given?.join(' ') || ''}`,\n      birthDate: patient.birthDate,\n      phone: patient.telecom?.find((t) => t.system === 'phone')?.value,\n      email: patient.telecom?.find((t) => t.system === 'email')?.value,\n      address: patient.address?.[0]\n        ? {\n            city: patient.address[0].city || '',\n            zip: patient.address[0].postalCode || '',\n            state: patient.address[0].state || '',\n            line: patient.address[0].line?.join(', ') || '',\n          }\n        : undefined,\n      lastVisit,\n    };\n\n    patients.push(parsedPatient);\n  }\n\n  const pagination: SearchResultPaginationInfo = {\n    next: null,\n    prev: null,\n    totalItems: fhirResponse.total || 0,\n  };\n\n  if (fhirResponse.link) {\n    const nextLink = fhirResponse.link.find((link) => link.relation === 'next');\n    const previousLink = fhirResponse.link.find((link) => link.relation === 'previous');\n\n    pagination.next = nextLink?.url || null;\n    pagination.prev = previousLink?.url || null;\n  }\n\n  return {\n    patients,\n    pagination,\n  };\n};\n"]}