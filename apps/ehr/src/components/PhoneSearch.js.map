{"version":3,"file":"PhoneSearch.js","sourceRoot":"","sources":["PhoneSearch.tsx"],"names":[],"mappings":";;AAYA,8BAwDC;AApED,sDAAoD;AACpD,0CAAmH;AACnH,+BAAyE;AACzE,+BAA2C;AAC3C,yCAAoC;AAQpC,SAAwB,WAAW,CAAC,EAA0D;QAAxD,WAAW,iBAAA,EAAE,cAAc,oBAAA,EAAE,OAAO,aAAA;IAClE,IAAA,KAAoB,IAAA,gBAAQ,EAAU,KAAK,CAAC,EAA3C,KAAK,QAAA,EAAE,QAAQ,QAA4B,CAAC;IACnD,OAAO,CACL,CAAC,sBAAW,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CACvC;MAAA,CAAC,qBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAC9B;;MACF,EAAE,qBAAU,CACZ;MAAA,CAAC,wBAAa,CACZ,EAAE,CAAC,OAAO,CACV,KAAK,CAAC,OAAO,CACb,IAAI,CAAC,KAAK,CACV,WAAW,CAAC,0BAA0B,CACtC,KAAK,CAAC,CAAC,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,EAAE,CAAC,CACzB,SAAS,CAAC,SAAS,CACnB,cAAc,CAAC,CAAC,mBAAgB,CAAC,CACjC,UAAU,CAAC,CAAC;YACV,IAAI,EAAE,gBAAgB;SACvB,CAAC,CACF,YAAY,CAAC,CACX,CAAC,yBAAc,CAAC,QAAQ,CAAC,KAAK,CAC5B;YAAA,CAAC,WAAW,IAAI,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,IAAG,CAAC,CAAC,CAAC,CAAC,CACxC,CAAC,qBAAU,CACT,UAAU,CAAC,oBAAoB,CAC/B,OAAO,CAAC,CAAC;oBACP,IAAI,OAAO,EAAE,CAAC;wBACZ,OAAO,EAAE,CAAC;oBACZ,CAAC;oBACD,cAAc,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,CAAC,CACF,WAAW,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,EAAtB,CAAsB,CAAC,CAC/C,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb;gBAAA,CAAC,sBAAK,CAAC,AAAD,EACR;cAAA,EAAE,qBAAU,CAAC,CACd,CAAC,CAAC,CAAC,CACF,CAAC,uBAAM,CAAC,AAAD,EAAG,CACX,CACH;UAAA,EAAE,yBAAc,CAClB,CAAC,CACD,QAAQ,CAAC,CAAC,UAAC,CAAC;YACV,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAChD,cAAc,CAAC,KAAK,CAAC,CAAC;YACtB,IAAI,IAAA,0BAAkB,EAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;iBAAM,CAAC;gBACN,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClB,CAAC;QACH,CAAC,CAAC,CACF,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,OAAO,EAET;MAAA,CAAC,yBAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CACrE;;MACF,EAAE,yBAAc,CAClB;IAAA,EAAE,sBAAW,CAAC,CACf,CAAC;AACJ,CAAC","sourcesContent":["import { Close, Search } from '@mui/icons-material';\nimport { FormControl, FormHelperText, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\nimport { Dispatch, ReactElement, SetStateAction, useState } from 'react';\nimport { isPhoneNumberValid } from 'utils';\nimport InputMask from './InputMask';\n\ninterface PhoneSearchProps {\n  phoneFilter: string | null;\n  setPhoneFilter: Dispatch<SetStateAction<string | null>>;\n  onClear?: () => void;\n}\n\nexport default function PhoneSearch({ phoneFilter, setPhoneFilter, onClear }: PhoneSearchProps): ReactElement {\n  const [error, setError] = useState<boolean>(false);\n  return (\n    <FormControl variant=\"outlined\" fullWidth>\n      <InputLabel shrink error={error}>\n        Phone\n      </InputLabel>\n      <OutlinedInput\n        id=\"phone\"\n        label=\"Phone\"\n        type=\"tel\"\n        placeholder=\"Search patients by phone\"\n        value={phoneFilter ?? ''}\n        inputMode=\"numeric\"\n        inputComponent={InputMask as any}\n        inputProps={{\n          mask: '(000) 000-0000',\n        }}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            {phoneFilter && phoneFilter?.length > 0 ? (\n              <IconButton\n                aria-label=\"clear phone search\"\n                onClick={() => {\n                  if (onClear) {\n                    onClear();\n                  }\n                  setPhoneFilter(null);\n                }}\n                onMouseDown={(event) => event.preventDefault()}\n                sx={{ p: 0 }}\n              >\n                <Close />\n              </IconButton>\n            ) : (\n              <Search />\n            )}\n          </InputAdornment>\n        }\n        onChange={(e) => {\n          const phone = e.target.value.replace(/\\D/g, '');\n          setPhoneFilter(phone);\n          if (isPhoneNumberValid(phone)) {\n            setError(true);\n          } else {\n            setError(false);\n          }\n        }}\n        error={error}\n        notched\n      />\n      <FormHelperText error sx={{ visibility: error ? 'visible' : 'hidden' }}>\n        Phone number must be 10 digits in the format (xxx) xxx-xxxx and a valid number\n      </FormHelperText>\n    </FormControl>\n  );\n}\n"]}