{"version":3,"file":"ProfilePhotoImagePicker.js","sourceRoot":"","sources":["ProfilePhotoImagePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import './ProfilePhotoImagePicker.css';\nimport AddAPhotoOutlinedIcon from '@mui/icons-material/AddAPhotoOutlined';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport { styled } from '@mui/material';\nimport { Attachment, Patient } from 'fhir/r4b';\nimport React, { ChangeEvent, FC, ReactElement, useCallback, useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport { Area, Point } from 'react-easy-crop';\nimport { uploadPatientProfilePhoto } from '../api/api';\nimport {\n  useEditPatientProfilePhotoMutation,\n  useGetSignedPatientProfilePhotoUrlQuery,\n} from '../features/css-module/queries/css.queries';\nimport { getCroppedImg, ImageCropResult } from '../helpers/canvasUtils';\nimport { useApiClients } from '../hooks/useAppClients';\n\nexport interface ProfileImageItem {\n  alt: string;\n  url: string;\n}\n\ninterface ProfilePhotoImageProps {\n  open: boolean; // if true the dialog is open\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  patient: Patient | undefined;\n  onUpdate?: (updatedPatient: Patient) => void;\n}\n\nenum PhotoProcessingState {\n  cropping, // photo has been selected and currently is under processing (cropping/scaling)\n  cropped, // photo processing procedure has been finished\n  uploading,\n  uploaded,\n}\n\nconst VisuallyHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1,\n});\n\nconst ProfilePhotoImagePicker: FC<ProfilePhotoImageProps> = ({ open, setOpen, patient, onUpdate }) => {\n  const { oystehrZambda } = useApiClients();\n\n  const [photoProcessingState, setPhotoProcessingState] = useState<PhotoProcessingState | undefined>(undefined);\n  const [currentProfileImage, setCurrentProfileImage] = useState<ProfileImageItem | undefined>(undefined);\n\n  const [croppedImageResult, setCroppedImageResult] = useState<ImageCropResult | undefined>(undefined);\n  // react-easy-crop computes the cropping area and updates this state\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState<Area | null>(null);\n  // Zoom level for cropping\n  const [zoom, setZoom] = useState<number>(1);\n  const [crop, setCrop] = useState<Point>({ x: 0, y: 0 });\n\n  const [isSavingImage, setIsSavingImage] = useState<boolean>(false);\n  const [isSavingError, setSavingError] = useState(false);\n\n  const hasAttachedPhoto = !!currentProfileImage;\n\n  const patientPhotoUrlUnsigned = patient?.photo?.at(0)?.url;\n  const { isFetching: isPhotoLoading } = useGetSignedPatientProfilePhotoUrlQuery(\n    patientPhotoUrlUnsigned,\n    (profilePhotoResponse) => {\n      const { presignedImageUrl } = profilePhotoResponse;\n\n      clearPickedPhotoState();\n      setCurrentProfileImage({\n        alt: 'Profile photo',\n        url: presignedImageUrl,\n      });\n      setCroppedImageResult({ imageUrl: presignedImageUrl });\n      setPhotoProcessingState(PhotoProcessingState.cropped);\n    }\n  );\n\n  const editPatientProfilePhotoMutation = useEditPatientProfilePhotoMutation();\n\n  const updatePatientRecordWithPhotoUrl = useCallback(\n    async (profilePhotoUrl: string | undefined): Promise<void> => {\n      try {\n        if (!patient?.id) {\n          throw new Error('Patient reference not available');\n        }\n\n        const photoAttachments: Attachment[] | undefined = profilePhotoUrl\n          ? [\n              {\n                contentType: 'image/jpeg',\n                url: profilePhotoUrl,\n              },\n            ]\n          : undefined;\n\n        const patientData: Patient = {\n          ...patient,\n          resourceType: 'Patient',\n          id: patient.id,\n          photo: photoAttachments,\n        };\n\n        await editPatientProfilePhotoMutation.mutateAsync({\n          originalPatient: patient,\n          newPatientData: patientData,\n        });\n\n        onUpdate?.(patientData);\n      } catch (error) {\n        setSavingError(true);\n        console.error('Error while updating Patient fhir resource: ', error);\n      }\n    },\n    [editPatientProfilePhotoMutation, onUpdate, patient]\n  );\n\n  const clearPickedPhotoState = (): void => {\n    setCurrentProfileImage(undefined);\n    setPhotoProcessingState(undefined);\n    setCroppedImageResult(undefined);\n    setSavingError(false);\n  };\n\n  const handleRemovePhotoClick = useCallback(async () => {\n    clearPickedPhotoState();\n    await updatePatientRecordWithPhotoUrl(undefined);\n  }, [updatePatientRecordWithPhotoUrl]);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const { files } = event.target;\n\n    const allFiles = (files && Array.from(files)) ?? [];\n    const capturedPhotoFile = allFiles.at(0);\n\n    if (!capturedPhotoFile) {\n      console.warn('No photo file selected/available - earlier skip!');\n      return;\n    }\n\n    const photoFileUrl = URL.createObjectURL(capturedPhotoFile);\n\n    setCurrentProfileImage({\n      alt: 'Profile photo',\n      url: photoFileUrl,\n    });\n    setPhotoProcessingState(PhotoProcessingState.cropping);\n    setCroppedImageResult(undefined);\n    setSavingError(false);\n  };\n\n  const handlePhotoSaveClicked = useCallback(async () => {\n    try {\n      setIsSavingImage(true);\n\n      if (!oystehrZambda) {\n        console.warn('zambdaClient not available - skip uploading');\n        return;\n      }\n\n      const photoUrl = currentProfileImage?.url;\n      if (!photoUrl) {\n        console.warn('No photoUrl to process - skip processing');\n        return;\n      }\n      if (!croppedAreaPixels) {\n        console.warn('No croppedAreaPixels to process - skip processing');\n        return;\n      }\n\n      const imageCroppingResult = await getCroppedImg(photoUrl, croppedAreaPixels);\n      if (!imageCroppingResult) {\n        console.warn(`Can not crop a given photo - skip saving`);\n        return;\n      }\n\n      const { imageFile } = imageCroppingResult;\n\n      setCroppedImageResult(imageCroppingResult);\n      setPhotoProcessingState(PhotoProcessingState.cropped);\n\n      if (!imageFile) {\n        console.warn(`imageFile is undefined - skip saving`);\n        return;\n      }\n\n      setPhotoProcessingState(PhotoProcessingState.uploading);\n\n      const patientId = patient?.id;\n      if (!patientId) {\n        console.warn('patientId not available - skip uploading');\n        return;\n      }\n\n      // TODO: useMutation for it ?\n      const uploadResponse = await uploadPatientProfilePhoto(oystehrZambda, {\n        patientId,\n        patientPhotoFile: imageFile,\n      });\n\n      if (!uploadResponse) {\n        console.warn(`uploading patient profile photo failed - skip saving`);\n        return;\n      }\n\n      await updatePatientRecordWithPhotoUrl(uploadResponse.z3ImageUrl);\n      setPhotoProcessingState(PhotoProcessingState.uploaded);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setIsSavingImage(false);\n    }\n  }, [currentProfileImage, croppedAreaPixels, updatePatientRecordWithPhotoUrl, patient, oystehrZambda]);\n\n  const onCropComplete = useCallback((croppedArea: any, croppedAreaPixels: Area) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  // Dialog's control buttons bar\n  const renderControlButtons = (): ReactElement => {\n    if (!hasAttachedPhoto) {\n      return (\n        <Button\n          variant=\"outlined\"\n          component=\"label\"\n          disabled={false}\n          color=\"primary\"\n          sx={{\n            borderRadius: '16px',\n            textTransform: 'none',\n            mt: 2,\n            fontWeight: 'bold',\n          }}\n          startIcon={<AddAPhotoOutlinedIcon fontSize=\"small\" />}\n        >\n          Take photo\n          <VisuallyHiddenInput\n            onChange={(e) => handleInputChange(e)}\n            type=\"file\"\n            capture=\"environment\"\n            accept=\"image/*\"\n          />\n        </Button>\n      );\n    }\n\n    if (\n      photoProcessingState === PhotoProcessingState.cropping ||\n      photoProcessingState === PhotoProcessingState.uploading\n    ) {\n      return (\n        <LoadingButton\n          loading={isSavingImage}\n          variant=\"contained\"\n          onClick={() => handlePhotoSaveClicked()}\n          sx={{\n            fontWeight: 'bold',\n            borderRadius: '16px',\n            textTransform: 'none',\n          }}\n        >\n          Save\n        </LoadingButton>\n      );\n    }\n\n    return (\n      <>\n        <Button\n          variant=\"outlined\"\n          component=\"label\"\n          disabled={false}\n          color=\"primary\"\n          sx={{\n            borderRadius: '16px',\n            textTransform: 'none',\n            mt: 2,\n            fontWeight: 'bold',\n          }}\n          startIcon={<AddAPhotoOutlinedIcon fontSize=\"small\" />}\n        >\n          Retake photo\n          <VisuallyHiddenInput\n            onChange={(e) => handleInputChange(e)}\n            type=\"file\"\n            capture=\"environment\"\n            accept=\"image/*\"\n          />\n        </Button>\n\n        <Button\n          onClick={handleRemovePhotoClick}\n          variant=\"outlined\"\n          component=\"label\"\n          disabled={false}\n          color=\"error\"\n          sx={{\n            borderRadius: '16px',\n            textTransform: 'none',\n            mt: 2,\n            ml: 3,\n            fontWeight: 'bold',\n          }}\n          startIcon={<DeleteForeverOutlinedIcon fontSize=\"small\" />}\n        >\n          Remove photo\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => {\n        setOpen(false);\n      }}\n      PaperProps={{\n        style: {\n          backgroundColor: 'white',\n          boxShadow: 'none',\n          maxWidth: '900px',\n        },\n      }}\n    >\n      <DialogTitle marginBottom={0}>\n        <Grid\n          container\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          sx={{ width: '100%', border: 1, borderColor: 'white' }}\n        >\n          <Grid item xs />\n          <Grid item>\n            {photoProcessingState === PhotoProcessingState.cropping && (\n              <Typography variant=\"h6\" align=\"center\">\n                Please crop the image\n              </Typography>\n            )}\n            {isSavingError && (\n              <Typography color=\"error\" variant=\"h6\" align=\"center\">\n                There was an error updating photo, please try again.\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs container justifyContent=\"flex-end\">\n            <IconButton\n              onClick={() => {\n                setOpen(false);\n              }}\n            >\n              <CloseIcon sx={{ color: '#938B7D' }} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </DialogTitle>\n\n      <Box\n        sx={{\n          minWidth: '500px',\n          width: '100%',\n          height: '50vh',\n          overflow: 'hidden',\n          position: 'relative',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          '& img': {\n            paddingX: '32px',\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n          },\n        }}\n      >\n        {/* Show cropper to give ability to modify the image */}\n        {currentProfileImage && photoProcessingState === PhotoProcessingState.cropping && (\n          <Box mt={2} textAlign=\"center\">\n            <Cropper\n              image={currentProfileImage?.url}\n              crop={crop}\n              zoom={zoom}\n              aspect={3 / 4}\n              onZoomChange={setZoom}\n              onCropComplete={onCropComplete}\n              onCropChange={setCrop}\n            />\n          </Box>\n        )}\n\n        {!hasAttachedPhoto && isPhotoLoading && (\n          <Box sx={{ justifyContent: 'center', display: 'flex' }}>\n            <CircularProgress />\n          </Box>\n        )}\n\n        {!hasAttachedPhoto && !isPhotoLoading && (\n          <Typography\n            variant=\"h6\"\n            color=\"primary.dark\"\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1,\n            }}\n          >\n            Please take the photo\n          </Typography>\n        )}\n\n        {/* Preview for the cropped image */}\n        {croppedImageResult?.imageUrl && <img src={croppedImageResult.imageUrl} alt={currentProfileImage?.alt} />}\n      </Box>\n\n      <DialogContent style={{ overflow: 'hidden' }}>\n        <Box alignItems=\"center\" display=\"flex\" sx={{ mb: 1 }}>\n          {renderControlButtons()}\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ProfilePhotoImagePicker;\n"]}