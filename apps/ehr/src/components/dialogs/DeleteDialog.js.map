{"version":3,"file":"DeleteDialog.js","sourceRoot":"","sources":["DeleteDialog.tsx"],"names":[],"mappings":";;AAaA,+BAiDC;AA9DD,0CAAuH;AAavH,SAAwB,YAAY,CAAC,EAQjB;QAPlB,eAAe,qBAAA,EACf,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,gBAAgB,sBAAA,EAChB,YAAY,kBAAA,EACZ,IAAI,UAAA,EACJ,KAAK,WAAA;IAEL,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IACzB,IAAM,QAAQ,GAAG;QACf,UAAU,EAAE,GAAG;QACf,aAAa,EAAE,MAAM;QACrB,YAAY,EAAE,CAAC;KAChB,CAAC;IAEF,OAAO,CACL,CAAC,iBAAM,CACL,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,OAAO,CAAC,CAAC,WAAW,CAAC,CACrB,iBAAiB,CACjB,EAAE,CAAC,CAAC;YACF,gBAAgB,EAAE;gBAChB,OAAO,EAAE,CAAC;aACX;SACF,CAAC,CAEF;MAAA,CAAC,sBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAClE;QAAA,CAAC,KAAK,CACR;MAAA,EAAE,sBAAW,CACb;MAAA,CAAC,wBAAa,CACZ;QAAA,CAAC,4BAAiB,CAChB,EAAE,CAAC,CAAC;YACF,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;SAClC,CAAC,CAEF;UAAA,CAAC,WAAW,CACd;QAAA,EAAE,4BAAiB,CACrB;MAAA,EAAE,wBAAa,CACf;MAAA,CAAC,wBAAa,CACZ;QAAA,CAAC,iBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAC1E;UAAA,CAAC,eAAe,CAClB;QAAA,EAAE,iBAAM,CACR;QAAA,CAAC,iBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAC1F;UAAA,CAAC,gBAAgB,CACnB;QAAA,EAAE,iBAAM,CACV;MAAA,EAAE,wBAAa,CACjB;IAAA,EAAE,iBAAM,CAAC,CACV,CAAC;AACJ,CAAC","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, useTheme } from '@mui/material';\nimport { MouseEventHandler, ReactElement } from 'react';\n\ninterface DeleteDialogProps {\n  closeButtonText: string;\n  handleClose: MouseEventHandler<HTMLButtonElement>;\n  description: string | ReactElement;\n  deleteButtonText: string;\n  handleDelete: MouseEventHandler<HTMLButtonElement>;\n  open: boolean;\n  title: string;\n}\n\nexport default function DeleteDialog({\n  closeButtonText,\n  handleClose,\n  description,\n  deleteButtonText,\n  handleDelete,\n  open,\n  title,\n}: DeleteDialogProps): ReactElement {\n  const theme = useTheme();\n  const buttonSx = {\n    fontWeight: 500,\n    textTransform: 'none',\n    borderRadius: 6,\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      disableScrollLock\n      sx={{\n        '.MuiPaper-root': {\n          padding: 2,\n        },\n      }}\n    >\n      <DialogTitle variant=\"h4\" color=\"primary.dark\" sx={{ width: '80%' }}>\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText\n          sx={{\n            color: theme.palette.text.primary,\n          }}\n        >\n          {description}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" onClick={handleClose} size=\"medium\" sx={buttonSx}>\n          {closeButtonText}\n        </Button>\n        <Button variant=\"contained\" onClick={handleDelete} size=\"medium\" color=\"error\" sx={buttonSx}>\n          {deleteButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]}