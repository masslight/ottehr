{"version":3,"file":"EditPatientDialog.js","sourceRoot":"","sources":["EditPatientDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Autocomplete,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  Grid,\n  IconButton,\n  // MenuItem,\n  // Select,\n  TextField,\n  Typography,\n  // InputLabel,\n} from '@mui/material';\nimport { Address, Patient } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { PatternFormat } from 'react-number-format';\nimport { AllStatesToVirtualLocationsData } from 'utils';\nimport { EMAIL_REGEX, ZIP_REGEX } from '../../constants';\nimport { getSelectors } from '../../shared/store/getSelectors';\nimport { useAppointmentStore, useEditPatientInformationMutation } from '../../telemed/state';\nimport DateSearch from '../DateSearch';\nimport { RoundedButton } from '../RoundedButton';\n\ninterface EditPatientDialogProps {\n  modalOpen: boolean;\n  onClose: () => void;\n}\n\ninterface FormInputs {\n  firstName?: string;\n  middleName?: string;\n  lastName?: string;\n  preferredName?: string;\n  // suffix?: string;\n  dateOfBirth: DateTime | null;\n  primaryPhoneNumber?: string;\n  secondaryPhoneNumber?: string;\n  primaryEmail?: string;\n  secondaryEmail?: string;\n  addressLineOne?: string;\n  addressLineTwo?: string;\n  city?: string;\n  state?: string;\n  zipCode?: string;\n}\n\nconst createPatientResourcePatchData = (patient: Patient, data: FormInputs): Patient => {\n  const patientData: Patient = {\n    ...patient,\n    resourceType: 'Patient',\n    id: patient.id,\n    name: [\n      {\n        use: 'official',\n        family: data.lastName,\n        given: [data.firstName!],\n        // suffix: [],\n      },\n    ],\n    telecom: [],\n    birthDate: data.dateOfBirth!.toISODate()!,\n  };\n  if (data.middleName) {\n    patientData.name![0].given?.push(data.middleName);\n  }\n  if (data.preferredName) {\n    patientData.name?.push({\n      use: 'nickname',\n      given: [data.preferredName],\n    });\n  }\n  // if (data.suffix && data.suffix.length > 0) {\n  //   patientData.name![0].suffix?.push(data.suffix);\n  // }\n\n  // patient's Phones\n  if (data.primaryPhoneNumber) {\n    patientData.telecom!.push({\n      system: 'phone',\n      use: 'mobile',\n      rank: 1,\n      value: data.primaryPhoneNumber,\n    });\n  }\n  if (data.secondaryPhoneNumber) {\n    patientData.telecom!.push({\n      system: 'phone',\n      use: 'mobile',\n      rank: 2,\n      value: data.secondaryPhoneNumber,\n    });\n  }\n\n  // patient's Emails\n  if (data.primaryEmail) {\n    patientData.telecom!.push({\n      system: 'email',\n      rank: 1,\n      value: data.primaryEmail,\n    });\n  }\n  if (data.secondaryEmail) {\n    patientData.telecom!.push({\n      system: 'email',\n      rank: 2,\n      value: data.secondaryEmail,\n    });\n  }\n\n  // patient's Address\n  const addressEntry: Address = { ...(patient?.address?.[0] ?? {}) };\n  if (data.addressLineOne) {\n    const addressLines = [];\n    addressLines.push(data.addressLineOne);\n    addressEntry.line = addressLines;\n  }\n  if (data.addressLineTwo) {\n    const addressLines = [...(addressEntry.line ?? [])];\n    addressLines.push(data.addressLineTwo);\n    addressEntry.line = addressLines;\n  }\n  if (data.city) {\n    addressEntry.city = data.city;\n  }\n  if (data.state) {\n    addressEntry.state = data.state;\n  }\n  if (data.zipCode) {\n    addressEntry.postalCode = data.zipCode;\n  }\n\n  if (Object.keys(addressEntry).length !== 0) {\n    patientData.address = [addressEntry];\n  }\n\n  return patientData;\n};\n\nconst isValidPhoneNumber = (phoneNumber: string): boolean => {\n  return phoneNumber.length === 10;\n};\n\nconst isValidEmail = (email: string): boolean => {\n  return EMAIL_REGEX.test(email);\n};\n\nconst isValidZipCode = (zipCode: string): boolean => {\n  return ZIP_REGEX.test(zipCode);\n};\n\nconst EditPatientDialog = ({ modalOpen, onClose }: EditPatientDialogProps): ReactElement => {\n  const {\n    register,\n    handleSubmit,\n    formState,\n    control,\n    setError: setFormError,\n    resetField,\n    setValue,\n    getValues,\n  } = useForm<FormInputs>();\n  const [error, setError] = useState(false);\n  const { patient } = getSelectors(useAppointmentStore, ['patient']);\n\n  const [isSavingData, setSavingData] = useState<boolean>(false);\n\n  const possibleUsStates = Object.keys(AllStatesToVirtualLocationsData);\n  const statesDropdownOptions: string[] = [...possibleUsStates.map((usState) => usState)];\n\n  const phoneNumberErrorMessage = 'Phone number must be 10 digits in the format (xxx) xxx-xxxx';\n  const emailErrorMessage = 'Email is not valid';\n  const zipCodeErrorMessage = 'ZIP Code must be 5 numbers';\n\n  useEffect(() => {\n    setValue('dateOfBirth', patient?.birthDate ? DateTime.fromISO(patient?.birthDate) : null);\n\n    const nameEntryOfficial = patient?.name?.find((nameEntry) => nameEntry.use === 'official');\n    const nameEntryNickname = patient?.name?.find((nameEntry) => nameEntry.use === 'nickname');\n    setValue('firstName', nameEntryOfficial?.given?.[0]);\n    setValue('middleName', nameEntryOfficial?.given?.[1]);\n    setValue('lastName', nameEntryOfficial?.family);\n    setValue('preferredName', nameEntryNickname?.given?.[0]);\n    // setValue('suffix', nameEntry?.suffix?.[0]);\n\n    const telecomEntry = patient?.telecom || [];\n\n    const phoneNumbers = telecomEntry.filter((element) => element?.system?.toLowerCase() === 'phone');\n    const masterPrimaryPhone = phoneNumbers.find((element) => element.rank === 1)?.value ?? phoneNumbers?.[0]?.value;\n    const masterSecondaryPhone = phoneNumbers.find((element) => element.rank === 2)?.value;\n    setValue('primaryPhoneNumber', masterPrimaryPhone);\n    setValue('secondaryPhoneNumber', masterSecondaryPhone);\n\n    const emails = telecomEntry.filter((element) => element?.system?.toLowerCase() === 'email');\n    const masterPrimaryEmail = emails.find((element) => element.rank === 1)?.value ?? emails?.[0]?.value;\n    const masterSecondaryEmail = emails.find((element) => element.rank === 2)?.value;\n    setValue('primaryEmail', masterPrimaryEmail);\n    setValue('secondaryEmail', masterSecondaryEmail);\n\n    const addressEntry = patient?.address?.[0];\n\n    const masterAddressLineOne = addressEntry?.line?.[0];\n    const masterAddressLineTwo = addressEntry?.line?.[1];\n    setValue('addressLineOne', masterAddressLineOne);\n    setValue('addressLineTwo', masterAddressLineTwo);\n\n    const city = addressEntry?.city;\n    const state = addressEntry?.state;\n    const zipCode = addressEntry?.postalCode;\n\n    setValue('city', city);\n    setValue('state', state);\n    setValue('zipCode', zipCode);\n  }, [patient, setValue]);\n\n  // const suffixOptions = ['II', 'III', 'IV', 'Jr', 'Sr'];\n  const editPatient = useEditPatientInformationMutation();\n\n  const onSubmit = useCallback(\n    async (data: FormInputs): Promise<void> => {\n      try {\n        if (!patient?.id) {\n          throw new Error('Patient reference not provided');\n        }\n\n        setSavingData(true);\n\n        const patchedPatientData = createPatientResourcePatchData(patient, data);\n\n        // Updates Patient's master record\n        await editPatient.mutateAsync({ originalPatientData: patient, updatedPatientData: patchedPatientData });\n\n        useAppointmentStore.setState({\n          patient: { ...patchedPatientData },\n        });\n\n        onClose();\n      } catch (error) {\n        setError(true);\n        console.error('Error while editing patient information: ', error);\n      } finally {\n        setSavingData(false);\n      }\n    },\n    [patient, editPatient, onClose]\n  );\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      fullWidth\n      disableScrollLock\n      sx={{ '.MuiPaper-root': { padding: 1, width: '512px', height: '800px', maxWidth: 'initial' } }}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle\n          variant=\"h4\"\n          color=\"primary.dark\"\n          sx={{ width: '100%', py: 1, display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1 }}\n        >\n          Edit Patient Information\n          <IconButton onClick={onClose} aria-label=\"close\" sx={{ mr: -3, mt: -3 }}>\n            <CloseOutlinedIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent sx={{ overflow: 'auto' }}>\n          <FormControl fullWidth required sx={{ mt: 1 }}>\n            <TextField\n              {...register('firstName', { required: true })}\n              id=\"first-name\"\n              label=\"First Name\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!formState.errors.firstName}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <TextField\n              {...register('middleName')}\n              id=\"middle-name\"\n              label=\"Middle Name\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!formState.errors.middleName}\n            />\n          </FormControl>\n          <FormControl fullWidth required sx={{ mt: 2 }}>\n            <TextField\n              {...register('lastName', { required: true })}\n              id=\"last-name\"\n              label=\"Last Name\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!formState.errors.lastName}\n              required\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <TextField\n              {...register('preferredName')}\n              id=\"preferred-name\"\n              label=\"Preferred name\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!formState.errors.preferredName}\n            />\n          </FormControl>\n          {/* <FormControl fullWidth sx={{ mt: 2 }}>\n            <Controller\n              name={'suffix'}\n              control={control}\n              render={({ field: { value } }) => (\n                <>\n                  <InputLabel>Suffix</InputLabel>\n                  <Select\n                    value={value}\n                    label=\"Suffix\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error={!!formState.errors.suffix}\n                    defaultValue=\"\"\n                    onChange={(event) => {\n                      const selectedSuffix = event.target.value;\n                      const valueToSet = selectedSuffix && selectedSuffix.length > 0 ? selectedSuffix : '';\n                      resetField('suffix');\n                      setValue('suffix', valueToSet);\n                    }}\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    {suffixOptions.map((suffix, index) => (\n                      <MenuItem key={index} value={suffix}>\n                        {suffix}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </>\n              )}\n            />\n          </FormControl> */}\n          <FormControl fullWidth required sx={{ mt: 2 }}>\n            <Controller\n              name={'dateOfBirth'}\n              control={control}\n              render={({ field: { value } }) => (\n                <DateSearch\n                  date={value || null}\n                  setDate={(date) => setValue('dateOfBirth', date)}\n                  setIsValidDate={(valid) => {\n                    if (valid) {\n                      const val = getValues('dateOfBirth');\n                      resetField('dateOfBirth');\n                      setValue('dateOfBirth', val);\n                    } else {\n                      setFormError('dateOfBirth', { message: 'Date of birth is not valid' });\n                    }\n                  }}\n                  defaultValue={null}\n                  label=\"Date of birth\"\n                  required\n                ></DateSearch>\n              )}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }} required>\n            <Controller\n              name={'primaryPhoneNumber'}\n              control={control}\n              render={({ field: { value } }) => (\n                <PatternFormat\n                  customInput={TextField}\n                  value={value}\n                  format=\"(###) ###-####\"\n                  mask=\" \"\n                  label=\"Primary phone\"\n                  variant=\"outlined\"\n                  placeholder=\"(XXX) XXX-XXXX\"\n                  required\n                  fullWidth\n                  error={!!formState.errors.primaryPhoneNumber}\n                  helperText={formState.errors.primaryPhoneNumber ? phoneNumberErrorMessage : ''}\n                  onValueChange={(values, sourceInfo) => {\n                    if (sourceInfo.source === 'event') {\n                      const enteredPhoneNumber = values.value;\n                      const isNoValueSet = !enteredPhoneNumber || enteredPhoneNumber.length === 0;\n                      if (isNoValueSet || isValidPhoneNumber(enteredPhoneNumber)) {\n                        resetField('primaryPhoneNumber');\n                        setValue('primaryPhoneNumber', enteredPhoneNumber);\n                      } else {\n                        setFormError('primaryPhoneNumber', { message: phoneNumberErrorMessage });\n                      }\n                    }\n                  }}\n                />\n              )}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <Controller\n              name={'secondaryPhoneNumber'}\n              control={control}\n              render={({ field: { value } }) => (\n                <PatternFormat\n                  customInput={TextField}\n                  value={value}\n                  format=\"(###) ###-####\"\n                  mask=\" \"\n                  label=\"Secondary phone\"\n                  variant=\"outlined\"\n                  placeholder=\"(XXX) XXX-XXXX\"\n                  fullWidth\n                  error={!!formState.errors.secondaryPhoneNumber}\n                  helperText={formState.errors.secondaryPhoneNumber ? phoneNumberErrorMessage : ''}\n                  onValueChange={(values, sourceInfo) => {\n                    if (sourceInfo.source === 'event') {\n                      const enteredPhoneNumber = values.value;\n                      const isNoValueSet = !enteredPhoneNumber || enteredPhoneNumber.length === 0;\n                      if (isNoValueSet || isValidPhoneNumber(enteredPhoneNumber)) {\n                        resetField('secondaryPhoneNumber');\n                        setValue('secondaryPhoneNumber', enteredPhoneNumber);\n                      } else {\n                        setFormError('secondaryPhoneNumber', { message: phoneNumberErrorMessage });\n                      }\n                    }\n                  }}\n                />\n              )}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }} required>\n            <Controller\n              name={'primaryEmail'}\n              control={control}\n              render={({ field: { value } }) => (\n                <TextField\n                  label=\"Primary email\"\n                  value={value}\n                  variant=\"outlined\"\n                  error={!!formState.errors.primaryEmail}\n                  helperText={formState.errors.primaryEmail ? emailErrorMessage : ''}\n                  type=\"email\"\n                  fullWidth\n                  required\n                  onChange={(event) => {\n                    const enteredEmail = event.target.value;\n                    const isValueEntered = enteredEmail && enteredEmail.length !== 0;\n                    resetField('primaryEmail');\n                    setValue('primaryEmail', enteredEmail);\n                    if (isValueEntered && !isValidEmail(enteredEmail)) {\n                      setFormError('primaryEmail', { message: emailErrorMessage });\n                    }\n                  }}\n                />\n              )}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <Controller\n              name={'secondaryEmail'}\n              control={control}\n              render={({ field: { value } }) => (\n                <TextField\n                  label=\"Secondary email\"\n                  value={value}\n                  variant=\"outlined\"\n                  error={!!formState.errors.secondaryEmail}\n                  helperText={formState.errors.secondaryEmail ? emailErrorMessage : ''}\n                  type=\"email\"\n                  fullWidth\n                  onChange={(event) => {\n                    const enteredEmail = event.target.value;\n                    const isValueEntered = enteredEmail && enteredEmail.length !== 0;\n                    resetField('secondaryEmail');\n                    setValue('secondaryEmail', enteredEmail);\n                    if (isValueEntered && !isValidEmail(enteredEmail)) {\n                      setFormError('secondaryEmail', { message: emailErrorMessage });\n                    }\n                  }}\n                />\n              )}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }} required>\n            <TextField\n              {...register('addressLineOne')}\n              id=\"address-one\"\n              label=\"Address\"\n              variant=\"outlined\"\n              fullWidth\n              required\n              error={!!formState.errors.addressLineOne}\n            />\n          </FormControl>\n          <FormControl fullWidth sx={{ mt: 2 }}>\n            <TextField\n              {...register('addressLineTwo')}\n              id=\"address-two\"\n              label=\"Address 2\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!formState.errors.addressLineTwo}\n            />\n          </FormControl>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} sm={4} md={4}>\n              <FormControl fullWidth required>\n                <TextField\n                  {...register('city')}\n                  id=\"city\"\n                  label=\"City\"\n                  variant=\"outlined\"\n                  fullWidth\n                  required\n                  error={!!formState.errors.city}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={4} md={4}>\n              <FormControl fullWidth required>\n                <Controller\n                  name={'state'}\n                  control={control}\n                  render={({ field: { value } }) => (\n                    <Autocomplete\n                      value={value}\n                      onChange={(event, selectedState) => {\n                        setValue('state', selectedState ? selectedState : undefined);\n                      }}\n                      getOptionLabel={(state) => state || 'Unknown'}\n                      isOptionEqualToValue={(option, tempValue) => option === tempValue}\n                      options={statesDropdownOptions}\n                      renderOption={(props, option) => {\n                        return (\n                          <li {...props} key={option}>\n                            {option}\n                          </li>\n                        );\n                      }}\n                      fullWidth\n                      disableClearable={true}\n                      renderInput={(params) => <TextField name=\"state\" {...params} label=\"State\" required />}\n                    />\n                  )}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={4} md={4}>\n              <FormControl fullWidth required>\n                <Controller\n                  name={'zipCode'}\n                  control={control}\n                  render={({ field: { value } }) => (\n                    <TextField\n                      sx={{\n                        '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n                          display: 'none',\n                        },\n                        '& input[type=number]': {\n                          MozAppearance: 'textfield',\n                        },\n                      }}\n                      label=\"ZIP\"\n                      type=\"number\"\n                      value={value}\n                      variant=\"outlined\"\n                      error={!!formState.errors.zipCode}\n                      helperText={formState.errors.zipCode ? zipCodeErrorMessage : ''}\n                      fullWidth\n                      required\n                      onChange={(event) => {\n                        const enteredZipCode = event.target.value;\n                        resetField('zipCode');\n                        setValue('zipCode', enteredZipCode);\n                        if (!isValidZipCode(enteredZipCode)) {\n                          setFormError('zipCode', { message: zipCodeErrorMessage });\n                        }\n                      }}\n                    />\n                  )}\n                />\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'space-between', marginLeft: 1 }}>\n          <RoundedButton\n            sx={{ fontWeight: 500, textTransform: 'none', borderRadius: 6, ml: 1, mb: 1 }}\n            onClick={onClose}\n            color=\"primary\"\n          >\n            Cancel\n          </RoundedButton>\n          <LoadingButton\n            loading={isSavingData}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n            sx={{ fontWeight: 500, textTransform: 'none', borderRadius: 6, mr: 2, mb: 1, px: 4 }}\n            disabled={!formState.isValid}\n          >\n            Save\n          </LoadingButton>\n        </DialogActions>\n        {error && (\n          <Typography color=\"error\" variant=\"body2\" my={1} mx={2}>\n            There was an error editing this patient, please try again.\n          </Typography>\n        )}\n      </form>\n    </Dialog>\n  );\n};\n\nexport default EditPatientDialog;\n"]}