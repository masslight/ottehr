{"version":3,"file":"LabeledField.js","sourceRoot":"","sources":["LabeledField.tsx"],"names":[],"mappings":";;;AAAA,0CAAkE;AAU3D,IAAM,YAAY,GAA0B,UAAC,EAA4C;QAA1C,QAAQ,cAAA,EAAE,KAAK,WAAA,EAAE,gBAAgB,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAAE,KAAK,WAAA;IAC5F,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,sBAAW,CAAC,SAAS,CACpB;MAAA,CAAC,qBAAU,CACT,MAAM,CACN,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAEvF;QAAA,CAAC,KAAK,CACR;MAAA,EAAE,qBAAU,CACZ;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,sBAAW,CAAC,CACf,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,YAAY,gBAgBvB","sourcesContent":["import { FormControl, InputLabel, useTheme } from '@mui/material';\nimport { FC, ReactElement } from 'react';\n\ninterface LabeledFieldProps {\n  children: ReactElement<any>;\n  label: string;\n  required?: boolean;\n  error?: boolean;\n}\n\nexport const LabeledField: FC<LabeledFieldProps> = ({ children, label, required = false, error }) => {\n  const theme = useTheme();\n\n  return (\n    <FormControl fullWidth>\n      <InputLabel\n        shrink\n        required={required}\n        error={error}\n        sx={{ fontWeight: 'bold', backgroundColor: theme.palette.background.paper, px: '5px' }}\n      >\n        {label}\n      </InputLabel>\n      {children}\n    </FormControl>\n  );\n};\n"]}