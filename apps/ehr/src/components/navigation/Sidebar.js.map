{"version":3,"file":"Sidebar.js","sourceRoot":"","sources":["Sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import { KeyboardDoubleArrowRight } from '@mui/icons-material';\nimport {\n  Box,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  useTheme,\n} from '@mui/material';\nimport React, { Dispatch, FC, Fragment, ReactElement, ReactNode, SetStateAction, useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport interface SidebarItem {\n  label: string;\n  icon: ReactElement;\n  path: string;\n}\n\ninterface SidebarProps {\n  sidebarItems: SidebarItem[][];\n  sidebarOpen: boolean;\n  setSidebarOpen: Dispatch<SetStateAction<boolean>>;\n  children: ReactNode;\n}\n\nconst CLOSED_DRAWER_WIDTH = 55;\nconst DRAWER_WIDTH = 250;\n\nexport const Sidebar: FC<SidebarProps> = ({ sidebarItems, sidebarOpen, setSidebarOpen, children }) => {\n  const theme = useTheme();\n  const { pathname } = useLocation();\n\n  const selectedItem = useMemo(() => {\n    // not sure why exactly this is a nested array but just going with it for now\n    let outerIndex = 0;\n    let innerIndex = 0;\n\n    sidebarItems.forEach((list, oi) => {\n      list.forEach((item, ii) => {\n        const { path } = item;\n        if (path === pathname) {\n          outerIndex = oi;\n          innerIndex = ii;\n        }\n      });\n    });\n\n    return [outerIndex, innerIndex];\n  }, [pathname, sidebarItems]);\n\n  const sideBarOpenLabel = `${sidebarOpen ? 'Close' : 'Open'} sidebar`;\n\n  return (\n    <Box>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          '& .MuiDrawer-paper': {\n            position: 'absolute',\n            width: sidebarOpen ? DRAWER_WIDTH : CLOSED_DRAWER_WIDTH,\n            top: '81px',\n            transitionProperty: 'width',\n            transitionTimingFunction: sidebarOpen ? theme.transitions.easing.easeOut : theme.transitions.easing.sharp,\n            transitionDuration: sidebarOpen\n              ? theme.transitions.duration.leavingScreen\n              : theme.transitions.duration.enteringScreen,\n          },\n        }}\n      >\n        <Box\n          sx={{\n            pl: 1,\n          }}\n        >\n          <Tooltip title={sideBarOpenLabel} placement=\"right\">\n            <IconButton onClick={() => setSidebarOpen(!sidebarOpen)} aria-label={sideBarOpenLabel}>\n              <KeyboardDoubleArrowRight\n                sx={{\n                  transform: sidebarOpen ? 'rotate(180deg);' : 'rotate(360deg)',\n                  // transitionDuration: '500ms',\n                  transitionProperty: 'transform',\n                }}\n              />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Divider />\n        <List>\n          {sidebarItems.map((sidebarItemsSubList, outerIndex) => {\n            return (\n              <Fragment key={outerIndex}>\n                {sidebarItemsSubList.map((sidebarItem: SidebarItem, innerIndex) => {\n                  const isSelected = selectedItem[0] === outerIndex && selectedItem[1] === innerIndex;\n                  return (\n                    <ListItem sx={{ px: 0 }} key={sidebarItem.label}>\n                      <Link\n                        to={sidebarItem.path}\n                        style={{\n                          width: '100%',\n                          textDecoration: 'none',\n                          color: theme.palette.primary.main,\n                        }}\n                      >\n                        <Tooltip title={sidebarItem.label} placement=\"right\">\n                          <ListItemButton selected={isSelected}>\n                            <ListItemIcon sx={{ alignItems: 'center', minWidth: '40px' }}>\n                              {sidebarItem.icon}\n                            </ListItemIcon>\n                            <ListItemText\n                              primary={sidebarItem.label}\n                              primaryTypographyProps={{\n                                style: { fontWeight: 'bold' },\n                              }}\n                            />\n                          </ListItemButton>\n                        </Tooltip>\n                      </Link>\n                    </ListItem>\n                  );\n                })}\n                {outerIndex !== sidebarItems.length - 1 && <Divider />}\n              </Fragment>\n            );\n          })}\n        </List>\n      </Drawer>\n      <Box\n        sx={{\n          ml: sidebarOpen ? `${DRAWER_WIDTH}px` : `${CLOSED_DRAWER_WIDTH}px`,\n          pl: '20px',\n          pr: '72px',\n          transitionProperty: 'margin-left',\n          transitionTimingFunction: sidebarOpen ? theme.transitions.easing.easeOut : theme.transitions.easing.sharp,\n          transitionDuration: sidebarOpen // todo why is ms required here but not above\n            ? `${theme.transitions.duration.leavingScreen}ms`\n            : `${theme.transitions.duration.enteringScreen}ms`,\n        }}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n"]}