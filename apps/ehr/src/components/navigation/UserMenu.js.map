{"version":3,"file":"UserMenu.js","sourceRoot":"","sources":["UserMenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import WarningIcon from '@mui/icons-material/Warning';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n} from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, MouseEvent, useCallback, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPractitionerMissingFields } from 'src/shared/utils';\nimport { useCheckPractitionerEnrollment, useConnectPractitionerToERX, useEnrollPractitionerToERX } from 'src/telemed';\nimport { getFullestAvailableName, PROJECT_NAME, RoleType } from 'utils';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { ProviderNotifications } from '../../features';\nimport useEvolveUser from '../../hooks/useEvolveUser';\n\nexport const UserMenu: FC = () => {\n  const [anchorElement, setAnchorElement] = useState<HTMLElement | null>(null);\n  const user = useEvolveUser();\n  const userIsProvider = user?.hasRole([RoleType.Provider]);\n\n  const practitioner = user?.profileResource;\n\n  const practitionerMissingFields = useMemo(() => {\n    return practitioner ? getPractitionerMissingFields(practitioner) : [];\n  }, [practitioner]);\n\n  const { data: practitionerEnrollmentStatus, isFetched: isPractitionerEnrollmentChecked } =\n    useCheckPractitionerEnrollment({\n      enabled: Boolean(practitioner),\n    });\n\n  const { mutateAsync: enrollPractitioner, isLoading: isEnrollingPractitioner } = useEnrollPractitionerToERX({\n    onError: () => {\n      enqueueSnackbar('Enrolling practitioner to eRx failed', { variant: 'error' });\n    },\n  });\n\n  const { isLoading: isConnectingPractitionerForConfirmation, mutateAsync: connectPractitionerForConfirmation } =\n    useConnectPractitionerToERX({});\n\n  const handleConnectPractitioner = useCallback(async () => {\n    try {\n      await enrollPractitioner(practitioner!.id!);\n      const ssoLink = await connectPractitionerForConfirmation();\n      void Promise.resolve().then(() => window.open(ssoLink, '_blank'));\n    } catch (error) {\n      enqueueSnackbar('Something went wrong while trying to connect practitioner to eRx', { variant: 'error' });\n      console.error('Error trying to connect practitioner to eRx: ', error);\n    }\n  }, [connectPractitionerForConfirmation, enrollPractitioner, practitioner]);\n\n  const name = user?.profileResource && (getFullestAvailableName(user.profileResource, true) ?? `${PROJECT_NAME} Team`);\n  const suffix = user?.profileResource?.name?.[0]?.suffix?.[0];\n\n  return (\n    <>\n      {userIsProvider && <ProviderNotifications />}\n      <ListItem disablePadding sx={{ width: 'fit-content' }}>\n        <ListItemButton onClick={(event: MouseEvent<HTMLElement>) => setAnchorElement(event.currentTarget)}>\n          <ListItemAvatar sx={{ minWidth: 'auto', mr: { xs: '0', sm: 2 } }}>\n            <Avatar sx={{ bgcolor: 'primary.main' }} alt={name} src={user?.profileResource?.photo?.[0]?.url} />\n          </ListItemAvatar>\n          <ListItemText\n            data-testid={dataTestIds.header.userName}\n            sx={{ display: { xs: 'none', sm: 'block' } }}\n            primary={name}\n            secondary={suffix}\n          />\n        </ListItemButton>\n      </ListItem>\n      <Menu\n        id=\"user-menu\"\n        anchorEl={anchorElement}\n        open={anchorElement !== null}\n        onClose={() => setAnchorElement(null)}\n      >\n        <MenuItem>\n          <Box>\n            <Typography variant=\"body1\">{PROJECT_NAME} Admin</Typography>\n            <Typography variant=\"caption\">{user?.email}</Typography>\n          </Box>\n        </MenuItem>\n        <Divider />\n        {isPractitionerEnrollmentChecked && userIsProvider && !practitionerEnrollmentStatus?.identityVerified && (\n          <>\n            {practitionerMissingFields.length > 0 && (\n              <Box sx={{ display: 'flex', alignItems: 'center', maxWidth: 300, gap: 1, padding: '6px 16px' }}>\n                <WarningIcon fontSize=\"small\" sx={{ ml: '4px', verticalAlign: 'middle', color: 'warning.light' }} />\n                <Typography variant=\"caption\">\n                  Please complete your profile to be able to enroll in eRX or ask your administrator to complete it for\n                  you. <br /> Missing fields: {practitionerMissingFields.join(', ')}\n                </Typography>\n              </Box>\n            )}\n\n            <MenuItem\n              disabled={\n                practitionerMissingFields.length > 0 ||\n                isConnectingPractitionerForConfirmation ||\n                isEnrollingPractitioner\n              }\n              onClick={handleConnectPractitioner}\n            >\n              <Typography variant=\"body1\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\n                Enroll in eRX\n              </Typography>\n            </MenuItem>\n\n            <Divider />\n          </>\n        )}\n        <Link to=\"/logout\" style={{ textDecoration: 'none' }}>\n          <MenuItem>\n            <Typography variant=\"body1\" color=\"primary\" sx={{ fontWeight: 'bold' }}>\n              Log out\n            </Typography>\n          </MenuItem>\n        </Link>\n      </Menu>\n    </>\n  );\n};\n"]}