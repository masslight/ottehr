{"version":3,"file":"AboutPatientContainer.js","sourceRoot":"","sources":["AboutPatientContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { REQUIRED_FIELD_ERROR_MESSAGE } from 'utils';\nimport { PRONOUN_OPTIONS, SEX_OPTIONS } from '../../constants';\nimport { FormFields as AllFormFields } from '../../constants';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { BasicDatePicker as DatePicker, FormSelect, FormTextField } from '../form';\nimport { Row, Section } from '../layout';\n\nconst FormFields = AllFormFields.patientSummary;\n\nexport const AboutPatientContainer: FC = () => {\n  const { control } = useFormContext();\n\n  return (\n    <Section title=\"Patient information\">\n      <Row label=\"Last name\" inputId={FormFields.lastName.key} required>\n        <FormTextField\n          name={FormFields.lastName.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          id={FormFields.lastName.key}\n          data-testid={dataTestIds.patientInformationContainer.patientLastName}\n        />\n      </Row>\n      <Row label=\"First name\" inputId={FormFields.firstName.key} required>\n        <FormTextField\n          name={FormFields.firstName.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          id={FormFields.firstName.key}\n          data-testid={dataTestIds.patientInformationContainer.patientFirstName}\n        />\n      </Row>\n      <Row label=\"Middle name\" inputId={FormFields.middleName.key}>\n        <FormTextField\n          name={FormFields.middleName.key}\n          control={control}\n          id={FormFields.middleName.key}\n          data-testid={dataTestIds.patientInformationContainer.patientMiddleName}\n        />\n      </Row>\n      <Row label=\"Suffix\" inputId={FormFields.suffix.key}>\n        <FormTextField\n          name={FormFields.suffix.key}\n          control={control}\n          id={FormFields.suffix.key}\n          data-testid={dataTestIds.patientInformationContainer.patientSuffix}\n        />\n      </Row>\n      <Row label=\"Preferred name\" inputId={FormFields.preferredName.key}>\n        <FormTextField\n          name={FormFields.preferredName.key}\n          control={control}\n          id={FormFields.preferredName.key}\n          data-testid={dataTestIds.patientInformationContainer.patientPreferredName}\n        />\n      </Row>\n      <Row label=\"Date of birth\" inputId={FormFields.birthDate.key} required>\n        <DatePicker\n          id={FormFields.birthDate.key}\n          name={FormFields.birthDate.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          dataTestId={dataTestIds.patientInformationContainer.patientDateOfBirth}\n          component=\"Field\"\n        />\n      </Row>\n      <Row label=\"Preferred pronouns\">\n        <FormSelect\n          name={FormFields.pronouns.key}\n          control={control}\n          options={PRONOUN_OPTIONS}\n          data-testid={dataTestIds.patientInformationContainer.patientPreferredPronouns}\n        />\n      </Row>\n      <Row label=\"Birth sex\" required>\n        <FormSelect\n          name={FormFields.birthSex.key}\n          control={control}\n          options={SEX_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n          }}\n          data-testid={dataTestIds.patientInformationContainer.patientBirthSex}\n        />\n      </Row>\n    </Section>\n  );\n};\n"]}