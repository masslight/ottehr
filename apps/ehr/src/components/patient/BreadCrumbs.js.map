{"version":3,"file":"BreadCrumbs.js","sourceRoot":"","sources":["BreadCrumbs.tsx"],"names":[],"mappings":";;;AAAA,+BAAoC;AACpC,qDAA+C;AAC/C,+BAAoC;AACpC,gEAA+D;AAC/D,yCAAoD;AACpD,0DAAqD;AAE9C,IAAM,WAAW,GAAO;IAC7B,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAC/B,IAAM,WAAW,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACzD,IAAM,aAAa,GAAG,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,SAAS,CAAC;IAE1D,IAAA,OAAO,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,SAAS,CAAC,CAAC,QAAnD,CAAoD;IACnE,IAAM,QAAQ,GAAG,IAAA,eAAO,EAAC;QACvB,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAEd,OAAO,CACL,CAAC,2BAAiB,CAChB,KAAK,CAAC,CAAC;YACL,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE;YAC3C;gBACE,IAAI,EAAE,mBAAY,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,EAAE,CAAE;gBAC/B,QAAQ,EAAE,QAAQ;aACnB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,oBAAa,aAAa,CAAE;aACvC;SACF,CAAC,EACF,CACH,CAAC;AACJ,CAAC,CAAC;AA5BW,QAAA,WAAW,eA4BtB","sourcesContent":["import { FC, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getFullName } from 'utils';\nimport { getSelectors } from '../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../telemed';\nimport CustomBreadcrumbs from '../CustomBreadcrumbs';\n\nexport const BreadCrumbs: FC = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const appointmentId = queryParams.get('appointment') || undefined;\n\n  const { patient } = getSelectors(useAppointmentStore, ['patient']);\n  const fullName = useMemo(() => {\n    if (patient) {\n      return getFullName(patient);\n    }\n    return '';\n  }, [patient]);\n\n  return (\n    <CustomBreadcrumbs\n      chain={[\n        { link: '/patients', children: 'Patients' },\n        {\n          link: `/patient/${patient?.id}`,\n          children: fullName,\n        },\n        {\n          link: '#',\n          children: `Visit ID: ${appointmentId}`,\n        },\n      ]}\n    />\n  );\n};\n"]}