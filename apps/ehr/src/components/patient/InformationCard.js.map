{"version":3,"file":"InformationCard.js","sourceRoot":"","sources":["InformationCard.tsx"],"names":[],"mappings":";;;AAAA,0CAAiE;AACjE,+BAAmD;AAe5C,IAAM,eAAe,GAA6B,UAAC,EAAiC;QAA/B,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,cAAc,oBAAA;IACvF,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAChG;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CACzD;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,qBAAU,CAAC,CACd,CACD;MAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,GAAG,EAAE,CAAC;SACP,CAAC,CAEF;QAAA,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,CACpC,CAAC,gBAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CACnB;YAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;gBACF,OAAO,EAAE,MAAM;gBACf,cAAc,EAAE,eAAe;gBAC/B,GAAG,EAAE,KAAK;aACX,CAAC,CAEF;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAC9E;gBAAA,CAAC,qBAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,qBAAU,CACtF;gBAAA,CAAC,KAAK,CAAC,IAAI,CACb;cAAA,EAAE,cAAG,CACL;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAC/E;gBAAA,CAAC,qBAAU,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,qBAAU,CAC5C;gBAAA,CAAC,KAAK,CAAC,MAAM,CACf;cAAA,EAAE,cAAG,CACP;YAAA,EAAE,cAAG,CACP;UAAA,EAAE,gBAAQ,CAAC,CACZ,EAnBqC,CAmBrC,CAAC,CACJ;MAAA,EAAE,cAAG,CACL;MAAA,CAAC,cAAc,CACjB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AA1CW,QAAA,eAAe,mBA0C1B","sourcesContent":["import { Box, Paper, Typography, useTheme } from '@mui/material';\nimport { FC, Fragment, ReactElement } from 'react';\n\ntype Field = {\n  label?: string;\n  value?: string;\n  icon?: ReactElement;\n  button?: ReactElement;\n};\n\ntype InformationCardProps = {\n  title?: string;\n  fields?: Field[];\n  inPaperElement?: ReactElement;\n};\n\nexport const InformationCard: FC<InformationCardProps> = ({ title, fields, inPaperElement }) => {\n  const theme = useTheme();\n\n  return (\n    <Paper sx={{ display: 'flex', flexDirection: 'column', p: 3, gap: 2.5, alignItems: 'flex-start' }}>\n      {title && (\n        <Typography variant=\"h4\" color={theme.palette.primary.dark}>\n          {title}\n        </Typography>\n      )}\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n        }}\n      >\n        {(fields || []).map((field, index) => (\n          <Fragment key={index}>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                gap: '5px',\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: '5px', flex: '0 1 30%' }}>\n                <Typography sx={{ color: theme.palette.primary.dark }}>{field.label || ''}</Typography>\n                {field.icon}\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: '10px', flex: '1 1 70%' }}>\n                <Typography>{field.value || '-'}</Typography>\n                {field.button}\n              </Box>\n            </Box>\n          </Fragment>\n        ))}\n      </Box>\n      {inPaperElement}\n    </Paper>\n  );\n};\n"]}