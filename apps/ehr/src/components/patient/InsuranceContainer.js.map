{"version":3,"file":"InsuranceContainer.js","sourceRoot":"","sources":["InsuranceContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Autocomplete, Box, Checkbox, FormControlLabel, TextField, Typography, useTheme } from '@mui/material';\nimport { FC, ReactElement, useEffect, useMemo, useState } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { useApiClients } from 'src/hooks/useAppClients';\nimport {\n  chooseJson,\n  CoverageCheckWithDetails,\n  EligibilityCheckSimpleStatus,\n  InsurancePlanDTO,\n  isPostalCodeValid,\n  mapEligibilityCheckResultToSimpleStatus,\n  PatientPaymentBenefit,\n  REQUIRED_FIELD_ERROR_MESSAGE,\n} from 'utils';\nimport { BasicDatePicker as DatePicker, FormSelect, FormTextField } from '../../components/form';\nimport {\n  INSURANCE_COVERAGE_OPTIONS,\n  InsurancePriorityOptions,\n  PatientIdentifyingFields,\n  RELATIONSHIP_TO_INSURED_OPTIONS,\n  SEX_OPTIONS,\n  STATE_OPTIONS,\n} from '../../constants';\nimport { PatientAddressFields } from '../../constants';\nimport { FormFields as AllFormFields } from '../../constants';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { usePatientStore } from '../../state/patient.store';\nimport { Row, Section } from '../layout';\nimport { RefreshableStatusChip, StatusStyleObject } from '../RefreshableStatusWidget';\nimport { CopayWidget } from './CopayWidget';\nimport ShowMoreButton from './ShowMoreButton';\n\ntype InsuranceContainerProps = {\n  ordinal: number;\n  patientId: string;\n  initialEligibilityCheck?: CoverageCheckWithDetails;\n  removeInProgress?: boolean;\n  handleRemoveClick?: () => void;\n};\n\nexport const STATUS_TO_STYLE_MAP: Record<EligibilityCheckSimpleStatus, StatusStyleObject> = {\n  ELIGIBLE: {\n    bgColor: '#C8E6C9',\n    textColor: '#1B5E20',\n  },\n  'NOT ELIGIBLE': {\n    bgColor: '#FECDD2',\n    textColor: '#B71C1C',\n  },\n  UNKNOWN: {\n    bgColor: '#FECDD2',\n    textColor: '#B71C1C',\n  },\n};\n\nfunction mapInitialStatus(\n  initialCheckResult: CoverageCheckWithDetails | undefined\n): SimpleStatusCheckWithDate | undefined {\n  if (initialCheckResult) {\n    const status = mapEligibilityCheckResultToSimpleStatus(initialCheckResult);\n    return {\n      status: status.status,\n      dateISO: status.dateISO,\n      copay: initialCheckResult.copay,\n    };\n  }\n  return undefined;\n}\n\ninterface SimpleStatusCheckWithDate {\n  status: EligibilityCheckSimpleStatus;\n  dateISO: string;\n  copay?: PatientPaymentBenefit[];\n}\n\nexport const InsuranceContainer: FC<InsuranceContainerProps> = ({\n  ordinal,\n  patientId,\n  removeInProgress,\n  initialEligibilityCheck,\n  handleRemoveClick,\n}) => {\n  //console.log('insuranceId', insuranceId);\n  const theme = useTheme();\n  const { insurancePlans } = usePatientStore();\n\n  const [showMoreInfo, setShowMoreInfo] = useState(false);\n\n  const [eligibilityStatus, setEligibilityStatus] = useState<SimpleStatusCheckWithDate | undefined>(\n    mapInitialStatus(initialEligibilityCheck)\n  );\n\n  const { control, setValue, watch } = useFormContext();\n\n  const { FormFields, LocalAddressFields, LocalIdentifyingFields } = useMemo(() => {\n    const FormFields = AllFormFields.insurance[ordinal - 1];\n\n    const LocalAddressFields = [\n      FormFields.streetAddress.key,\n      FormFields.addressLine2.key,\n      FormFields.city.key,\n      FormFields.state.key,\n      FormFields.zip.key,\n    ];\n\n    const LocalIdentifyingFields = [\n      FormFields.firstName.key,\n      FormFields.middleName.key,\n      FormFields.lastName.key,\n      FormFields.birthDate.key,\n      FormFields.birthSex.key,\n    ];\n    return { FormFields, LocalAddressFields, LocalIdentifyingFields };\n  }, [ordinal]);\n\n  const patientAddressData = watch(PatientAddressFields);\n  const patientIdentifyingData = watch(PatientIdentifyingFields);\n  const localAddressData = watch(LocalAddressFields);\n  const localIdentifyingData = watch(LocalIdentifyingFields);\n  const selfSelected = watch(FormFields.relationship.key) === 'Self';\n  const insurancePriority = watch(FormFields.insurancePriority.key);\n  const sameAsPatientAddress = watch(FormFields.policyHolderAddressAsPatient.key, false);\n\n  useEffect(() => {\n    if (sameAsPatientAddress || selfSelected) {\n      for (let i = 0; i < localAddressData.length; i++) {\n        if (patientAddressData[i] && localAddressData[i] !== patientAddressData[i]) {\n          setValue(LocalAddressFields[i], patientAddressData[i]);\n        }\n      }\n      if (selfSelected) {\n        for (let i = 0; i < localIdentifyingData.length; i++) {\n          if (patientIdentifyingData[i] && localIdentifyingData[i] !== patientIdentifyingData[i]) {\n            setValue(LocalIdentifyingFields[i], patientIdentifyingData[i]);\n          }\n        }\n      }\n    }\n  }, [\n    LocalAddressFields,\n    LocalIdentifyingFields,\n    localAddressData,\n    localIdentifyingData,\n    patientAddressData,\n    patientIdentifyingData,\n    sameAsPatientAddress,\n    selfSelected,\n    setValue,\n  ]);\n\n  const toggleMoreInfo = (): void => {\n    setShowMoreInfo((prev) => !prev);\n  };\n\n  const handleRemoveInsurance = (): void => {\n    handleRemoveClick?.();\n  };\n\n  const { oystehrZambda } = useApiClients();\n\n  const recheckEligibility = useMutation(async () => {\n    // todo: show an alert when form has unsaved changes?\n    const coverageToCheck = insurancePriority?.toLowerCase();\n    try {\n      return oystehrZambda?.zambda\n        .execute({\n          id: 'get-eligibility',\n          patientId,\n          coverageToCheck: coverageToCheck,\n        })\n        .then((res) => {\n          console.log('eligibility check result');\n          const json = chooseJson(res);\n          if (coverageToCheck === 'secondary') {\n            return mapEligibilityCheckResultToSimpleStatus(json.secondary);\n          } else {\n            return mapEligibilityCheckResultToSimpleStatus(json.primary);\n          }\n        });\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  });\n\n  const handleRecheckEligibility = async (): Promise<void> => {\n    console.log('recheck eligibility', recheckEligibility);\n    try {\n      const result = await recheckEligibility.mutateAsync();\n      if (result) {\n        setEligibilityStatus(result);\n      } else {\n        console.error('Error rechecking eligibility:', 'No result returned');\n      }\n      console.log('Eligibility check result:', result);\n    } catch (error) {\n      console.error('Error rechecking eligibility:', error);\n    }\n  };\n\n  const TitleWidget = (): ReactElement => {\n    return (\n      <RefreshableStatusChip\n        status={eligibilityStatus?.status ?? 'UNKNOWN'}\n        lastRefreshISO={eligibilityStatus?.dateISO ?? ''}\n        styleMap={STATUS_TO_STYLE_MAP}\n        isRefreshing={recheckEligibility.isLoading}\n        handleRefresh={handleRecheckEligibility}\n      />\n    );\n  };\n\n  const copayBenefits = eligibilityStatus?.copay ?? [];\n\n  return (\n    <Section title=\"Insurance information\" dataTestId=\"insuranceContainer\" titleWidget={<TitleWidget />}>\n      <Box\n        sx={{\n          marginLeft: '12px',\n          marginTop: 2,\n        }}\n      >\n        <CopayWidget copay={copayBenefits} />\n      </Box>\n      <Row label=\"Type\" required dataTestId={dataTestIds.insuranceContainer.type}>\n        <FormSelect\n          name={FormFields.insurancePriority.key}\n          control={control}\n          defaultValue={ordinal === 1 ? 'Primary' : 'Secondary'}\n          options={INSURANCE_COVERAGE_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n            validate: (value, context) => {\n              // todo: this validation concept would be good to lift into the paperwork validation engine\n              const otherGroupKey = InsurancePriorityOptions.find((key) => key !== FormFields.insurancePriority.key);\n              let otherGroupValue: 'Primary' | 'Secondary' | undefined;\n              if (otherGroupKey) {\n                otherGroupValue = context[otherGroupKey];\n              }\n              if (otherGroupValue === value) {\n                return `Account may not have two ${value.toLowerCase()} insurance plans`;\n              }\n              return true;\n            },\n          }}\n        />\n      </Row>\n      <Row label=\"Insurance carrier\" required dataTestId={dataTestIds.insuranceContainer.insuranceCarrier}>\n        <Controller\n          name={FormFields.insuranceCarrier.key}\n          control={control}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n            validate: (value) => insurancePlans.some((option) => `Organization/${option.id}` === value?.reference),\n          }}\n          render={({ field: { value }, fieldState: { error } }) => {\n            const isLoading = insurancePlans.length === 0;\n\n            const selectedOption = insurancePlans.find((option) => `Organization/${option.id}` === value?.reference);\n            return (\n              <Autocomplete\n                options={insurancePlans}\n                loading={isLoading}\n                loadingText={'Loading...'}\n                value={selectedOption ?? ({} as InsurancePlanDTO)}\n                isOptionEqualToValue={(option, value) => {\n                  return option?.id === value?.id;\n                }}\n                getOptionLabel={(option) => option.name || ''}\n                onChange={(_, newValue) => {\n                  if (newValue) {\n                    setValue(\n                      FormFields.insuranceCarrier.key,\n                      { reference: `Organization/${newValue.id}`, display: newValue.name },\n                      { shouldDirty: true }\n                    );\n                  } else {\n                    setValue(FormFields.insuranceCarrier.key, null);\n                  }\n                }}\n                disableClearable\n                fullWidth\n                renderInput={(params) => (\n                  <TextField {...params} variant=\"standard\" error={!!error} required helperText={error?.message} />\n                )}\n              />\n            );\n          }}\n        />\n      </Row>\n      <Row\n        label=\"Member ID\"\n        required\n        inputId={FormFields.memberId.key}\n        dataTestId={dataTestIds.insuranceContainer.memberId}\n      >\n        <FormTextField\n          id={FormFields.memberId.key}\n          name={FormFields.memberId.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n        />\n      </Row>\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <ShowMoreButton\n          onClick={toggleMoreInfo}\n          isOpen={showMoreInfo}\n          dataTestId={dataTestIds.insuranceContainer.showMoreButton}\n        />\n      </Box>\n      {showMoreInfo && (\n        <>\n          <Row\n            label=\"Policy holder's first name\"\n            required\n            inputId={FormFields.firstName.key}\n            dataTestId={dataTestIds.insuranceContainer.policyHoldersFirstName}\n          >\n            <FormTextField\n              id={FormFields.firstName.key}\n              name={FormFields.firstName.key}\n              disabled={selfSelected}\n              control={control}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n            />\n          </Row>\n          <Row\n            label=\"Policy holder's middle name\"\n            inputId={FormFields.middleName.key}\n            dataTestId={dataTestIds.insuranceContainer.policyHoldersMiddleName}\n          >\n            <FormTextField\n              id={FormFields.middleName.key}\n              name={FormFields.middleName.key}\n              control={control}\n              disabled={selfSelected}\n            />\n          </Row>\n          <Row\n            label=\"Policy holder's last name\"\n            required\n            inputId={FormFields.lastName.key}\n            dataTestId={dataTestIds.insuranceContainer.policyHoldersLastName}\n          >\n            <FormTextField\n              id={FormFields.lastName.key}\n              name={FormFields.lastName.key}\n              disabled={selfSelected}\n              control={control}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n            />\n          </Row>\n          <Row\n            label=\"Policy holder's date of birth\"\n            required\n            dataTestId={dataTestIds.insuranceContainer.policyHoldersDateOfBirth}\n          >\n            <DatePicker\n              name={FormFields.birthDate.key}\n              control={control}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n              disabled={selfSelected}\n            />\n          </Row>\n          <Row label=\"Policy holder's sex\" required dataTestId={dataTestIds.insuranceContainer.policyHoldersSex}>\n            <FormSelect\n              name={FormFields.birthSex.key}\n              control={control}\n              options={SEX_OPTIONS}\n              disabled={selfSelected}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n            />\n          </Row>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', gap: '5px' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: '0px' }}>\n              <Controller\n                key={sameAsPatientAddress}\n                name={FormFields.policyHolderAddressAsPatient.key}\n                control={control}\n                render={({ field: { value, ...field } }) => (\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        {...field}\n                        data-testid={dataTestIds.insuranceContainer.policyHolderAddressCheckbox}\n                        checked={value}\n                        onChange={(e) => {\n                          const checked = (e.target as HTMLInputElement).checked;\n                          setValue(FormFields.policyHolderAddressAsPatient.key, checked, { shouldDirty: true });\n                        }}\n                        disabled={selfSelected}\n                      />\n                    }\n                    label={<Typography>Policy holder address is the same as patient's address</Typography>}\n                  />\n                )}\n              />\n            </Box>\n          </Box>\n          <Row\n            label=\"Street address\"\n            inputId={FormFields.streetAddress.key}\n            required\n            dataTestId={dataTestIds.insuranceContainer.streetAddress}\n          >\n            <FormTextField\n              id={FormFields.streetAddress.key}\n              name={FormFields.streetAddress.key}\n              disabled={(sameAsPatientAddress || selfSelected) && Boolean(patientAddressData[0])}\n              control={control}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n            />\n          </Row>\n          <Row\n            label=\"Address line 2\"\n            inputId={FormFields.addressLine2.key}\n            dataTestId={dataTestIds.insuranceContainer.addressLine2}\n          >\n            <FormTextField\n              id={FormFields.addressLine2.key}\n              name={FormFields.addressLine2.key}\n              disabled={sameAsPatientAddress || selfSelected}\n              control={control}\n            />\n          </Row>\n          <Row label=\"City, State, ZIP\" required>\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <FormTextField\n                data-testid={dataTestIds.insuranceContainer.city}\n                name={FormFields.city.key}\n                disabled={(sameAsPatientAddress || selfSelected) && Boolean(patientAddressData[2])}\n                control={control}\n                rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n              />\n              <Controller\n                name={FormFields.state.key}\n                control={control}\n                rules={{\n                  required: REQUIRED_FIELD_ERROR_MESSAGE,\n                }}\n                render={({ field: { value }, fieldState: { error } }) => {\n                  return (\n                    <Autocomplete\n                      options={STATE_OPTIONS.map((option) => option.value)}\n                      disabled={(sameAsPatientAddress || selfSelected) && Boolean(patientAddressData[3])}\n                      value={value ?? ''}\n                      onChange={(_, newValue) => {\n                        if (newValue) {\n                          setValue(FormFields.state.key, newValue);\n                        } else {\n                          setValue(FormFields.state.key, '');\n                        }\n                      }}\n                      disableClearable\n                      fullWidth\n                      renderInput={(params) => (\n                        <TextField\n                          data-testid={dataTestIds.insuranceContainer.state}\n                          {...params}\n                          variant=\"standard\"\n                          error={!!error}\n                          required\n                          helperText={error?.message}\n                        />\n                      )}\n                    />\n                  );\n                }}\n              />\n              <FormTextField\n                data-testid={dataTestIds.insuranceContainer.zip}\n                name={FormFields.zip.key}\n                control={control}\n                disabled={(sameAsPatientAddress || selfSelected) && Boolean(patientAddressData[4])}\n                rules={{\n                  validate: (value: string) => isPostalCodeValid(value) || 'Must be 5 digits',\n                  required: REQUIRED_FIELD_ERROR_MESSAGE,\n                }}\n              />\n            </Box>\n          </Row>\n          <Row\n            label=\"Patient’s relationship to insured\"\n            required\n            dataTestId={dataTestIds.insuranceContainer.relationship}\n          >\n            <FormSelect\n              name={FormFields.relationship.key}\n              control={control}\n              options={RELATIONSHIP_TO_INSURED_OPTIONS}\n              rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n            />\n          </Row>\n          <Row\n            label=\"Additional insurance information\"\n            inputId={FormFields.additionalInformation.key}\n            dataTestId={dataTestIds.insuranceContainer.additionalInformation}\n          >\n            <FormTextField\n              id={FormFields.additionalInformation.key}\n              name={FormFields.additionalInformation.key}\n              control={control}\n            />\n          </Row>\n          <LoadingButton\n            data-testid={dataTestIds.insuranceContainer.removeButton}\n            onClick={handleRemoveInsurance}\n            variant=\"text\"\n            loading={removeInProgress}\n            sx={{\n              color: theme.palette.error.main,\n              textTransform: 'none',\n              fontSize: '13px',\n              fontWeight: 500,\n              display: handleRemoveClick !== undefined ? 'flex' : 'none',\n              alignItems: 'center',\n              justifyContent: 'flex-start',\n              padding: '0',\n              width: 'fit-content',\n            }}\n          >\n            Remove This Insurance\n          </LoadingButton>\n        </>\n      )}\n    </Section>\n  );\n};\n"]}