{"version":3,"file":"PatientDetailsContainer.js","sourceRoot":"","sources":["PatientDetailsContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Divider, MenuItem, Select, Typography, useTheme } from '@mui/material';\nimport { HumanName, Patient } from 'fhir/r4b';\nimport { FC, useState } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { LANGUAGE_OPTIONS, REQUIRED_FIELD_ERROR_MESSAGE } from 'utils';\nimport {\n  ETHNICITY_OPTIONS,\n  GENDER_IDENTITY_OPTIONS,\n  POINT_OF_DISCOVERY_OPTIONS,\n  RACE_OPTIONS,\n  SEXUAL_ORIENTATION_OPTIONS,\n} from '../../constants';\nimport { FormFields as AllFormFields } from '../../constants';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { FormSelect, FormTextField } from '../form';\nimport { Row, Section } from '../layout';\nimport ShowMoreButton from './ShowMoreButton';\n\nconst FormFields = AllFormFields.patientDetails;\ninterface PatientDetailsContainerProps {\n  patient: Patient;\n}\nexport const PatientDetailsContainer: FC<PatientDetailsContainerProps> = ({ patient }) => {\n  const theme = useTheme();\n  const { control, watch } = useFormContext();\n\n  const [showAllPreviousNames, setShowAllPreviousNames] = useState(false);\n\n  if (!patient) return null;\n\n  const previousNames = patient.name?.filter((name) => name.use === 'old').reverse() || [];\n\n  const genderIdentityCurrentValue = watch(FormFields.genderIdentity.key);\n  const isNonBinaryGender = genderIdentityCurrentValue === 'Non-binary gender identity';\n\n  return (\n    <Section title=\"Patient details\">\n      <Row label=\"Previous name\">\n        {previousNames.length > 0 ? (\n          <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1, width: '100%' }}>\n            <Box sx={{ width: '100%' }}>\n              <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between' }}>\n                <Typography component=\"span\">{formatFullName(previousNames[0])}</Typography>\n                {previousNames.length > 1 && (\n                  <ShowMoreButton\n                    isOpen={showAllPreviousNames}\n                    onClick={() => setShowAllPreviousNames(!showAllPreviousNames)}\n                  />\n                )}\n              </Box>\n              <Divider />\n            </Box>\n            {showAllPreviousNames &&\n              previousNames.length > 1 &&\n              previousNames.slice(1).map((name, index) => (\n                <Box key={index} sx={{ width: '100%' }}>\n                  <Typography sx={{ pb: 0.5 }}>{formatFullName(name)}</Typography>\n                  <Divider />\n                </Box>\n              ))}\n          </Box>\n        ) : (\n          <Typography color=\"text.secondary\">No previous names</Typography>\n        )}\n      </Row>\n      <Row label=\"Patient's ethnicity\" dataTestId={dataTestIds.patientDetailsContainer.patientsEthnicity} required>\n        <FormSelect\n          name={FormFields.ethnicity.key}\n          control={control}\n          options={ETHNICITY_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n          }}\n        />\n      </Row>\n      <Row label=\"Patient's race\" dataTestId={dataTestIds.patientDetailsContainer.patientsRace} required>\n        <FormSelect\n          name={FormFields.race.key}\n          control={control}\n          options={RACE_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n          }}\n        />\n      </Row>\n      <Row label=\"Sexual orientation\" dataTestId={dataTestIds.patientDetailsContainer.sexualOrientation}>\n        <FormSelect name={FormFields.sexualOrientation.key} control={control} options={SEXUAL_ORIENTATION_OPTIONS} />\n      </Row>\n      <Row label=\"Gender identity\" dataTestId={dataTestIds.patientDetailsContainer.genderIdentity}>\n        <FormSelect name={FormFields.genderIdentity.key} control={control} options={GENDER_IDENTITY_OPTIONS} />\n      </Row>\n      {isNonBinaryGender && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: '5px',\n          }}\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', alignSelf: 'end', flex: '0 1 70%' }}>\n            <FormTextField\n              name={FormFields.genderIdentityDetails.key}\n              data-testid={dataTestIds.patientDetailsContainer.pleaseSpecifyField}\n              control={control}\n              rules={{\n                validate: (value: string) => {\n                  if (!value && isNonBinaryGender) return REQUIRED_FIELD_ERROR_MESSAGE;\n                  return true;\n                },\n              }}\n            />\n          </Box>\n        </Box>\n      )}\n      <Row label=\"How did you hear about us?\" dataTestId={dataTestIds.patientDetailsContainer.howDidYouHearAboutUs}>\n        <FormSelect name={FormFields.pointOfDiscovery.key} control={control} options={POINT_OF_DISCOVERY_OPTIONS} />\n      </Row>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          gap: '5px',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '0 1 30%' }}>\n          <Typography sx={{ color: theme.palette.primary.dark }}>Send marketing messages</Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '1 1 70%' }}>\n          <Controller\n            name={FormFields.sendMarketing.key}\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                value={String(field.value) || ''}\n                variant=\"standard\"\n                sx={{ width: '100%' }}\n                onChange={(e) => {\n                  const boolValue = e.target.value === 'true';\n                  field.onChange(boolValue);\n                }}\n                data-testid={dataTestIds.patientDetailsContainer.sendMarketingMessages}\n              >\n                {[\n                  { value: 'true', label: 'Yes' },\n                  { value: 'false', label: 'No' },\n                ].map((option) => (\n                  <MenuItem key={String(option.value)} value={String(option.value)}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          gap: '5px',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '0 1 30%' }}>\n          <Typography sx={{ color: theme.palette.primary.dark }}>Preferred language</Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '1 1 70%' }}>\n          <Controller\n            name={FormFields.language.key}\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                value={field.value || ''}\n                variant=\"standard\"\n                sx={{ width: '100%' }}\n                data-testid={dataTestIds.patientDetailsContainer.preferredLanguage}\n              >\n                {Object.entries(LANGUAGE_OPTIONS).map(([key, value]) => (\n                  <MenuItem key={value} value={value}>\n                    {key}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          gap: '5px',\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '0 1 30%' }}>\n          <Typography sx={{ color: theme.palette.primary.dark }}>CommonWell consent</Typography>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', flex: '1 1 70%' }}>\n          <Controller\n            name={FormFields.commonWellConsent.key}\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                value={String(field.value) || ''}\n                variant=\"standard\"\n                sx={{ width: '100%' }}\n                onChange={(e) => {\n                  const boolValue = e.target.value === 'true';\n                  field.onChange(boolValue);\n                }}\n                data-testid={dataTestIds.patientDetailsContainer.commonWellConsent}\n              >\n                {[\n                  { value: 'true', label: 'Yes' },\n                  { value: 'false', label: 'No' },\n                ].map((option) => (\n                  <MenuItem key={String(option.value)} value={String(option.value)}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n          />\n        </Box>\n      </Box>\n    </Section>\n  );\n};\n\nconst formatFullName = (name: HumanName): string => {\n  const components = [\n    name.given?.join(' '), // Combines all given names (first + middle)\n    name.family,\n    name.suffix?.join(' '), // Combines all suffixes\n  ].filter(Boolean); // Remove any undefined/null values\n\n  return components.join(' ');\n};\n"]}