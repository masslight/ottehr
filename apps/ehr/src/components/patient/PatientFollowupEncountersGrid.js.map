{"version":3,"file":"PatientFollowupEncountersGrid.js","sourceRoot":"","sources":["PatientFollowupEncountersGrid.tsx"],"names":[],"mappings":"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","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport { Box, Chip, Paper, Stack, Typography } from '@mui/material';\nimport { DataGridPro, GridColDef, GridRowParams } from '@mui/x-data-grid-pro';\nimport Oystehr from '@oystehr/sdk';\nimport { Encounter, Patient } from 'fhir/r4b';\nimport { FC, ReactElement, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { FOLLOWUP_SYSTEMS } from 'utils';\nimport { formatISOStringToDateAndTime } from '../../helpers/formatDateTime';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport { RoundedButton } from '../RoundedButton';\n\ntype PatientEncountersGridProps = {\n  patient?: Patient;\n  loading: boolean;\n};\n\ninterface ColorScheme {\n  bg: string;\n  text: string;\n}\n\ntype StatusType = 'OPEN' | 'RESOLVED';\n\nconst statusColors: Record<StatusType, ColorScheme> = {\n  OPEN: { bg: '#b3e5fc', text: '#01579B' },\n  RESOLVED: { bg: '#c8e6c9', text: '#1b5e20' },\n};\n\nconst StatusChip = styled(Chip)(() => ({\n  borderRadius: '8px',\n  padding: '0 9px',\n  margin: 0,\n  height: '24px',\n  '& .MuiChip-label': {\n    padding: 0,\n    fontWeight: 'bold',\n    fontSize: '0.7rem',\n  },\n  '& .MuiChip-icon': {\n    marginLeft: 'auto',\n    marginRight: '-4px',\n    order: 1,\n  },\n}));\n\nexport const getFollowupStatusChip = (status: 'OPEN' | 'RESOLVED'): ReactElement => {\n  const statusVal =\n    status === 'OPEN'\n      ? { statusText: 'OPEN', statusColors: statusColors.OPEN }\n      : { statusText: 'RESOLVED', statusColors: statusColors.RESOLVED };\n  return (\n    <StatusChip\n      label={statusVal.statusText}\n      sx={{\n        backgroundColor: statusVal.statusColors.bg,\n        color: statusVal.statusColors.text,\n        '& .MuiSvgIcon-root': {\n          color: 'inherit',\n          fontSize: '1.2rem',\n          margin: '0 -4px 0 2px',\n        },\n      }}\n    />\n  );\n};\n\nconst columns: GridColDef<Encounter>[] = [\n  {\n    sortable: false,\n    field: 'dateTime',\n    headerName: 'Date & Time',\n    flex: 1,\n    valueGetter: ({ row: { period } }) => period?.start || null,\n    renderCell: ({ value }) => {\n      if (!value) return '-';\n      return formatISOStringToDateAndTime(value);\n    },\n  },\n  {\n    sortable: false,\n    field: 'type',\n    headerName: 'Type',\n    flex: 1,\n    renderCell: ({ row: { type } }) => {\n      const typeCoding = type?.find(\n        (t) => t.coding?.find((c) => c.system === FOLLOWUP_SYSTEMS.type.url && c.code === FOLLOWUP_SYSTEMS.type.code)\n      );\n      let typeText = '-';\n      if (typeCoding?.text) {\n        typeText = typeCoding?.text;\n      }\n      return <Typography variant=\"body2\">{typeText}</Typography>;\n    },\n  },\n  {\n    sortable: false,\n    field: 'reason',\n    headerName: 'Reason',\n    flex: 1,\n    renderCell: ({ row: { reasonCode } }) => {\n      if (!reasonCode) {\n        return;\n      }\n      // const reasonDisplay = encounter.reasonCode ? encounter.reasonCode[0].text : '-';\n      return <Typography variant=\"body2\">{reasonCode[0].text}</Typography>;\n    },\n  },\n  {\n    sortable: false,\n    field: 'answered',\n    headerName: 'Answered',\n    flex: 1,\n    renderCell: ({ row: { participant } }) => {\n      const answered = participant?.find(\n        (p) => p.type?.find((t) => t.coding?.find((c) => c.system === FOLLOWUP_SYSTEMS.answeredUrl))\n      )?.type?.[0].coding?.[0].display;\n      const answeredText = answered ? answered : '-';\n      return <Typography variant=\"body2\">{answeredText}</Typography>;\n    },\n  },\n  {\n    sortable: false,\n    field: 'caller',\n    headerName: 'Caller',\n    flex: 1,\n    renderCell: ({ row: { participant } }) => {\n      const caller = participant?.find(\n        (p) => p.type?.find((t) => t.coding?.find((c) => c.system === FOLLOWUP_SYSTEMS.callerUrl))\n      )?.type?.[0].coding?.[0].display;\n      const callerText = caller ? caller : '-';\n      return <Typography variant=\"body2\">{callerText}</Typography>;\n    },\n  },\n  {\n    sortable: false,\n    field: 'status',\n    headerName: 'Status',\n    flex: 0.5,\n    renderCell: ({ row: { status } }) => {\n      if (!status) {\n        return;\n      }\n      const statusVal = status === 'in-progress' ? 'OPEN' : 'RESOLVED';\n      return getFollowupStatusChip(statusVal);\n    },\n  },\n];\n\nexport const PatientFollowupEncountersGrid: FC<PatientEncountersGridProps> = (props) => {\n  const { patient, loading } = props;\n  const { oystehr } = useApiClients();\n  const [followupEncounters, setFollowupEncounters] = useState<Encounter[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function getPatientFollowup(oystehr: Oystehr): Promise<void> {\n      try {\n        const fhirEncounters = (\n          await oystehr.fhir.search<Encounter>({\n            resourceType: 'Encounter',\n            params: [\n              {\n                name: '_sort',\n                value: '-date',\n              },\n              {\n                name: 'subject',\n                value: `Patient/${patient?.id}`,\n              },\n              {\n                name: 'type',\n                value: FOLLOWUP_SYSTEMS.type.code,\n              },\n            ],\n          })\n        ).unbundle();\n        setFollowupEncounters(fhirEncounters);\n      } catch (e) {\n        console.error('error loading encounters', e);\n      }\n    }\n\n    if (oystehr) {\n      void getPatientFollowup(oystehr);\n    }\n  }, [oystehr, patient]);\n\n  const handleRowClick = (params: GridRowParams): void => {\n    navigate(`followup/${params.id}`);\n  };\n\n  return (\n    <Paper sx={{ padding: 3 }} component={Stack} spacing={2}>\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        <Typography variant=\"h4\" color=\"primary.dark\" sx={{ flexGrow: 1 }}>\n          Patient Follow-up\n        </Typography>\n        <RoundedButton\n          onClick={() => navigate('followup/add')}\n          variant=\"contained\"\n          startIcon={<AddIcon fontSize=\"small\" />}\n        >\n          New Follow-up\n        </RoundedButton>\n      </Box>\n\n      <DataGridPro\n        rows={followupEncounters}\n        columns={columns}\n        initialState={{\n          pagination: {\n            paginationModel: {\n              pageSize: 5,\n            },\n          },\n          sorting: {\n            sortModel: [{ field: 'dateTime', sort: 'desc' }],\n          },\n        }}\n        autoHeight\n        loading={loading}\n        pagination\n        disableColumnMenu\n        pageSizeOptions={[5]}\n        disableRowSelectionOnClick\n        sx={{\n          border: 0,\n          '.MuiDataGrid-columnHeaderTitle': {\n            fontWeight: 500,\n          },\n          cursor: 'pointer',\n        }}\n        onRowClick={handleRowClick}\n      />\n    </Paper>\n  );\n};\n"]}