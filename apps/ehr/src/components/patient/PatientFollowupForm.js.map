{"version":3,"file":"PatientFollowupForm.js","sourceRoot":"","sources":["PatientFollowupForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  lighten,\n  Paper,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { DatePicker, TimePicker } from '@mui/x-date-pickers';\nimport { AdapterLuxon } from '@mui/x-date-pickers/AdapterLuxon';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport Oystehr from '@oystehr/sdk';\nimport { Patient } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LocationWithWalkinSchedule } from 'src/pages/AddPatient';\nimport {\n  FOLLOWUP_TYPES,\n  FollowupReason,\n  FollowupType,\n  NON_BILLABLE_REASONS,\n  PatientFollowupDetails,\n  ProviderDetails,\n  SLUG_SYSTEM,\n  TELEPHONE_REASONS,\n} from 'utils';\nimport { getEmployees, saveFollowup } from '../../api/api';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport LocationSelect from '../LocationSelect';\n\ninterface PatientFollowupFormProps {\n  patient: Patient | undefined;\n  followupStatus: 'RESOLVED' | 'OPEN' | 'NEW';\n  setFollowupStatus?: any;\n  followupDetails?: PatientFollowupDetails;\n}\n\nexport default function PatientFollowupForm({\n  patient,\n  followupDetails,\n  followupStatus,\n  setFollowupStatus,\n}: PatientFollowupFormProps): JSX.Element {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { oystehrZambda } = useApiClients();\n\n  const patientId = patient?.id;\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const storedLocation = localStorage?.getItem('selectedLocation');\n  const parsedStoredLocation = storedLocation ? JSON.parse(storedLocation) : undefined;\n  const [selectedLocation, setSelectedLocation] = useState<LocationWithWalkinSchedule | undefined>(\n    followupDetails?.location ? followupDetails?.location : parsedStoredLocation\n  );\n  const [reasonOptions, setReasonOptions] = useState<FollowupReason[]>(\n    followupDetails?.followupType\n      ? followupDetails.followupType === 'Non-Billable'\n        ? [...NON_BILLABLE_REASONS]\n        : [...TELEPHONE_REASONS]\n      : []\n  );\n  const [providers, setProviders] = useState<ProviderDetails[]>([]);\n\n  const [followupType, setFollowupType] = useState<FollowupType | null>(followupDetails?.followupType || null);\n  const [followupReason, setFollowupReason] = useState<FollowupReason | null>(followupDetails?.reason || null);\n  const [answered, setAnswered] = useState<string>(followupDetails?.answered || '');\n  const [caller, setCaller] = useState<string>(followupDetails?.caller || '');\n  const [followupDate, setFollowupDate] = useState<DateTime>(\n    followupDetails?.start ? DateTime.fromISO(followupDetails.start) : DateTime.now()\n  );\n  const [provider, setProvider] = useState<ProviderDetails | null>(followupDetails?.provider || null);\n  const [resolved, setResolved] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(followupDetails?.message || '');\n\n  useEffect(() => {\n    const locationSlug = selectedLocation?.identifier?.find((identifierTemp) => identifierTemp.system === SLUG_SYSTEM)\n      ?.value;\n    const locationState = selectedLocation?.address?.state;\n    if (!locationSlug || !locationState) {\n      console.log(\n        'show some toast: location is missing slug or address.state',\n        selectedLocation,\n        locationSlug,\n        locationState\n      );\n      return;\n    }\n  }, [selectedLocation]);\n\n  useEffect(() => {\n    const getAndSetProviders = async (client: Oystehr): Promise<void> => {\n      const getEmployeesRes = await getEmployees(client);\n      const providers = getEmployeesRes.employees.filter((employee) => employee.isProvider);\n      const formattedProviders: ProviderDetails[] = providers.map((prov) => {\n        const id = prov.profile.split('/')[1];\n        return {\n          practitionerId: id,\n          name: `${prov.firstName} ${prov.lastName}`,\n        };\n      });\n      setProviders(formattedProviders);\n    };\n    if (oystehrZambda && providers.length === 0) {\n      void getAndSetProviders(oystehrZambda);\n    }\n  }, [oystehrZambda, providers]);\n\n  const handleTypeChange = (event: any, newValue: any): void => {\n    const type = newValue;\n    if (!type) {\n      setReasonOptions([]);\n      setFollowupReason(null);\n    } else {\n      setReasonOptions(type === 'Telephone Encounter' ? [...TELEPHONE_REASONS] : [...NON_BILLABLE_REASONS]);\n      if (followupType && type !== followupType) setFollowupReason(null);\n    }\n    setFollowupType(type);\n  };\n\n  const handleReasonChange = (event: any, newValue: any): void => {\n    const selectedReason = newValue;\n    setFollowupReason(selectedReason);\n  };\n\n  const handleFormSubmit = async (event: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    event.preventDefault();\n    setLoading(true);\n    let apiErr = false;\n    let errorMessage = '';\n\n    try {\n      if (!oystehrZambda) throw new Error('Zambda client not found');\n      if (!followupType || !patientId) {\n        errorMessage = `Required input fields are missing: ${!followupType ? 'Type, ' : ''} ${\n          !patientId ? 'Patient Id, ' : ''\n        }`;\n        throw new Error(errorMessage);\n      }\n      const encounterDetails: PatientFollowupDetails = {\n        encounterId: followupDetails?.encounterId,\n        followupType,\n        patientId,\n        reason: (followupReason as FollowupReason) || undefined,\n        answered,\n        caller,\n        resolved,\n        message,\n        start: followupDate.toISO() || '',\n        end: resolved ? DateTime.now().toISO() : undefined,\n        location: selectedLocation,\n        provider: provider || undefined,\n      };\n\n      const res = await saveFollowup(oystehrZambda, { encounterDetails });\n      if (res.encounterId && resolved && setFollowupStatus) {\n        setFollowupStatus('RESOLVED');\n      }\n      navigate(`/patient/${patientId}`, { state: { defaultTab: 'followups' } });\n    } catch (error) {\n      console.error(`Failed to add patient followup: ${error}`);\n      if (!errorMessage) errorMessage = `Failed to add patient followup: ${error}`;\n      enqueueSnackbar(errorMessage, { variant: 'error' });\n      apiErr = true;\n    } finally {\n      setLoading(false);\n      if (!apiErr) {\n        enqueueSnackbar('Followup saved successfully!', { variant: 'success' });\n      }\n    }\n  };\n\n  const handleCancel = (): void => {\n    if (patientId) {\n      navigate(`/patient/${patientId}`, { state: { defaultTab: 'followups' } });\n    } else {\n      navigate('/visits');\n    }\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n      <form onSubmit={(e) => handleFormSubmit(e)}>\n        <Grid container spacing={2} columns={10}>\n          <Grid item xs={5}>\n            <Autocomplete\n              disabled={followupStatus === 'RESOLVED'}\n              options={FOLLOWUP_TYPES}\n              onChange={handleTypeChange}\n              value={followupType}\n              fullWidth\n              renderInput={(params) => (\n                <TextField required placeholder=\"Select type\" name=\"type\" {...params} label=\"Type\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <Autocomplete\n              disabled={followupStatus === 'RESOLVED'}\n              options={reasonOptions}\n              onChange={handleReasonChange}\n              fullWidth\n              value={followupReason}\n              noOptionsText=\"Please select a type\"\n              renderInput={(params) => (\n                <TextField placeholder=\"Select reason\" name=\"reason\" {...params} label=\"Reason\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              disabled={followupStatus !== 'NEW'}\n              fullWidth\n              id=\"answered\"\n              label=\"Answered\"\n              variant=\"outlined\"\n              value={answered}\n              onChange={(e) => setAnswered(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <TextField\n              disabled={followupStatus === 'RESOLVED'}\n              fullWidth\n              id=\"caller\"\n              label=\"Caller\"\n              variant=\"outlined\"\n              value={caller}\n              onChange={(e) => setCaller(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <LocalizationProvider dateAdapter={AdapterLuxon}>\n              <DatePicker\n                disabled={followupStatus !== 'NEW'}\n                onChange={(val) => val && setFollowupDate(val)}\n                label=\"Date\"\n                format=\"MM/dd/yyyy\"\n                value={followupDate}\n                slotProps={{ textField: { id: 'followup-date', label: 'Date', fullWidth: true } }}\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={5}>\n            <LocalizationProvider dateAdapter={AdapterLuxon}>\n              <TimePicker\n                disabled={followupStatus !== 'NEW'}\n                onChange={(val) => val && setFollowupDate(val)}\n                value={followupDate}\n                label=\"Time\"\n                slotProps={{\n                  textField: {\n                    fullWidth: true,\n                  },\n                }}\n              ></TimePicker>\n            </LocalizationProvider>\n          </Grid>\n          <Grid item xs={5}>\n            <LocationSelect\n              location={selectedLocation}\n              setLocation={setSelectedLocation}\n              updateURL={false}\n              renderInputProps={{ disabled: followupStatus === 'RESOLVED' }}\n            />\n          </Grid>\n          <Grid item xs={5}>\n            <Autocomplete\n              disabled={followupStatus === 'RESOLVED'}\n              options={providers}\n              fullWidth\n              getOptionLabel={(option) => `${option.name}`}\n              isOptionEqualToValue={(option, value) => option.practitionerId === value.practitionerId}\n              value={provider}\n              onChange={(_, newVal) => {\n                setProvider(newVal);\n              }}\n              renderOption={(props, option) => {\n                return (\n                  <li {...props} key={option.practitionerId}>\n                    {option.name}\n                  </li>\n                );\n              }}\n              renderInput={(params) => (\n                <TextField placeholder=\"Select provider\" name=\"provider\" {...params} label=\"Provider\" />\n              )}\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <TextField\n              disabled={followupStatus === 'RESOLVED'}\n              fullWidth\n              id=\"message\"\n              label=\"Message\"\n              variant=\"outlined\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              multiline\n            />\n          </Grid>\n          <Grid item xs={10}>\n            <Divider sx={{ ml: -3, mr: -3 }} />\n          </Grid>\n          <Grid item xs={10}>\n            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" gap={2}>\n              <Button\n                sx={{\n                  minWidth: 80,\n                  border: 1,\n                  borderRadius: 100,\n                  textTransform: 'none',\n                  fontWeight: 600,\n                }}\n                onClick={handleCancel}\n              >\n                Cancel\n              </Button>\n              {followupStatus !== 'RESOLVED' && (\n                <Box display=\"flex\" flexDirection=\"row\">\n                  <FormControlLabel\n                    sx={{\n                      backgroundColor: 'transparent',\n                      pr: 0,\n                    }}\n                    control={\n                      <Checkbox\n                        size=\"small\"\n                        sx={{\n                          color: theme.palette.primary.main,\n                          '&.Mui-checked': {\n                            color: theme.palette.primary.main,\n                          },\n                          '&.Mui-disabled': {\n                            color: lighten(theme.palette.primary.main, 0.4),\n                          },\n                        }}\n                        checked={resolved}\n                        onChange={(e) => setResolved(e.target.checked)}\n                      />\n                    }\n                    label={\n                      <Typography\n                        sx={{\n                          fontSize: '16px',\n                          fontWeight: 500,\n                          color: theme.palette.text.primary,\n                        }}\n                      >\n                        Mark as resolved\n                      </Typography>\n                    }\n                  />\n\n                  <LoadingButton\n                    variant=\"contained\"\n                    type=\"submit\"\n                    loading={loading}\n                    sx={{\n                      borderRadius: 100,\n                      textTransform: 'none',\n                      fontWeight: 600,\n                      marginRight: 1,\n                    }}\n                  >\n                    Save\n                  </LoadingButton>\n                </Box>\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n}\n"]}