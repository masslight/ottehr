{"version":3,"file":"ResponsibleInformationContainer.js","sourceRoot":"","sources":["ResponsibleInformationContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Autocomplete, Box, TextField } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { FC, useEffect } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { DOB_DATE_FORMAT, isPhoneNumberValid, REQUIRED_FIELD_ERROR_MESSAGE } from 'utils';\nimport { isPostalCodeValid } from 'utils';\nimport { BasicDatePicker as DatePicker, FormSelect, FormTextField } from '../../components/form';\nimport { RELATIONSHIP_OPTIONS, SEX_OPTIONS } from '../../constants';\nimport { FormFields as AllFormFields, STATE_OPTIONS } from '../../constants';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport InputMask from '../InputMask';\nimport { Row, Section } from '../layout';\n\nconst FormFields = AllFormFields.responsibleParty;\n\nexport const ResponsibleInformationContainer: FC = () => {\n  const { control, watch, getValues, setValue } = useFormContext();\n\n  const selfSelected = watch(FormFields.relationship.key) === 'Self';\n\n  useEffect(() => {\n    const fieldMap = {\n      [FormFields.firstName.key]: AllFormFields.patientSummary.firstName.key,\n      [FormFields.lastName.key]: AllFormFields.patientSummary.lastName.key,\n      [FormFields.birthDate.key]: AllFormFields.patientSummary.birthDate.key,\n      [FormFields.birthSex.key]: AllFormFields.patientSummary.birthSex.key,\n      [FormFields.phone.key]: AllFormFields.patientContactInformation.phone.key,\n      [FormFields.addressLine1.key]: AllFormFields.patientContactInformation.streetAddress.key,\n      [FormFields.addressLine2.key]: AllFormFields.patientContactInformation.addressLine2.key,\n      [FormFields.city.key]: AllFormFields.patientContactInformation.city.key,\n      [FormFields.state.key]: AllFormFields.patientContactInformation.state.key,\n      [FormFields.zip.key]: AllFormFields.patientContactInformation.zip.key,\n    };\n\n    if (selfSelected) {\n      Object.entries(fieldMap).forEach(([responsiblePartyKey, patientKey]) => {\n        const patientValue = getValues(patientKey);\n        const responsiblePartyValue = getValues(responsiblePartyKey);\n\n        if (patientValue !== responsiblePartyValue) {\n          setValue(responsiblePartyKey, patientValue);\n        }\n      });\n    }\n\n    const subscription = watch((_, { name }) => {\n      if (!selfSelected || !name) return;\n\n      const matched = Object.entries(fieldMap).find(([, patientKey]) => patientKey === name);\n\n      if (matched) {\n        const [responsiblePartyKey, patientKey] = matched;\n        const patientValue = getValues(patientKey);\n        const responsiblePartyValue = getValues(responsiblePartyKey);\n\n        if (patientValue !== responsiblePartyValue) {\n          setValue(responsiblePartyKey, patientValue);\n        }\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, [selfSelected, watch, setValue, getValues]);\n\n  return (\n    <Section title=\"Responsible party information\" dataTestId={dataTestIds.responsiblePartyInformationContainer.id}>\n      <Row\n        label={FormFields.relationship.label}\n        dataTestId={dataTestIds.responsiblePartyInformationContainer.relationshipDropdown}\n        required\n      >\n        <FormSelect\n          name={FormFields.relationship.key}\n          control={control}\n          options={RELATIONSHIP_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n            validate: (value: string) => RELATIONSHIP_OPTIONS.some((option) => option.value === value),\n          }}\n        />\n      </Row>\n      <Row label={FormFields.firstName.label} required inputId={FormFields.firstName.key}>\n        <FormTextField\n          name={FormFields.firstName.key}\n          data-testid={dataTestIds.responsiblePartyInformationContainer.firstName}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          id={FormFields.firstName.key}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label={FormFields.lastName.label} required inputId={FormFields.lastName.key}>\n        <FormTextField\n          data-testid={dataTestIds.responsiblePartyInformationContainer.lastName}\n          name={FormFields.lastName.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          id={FormFields.lastName.key}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label={FormFields.birthDate.label} required>\n        <DatePicker\n          name={FormFields.birthDate.key}\n          control={control}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n            validate: (value: string) => {\n              if (!value) return true;\n              const bdDateTime = DateTime.fromFormat(value, DOB_DATE_FORMAT);\n              return bdDateTime.isValid || 'Date is invalid';\n            },\n          }}\n          defaultValue={''}\n          disabled={selfSelected}\n          dataTestId={dataTestIds.responsiblePartyInformationContainer.dateOfBirthDropdown}\n          component=\"Field\"\n        />\n      </Row>\n      <Row\n        label={FormFields.birthSex.label}\n        dataTestId={dataTestIds.responsiblePartyInformationContainer.birthSexDropdown}\n        required\n      >\n        <FormSelect\n          name={FormFields.birthSex.key}\n          control={control}\n          options={SEX_OPTIONS}\n          rules={{\n            required: REQUIRED_FIELD_ERROR_MESSAGE,\n          }}\n          required={true}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label={FormFields.phone.label} inputId={FormFields.phone.key}>\n        <FormTextField\n          id={FormFields.phone.key}\n          name={FormFields.phone.key}\n          data-testid={dataTestIds.responsiblePartyInformationContainer.phoneInput}\n          control={control}\n          inputProps={{ mask: '(000) 000-0000' }}\n          InputProps={{\n            inputComponent: InputMask as any,\n          }}\n          rules={{\n            validate: (value: string) => {\n              if (!value) return true;\n              return (\n                isPhoneNumberValid(value) ||\n                'Phone number must be 10 digits in the format (xxx) xxx-xxxx and a valid number'\n              );\n            },\n          }}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label={FormFields.addressLine1.label} required inputId={FormFields.addressLine1.key}>\n        <FormTextField\n          data-testid={dataTestIds.responsiblePartyInformationContainer.addressLine1}\n          name={FormFields.addressLine1.key}\n          control={control}\n          rules={{ required: REQUIRED_FIELD_ERROR_MESSAGE }}\n          id={FormFields.addressLine1.key}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label={FormFields.addressLine2.label} inputId={FormFields.addressLine2.key}>\n        <FormTextField\n          data-testid={dataTestIds.responsiblePartyInformationContainer.addressLine2}\n          name={FormFields.addressLine2.key}\n          control={control}\n          id={FormFields.addressLine2.key}\n          disabled={selfSelected}\n        />\n      </Row>\n      <Row label=\"City, State, ZIP\" required>\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <FormTextField\n            name={FormFields.city.key}\n            control={control}\n            rules={{\n              required: REQUIRED_FIELD_ERROR_MESSAGE,\n            }}\n            data-testid={dataTestIds.responsiblePartyInformationContainer.city}\n            disabled={selfSelected}\n          />\n          <Controller\n            name={FormFields.state.key}\n            control={control}\n            rules={{\n              required: REQUIRED_FIELD_ERROR_MESSAGE,\n            }}\n            render={({ field: { value }, fieldState: { error } }) => {\n              return (\n                <Autocomplete\n                  options={STATE_OPTIONS.map((option) => option.value)}\n                  value={value ?? ''}\n                  data-testid={dataTestIds.responsiblePartyInformationContainer.state}\n                  onChange={(_, newValue) => {\n                    if (newValue) {\n                      setValue(FormFields.state.key, newValue);\n                    } else {\n                      setValue(FormFields.state.key, '');\n                    }\n                  }}\n                  disableClearable\n                  fullWidth\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"standard\" error={!!error} required helperText={error?.message} />\n                  )}\n                  disabled={selfSelected}\n                />\n              );\n            }}\n          />\n          <FormTextField\n            name={FormFields.zip.key}\n            control={control}\n            rules={{\n              required: REQUIRED_FIELD_ERROR_MESSAGE,\n              validate: (value: string) => isPostalCodeValid(value) || 'Must be 5 digits',\n            }}\n            data-testid={dataTestIds.responsiblePartyInformationContainer.zip}\n            disabled={selfSelected}\n          />\n        </Box>\n      </Row>\n    </Section>\n  );\n};\n"]}