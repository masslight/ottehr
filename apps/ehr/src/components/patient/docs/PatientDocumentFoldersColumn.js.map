{"version":3,"file":"PatientDocumentFoldersColumn.js","sourceRoot":"","sources":["PatientDocumentFoldersColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import FolderOpenOutlinedIcon from '@mui/icons-material/FolderOpenOutlined';\nimport FolderOutlinedIcon from '@mui/icons-material/FolderOutlined';\nimport { List, ListItemButton, ListItemIcon, ListItemText, Skeleton, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { PatientDocumentsFolder } from '../../../hooks/useGetPatientDocs';\n\nexport type PatientDocumentFoldersColumnProps = {\n  documentsFolders: PatientDocumentsFolder[];\n  selectedFolder?: PatientDocumentsFolder;\n  onFolderSelected?: (selectedFolder: PatientDocumentsFolder) => void;\n};\n\nexport const PatientDocumentFoldersColumn: FC<PatientDocumentFoldersColumnProps> = (props) => {\n  const { documentsFolders, selectedFolder, onFolderSelected } = props;\n\n  const theme = useTheme();\n\n  const selectedIndex = documentsFolders.findIndex(\n    (folder) => folder.id === selectedFolder?.id || folder.folderName === selectedFolder?.folderName\n  );\n\n  // const lineColor = historyEntry.isTemperatureWarning ? theme.palette.error.main : theme.palette.text.primary;\n\n  return (\n    <List>\n      {documentsFolders\n        .sort((a, b) => a.folderName.localeCompare(b.folderName))\n        .map((folder, index) => (\n          <ListItemButton\n            key={`${folder.folderName}__${index}`}\n            onClick={() => onFolderSelected && onFolderSelected(folder)}\n            sx={{\n              backgroundColor: selectedIndex === index ? '#4D15B714' : 'transparent',\n              borderRadius: 3,\n              py: 0.5,\n              marginX: 2,\n              '&:hover': { backgroundColor: 'rgba(0, 0, 0, 0.05)' },\n            }}\n          >\n            <ListItemIcon sx={{ color: theme.palette.primary.main }}>\n              {selectedIndex === index ? <FolderOpenOutlinedIcon /> : <FolderOutlinedIcon />}\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Typography\n                  sx={{\n                    color: theme.palette.text.primary,\n                    fontWeight: selectedIndex === index ? 'bold' : 'normal',\n                  }}\n                >\n                  {folder.folderName} - {folder.documentsCount}\n                </Typography>\n              }\n            />\n          </ListItemButton>\n        ))}\n    </List>\n  );\n};\n\nexport const PatientDocumentFoldersColumnSkeleton: React.FC<{ stubsCount: number }> = ({ stubsCount }): JSX.Element => {\n  const fakeFolders = new Array<string>(stubsCount).fill('Stub folder');\n  return (\n    <List>\n      {fakeFolders.map((folderName, index) => (\n        <Skeleton key={`${folderName}__${index}`}>\n          <ListItemButton\n            sx={{\n              borderRadius: 3,\n              py: 0.5,\n              marginX: 2,\n              '&:hover': { backgroundColor: 'rgba(0, 0, 0, 0.05)' },\n            }}\n          >\n            <ListItemIcon>\n              <FolderOpenOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary={<Typography>{folderName} - 10</Typography>} />\n          </ListItemButton>\n        </Skeleton>\n      ))}\n    </List>\n  );\n};\n"]}