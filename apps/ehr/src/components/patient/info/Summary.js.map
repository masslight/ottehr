{"version":3,"file":"Summary.js","sourceRoot":"","sources":["Summary.tsx"],"names":[],"mappings":";;;AAAA,iEAAgE;AAChE,0CAAsE;AAGtE,+BAAkC;AAClC,yCAAkE;AAClE,kEAA+D;AAC/D,8DAAwE;AAQjE,IAAM,OAAO,GAAc,UAAC,EAAoB;QAAlB,OAAO,aAAA,EAAE,OAAO,aAAA;IACnD,IAAM,QAAQ,GAAG,IAAA,0BAAiB,EAAC,OAAO,EAAE,uCAA+B,CAAC,CAAC;IAE7E,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACzD;MAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,qBAAU,CAAC,CAAC,QAAQ,CAAC,EAAE,qBAAU,CAAC,CAEpF;;MAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CACT,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAG,CACxB,CAAC,CAAC,CAAC,CACF,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,CACjB,CAAC,qBAAU,CAAC,WAAW,CAAC,CAAC,2BAAW,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,IAAA,qBAAU,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAC,CAAC,EAAE,qBAAU,CAAC,CAC/G,CACF,CAED;;MAAA,CAAC,OAAO,CAAC,CAAC,CAAC,CACT,CAAC,mBAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAG,CACzB,CAAC,CAAC,CAAC,CACF,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,KAAI,CACpB,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CACrC;YAAA,CAAC,sBAAgB,CAAC,QAAQ,CAAC,OAAO,EAClC;YAAA,CAAC,qBAAU,CAAC,WAAW,CAAC,CAAC,2BAAW,CAAC,aAAa,CAAC,eAAe,CAAC,CACjE;cAAA,CAAC,IAAA,iBAAS,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,CAChC;YAAA,EAAE,qBAAU,CACd;UAAA,EAAE,cAAG,CAAC,CACP,CACF,CACH;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA7BW,QAAA,OAAO,WA6BlB;AAEF,kBAAe,eAAO,CAAC","sourcesContent":["import CakeOutlinedIcon from '@mui/icons-material/CakeOutlined';\nimport { Box, capitalize, Skeleton, Typography } from '@mui/material';\nimport { Patient } from 'fhir/r4b';\nimport { FC } from 'react';\nimport { formatDOB } from 'utils';\nimport { PATIENT_INDIVIDUAL_PRONOUNS_URL } from 'utils/lib/types';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { getExtensionValue } from '../../../features/css-module/parser';\n\ntype Props = {\n  id?: string;\n  patient: Patient | undefined;\n  loading?: boolean;\n};\n\nexport const Summary: FC<Props> = ({ patient, loading }) => {\n  const pronouns = getExtensionValue(patient, PATIENT_INDIVIDUAL_PRONOUNS_URL);\n\n  return (\n    <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n      {loading ? <Skeleton width={86} /> : pronouns && <Typography>{pronouns}</Typography>}\n\n      {loading ? (\n        <Skeleton width={36} />\n      ) : (\n        patient?.gender && (\n          <Typography data-testid={dataTestIds.patientHeader.patientBirthSex}>{capitalize(patient?.gender)}</Typography>\n        )\n      )}\n\n      {loading ? (\n        <Skeleton width={131} />\n      ) : (\n        patient?.birthDate && (\n          <Box sx={{ display: 'flex', gap: 0.5 }}>\n            <CakeOutlinedIcon fontSize=\"small\" />\n            <Typography data-testid={dataTestIds.patientHeader.patientBirthday}>\n              {formatDOB(patient?.birthDate)}\n            </Typography>\n          </Box>\n        )\n      )}\n    </Box>\n  );\n};\n\nexport default Summary;\n"]}