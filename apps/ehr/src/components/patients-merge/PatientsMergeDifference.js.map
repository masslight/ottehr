{"version":3,"file":"PatientsMergeDifference.js","sourceRoot":"","sources":["PatientsMergeDifference.tsx"],"names":[],"mappings":"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","sourcesContent":["import CloseIcon from '@mui/icons-material/Close';\nimport {\n  Dialog,\n  FormControlLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Stack,\n  Table,\n  TableCell,\n  TableContainer,\n  TableRow,\n  ToggleButtonGroup,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { Patient } from 'fhir/r4';\nimport React, { FC, useState } from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport { PROJECT_NAME } from 'utils';\nimport { ConfirmationDialog, ContainedPrimaryToggleButton } from '../../telemed';\nimport { RoundedButton } from '../RoundedButton';\nimport { useGetPatientsForMerge } from './queries';\n\ntype PatientFormValues = {\n  birthGender?: 'male' | 'female' | 'other' | 'unknown';\n  streetLine2?: string;\n  lastName?: string;\n  streetLine1?: string;\n  deceased?: boolean;\n  ethnicity?: string;\n  city?: string;\n  sendMarketingMessages?: boolean;\n  responsiblePartyBirthSex?: 'male' | 'female' | 'other' | 'unknown';\n  responsiblePartyRelationship?: string;\n  language?: string;\n  genderIdentity?: string;\n  id?: string;\n  preferredName?: string;\n  state?: string;\n  pcp?: string;\n  email?: string;\n  parentGuardianPhone?: string;\n  zip?: string;\n  responsiblePartyFirstName?: string;\n  hearingImpairedRelayService?: boolean;\n  responsiblePartyLastName?: string;\n  race?: string;\n  parentGuardianRelationship?: string;\n  photo?: string;\n  active?: boolean;\n  fillingOutAs?: string;\n  responsiblePartyPhone?: string;\n  commonWellConsent?: boolean;\n  pointOfDiscovery?: string;\n  sexualOrientation?: string;\n  firstName?: string;\n  sendStatements?: string;\n  excludeFromCollections?: boolean;\n  parentGuardianEmail?: string;\n  phone?: string;\n  dob?: string;\n  middleName?: string;\n  pronouns?: string;\n  responsiblePartyDob?: string;\n};\n\ntype FormValues = Record<keyof PatientFormValues, string>;\n\nconst mapPatientResourceToFormValues = (patient: Patient): PatientFormValues => {\n  const officialName = patient.name?.find((name) => name.use !== 'nickname'); // name.use === 'official'\n  const preferredName = patient.name?.find((name) => name.use === 'nickname');\n  const address = patient.address?.[0];\n  const responsibleParty = patient.contact?.[0];\n\n  return {\n    id: patient.id,\n    photo: patient.photo?.[0]?.url,\n    firstName: officialName?.given?.[0],\n    middleName: officialName?.given?.[1],\n    lastName: officialName?.family,\n    preferredName: preferredName?.given?.[0],\n    birthGender: patient.gender,\n    genderIdentity: patient.extension?.find(\n      (extension) => extension.url === 'http://hl7.org/fhir/StructureDefinition/individual-genderIdentity'\n    )?.valueString,\n    pronouns: patient.extension?.find(\n      (extension) => extension.url === 'http://hl7.org/fhir/StructureDefinition/individual-pronouns'\n    )?.valueString,\n    dob: patient.birthDate,\n    streetLine1: address?.line?.[0],\n    streetLine2: address?.line?.[1],\n    city: address?.city,\n    state: address?.state,\n    zip: address?.postalCode,\n    fillingOutAs: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/filling-out-as'\n    )?.valueString,\n    email: patient.telecom?.find((telecom) => telecom.system === 'email')?.value,\n    phone: patient.telecom?.find((telecom) => telecom.system === 'phone')?.value,\n    responsiblePartyFirstName: responsibleParty?.name?.given?.[0],\n    responsiblePartyLastName: responsibleParty?.name?.family,\n    responsiblePartyDob: responsibleParty?.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/birth-date'\n    )?.valueString,\n    responsiblePartyBirthSex: responsibleParty?.gender,\n    responsiblePartyPhone: responsibleParty?.telecom?.find(\n      (telecom) => telecom.system === 'phone' && telecom.use === 'mobile'\n    )?.value,\n    responsiblePartyRelationship: responsibleParty?.relationship\n      ?.find(\n        (relationship) =>\n          relationship.coding?.find(\n            (coding) => coding.system === 'http://terminology.hl7.org/CodeSystem/v2-0131' && coding.code === 'BP'\n          )\n      )\n      ?.coding?.find(\n        (coding) => coding.system === 'http://terminology.hl7.org/CodeSystem/v2-0131' && coding.code === 'BP'\n      )?.display,\n    parentGuardianEmail: responsibleParty?.telecom?.find((telecom) => telecom.system === 'email')?.value,\n    parentGuardianPhone: responsibleParty?.telecom?.find((telecom) => telecom.system === 'phone')?.value,\n    parentGuardianRelationship: responsibleParty?.relationship\n      ?.find(\n        (relationship) =>\n          relationship.coding?.find(\n            (coding) =>\n              coding.system === 'https://fhir.zapehr.com/r4/StructureDefinitions/relationship' &&\n              coding.code === 'Parent/Guardian'\n          )\n      )\n      ?.coding?.find(\n        (coding) =>\n          coding.system === 'https://fhir.zapehr.com/r4/StructureDefinitions/relationship' &&\n          coding.code === 'Parent/Guardian'\n      )?.display,\n    ethnicity: patient.extension\n      ?.find((extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/ethnicity')\n      ?.valueCodeableConcept?.coding?.find((coding) => coding.system === 'http://hl7.org/fhir/v3/Ethnicity')?.display,\n    race: patient.extension\n      ?.find((extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/race')\n      ?.valueCodeableConcept?.coding?.find((coding) => coding.system === 'http://hl7.org/fhir/v3/Race')?.display,\n    sexualOrientation: patient.extension?.find(\n      (extension) => extension.url === 'http://hl7.org/fhir/us/cdmh/StructureDefinition/cdmh-patient-sexualOrientation'\n    )?.valueString,\n    pcp: patient.contained?.[0]?.id, // TODO: change to name\n    pointOfDiscovery: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/point-of-discovery'\n    )?.valueString,\n    sendMarketingMessages: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/send-marketing'\n    )?.valueBoolean,\n    hearingImpairedRelayService: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/hearing-impaired-relay-service'\n    )?.valueBoolean,\n    commonWellConsent: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/common-well-consent'\n    )?.valueBoolean,\n    language: patient.communication?.find((communication) => communication.preferred)?.language?.coding?.[0]?.display,\n    active: patient.active,\n    sendStatements: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/send-statements'\n    )?.valueString,\n    excludeFromCollections: patient.extension?.find(\n      (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/exclude-from-collections'\n    )?.valueBoolean,\n    deceased: patient.deceasedBoolean,\n  };\n};\n\ntype Row = {\n  title: string;\n  field: keyof PatientFormValues;\n  render: (patient: PatientFormValues) => string;\n};\n\nconst rows: Row[] = [\n  {\n    title: 'Photo',\n    field: 'photo',\n    render: (patient) => patient.photo || '-',\n  },\n  {\n    title: 'Patient first name',\n    field: 'firstName',\n    render: (patient) => patient.firstName || '-',\n  },\n  {\n    title: 'Patient middle name',\n    field: 'middleName',\n    render: (patient) => patient.middleName || '-',\n  },\n  {\n    title: 'Patient last name',\n    field: 'lastName',\n    render: (patient) => patient.lastName || '-',\n  },\n  {\n    title: 'Patient preferred name',\n    field: 'preferredName',\n    render: (patient) => patient.preferredName || '-',\n  },\n  {\n    title: 'Birth gender',\n    field: 'birthGender',\n    render: (patient) => patient.birthGender || '-',\n  },\n  {\n    title: 'Gender identity',\n    field: 'genderIdentity',\n    render: (patient) => patient.genderIdentity || '-',\n  },\n  {\n    title: 'Pronouns',\n    field: 'pronouns',\n    render: (patient) => patient.pronouns || '-',\n  },\n  {\n    title: 'Date of Birth',\n    field: 'dob',\n    render: (patient) => patient.dob || '-',\n  },\n  {\n    title: 'Street Address',\n    field: 'streetLine1',\n    render: (patient) => patient.streetLine1 || '-',\n  },\n  {\n    title: 'Street Address line 2',\n    field: 'streetLine2',\n    render: (patient) => patient.streetLine2 || '-',\n  },\n  {\n    title: 'City',\n    field: 'city',\n    render: (patient) => patient.city || '-',\n  },\n  {\n    title: 'State',\n    field: 'state',\n    render: (patient) => patient.state || '-',\n  },\n  {\n    title: 'ZIP',\n    field: 'zip',\n    render: (patient) => patient.zip || '-',\n  },\n  {\n    title: 'Filling Out Information (Self/Guardian)',\n    field: 'fillingOutAs',\n    render: (patient) => patient.fillingOutAs || '-',\n  },\n  {\n    title: 'Patient Email',\n    field: 'email',\n    render: (patient) => patient.email || '-',\n  },\n  {\n    title: 'Patient Mobile',\n    field: 'phone',\n    render: (patient) => patient.phone || '-',\n  },\n  {\n    title: 'Responsible party first name',\n    field: 'responsiblePartyFirstName',\n    render: (patient) => patient.responsiblePartyFirstName || '-',\n  },\n  {\n    title: 'Responsible party last name',\n    field: 'responsiblePartyLastName',\n    render: (patient) => patient.responsiblePartyLastName || '-',\n  },\n  {\n    title: 'Responsible party Date of Birth',\n    field: 'responsiblePartyDob',\n    render: (patient) => patient.responsiblePartyDob || '-',\n  },\n  {\n    title: 'Responsible party Birth sex',\n    field: 'responsiblePartyBirthSex',\n    render: (patient) => patient.responsiblePartyBirthSex || '-',\n  },\n  {\n    title: 'Responsible party number',\n    field: 'responsiblePartyPhone',\n    render: (patient) => patient.responsiblePartyPhone || '-',\n  },\n  {\n    title: 'Responsible party relationship',\n    field: 'responsiblePartyRelationship',\n    render: (patient) => patient.responsiblePartyRelationship || '-',\n  },\n  {\n    title: 'Parent/Guardian Email',\n    field: 'parentGuardianEmail',\n    render: (patient) => patient.parentGuardianEmail || '-',\n  },\n  {\n    title: 'Parent/Guardian Mobile',\n    field: 'parentGuardianPhone',\n    render: (patient) => patient.parentGuardianPhone || '-',\n  },\n  {\n    title: 'Parent/Guardian relationship',\n    field: 'parentGuardianRelationship',\n    render: (patient) => patient.parentGuardianRelationship || '-',\n  },\n  {\n    title: 'Ethnicity',\n    field: 'ethnicity',\n    render: (patient) => patient.ethnicity || '-',\n  },\n  {\n    title: 'Race',\n    field: 'race',\n    render: (patient) => patient.race || '-',\n  },\n  {\n    title: 'Sexual orientation',\n    field: 'sexualOrientation',\n    render: (patient) => patient.sexualOrientation || '-',\n  },\n  {\n    title: 'Primary Care Physician',\n    field: 'pcp',\n    render: (patient) => patient.pcp || '-',\n  },\n  {\n    title: `How did patient heard about ${PROJECT_NAME}`,\n    field: 'pointOfDiscovery',\n    render: (patient) => patient.pointOfDiscovery || '-',\n  },\n  {\n    title: 'Send marketing messages',\n    field: 'sendMarketingMessages',\n    render: (patient) =>\n      typeof patient.sendMarketingMessages === 'boolean' ? (patient.sendMarketingMessages ? 'Yes' : 'No') : '-',\n  },\n  {\n    title: 'Hearing impaired relay service',\n    field: 'hearingImpairedRelayService',\n    render: (patient) =>\n      typeof patient.hearingImpairedRelayService === 'boolean'\n        ? patient.hearingImpairedRelayService\n          ? 'Yes'\n          : 'No'\n        : '-',\n  },\n  {\n    title: 'CommonWell consent',\n    field: 'commonWellConsent',\n    render: (patient) =>\n      typeof patient.commonWellConsent === 'boolean' ? (patient.commonWellConsent ? 'Yes' : 'No') : '-',\n  },\n  {\n    title: 'Language',\n    field: 'language',\n    render: (patient) => patient.language || '-',\n  },\n  {\n    title: 'Active',\n    field: 'active',\n    render: (patient) => (typeof patient.active === 'boolean' ? (patient.active ? 'Yes' : 'No') : '-'),\n  },\n  {\n    title: 'Send statements',\n    field: 'sendStatements',\n    render: (patient) => patient.sendStatements || '-',\n  },\n  {\n    title: 'Exclude from collections',\n    field: 'excludeFromCollections',\n    render: (patient) =>\n      typeof patient.excludeFromCollections === 'boolean' ? (patient.excludeFromCollections ? 'Yes' : 'No') : '-',\n  },\n  {\n    title: 'Deceased',\n    field: 'deceased',\n    render: (patient) => (typeof patient.deceased === 'boolean' ? (patient.deceased ? 'Yes' : 'No') : '-'),\n  },\n];\n\ntype PatientMergeDifferenceProps = {\n  open: boolean;\n  close: () => void;\n  back: () => void;\n  patientIds?: string[];\n};\n\nexport const PatientsMergeDifference: FC<PatientMergeDifferenceProps> = (props) => {\n  const { open, close, back, patientIds } = props;\n\n  const { isLoading } = useGetPatientsForMerge({ patientIds }, (data) => {\n    const patients = data as unknown as Patient[];\n    const parsedPatients = patients.map((patient) => mapPatientResourceToFormValues(patient));\n    const mainPatient = patients[0] as Patient;\n\n    setPatients(patients);\n    setParsedPatients(parsedPatients);\n    setParsedRows(\n      rows.map((row) => ({\n        ...row,\n        different: !parsedPatients.every((patient) => patient[row.field] === parsedPatients[0][row.field]),\n      }))\n    );\n    setMainPatient(mainPatient?.id);\n    reset(\n      rows.reduce((previousValue, currentValue) => {\n        previousValue[currentValue.field] = mainPatient?.id;\n        return previousValue;\n      }, {} as Partial<FormValues>)\n    );\n  });\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [parsedPatients, setParsedPatients] = useState<PatientFormValues[]>([]);\n  const [parsedRows, setParsedRows] = useState<(Row & { different: boolean })[]>([]);\n  const [mainPatient, setMainPatient] = useState<string | undefined>(undefined);\n  const [showVariant, setShowVariant] = useState<'different' | 'all'>('different');\n  const theme = useTheme();\n  const methods = useForm<FormValues>();\n  const { control, handleSubmit, reset, getValues } = methods;\n\n  const lightBackground = `${theme.palette.primary.main}0A`;\n\n  const onSave = (values: FormValues): void => {\n    console.log(values);\n    close();\n  };\n\n  const changeMainPatient = (id: string): void => {\n    setMainPatient(id);\n    reset(\n      rows.reduce((previousValue, currentValue) => {\n        previousValue[currentValue.field] = id;\n        return previousValue;\n      }, {} as Partial<FormValues>)\n    );\n  };\n\n  const removePatient = (id: string): void => {\n    const newPatients = patients.filter((patient) => patient.id !== id);\n    const newParsedPatients = newPatients.map((patient) => mapPatientResourceToFormValues(patient));\n    const newMainPatient = (mainPatient === id ? newPatients[0].id : mainPatient) as string;\n\n    if (mainPatient === id) {\n      setMainPatient(newPatients[0].id);\n    }\n    setPatients(newPatients);\n    setParsedPatients(newParsedPatients);\n    setParsedRows(\n      rows.map((row) => ({\n        ...row,\n        different: !newParsedPatients.every((patient) => patient[row.field] === newParsedPatients[0][row.field]),\n      }))\n    );\n\n    const values = getValues();\n    rows.forEach((row) => {\n      if (values[row.field] === id) {\n        values[row.field] = newMainPatient;\n      }\n    });\n    reset(values);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <Dialog open={open} onClose={close} maxWidth=\"lg\" fullWidth>\n        <IconButton size=\"small\" onClick={close} sx={{ position: 'absolute', right: 16, top: 16 }}>\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n\n        <Stack spacing={2} sx={{ p: 3 }}>\n          <Stack spacing={1}>\n            <Typography variant=\"h4\" color=\"primary.dark\">\n              Merge Patients\n            </Typography>\n            <Typography>\n              Please select which information should carry over to the Main Patient record after merge. All other\n              patient records will be removed.\n            </Typography>\n          </Stack>\n\n          <ToggleButtonGroup\n            size=\"small\"\n            exclusive\n            value={showVariant}\n            onChange={(_, newValue) => newValue && setShowVariant(newValue)}\n          >\n            <ContainedPrimaryToggleButton value=\"different\">Only Different Info</ContainedPrimaryToggleButton>\n            <ContainedPrimaryToggleButton value=\"all\">All Info</ContainedPrimaryToggleButton>\n          </ToggleButtonGroup>\n\n          <TableContainer sx={{ maxHeight: '60vh' }}>\n            <Table size=\"small\">\n              <TableRow sx={{ '& .MuiTableCell-head': { fontWeight: 'bold' } }}>\n                <TableCell variant=\"head\">Parameter</TableCell>\n                {parsedPatients.map((patient) => (\n                  <TableCell\n                    variant=\"head\"\n                    key={patient.id}\n                    sx={{\n                      backgroundColor: patient.id === mainPatient ? lightBackground : undefined,\n                    }}\n                  >\n                    PID: {patient.id}\n                  </TableCell>\n                ))}\n              </TableRow>\n              <TableRow>\n                <TableCell>Main Patient Record</TableCell>\n                {parsedPatients.map((patient) => (\n                  <TableCell\n                    key={patient.id}\n                    sx={{\n                      backgroundColor: patient.id === mainPatient ? lightBackground : undefined,\n                    }}\n                  >\n                    <RadioGroup row value={mainPatient} onChange={(e) => changeMainPatient(e.target.value)}>\n                      <FormControlLabel value={patient.id} control={<Radio />} label=\"\" />\n                    </RadioGroup>\n                  </TableCell>\n                ))}\n              </TableRow>\n              {parsedRows\n                .filter((row) => (showVariant === 'all' ? true : row.different))\n                .map((row) => (\n                  <TableRow key={row.title}>\n                    <TableCell>{row.title}</TableCell>\n                    {parsedPatients.map((patient) => (\n                      <TableCell\n                        key={patient.id}\n                        sx={{\n                          backgroundColor: patient.id === mainPatient ? lightBackground : undefined,\n                        }}\n                      >\n                        <Controller\n                          render={({ field: { onChange, value } }) => (\n                            <RadioGroup row value={value} onChange={onChange}>\n                              <FormControlLabel value={patient.id} control={<Radio />} label={row.render(patient)} />\n                            </RadioGroup>\n                          )}\n                          name={row.field}\n                          control={control}\n                        />\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              <TableRow>\n                <TableCell>Remove from merge</TableCell>\n                {parsedPatients.map((patient) => (\n                  <TableCell\n                    key={patient.id}\n                    sx={{\n                      backgroundColor: patient.id === mainPatient ? lightBackground : undefined,\n                    }}\n                  >\n                    <RoundedButton\n                      disabled={patients.length < 3}\n                      variant=\"text\"\n                      color=\"error\"\n                      onClick={() => removePatient(patient.id!)}\n                    >\n                      Remove\n                    </RoundedButton>\n                  </TableCell>\n                ))}\n              </TableRow>\n            </Table>\n          </TableContainer>\n\n          <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n            <RoundedButton onClick={back}>Cancel</RoundedButton>\n            <ConfirmationDialog\n              title=\"Merge Patients\"\n              description={\n                <Stack spacing={2}>\n                  <Typography>\n                    Are you sure you want to merge patient records? Merged records will be deactivated.\n                  </Typography>\n                  <Stack>\n                    <Typography fontWeight={600}>Merged patient record PIDs:</Typography>\n                    {patients\n                      .filter((patient) => patient.id !== mainPatient)\n                      .map((patient) => (\n                        <Typography key={patient.id}>{patient.id}</Typography>\n                      ))}\n                  </Stack>\n                  <Stack>\n                    <Typography fontWeight={600}>Main patient record PID:</Typography>\n                    <Typography>{mainPatient}</Typography>\n                  </Stack>\n                </Stack>\n              }\n              response={handleSubmit(onSave)}\n              actionButtons={{\n                proceed: {\n                  text: 'Confirm Merge',\n                },\n                back: {\n                  text: 'Back',\n                },\n                reverse: true,\n              }}\n            >\n              {(showDialog) => (\n                <RoundedButton variant=\"contained\" onClick={showDialog} disabled={isLoading}>\n                  Merge Patients\n                </RoundedButton>\n              )}\n            </ConfirmationDialog>\n          </Stack>\n        </Stack>\n      </Dialog>\n    </FormProvider>\n  );\n};\n"]}