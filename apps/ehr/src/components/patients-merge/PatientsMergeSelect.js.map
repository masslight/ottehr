{"version":3,"file":"PatientsMergeSelect.js","sourceRoot":"","sources":["PatientsMergeSelect.tsx"],"names":[],"mappings":"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","sourcesContent":["import CloseIcon from '@mui/icons-material/Close';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {\n  CircularProgress,\n  Dialog,\n  IconButton,\n  InputAdornment,\n  Skeleton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Patient } from 'fhir/r4b';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { FC, useMemo, useState } from 'react';\nimport { getFullName, standardizePhoneNumber } from 'utils';\nimport { formatDateUsingSlashes } from '../../helpers/formatDateTime';\nimport { ConfirmationDialog, DeleteIconButton } from '../../telemed';\nimport { RoundedButton } from '../RoundedButton';\nimport { useGetPatientById, useGetPatientsForMerge } from './queries';\n\ntype PatientsMergeSelectProps = {\n  open: boolean;\n  close: () => void;\n  next: (patientIds: string[]) => void;\n  patientIds?: string[];\n};\n\nexport const PatientsMergeSelect: FC<PatientsMergeSelectProps> = (props) => {\n  const { open, close, next, patientIds } = props;\n\n  const { isFetching } = useGetPatientsForMerge({ patientIds }, (data) => {\n    setPatients(data as unknown as Patient[]);\n  });\n  const getPatientById = useGetPatientById();\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [value, setValue] = useState('');\n\n  const patientRows = useMemo(\n    () =>\n      patients.map((patient) => {\n        const fillingOutAs = patient?.extension?.find(\n          (extension) => extension.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/form-user'\n        )?.valueString;\n        const patientNumber = patient?.telecom?.find((obj) => obj.system === 'phone')?.value;\n        const parentNumber = patient?.contact?.[0].telecom?.find((obj) => obj?.system === 'phone')?.value;\n        const isPatientNumberPrimary = fillingOutAs === 'Patient (Self)';\n\n        return {\n          pid: patient.id!,\n          name: getFullName(patient),\n          dob: formatDateUsingSlashes(patient.birthDate),\n          primaryNumber: standardizePhoneNumber(isPatientNumberPrimary ? patientNumber : parentNumber),\n          secondaryNumber: standardizePhoneNumber(isPatientNumberPrimary ? parentNumber : patientNumber),\n        };\n      }),\n    [patients]\n  );\n\n  const removePatient = (id: string): void => {\n    setPatients((prevState) => prevState.filter((patient) => patient.id !== id));\n  };\n\n  const addPatient = async (id: string): Promise<void> => {\n    const bundle = await getPatientById.mutateAsync(id);\n\n    if (bundle.length === 1) {\n      setPatients((prevState) => [...prevState, bundle[0] as unknown as Patient]);\n      setValue('');\n    } else {\n      enqueueSnackbar('Patient not found. Please try again', { variant: 'error' });\n    }\n  };\n\n  const disabled = isFetching || getPatientById.isLoading;\n\n  return (\n    <Dialog open={open} onClose={close} maxWidth=\"lg\" fullWidth>\n      <IconButton size=\"small\" onClick={close} sx={{ position: 'absolute', right: 16, top: 16 }}>\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Stack spacing={1}>\n          <Typography variant=\"h4\" color=\"primary.dark\">\n            Merge Patients\n          </Typography>\n          <Typography>\n            Select duplicated patients profiles. On the next step you will select which information should carry over to\n            the remaining patient record after merge.\n          </Typography>\n        </Stack>\n\n        <TextField\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onKeyDown={(event) => {\n            if (event.key === 'Enter') {\n              void addPatient(value);\n            }\n          }}\n          disabled={disabled}\n          size=\"small\"\n          label=\"PID\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                {getPatientById.isLoading ? <CircularProgress size={24} color=\"inherit\" /> : <SearchIcon />}\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Table>\n          <TableHead>\n            <TableRow sx={{ '& .MuiTableCell-head': { fontWeight: 'bold', textAlign: 'left' } }}>\n              <TableCell>PID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>DOB</TableCell>\n              <TableCell>Phone</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          {isFetching ? (\n            <TableRow>\n              <TableCell>\n                <Skeleton />\n              </TableCell>\n              <TableCell>\n                <Skeleton />\n              </TableCell>\n              <TableCell>\n                <Skeleton />\n              </TableCell>\n              <TableCell>\n                <Skeleton />\n              </TableCell>\n              <TableCell />\n            </TableRow>\n          ) : (\n            <TableBody>\n              {patientRows.map((row) => (\n                <TableRow key={row.pid}>\n                  <TableCell>{row.pid}</TableCell>\n                  <TableCell>{row.name}</TableCell>\n                  <TableCell>{row.dob}</TableCell>\n                  <TableCell>\n                    {row.primaryNumber && <b>{row.primaryNumber}</b>}\n                    {row.primaryNumber && row.secondaryNumber && ', '}\n                    {row.secondaryNumber}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <DeleteIconButton onClick={() => removePatient(row.pid)} />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          )}\n        </Table>\n\n        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n          <RoundedButton onClick={close}>Cancel</RoundedButton>\n          <Stack direction=\"row\" spacing={2}>\n            <ConfirmationDialog\n              title=\"Not duplicates\"\n              description={\n                <Stack spacing={2}>\n                  <Typography>Confirm the patients as not duplicates and dismiss the alert.</Typography>\n                  <Stack>\n                    <Typography fontWeight={600}>PIDs:</Typography>\n                    {patientRows.map(({ pid }) => (\n                      <Typography key={pid}>{pid}</Typography>\n                    ))}\n                  </Stack>\n                </Stack>\n              }\n              response={close}\n              actionButtons={{\n                proceed: {\n                  color: 'error',\n                  text: 'Dismiss Alert',\n                },\n                back: {\n                  text: 'Keep',\n                },\n                reverse: true,\n              }}\n            >\n              {(showDialog) => (\n                <RoundedButton disabled={disabled} variant=\"contained\" color=\"error\" onClick={showDialog}>\n                  Mark all as not duplicates\n                </RoundedButton>\n              )}\n            </ConfirmationDialog>\n\n            <RoundedButton\n              disabled={disabled}\n              variant=\"contained\"\n              onClick={() => next(patientRows.map(({ pid }) => pid))}\n            >\n              Continue\n            </RoundedButton>\n          </Stack>\n        </Stack>\n      </Stack>\n    </Dialog>\n  );\n};\n"]}