{"version":3,"file":"queries.js","sourceRoot":"","sources":["queries.ts"],"names":[],"mappings":"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","sourcesContent":["import { Bundle, FhirResource } from 'fhir/r4';\nimport { Patient } from 'fhir/r4b';\nimport { enqueueSnackbar } from 'notistack';\nimport { useMutation, useQuery, UseQueryResult } from 'react-query';\nimport { useApiClients } from '../../hooks/useAppClients';\n\nexport const useGetPatientsForMerge = (\n  {\n    patientIds,\n  }: {\n    patientIds?: string[];\n  },\n  onSuccess: (data: Bundle<FhirResource>[]) => void\n): UseQueryResult<Bundle<FhirResource>[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['get-patients-for-merge', { patientIds }],\n    async () => {\n      if (oystehr && patientIds) {\n        return (\n          await oystehr.fhir.search<Patient>({\n            resourceType: 'Patient',\n            params: [{ name: '_id', value: patientIds.join(',') }],\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined or patientIds not provided');\n    },\n    {\n      enabled: Boolean(oystehr) && patientIds !== undefined,\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get patients for merge: ', err);\n      },\n    }\n  );\n};\n\nexport const useGetPatientForUpdate = (\n  {\n    patientId,\n  }: {\n    patientId?: string;\n  },\n  onSuccess: (data: Bundle<FhirResource>[]) => void\n): UseQueryResult<Bundle<FhirResource>[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['get-patient-for-update', patientId],\n    async () => {\n      if (oystehr && patientId) {\n        return (\n          await oystehr.fhir.search<Patient>({\n            resourceType: 'Patient',\n            params: [\n              { name: '_id', value: patientId },\n              {\n                name: '_revinclude:iterate',\n                value: 'QuestionnaireResponse:patient',\n              },\n              {\n                name: '_revinclude:iterate',\n                value: 'Task:requester',\n              },\n            ],\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined or patientId not provided');\n    },\n    {\n      enabled: Boolean(patientId) && Boolean(oystehr),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get patient for update: ', err);\n      },\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetPatientById = () => {\n  const { oystehr } = useApiClients();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      if (oystehr && id) {\n        return (\n          await oystehr.fhir.search<Patient>({\n            resourceType: 'Patient',\n            params: [{ name: '_id', value: id }],\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined or patient id not provided');\n    },\n    onError: () => {\n      enqueueSnackbar('Patient not found. Please try again', { variant: 'error' });\n    },\n  });\n};\n"]}