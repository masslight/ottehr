{"version":3,"file":"OfficeClosures.js","sourceRoot":"","sources":["OfficeClosures.tsx"],"names":[],"mappings":"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","sourcesContent":["import DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { ReactElement } from 'react';\nimport { OVERRIDE_DATE_FORMAT } from '../../helpers/formatDateTime';\nimport { Closure, ClosureType } from '../../types/types';\nimport DateSearch from '../DateSearch';\n\ninterface OfficeClosuresProps {\n  closures: Closure[] | undefined;\n  setClosures: (closures: Closure[] | undefined) => void;\n}\n\nexport default function OfficeClosures({ closures, setClosures }: OfficeClosuresProps): ReactElement {\n  function handleUpdateClosures(index: number, newClosure: Closure): void {\n    const newClosures: Closure[] | undefined = closures?.map((closureTemp, indexTemp) => {\n      if (index === indexTemp) {\n        return newClosure;\n      } else {\n        return closureTemp;\n      }\n    });\n    setClosures(newClosures);\n  }\n\n  return (\n    <Box marginTop={5}>\n      <Typography variant=\"h4\" color=\"primary.dark\">\n        Closed Dates\n      </Typography>\n      <Typography variant=\"body1\" color=\"black\" marginTop={2}>\n        This override should be utilized when the facility is closed for the whole day and will not be opening at all.\n      </Typography>\n      <Table sx={{ marginTop: 3, tableLayout: 'fixed' }}>\n        <TableHead>\n          <TableRow key=\"closures-table-headers\" sx={{ height: '40px' }}>\n            <TableCell sx={{ fontWeight: 'bold' }}>Type</TableCell>\n            <TableCell sx={{ fontWeight: 'bold' }}>Start Date</TableCell>\n            <TableCell sx={{ fontWeight: 'bold' }}>End Date</TableCell>\n            {/* empty header for delete icon */}\n            <TableCell sx={{ width: '10%' }}></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {closures &&\n            closures\n              .sort((d1: Closure, d2: Closure): number => {\n                return (\n                  DateTime.fromFormat(d1.start, OVERRIDE_DATE_FORMAT).toSeconds() -\n                  DateTime.fromFormat(d2.start, OVERRIDE_DATE_FORMAT).toSeconds()\n                );\n              })\n              .map((closure, index) => {\n                return (\n                  <TableRow key={`closure-${index}`}>\n                    <TableCell>\n                      <FormControl required>\n                        <RadioGroup\n                          value={closure.type || undefined}\n                          row\n                          name=\"closureType\"\n                          onChange={(e) => {\n                            handleUpdateClosures(index, {\n                              start: closure.start,\n                              end: e.target.value === ClosureType.OneDay ? '' : closure.end,\n                              type: e.target.value,\n                            } as Closure);\n                          }}\n                        >\n                          <FormControlLabel\n                            value={ClosureType.OneDay}\n                            control={<Radio />}\n                            label=\"One day\"\n                            required\n                            sx={{ '.MuiFormControlLabel-asterisk': { display: 'none' } }}\n                          />\n                          <FormControlLabel\n                            value={ClosureType.Period}\n                            control={<Radio />}\n                            label=\"Period\"\n                            required\n                            sx={{ '.MuiFormControlLabel-asterisk': { display: 'none' } }}\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </TableCell>\n                    <TableCell>\n                      <DateSearch\n                        date={DateTime.fromFormat(closure.start, OVERRIDE_DATE_FORMAT)}\n                        setDate={(date) => {\n                          handleUpdateClosures(index, {\n                            start: date?.toFormat(OVERRIDE_DATE_FORMAT) ?? '',\n                            end: closure.end,\n                            type: closure.type,\n                          });\n                        }}\n                        required\n                        closeOnSelect\n                        small\n                      ></DateSearch>\n                    </TableCell>\n                    <TableCell>\n                      <DateSearch\n                        date={closure.end ? DateTime.fromFormat(closure.end, OVERRIDE_DATE_FORMAT) : null}\n                        required={closure.type === ClosureType.Period}\n                        disabled={closure.type === ClosureType.OneDay}\n                        disableDates={(day: DateTime) =>\n                          day <= DateTime.fromFormat(closure.start, OVERRIDE_DATE_FORMAT)\n                        }\n                        setDate={(date) => {\n                          handleUpdateClosures(index, {\n                            start: closure.start,\n                            end: date?.toFormat(OVERRIDE_DATE_FORMAT) ?? '',\n                            type: closure.type,\n                          });\n                        }}\n                        closeOnSelect\n                        small\n                      ></DateSearch>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        color=\"error\"\n                        onClick={() => {\n                          const deleteIndex = closures.indexOf(closure);\n                          const closuresDeepClone: Closure[] = JSON.parse(JSON.stringify(closures));\n                          closuresDeepClone.splice(deleteIndex, 1);\n                          setClosures(closuresDeepClone);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n        </TableBody>\n      </Table>\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        sx={{\n          borderRadius: '50px',\n          textTransform: 'none',\n          height: 36,\n          fontWeight: 'bold',\n          marginTop: 3,\n        }}\n        onClick={() => {\n          const defaultClosure = { start: '', end: '', type: ClosureType.OneDay };\n          setClosures([...(closures ?? []), defaultClosure]);\n        }}\n      >\n        Add closed date\n      </Button>\n    </Box>\n  );\n}\n"]}