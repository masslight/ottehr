{"version":3,"file":"ScheduleCapacity.js","sourceRoot":"","sources":["ScheduleCapacity.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography } from '@mui/material';\nimport React from 'react';\nimport { formatHourNumber } from '../../helpers/formatDateTime';\nimport { Capacity, Day, HourOfDay } from '../../types/types';\n\ninterface ScheduleCapacityProps {\n  day: Day;\n  setDay: (dayTemp: Day) => void;\n  openingHour: number;\n  closingHour: number;\n  openingBuffer: number;\n  closingBuffer: number;\n}\n\nexport const ScheduleCapacity: React.FC<ScheduleCapacityProps> = ({\n  day,\n  setDay,\n  openingHour,\n  closingHour,\n  openingBuffer,\n  closingBuffer,\n}) => {\n  const open = openingHour || day.open;\n  let close = closingHour || day.close;\n  close = close === 0 && open !== 0 ? 24 : close;\n\n  // create a list of all times in 1 hour increments between open and close\n  const openHours = React.useMemo(() => {\n    const times = [];\n    for (let i = open; i < close; i++) {\n      times.push(i);\n    }\n    return times;\n  }, [open, close]);\n\n  return (\n    <>\n      <Box>\n        <Table>\n          <TableHead>\n            <TableRow key=\"headRow\">\n              <TableCell sx={{ fontWeight: 'bold' }}>Hour</TableCell>\n              <TableCell sx={{ fontWeight: 'bold', width: '70%' }}># of prebooked slots</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {openHours.map((hour, index) => (\n              <TableRow key={hour}>\n                <TableCell sx={{ fontSize: '16px' }}>\n                  {`${formatHourNumber(hour)} - ${formatHourNumber(hour + 1)}`}\n                  {index === 0 && (\n                    <Typography variant=\"body2\">{`Opening buffer ${\n                      openingBuffer ?? day.openingBuffer ?? '-'\n                    } minutes`}</Typography>\n                  )}\n                  {index === openHours.length - 1 && (\n                    <Typography variant=\"body2\">{`Closing buffer ${\n                      closingBuffer ?? day.closingBuffer ?? '-'\n                    } minutes`}</Typography>\n                  )}\n                </TableCell>\n                <TableCell>\n                  <TextField\n                    type=\"number\"\n                    required\n                    defaultValue={day.hours.find((capacityTemp) => capacityTemp.hour === hour)?.capacity || 0}\n                    onChange={(newCapacity) => {\n                      const dayTemp = day;\n                      const tempHours: Capacity[] = [];\n                      for (let i = openingHour; i < close; i++) {\n                        let updatedHour = undefined;\n                        if (hour === i) {\n                          updatedHour = Number(newCapacity.target.value);\n                        } else {\n                          updatedHour = day.hours.find((hourTemp) => hourTemp.hour === i)?.capacity;\n                        }\n                        tempHours.push({\n                          hour: i as HourOfDay,\n                          capacity: updatedHour || 0,\n                        });\n                      }\n                      dayTemp.hours = tempHours;\n                      setDay(dayTemp);\n                    }}\n                    sx={{\n                      width: '100px',\n                    }}\n                    InputProps={{\n                      inputProps: {\n                        min: 0,\n                      },\n                    }}\n                    size=\"small\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n      {/* )} */}\n    </>\n  );\n};\n"]}