{"version":3,"file":"ChatModal.js","sourceRoot":"","sources":["ChatModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Close } from '@mui/icons-material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Avatar,\n  Box,\n  CircularProgress,\n  Dialog,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  Modal,\n  TextField,\n  ToggleButton,\n  ToggleButtonGroup,\n  useTheme,\n} from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { Patient } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { ChangeEvent, memo, ReactElement, UIEvent, useEffect, useMemo, useState } from 'react';\nimport { LocationWithWalkinSchedule } from 'src/pages/AddPatient';\nimport { AppointmentMessaging, ConversationMessage, initialsFromName, markAllMessagesRead, Timezone } from 'utils';\nimport { CompleteConfiguration } from '../../components/CompleteConfiguration';\nimport { LANGUAGES } from '../../constants';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport useEvolveUser, { EvolveUser } from '../../hooks/useEvolveUser';\nimport { getPatientName, removeHtmlTags } from '../../telemed/utils';\nimport { useFetchChatMessagesQuery, useGetMessagingConfigQuery, useSendMessagesMutation } from './chat.queries';\n\nfunction scrollToBottomOfChat(): void {\n  // this helps with the scroll working,\n  // not sure why setting it to 0 works.\n  // maybe the element scrollHeight isn't set\n  // and this waiting helps?\n  setTimeout(() => {\n    const element = document.getElementById('message-container');\n    if (element) {\n      element.scrollTop = element?.scrollHeight;\n    }\n  }, 0);\n}\n\nexport interface MessageModel extends ConversationMessage {\n  resolvedId?: string | undefined;\n}\n\nconst makePendingSentMessage = (text: string, timezone: string, sender: EvolveUser): MessageModel => {\n  const id = `pending_sent_message_${Math.round(Math.random() * 100)}`;\n  const now = DateTime.now().setZone(timezone);\n  // todo: consts for these format strings somewhere, or just send the date from BE and do all the formatting in one place\n  const sentDay = now.toLocaleString({ day: 'numeric', month: 'numeric', year: '2-digit' }, { locale: 'en-us' });\n  const sentTime = now.toLocaleString({ timeStyle: 'short' }, { locale: 'en-us' });\n\n  return {\n    id,\n    sender: sender.userName, // todo\n    sentDay,\n    sentTime,\n    content: text,\n    isRead: true,\n    resolvedId: undefined,\n    isFromPatient: false,\n  };\n};\n\nconst ChatModal = memo(\n  ({\n    appointment,\n    patient,\n    onClose,\n    onMarkAllRead,\n    quickTexts,\n  }: {\n    appointment: AppointmentMessaging;\n    patient?: Patient;\n    currentLocation?: LocationWithWalkinSchedule;\n    onClose: () => void;\n    onMarkAllRead: () => void;\n    quickTexts: { [key in LANGUAGES]: string }[] | string[];\n  }): ReactElement => {\n    const theme = useTheme();\n    const { oystehr } = useApiClients();\n    const currentUser = useEvolveUser();\n    const [_messages, _setMessages] = useState<MessageModel[]>([]);\n    const [messageText, setMessageText] = useState<string>('');\n    const [quickTextsOpen, setQuickTextsOpen] = useState<boolean>(false);\n    const [language, setLanguage] = useState<LANGUAGES>(LANGUAGES.english);\n    const [isMessagingSetup, setIsMessagingSetup] = useState<boolean>(true);\n\n    const [pendingMessageSend, setPendingMessageSend] = useState<MessageModel | undefined>();\n\n    const { patient: patientFromAppointment, smsModel: model } = appointment;\n    const timezone = DateTime.now().zoneName;\n\n    let patientName;\n    if (patientFromAppointment?.firstName || patientFromAppointment?.lastName)\n      patientName = `${patientFromAppointment?.firstName || ''} ${patientFromAppointment?.lastName || ''}`;\n\n    const numbersToSendTo = useMemo(() => {\n      const numbers = (model?.recipients ?? []).map((recipient) => recipient.smsNumber);\n      const uniqueNumbers = Array.from(new Set(numbers));\n      if (uniqueNumbers.length === 0) {\n        return undefined;\n      } else {\n        if (uniqueNumbers.length > 1) {\n          console.log('multiple numbers associated with this patient; using first');\n        }\n        return uniqueNumbers;\n      }\n    }, [model?.recipients]);\n\n    const sendMessagesMutation = useSendMessagesMutation(\n      model?.recipients || [],\n      messageText,\n      (sendResult) => {\n        if (sendResult) {\n          setPendingMessageSend(sendResult);\n          setMessageText('');\n          void refetchMessages({ throwOnError: true });\n        } else {\n          throw new Error('send message failed - no id returned');\n        }\n      },\n      (error) => {\n        console.error('send message failure: ', error);\n        setPendingMessageSend(undefined);\n      }\n    );\n\n    const { isFetching: isMessagesFetching, refetch: refetchMessages } = useFetchChatMessagesQuery(\n      timezone,\n      numbersToSendTo,\n      (messages) => {\n        _setMessages(messages);\n        setPendingMessageSend(undefined);\n      }\n    );\n\n    const [messages]: [MessageModel[]] = useMemo(() => {\n      const pending = pendingMessageSend ? [pendingMessageSend] : [];\n      const messagesToReturn = [..._messages, ...pending];\n      return [messagesToReturn];\n    }, [_messages, pendingMessageSend]);\n\n    const newMessagesStartId = useMemo(() => {\n      return messages.find((message) => {\n        return !message.isRead;\n      })?.id;\n    }, [messages]);\n\n    const hasUnreadMessages = model?.hasUnreadMessages;\n\n    const markAllRead = async (): Promise<void> => {\n      if (currentUser && oystehr && hasUnreadMessages) {\n        try {\n          await markAllMessagesRead({\n            chat: messages,\n            user: currentUser,\n            oystehr,\n          });\n          _setMessages(\n            messages.map((m) => {\n              return {\n                ...m,\n                isRead: true,\n              };\n            })\n          );\n          onMarkAllRead();\n        } catch (e) {\n          console.error('failed to mark messages as read: ', e);\n        }\n      }\n    };\n\n    const handleSendMessage = async (event: UIEvent, message: string): Promise<void> => {\n      event.preventDefault();\n\n      if (message.trim() === '') {\n        return;\n      }\n      if (!currentUser) {\n        throw new Error(`Message send failed. Current user is not defined`);\n      }\n      const newPendingMessage = makePendingSentMessage(message, timezone, currentUser);\n      setPendingMessageSend(newPendingMessage);\n      await sendMessagesMutation.mutateAsync(newPendingMessage);\n\n      void markAllRead();\n    };\n\n    const quickTextStyle = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      maxWidth: 'sm',\n      bgcolor: 'background.paper',\n      boxShadow: 24,\n      borderRadius: '4px',\n      p: '8px 16px',\n    };\n\n    const selectQuickText = (text: string): void => {\n      setMessageText(text);\n      setQuickTextsOpen(false);\n    };\n\n    const handleClose = (): void => {\n      void markAllRead();\n      onClose();\n    };\n\n    const hasQuickTextTranslations = (quickTexts: any): quickTexts is { [key in LANGUAGES]: string }[] => {\n      return typeof quickTexts[0] === 'object';\n    };\n\n    const MessageBodies: JSX.Element[] = useMemo(() => {\n      if (pendingMessageSend === undefined && isMessagesFetching) {\n        return [];\n      }\n      return messages.map((message) => {\n        const contentKey = message.resolvedId ?? message.id;\n        const isPending = message.id === pendingMessageSend?.id || message.id === pendingMessageSend?.resolvedId;\n        return (\n          <MessageBody\n            key={message.id}\n            isPending={isPending}\n            contentKey={contentKey}\n            message={message}\n            hasNewMessageLine={newMessagesStartId !== undefined && message.id === newMessagesStartId}\n            showDaySent={true} //keeping this config in case minds change again, YAGNI, I know\n            timezone={timezone}\n          />\n        );\n      });\n    }, [isMessagesFetching, messages, newMessagesStartId, pendingMessageSend, timezone]);\n\n    useEffect(() => {\n      if (MessageBodies.length) {\n        scrollToBottomOfChat();\n      }\n    }, [MessageBodies.length]);\n\n    const { isLoading: isMessagingConfigLoading } = useGetMessagingConfigQuery((data) => {\n      if (!data.transactionalSMSConfig && !data.conversationConfig) {\n        setIsMessagingSetup(false);\n      }\n    });\n\n    const handleSetup = (): void => {\n      window.open('https://docs.oystehr.com/ottehr/setup/messaging/', '_blank');\n    };\n\n    return (\n      <Dialog\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <form>\n          <Grid container>\n            <Grid item xs={12} sx={{ margin: '24px 24px 16px 24px' }}>\n              <Typography id=\"modal-title\" variant=\"h4\" sx={{ fontWeight: 600, color: theme.palette.primary.dark }}>\n                Chat with {patientName || getPatientName(patient?.name).firstLastName}\n              </Typography>\n              <Typography\n                id=\"modal-description\"\n                variant=\"h5\"\n                data-testid={dataTestIds.telemedEhrFlow.chatModalDescription}\n                sx={{ fontWeight: 600, color: theme.palette.primary.dark }}\n              >\n                {numbersToSendTo ? numbersToSendTo.join(',') : ''}\n              </Typography>\n              <IconButton\n                aria-label=\"Close\"\n                onClick={handleClose}\n                sx={{\n                  position: 'absolute',\n                  right: 16,\n                  top: 16,\n                }}\n              >\n                <Close />\n              </IconButton>\n            </Grid>\n            <Grid item xs={12}>\n              <Divider />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            id=\"message-container\"\n            sx={{ height: '400px', overflowY: 'scroll', padding: '24px 32px 16px 24px' }}\n          >\n            {(pendingMessageSend === undefined && isMessagesFetching) || isMessagingConfigLoading ? (\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <CircularProgress />\n              </Grid>\n            ) : (\n              <>{MessageBodies}</>\n            )}\n          </Grid>\n          {!isMessagingSetup && !isMessagingConfigLoading && (\n            <Grid item sx={{ margin: '24px' }}>\n              <CompleteConfiguration handleSetup={handleSetup} />\n            </Grid>\n          )}\n          <Divider />\n          <Grid container sx={{ margin: '16px 0 16px 24px' }}>\n            <Grid item xs={8.35}>\n              <TextField\n                id=\"patient-message\"\n                label=\"Message to the patient\"\n                value={messageText}\n                onPaste={(e) => e.preventDefault()}\n                disabled={pendingMessageSend !== undefined}\n                autoComplete=\"off\"\n                onChange={(event: ChangeEvent<HTMLInputElement>) => setMessageText(event.target.value)}\n                onKeyDown={async (e) => {\n                  if (e.key === 'Enter' && !e.shiftKey) {\n                    await handleSendMessage(e, messageText);\n                  }\n                }}\n                fullWidth\n                multiline\n              />\n            </Grid>\n\n            <Grid item xs={3} sx={{ alignSelf: 'center', textAlign: 'center', display: 'flex' }}>\n              <LoadingButton\n                sx={{ marginX: 1, borderRadius: '100px', textTransform: 'none', fontWeight: 500 }}\n                variant=\"outlined\"\n                onClick={() => setQuickTextsOpen(true)}\n                disabled={pendingMessageSend !== undefined}\n              >\n                Quick text\n              </LoadingButton>\n              <LoadingButton\n                sx={{\n                  background: theme.palette.primary.main,\n                  borderRadius: '100px',\n                  textTransform: 'none',\n                }}\n                variant=\"contained\"\n                // size=\"small\"\n                startIcon={<SendIcon />}\n                onClick={(event) => handleSendMessage(event, messageText)}\n                loading={pendingMessageSend !== undefined}\n                type=\"submit\"\n              >\n                Send\n              </LoadingButton>\n            </Grid>\n          </Grid>\n          <Modal\n            open={quickTextsOpen}\n            onClose={() => {\n              setQuickTextsOpen(false);\n            }}\n          >\n            <Grid container sx={quickTextStyle}>\n              <Grid item sx={{ marginTop: '6px', width: '100%' }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                  <Typography\n                    variant=\"h6\"\n                    sx={{ fontWeight: '600 !important', color: theme.palette.primary.main, marginBottom: '4px' }}\n                  >\n                    Quick texts\n                  </Typography>\n                  {hasQuickTextTranslations(quickTexts) && (\n                    <ToggleButtonGroup\n                      sx={{\n                        '& .MuiToggleButton-sizeSmall': {\n                          textTransform: 'none',\n                          color: theme.palette.primary.main,\n                          fontSize: '13px',\n                          fontWeight: 500,\n                        },\n                        '& .MuiToggleButton-sizeSmall:hover': {\n                          color: theme.palette.primary.contrastText,\n                          backgroundColor: theme.palette.primary.light,\n                        },\n                        '& .Mui-selected': {\n                          color: `${theme.palette.primary.contrastText} !important`,\n                          backgroundColor: `${theme.palette.primary.main} !important`,\n                          textTransform: 'none',\n                        },\n                      }}\n                      size=\"small\"\n                      exclusive\n                      value={language}\n                      onChange={(e: React.MouseEvent<HTMLElement>, value: LANGUAGES) => {\n                        setLanguage(value);\n                      }}\n                    >\n                      <ToggleButton value={LANGUAGES.english} sx={{ padding: '4px 10px 4px 10px' }}>\n                        English\n                      </ToggleButton>\n                      <ToggleButton value={LANGUAGES.spanish} sx={{ padding: '4px 10px 4px 10px' }}>\n                        Spanish\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  )}\n                </Box>\n                <Typography variant=\"body2\">Select the text to populate the message to the patient</Typography>\n              </Grid>\n              <Grid item>\n                <List sx={{ padding: 0 }}>\n                  {hasQuickTextTranslations(quickTexts)\n                    ? quickTexts\n                        .filter((text) => text[language])\n                        .map((text) => (\n                          <ListItem\n                            key={text[language]}\n                            sx={{\n                              padding: 1,\n                              my: '12px',\n                              backgroundColor: 'rgba(77, 21, 183, 0.04)',\n                              cursor: 'pointer',\n                            }}\n                            onClick={() => selectQuickText(text[language])}\n                          >\n                            <Typography variant=\"body1\">{text[language]}</Typography>\n                          </ListItem>\n                        ))\n                    : quickTexts.map((text) => {\n                        return (\n                          <ListItem\n                            key={text}\n                            sx={{\n                              padding: 1,\n                              my: '12px',\n                              backgroundColor: 'rgba(77, 21, 183, 0.04)',\n                              cursor: 'pointer',\n                            }}\n                            onClick={() => selectQuickText(removeHtmlTags(text))}\n                          >\n                            <Typography variant=\"body1\">{parseTextToJSX(text)}</Typography>\n                          </ListItem>\n                        );\n                      })}\n                </List>\n              </Grid>\n            </Grid>\n          </Modal>\n        </form>\n      </Dialog>\n    );\n  }\n);\n\nexport default ChatModal;\n\ninterface MessageBodyProps {\n  isPending: boolean;\n  hasNewMessageLine: boolean;\n  message: ConversationMessage;\n  contentKey: string;\n  showDaySent: boolean;\n  timezone: Timezone;\n}\nconst MessageBody: React.FC<MessageBodyProps> = (props) => {\n  const { isPending, message, contentKey, hasNewMessageLine, showDaySent, timezone } = props;\n  const theme = useTheme();\n  const authorInitials = initialsFromName(message.sender);\n\n  const sentTimeLabel = (() => {\n    if (!message.sentTime || !message.sentDay) return '';\n    const sentDate = DateTime.fromFormat(`${message.sentDay} ${message.sentTime}`, 'M/d/yy h:mm a', {\n      zone: timezone,\n    });\n\n    return sentDate.toFormat('M/d/yy h:mm a ZZZZ', { locale: 'en-US' });\n  })();\n\n  return (\n    <Grid container item key={contentKey} spacing={3} sx={{ opacity: isPending ? '0.5' : '1.0' }}>\n      {hasNewMessageLine && (\n        <Grid item xs={12}>\n          <Divider\n            sx={{\n              '&::before, &::after': { borderTop: `thin solid ${theme.palette.warning.main}` },\n              color: theme.palette.warning.main,\n            }}\n          >\n            New messages\n          </Divider>\n        </Grid>\n      )}\n      <Grid item container display={'table-row-group'} xs={12} spacing={0}>\n        {showDaySent && (\n          <Grid item xs={12} sx={{ paddingBottom: '0px' }}>\n            <Typography\n              variant=\"body1\"\n              color={'rgb(0, 0, 0, 0.7)'}\n              textAlign=\"center\"\n              sx={{\n                paddingTop: '40px',\n              }}\n            >\n              {`${sentTimeLabel}`}\n            </Typography>\n          </Grid>\n        )}\n        <Grid\n          item\n          container\n          xs={12}\n          display={'table-row'}\n          sx={{\n            opacity: isPending ? '0.5' : '1.0',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n          }}\n        >\n          <Avatar\n            sx={{\n              backgroundColor: message.isFromPatient ? theme.palette.secondary.main : theme.palette.primary.main,\n              fontSize: authorInitials.length > 3 ? '12px' : '16px',\n              marginInlineEnd: '8px',\n            }}\n          >\n            {authorInitials}\n          </Avatar>\n          <Typography variant=\"body1\" color=\"primary.dark\" fontWeight={600}>\n            {message.sender}\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          display={'table-row'}\n          xs={12}\n          sx={{\n            opacity: isPending ? '0.5' : '1.0',\n            padding: '2px',\n            paddingTop: '8px',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Grid item xs={11}>\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', paddingBottom: '20px' }}>\n              {message.content}\n            </Typography>\n          </Grid>\n          <Grid item xs={1}>\n            {/*\n              more yagni...\n              <Typography variant=\"body1\" color={'rgb(0, 0, 0, 0.7)'} sx={{ marginLeft: '10px' }} textAlign=\"right\">\n              {message.sentTime}\n            </Typography>\n            */}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nfunction parseTextToJSX(text: string): JSX.Element[] {\n  // Split the string at the custom HTML tag\n  const parts = text.split(/(<phone.*?<\\/phone>)/g).filter(Boolean);\n\n  return parts.map((part, index) => {\n    if (part.startsWith('<phone')) {\n      // Extract the content inside the custom HTML tag\n      const match = part.match(/<phone[^>]*>(.*?)<\\/phone>/);\n      if (match) {\n        return (\n          <span key={index} style={{ whiteSpace: 'nowrap' }}>\n            {match[1]}\n          </span>\n        );\n      }\n    }\n\n    return <span key={index}>{part}</span>;\n  });\n}\n"]}