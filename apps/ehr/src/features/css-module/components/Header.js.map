{"version":3,"file":"Header.js","sourceRoot":"","sources":["Header.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Box, Grid, IconButton, MenuItem, Skeleton, Stack, TextField, Typography } from '@mui/material';\nimport { TypographyOptions } from '@mui/material/styles/createTypography';\nimport { styled } from '@mui/system';\nimport { enqueueSnackbar } from 'notistack';\nimport { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  getAdmitterPractitionerId,\n  getAttendingPractitionerId,\n  PRACTITIONER_CODINGS,\n  ProviderDetails,\n  VisitStatusLabel,\n} from 'utils';\nimport { getEmployees } from '../../../api/api';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed';\nimport { useNavigationContext } from '../context/NavigationContext';\nimport { useAppointment } from '../hooks/useAppointment';\nimport { usePractitionerActions } from '../hooks/usePractitioner';\nimport { ChangeStatusDropdown } from './ChangeStatusDropdown';\nimport { InternalNotes } from './InternalNotes';\nimport { PrintVisitLabelButton } from './PrintVisitLabelButton';\nimport { ProfileAvatar } from './ProfileAvatar';\nimport { SwitchIntakeModeButton } from './SwitchIntakeModeButton';\n\nconst HeaderWrapper = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  padding: '8px 16px 8px 0',\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  boxShadow: '0px 2px 4px -1px #00000033',\n}));\n\nconst PatientName = styled(Typography)(({ theme }) => ({\n  ...(theme?.typography as TypographyOptions).h4,\n  textAlign: 'left',\n  fontWeight: 'bold',\n  color: theme.palette.primary.dark,\n  cursor: 'pointer',\n}));\n\nconst PatientMetadata = styled(Typography)(({ theme }) => ({\n  fontSize: '14px',\n  fontWeight: 400,\n  color: theme.palette.text.secondary,\n}));\n\nconst PatientInfoWrapper = styled(Box)({\n  display: 'flex',\n  alignItems: 'baseline',\n  gap: '8px',\n});\n\nconst format = (\n  value: string | undefined,\n  placeholder = '',\n  keepPlaceholderIfValueFulfilled = false,\n  emptyValuePlaceholder = 'N/A'\n): string => {\n  const prefix = !value || (keepPlaceholderIfValueFulfilled && value) ? `${placeholder}: ` : '';\n  return prefix + (value || emptyValuePlaceholder);\n};\n\nexport const Header = (): JSX.Element => {\n  const { id: appointmentID } = useParams();\n  const navigate = useNavigate();\n  const {\n    resources: { appointment, patient },\n    mappedData,\n    visitState: telemedData,\n    refetch,\n  } = useAppointment(appointmentID);\n  const { encounter } = telemedData;\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const encounterId = encounter?.id;\n  const assignedIntakePerformerId = encounter ? getAdmitterPractitionerId(encounter) : undefined;\n  const assignedProviderId = encounter ? getAttendingPractitionerId(encounter) : undefined;\n  const patientName = format(mappedData?.patientName, 'Name');\n  const pronouns = format(mappedData?.pronouns, 'Pronouns');\n  const gender = format(mappedData?.gender, 'Gender');\n  const language = format(mappedData?.preferredLanguage, 'Lang');\n  const dob = format(mappedData?.DOB, 'DOB', true);\n  const allergies = format(\n    chartData?.allergies\n      ?.filter((allergy) => allergy.current === true)\n      ?.map((allergy) => allergy.name)\n      ?.join(', '),\n    'Allergy',\n    true,\n    'none'\n  );\n  const reasonForVisit = format(appointment?.description, 'Reason for Visit');\n  const userId = format(patient?.id);\n  const [_status, setStatus] = useState<VisitStatusLabel | undefined>(undefined);\n  const { interactionMode, setInteractionMode } = useNavigationContext();\n  const nextMode = interactionMode === 'intake' ? 'provider' : 'intake';\n  const {\n    isEncounterUpdatePending: isUpdatingPractitionerForIntake,\n    handleUpdatePractitioner: handleUpdatePractitionerForIntake,\n  } = usePractitionerActions(encounter, 'start', PRACTITIONER_CODINGS.Admitter);\n  const {\n    isEncounterUpdatePending: isUpdatingPractitionerForProvider,\n    handleUpdatePractitioner: handleUpdatePractitionerForProvider,\n  } = usePractitionerActions(encounter, 'start', PRACTITIONER_CODINGS.Attender);\n  const isEncounterUpdatePending = isUpdatingPractitionerForIntake || isUpdatingPractitionerForProvider;\n  const { oystehrZambda } = useApiClients();\n\n  const { data: employees, isFetching: employeesIsFetching } = useQuery(\n    ['get-employees', { oystehrZambda }],\n    async () => {\n      if (oystehrZambda) {\n        const getEmployeesRes = await getEmployees(oystehrZambda);\n        const providers = getEmployeesRes.employees.filter((employee) => employee.isProvider);\n        const formattedProviders: ProviderDetails[] = providers.map((prov) => {\n          const id = prov.profile.split('/')[1];\n          return {\n            practitionerId: id,\n            name: `${prov.firstName} ${prov.lastName}`,\n          };\n        });\n\n        // TODO: remove this once we have nurses role\n        // const nonProviders = getEmployeesRes.employees.filter((employee) => !employee.isProvider);\n        const nonProviders = getEmployeesRes.employees;\n        const formattedNonProviders: ProviderDetails[] = nonProviders.map((prov) => {\n          const id = prov.profile.split('/')[1];\n          return {\n            practitionerId: id,\n            name: `${prov.firstName} ${prov.lastName}`,\n          };\n        });\n        return {\n          providers: formattedProviders,\n          nonProviders: formattedNonProviders,\n        };\n      }\n      return null;\n    }\n  );\n\n  if (employeesIsFetching) {\n    return <HeaderSkeleton />;\n  }\n\n  if (!employees) {\n    return <Box sx={{ padding: '16px' }}>There must be some employees registered to use charting.</Box>;\n  }\n\n  const handleUpdateIntakeAssignment = async (practitionerId: string): Promise<void> => {\n    try {\n      if (!appointmentID) return;\n      await handleUpdatePractitionerForIntake(practitionerId);\n      await refetch();\n    } catch (error: any) {\n      console.log(error.message);\n      enqueueSnackbar(`An error occurred trying to update the intake assignment. Please try again.`, {\n        variant: 'error',\n      });\n    }\n  };\n\n  const handleUpdateProviderAssignment = async (practitionerId: string): Promise<void> => {\n    try {\n      if (!appointmentID) return;\n      await handleUpdatePractitionerForProvider(practitionerId);\n      await refetch();\n    } catch (error: any) {\n      console.log(error.message);\n      enqueueSnackbar(`An error occurred trying to update the provider assignment. Please try again.`, {\n        variant: 'error',\n      });\n    }\n  };\n\n  const handleSwitchMode = async (): Promise<void> => {\n    try {\n      if (!appointmentID) return;\n      setInteractionMode(nextMode, true);\n    } catch (error: any) {\n      console.log(error.message);\n      enqueueSnackbar(`An error occurred trying to switch to ${nextMode} mode. Please try again.`, {\n        variant: 'error',\n      });\n    }\n  };\n\n  return (\n    <HeaderWrapper data-testid={dataTestIds.cssHeader.container}>\n      <Stack flexDirection=\"row\">\n        <Box sx={{ width: 70 }} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <IconButton onClick={() => navigate('/visits')} sx={{ width: 40, height: 40 }}>\n            <ArrowBackIcon />\n          </IconButton>\n        </Box>\n        <Grid container spacing={2} sx={{ padding: '0 18px 0 4px' }}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Grid container alignItems=\"center\" spacing={2}>\n                  <Grid item>\n                    <ChangeStatusDropdown appointmentID={appointmentID} onStatusChange={setStatus} />\n                  </Grid>\n                  <Grid item>\n                    <PatientMetadata>\n                      PID:{' '}\n                      <u style={{ cursor: 'pointer' }} onClick={() => navigate(`/patient/${userId}`)}>\n                        {userId}\n                      </u>\n                    </PatientMetadata>\n                  </Grid>\n                  <Grid item>\n                    <Stack direction=\"row\" spacing={2}>\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <PatientMetadata>Intake: </PatientMetadata>\n                        <TextField\n                          select\n                          fullWidth\n                          data-testid={dataTestIds.cssHeader.intakePractitionerInput}\n                          sx={{ minWidth: 120 }}\n                          variant=\"standard\"\n                          value={assignedIntakePerformerId ?? ''}\n                          disabled={isUpdatingPractitionerForIntake}\n                          onChange={(e) => {\n                            void handleUpdateIntakeAssignment(e.target.value);\n                          }}\n                        >\n                          {employees.nonProviders\n                            ?.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n                            ?.map((nonProvider) => (\n                              <MenuItem key={nonProvider.practitionerId} value={nonProvider.practitionerId}>\n                                {nonProvider.name}\n                              </MenuItem>\n                            ))}\n                        </TextField>\n                      </Stack>\n\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <PatientMetadata>Provider: </PatientMetadata>\n                        <TextField\n                          select\n                          fullWidth\n                          data-testid={dataTestIds.cssHeader.providerPractitionerInput}\n                          sx={{ minWidth: 120 }}\n                          variant=\"standard\"\n                          value={assignedProviderId ?? ''}\n                          disabled={isUpdatingPractitionerForProvider}\n                          onChange={(e) => {\n                            void handleUpdateProviderAssignment(e.target.value);\n                          }}\n                        >\n                          {employees.providers\n                            ?.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n                            ?.map((provider) => (\n                              <MenuItem key={provider.practitionerId} value={provider.practitionerId}>\n                                {provider.name}\n                              </MenuItem>\n                            ))}\n                        </TextField>\n                      </Stack>\n                    </Stack>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <IconButton onClick={() => navigate('/visits')}>\n                  <CloseIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sx={{ mt: -2 }}>\n            <Grid container alignItems=\"center\" spacing={2}>\n              <Grid item>\n                <ProfileAvatar appointmentID={appointmentID} />\n              </Grid>\n              <Grid item xs>\n                <PatientInfoWrapper>\n                  <PatientName\n                    data-testid={dataTestIds.cssHeader.patientName}\n                    onClick={() => navigate(`/patient/${userId}`)}\n                  >\n                    {patientName}\n                  </PatientName>\n                  <PrintVisitLabelButton encounterId={encounterId} />\n                  <PatientMetadata sx={{ fontWeight: 500 }}>{dob}</PatientMetadata> |\n                  <PatientMetadata\n                    noWrap\n                    sx={{ fontWeight: chartData?.allergies?.length ? 700 : 400, maxWidth: '250px' }}\n                  >\n                    {allergies}\n                  </PatientMetadata>\n                </PatientInfoWrapper>\n                <PatientInfoWrapper>\n                  <PatientMetadata>{pronouns}</PatientMetadata> | <PatientMetadata>{gender}</PatientMetadata> |\n                  <PatientMetadata>{language}</PatientMetadata> |<PatientMetadata>{reasonForVisit}</PatientMetadata>\n                </PatientInfoWrapper>\n              </Grid>\n              <Grid\n                item\n                sx={{\n                  '@media (max-width: 1179px)': {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 0.5,\n                  },\n                }}\n              >\n                <SwitchIntakeModeButton\n                  isDisabled={!appointmentID || isEncounterUpdatePending}\n                  handleSwitchMode={handleSwitchMode}\n                  nextMode={nextMode}\n                />\n                {encounterId ? <InternalNotes encounterId={encounterId} /> : null}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Stack>\n    </HeaderWrapper>\n  );\n};\n\nconst HeaderSkeleton = (): JSX.Element => {\n  return (\n    <HeaderWrapper>\n      <Stack flexDirection=\"row\">\n        <Box sx={{ width: 70 }} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <Skeleton sx={{ height: 40, width: 40 }} animation=\"wave\" variant=\"circular\" />\n        </Box>\n        <Grid container spacing={2} sx={{ padding: '0 18px 0 4px' }}>\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <Grid container alignItems=\"center\" spacing={2}>\n                  <Grid item>\n                    <Skeleton sx={{ width: 120, height: 40 }} animation=\"wave\" />\n                  </Grid>\n                  <Grid item>\n                    <Skeleton sx={{ width: 200 }} animation=\"wave\" variant=\"text\" />\n                  </Grid>\n                  <Grid item>\n                    <Stack direction=\"row\" spacing={2}>\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Skeleton sx={{ width: 60 }} animation=\"wave\" variant=\"text\" />\n                        <Skeleton sx={{ width: 120 }} animation=\"wave\" />\n                      </Stack>\n\n                      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                        <Skeleton sx={{ width: 60 }} animation=\"wave\" variant=\"text\" />\n                        <Skeleton sx={{ width: 120 }} animation=\"wave\" />\n                      </Stack>\n                    </Stack>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Skeleton sx={{ height: 40, width: 40 }} animation=\"wave\" variant=\"circular\" />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sx={{ mt: -2 }}>\n            <Grid container alignItems=\"center\" spacing={2}>\n              <Grid item>\n                <Skeleton sx={{ height: 50, width: 50 }} animation=\"wave\" variant=\"circular\" />\n              </Grid>\n              <Grid item xs>\n                <PatientInfoWrapper>\n                  <Skeleton sx={{ width: 160 }} animation=\"wave\" variant=\"text\" />\n                  <Skeleton sx={{ width: 120 }} animation=\"wave\" variant=\"text\" />\n                </PatientInfoWrapper>\n                <PatientInfoWrapper>\n                  <Skeleton sx={{ width: 120 }} animation=\"wave\" variant=\"text\" />\n                  <Skeleton sx={{ width: 140 }} animation=\"wave\" variant=\"text\" />\n                </PatientInfoWrapper>\n              </Grid>\n              <Grid\n                item\n                sx={{\n                  '@media (max-width: 1179px)': {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 0.5,\n                  },\n                }}\n              >\n                <Skeleton width={200} height={40} animation=\"wave\" />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Stack>\n    </HeaderWrapper>\n  );\n};\n"]}