{"version":3,"file":"SwitchIntakeModeButton.js","sourceRoot":"","sources":["SwitchIntakeModeButton.tsx"],"names":[],"mappings":";;;AAAA,+BAA0B;AAC1B,kEAA+D;AAC/D,iDAAgD;AAEzC,IAAM,sBAAsB,GAI9B,UAAC,EAA0C;QAAxC,UAAU,gBAAA,EAAE,gBAAgB,sBAAA,EAAE,QAAQ,cAAA;IAC5C,OAAO,CACL,CAAC,6BAAa,CACZ,WAAW,CAAC,CAAC,2BAAW,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAC9D,OAAO,CAAC,WAAW,CACnB,QAAQ,CAAC,CAAC,UAAU,CAAC,CACrB,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAE1B;gBAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE;IACnE,EAAE,6BAAa,CAAC,CACjB,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,sBAAsB,0BAejC","sourcesContent":["import React from 'react';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { ButtonRounded } from './RoundedButton';\n\nexport const SwitchIntakeModeButton: React.FC<{\n  isDisabled: boolean;\n  handleSwitchMode: () => void;\n  nextMode: string;\n}> = ({ isDisabled, handleSwitchMode, nextMode }) => {\n  return (\n    <ButtonRounded\n      data-testid={dataTestIds.cssHeader.switchModeButton(nextMode)}\n      variant=\"contained\"\n      disabled={isDisabled}\n      onClick={handleSwitchMode}\n    >\n      Switch to {nextMode.charAt(0).toUpperCase() + nextMode.slice(1)} view\n    </ButtonRounded>\n  );\n};\n"]}