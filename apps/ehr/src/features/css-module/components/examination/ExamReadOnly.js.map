{"version":3,"file":"ExamReadOnly.js","sourceRoot":"","sources":["ExamReadOnly.tsx"],"names":[],"mappings":";;;AAAA,0CAAoC;AACpC,+BAAkC;AAClC,+BAAwF;AACxF,+CAAsF;AACtF,gFAAwG;AAEjG,IAAM,YAAY,GAAO;IAC9B,OAAO,CACL,CAAC,uBAAa,CAAC,KAAK,CAAC,aAAa,CAChC;MAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,CAAC,EAAE,CAAC;YACJ,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,GAAG,EAAE,CAAC;SACP,CAAC,CAEF;QAAA,CAAC,yBAAiB,CAAC,AAAD,EACpB;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,uBAAa,CAAC,CACjB,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,YAAY,gBAevB;AAEK,IAAM,iBAAiB,GAAO;IACnC,IAAM,gBAAgB,GAAG,IAAA,0CAAgC,GAAE,CAAC;IAE5D,OAAO,CACL,EACE;MAAA,CAAC,4BAAoB,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAClC,CAAC,eAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CACxB;UAAA,CAAC,2BAAe,CACd,KAAK,CAAC,CAAC,UAAG,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAG,CAAC,CAC1E,KAAK,CAAC,CAAC,iDAAyC;iBAC7C,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,IAAI,KAAK,IAAI,EAArB,CAAqB,CAAC;iBAC1C,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,EAArC,CAAqC,CAAC,CAAC,EAGhE;;UAAA,CAAC,6BAAiB,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,UAAG,IAAI,aAAU,CAAC,CAAC,EAC/D;QAAA,EAAE,eAAK,CAAC,QAAQ,CAAC,CAClB,EAXmC,CAWnC,CAAC,CACJ;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAnBW,QAAA,iBAAiB,qBAmB5B","sourcesContent":["import { Box } from '@mui/material';\nimport React, { FC } from 'react';\nimport { IN_PERSON_EXAM_CARDS, inPersonExamObservationFieldsDetailsArray } from 'utils';\nimport { AccordionCard, useInPersonExamObservationsStore } from '../../../../telemed';\nimport { ExamReviewComment, ExamReviewGroup } from '../../../../telemed/features/appointment/ReviewTab';\n\nexport const ExamReadOnly: FC = () => {\n  return (\n    <AccordionCard label=\"Examination\">\n      <Box\n        sx={{\n          p: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        <ExamReadOnlyBlock />\n      </Box>\n    </AccordionCard>\n  );\n};\n\nexport const ExamReadOnlyBlock: FC = () => {\n  const examObservations = useInPersonExamObservationsStore();\n\n  return (\n    <>\n      {IN_PERSON_EXAM_CARDS.map((card) => (\n        <React.Fragment key={card}>\n          <ExamReviewGroup\n            label={`${String(card).charAt(0).toUpperCase() + String(card).slice(1)}:`}\n            items={inPersonExamObservationFieldsDetailsArray\n              .filter((details) => details.card === card)\n              .filter((details) => examObservations[details.field].value)}\n          />\n\n          <ExamReviewComment item={examObservations[`${card}-comment`]} />\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\n"]}