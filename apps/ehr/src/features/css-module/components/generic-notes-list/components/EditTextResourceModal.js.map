{"version":3,"file":"EditTextResourceModal.js","sourceRoot":"","sources":["EditTextResourceModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Box,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { RoundedButton } from '../../../../../components/RoundedButton';\nimport { EditableNote, NoteLocales } from '../types';\nimport { TextFieldStyled } from './ui/TextFieldStyled';\n\nexport const EditNoteModal: React.FC<{\n  open: boolean;\n  onClose: () => void;\n  entity: EditableNote;\n  onEdit: (entity: EditableNote, newText: string) => Promise<void>;\n  locales: NoteLocales;\n}> = ({ open, onClose, entity, onEdit, locales }) => {\n  const theme = useTheme();\n  const [editedText, setEditedText] = useState(entity.text);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setEditedText(e.target.value);\n  };\n\n  const handleSave = async (): Promise<void> => {\n    if (!editedText) return;\n    setIsSaving(true);\n    try {\n      await onEdit(entity, editedText);\n      onClose();\n    } catch {\n      enqueueSnackbar(locales.getGenericErrorMessage(), { variant: 'error' });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" alignItems=\"center\" color={theme.palette.primary.dark}>\n          <Typography variant=\"h4\">{locales.editModalTitle}</Typography>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <TextFieldStyled\n          autoFocus\n          margin=\"dense\"\n          id=\"entity-text\"\n          label={locales.editModalPlaceholder}\n          type=\"text\"\n          fullWidth\n          multiline\n          rows={6}\n          variant=\"outlined\"\n          value={editedText}\n          onChange={handleChange}\n          sx={{ mt: 2 }}\n        />\n      </DialogContent>\n      <DialogActions sx={{ px: 3, py: 1, pb: 3 }}>\n        <RoundedButton onClick={onClose} variant=\"outlined\" sx={{ color: 'indigo', borderColor: 'indigo', mr: 1 }}>\n          {locales.getLeaveButtonText()}\n        </RoundedButton>\n        <RoundedButton\n          disabled={!editedText || isSaving}\n          onClick={handleSave}\n          variant=\"contained\"\n          sx={{ bgcolor: 'indigo', '&:hover': { bgcolor: 'indigo' } }}\n          startIcon={isSaving ? <CircularProgress size={20} color=\"inherit\" /> : null}\n        >\n          {locales.getSaveButtonText(isSaving)}\n        </RoundedButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n"]}