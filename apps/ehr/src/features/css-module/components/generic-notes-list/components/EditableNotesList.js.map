{"version":3,"file":"EditableNotesList.js","sourceRoot":"","sources":["EditableNotesList.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { CircularProgress, Grid, useTheme } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { RoundedButton } from '../../../../../components/RoundedButton';\nimport { CSSLoader } from '../../CSSLoader';\nimport { useNoteHandlers } from '../hooks/useNoteHandlers';\nimport { EditableNotesListProps } from '../types';\nimport { NoteEntity } from './NoteEntity';\nimport { ButtonStyled } from './ui/ButtonStyled';\nimport { PaperStyled } from './ui/PaperStyled';\nimport { TextFieldStyled } from './ui/TextFieldStyled';\n\nexport const EditableNotesList: React.FC<EditableNotesListProps> = ({\n  currentEncounterId,\n  locales,\n  apiConfig,\n  encounterId,\n  patientId,\n  separateEncounterNotes,\n}) => {\n  const { entities, isLoading, handleSave, handleEdit, handleDelete } = useNoteHandlers({\n    encounterId,\n    patientId,\n    apiConfig: apiConfig,\n    locales: locales,\n  });\n\n  const theme = useTheme();\n  const [isSaving, setIsSaving] = useState(false);\n  const [isMoreEntitiesShown, setIsMoreEntitiesShown] = useState(false);\n  const [savingEntityText, setSavingEntityText] = useState('');\n\n  const toggleShowMore = (): void => {\n    setIsMoreEntitiesShown((state) => !state);\n  };\n\n  const handleSaveEntity = async (text: string): Promise<void> => {\n    if (!text) return;\n    setIsSaving(true);\n    try {\n      await handleSave(text);\n      setSavingEntityText('');\n    } catch {\n      enqueueSnackbar(locales.getErrorMessage('saving', locales.entityLabel), { variant: 'error' });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const currentEncounterEntities = entities.filter((entity) => entity.encounterId === currentEncounterId);\n  const otherEncountersEntities = entities.filter((entity) => entity.encounterId !== currentEncounterId);\n\n  if (!entities.length && isLoading)\n    return <CSSLoader height=\"80px\" marginTop=\"20px\" backgroundColor={theme.palette.background.paper} />;\n\n  return (\n    <PaperStyled>\n      <Grid container spacing={1} alignItems=\"center\" sx={{ p: 3 }}>\n        <Grid item xs>\n          <TextFieldStyled\n            onKeyDown={(event: React.KeyboardEvent) => {\n              if (event.key === 'Enter' && !event.shiftKey) {\n                event.preventDefault();\n                if (!savingEntityText) return;\n                void handleSaveEntity(savingEntityText);\n              }\n            }}\n            onChange={(e) => setSavingEntityText(e.target.value)}\n            value={savingEntityText}\n            disabled={isSaving}\n            label={`Enter ${locales.entityLabel}...`}\n          />\n        </Grid>\n        <Grid item>\n          <RoundedButton\n            disabled={!savingEntityText || isSaving}\n            onClick={() => handleSaveEntity(savingEntityText)}\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{\n              height: '46px',\n              minWidth: '80px',\n              px: 2,\n            }}\n            startIcon={isSaving ? <CircularProgress size={20} color=\"inherit\" /> : null}\n          >\n            {locales.getAddButtonText(isSaving)}\n          </RoundedButton>\n        </Grid>\n      </Grid>\n\n      {currentEncounterEntities.map((entity) => (\n        <NoteEntity\n          key={entity.resourceId}\n          entity={entity}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n          locales={locales}\n        />\n      ))}\n\n      {otherEncountersEntities.length > 0 && separateEncounterNotes && (\n        <ButtonStyled\n          onClick={toggleShowMore}\n          startIcon={isMoreEntitiesShown ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n        >\n          {locales.getMoreButtonText(isMoreEntitiesShown)}\n        </ButtonStyled>\n      )}\n\n      {(isMoreEntitiesShown || !separateEncounterNotes) &&\n        otherEncountersEntities.map((entity) => (\n          <NoteEntity\n            key={entity.resourceId}\n            entity={entity}\n            onEdit={handleEdit}\n            onDelete={handleDelete}\n            locales={locales}\n          />\n        ))}\n    </PaperStyled>\n  );\n};\n"]}