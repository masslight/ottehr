{"version":3,"file":"useChartDataCacheKey.js","sourceRoot":"","sources":["useChartDataCacheKey.ts"],"names":[],"mappings":";;;AAAA,+BAAgC;AAEhC,oEAA+D;AAC/D,yEAAwE;AACxE,kDAAwH;AACxH,wFAAuF;AAGhF,IAAM,oBAAoB,GAAG,UAAC,SAA8B,EAAE,YAA0B;IAC7F,IAAM,WAAW,GAAG,IAAA,6BAAmB,EAAC,UAAC,KAAK,YAAK,OAAA,MAAA,KAAK,CAAC,SAAS,0CAAE,EAAE,CAAA,EAAA,CAAC,CAAC;IACxE,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IACrB,IAAA,oBAAoB,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,sBAAsB,CAAC,CAAC,qBAAhE,CAAiE;IACrF,IAAuB,UAAU,GAAK,IAAA,wCAA8B,GAAE,sBAArC,CAAsC;IAC/E,IAAM,QAAQ,GAAsB,IAAA,eAAO,EAAC;;QAC1C,IAAM,eAAe,GAAG,YAAY,CAAC,CAAC,WAAG,GAAC,SAAS,IAAG,YAAY,MAAG,CAAC,CAAC,SAAS,CAAC;QAEjF,OAAO,CAAC,mCAAyB,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;IACtH,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,oBAAoB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IAE9F,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAbW,QAAA,oBAAoB,wBAa/B","sourcesContent":["import { useMemo } from 'react';\nimport { ChartDataFieldsKeys, SearchParams } from 'utils';\nimport useEvolveUser from '../../../../../hooks/useEvolveUser';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { CHART_DATA_QUERY_KEY_BASE, useAppointmentStore, useGetAppointmentAccessibility } from '../../../../../telemed';\nimport { useOystehrAPIClient } from '../../../../../telemed/hooks/useOystehrAPIClient';\nimport { ChartDataCacheKey } from '../../../../../telemed/state/appointment/appointment.queries';\n\nexport const useChartDataCacheKey = (fieldName: ChartDataFieldsKeys, searchParams: SearchParams): ChartDataCacheKey => {\n  const encounterId = useAppointmentStore((state) => state.encounter?.id);\n  const apiClient = useOystehrAPIClient();\n  const user = useEvolveUser();\n  const { isAppointmentLoading } = getSelectors(useAppointmentStore, ['isAppointmentLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const cacheKey: ChartDataCacheKey = useMemo(() => {\n    const requestedFields = searchParams ? { [fieldName]: searchParams } : undefined;\n\n    return [CHART_DATA_QUERY_KEY_BASE, apiClient, encounterId, user, isReadOnly, isAppointmentLoading, requestedFields];\n  }, [apiClient, fieldName, searchParams, encounterId, isAppointmentLoading, isReadOnly, user]);\n\n  return cacheKey;\n};\n"]}