{"version":3,"file":"useEditNote.js","sourceRoot":"","sources":["useEditNote.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAoC;AACpC,2CAA6C;AAE7C,oEAA+D;AAC/D,wFAAuF;AACvF,4DAA2D;AAE3D,+DAA8D;AAEvD,IAAM,WAAW,GAAgB,UAAC,EAA0B;;QAAxB,WAAW,iBAAA,EAAE,SAAS,eAAA;IAC/D,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,IAAM,WAAW,GAAG,IAAA,4BAAc,GAAE,CAAC;IACrC,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IAC7B,IAAM,QAAQ,GAAG,IAAA,2CAAoB,EAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC;IAE3E,IAAA,OAAO,GAAK,IAAA,2BAAY,EAAC;QAC/B,WAAW,aAAA;QACX,eAAe,YAAI,GAAC,SAAS,CAAC,SAAS,IAAG,SAAS,CAAC,YAAY,KAAE;KACnE,CAAC,QAHa,CAGZ;IAEH,IAAM,UAAU,GAAG,IAAA,mBAAW,EAC5B,UAAO,MAAoB,EAAE,OAAe;;;;;;;oBACpC,WAAW,GAAY;wBAC3B,UAAU,EAAE,MAAM,CAAC,UAAU;wBAC7B,IAAI,EAAE,MAAM,CAAC,IAAI;wBACjB,IAAI,EAAE,OAAO;wBACb,QAAQ,EAAE,MAAA,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,0CAAE,KAAK,CAAC,GAAG,CAAC,0CAAG,CAAC,CAAC,mCAAI,SAAS;wBACrD,UAAU,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,mCAAI,EAAE;wBAChC,SAAS,EAAE,MAAM,CAAC,SAAS;wBAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;qBAChC,CAAC;oBAEF,qBAAM,CAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,aAAa;gCAC5B,WAAW,EAAE,MAAM,CAAC,WAAW;;4BAC/B,GAAC,SAAS,CAAC,SAAS,IAAG,CAAC,WAAW,CAAC;gCACpC,CAAA,EAAA;;oBAHF,SAGE,CAAC;oBAEG,MAAM,GAAG,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAC,OAAY;;;wBAC7D,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC;4BACnC,6BACK,OAAO,gBACT,SAAS,CAAC,SAAS,IAAG,MACrB,OAAO,CAAC,SAAS,CAAC,SAAS,CAC5B,0CAAE,GAAG,CAAC,UAAC,IAAI;gCACV,IAAI,IAAI,CAAC,UAAU,KAAK,WAAW,CAAC,UAAU,EAAE,CAAC;oCAC/C,6BAAY,IAAI,GAAK,WAAW,EAAG;gCACrC,CAAC;gCACD,OAAO,IAAI,CAAC;4BACd,CAAC,CAAC,OACF;wBACJ,CAAC;wBACD,OAAO,OAAO,CAAC;oBACjB,CAAC,CAAC,CAAC;yBAEC,CAAA,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,SAAS,CAAC,SAAS,CAAC,MAAK,SAAS,CAAA,EAA3C,wBAA2C;oBAC7C,wCAAwC;oBACxC,qBAAM,OAAO,EAAE,EAAA;;oBADf,wCAAwC;oBACxC,SAAe,CAAC;;;;;SAEnB,EACD,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC,CACtF,CAAC;IAEF,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAtDW,QAAA,WAAW,eAsDtB","sourcesContent":["import { useCallback } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { GetChartDataResponse, NoteDTO } from 'utils';\nimport useEvolveUser from '../../../../../hooks/useEvolveUser';\nimport { useOystehrAPIClient } from '../../../../../telemed/hooks/useOystehrAPIClient';\nimport { useChartData } from '../../../hooks/useChartData';\nimport { EditableNote, UseEditNote } from '../types';\nimport { useChartDataCacheKey } from './useChartDataCacheKey';\n\nexport const useEditNote: UseEditNote = ({ encounterId, apiConfig }) => {\n  const apiClient = useOystehrAPIClient();\n  const queryClient = useQueryClient();\n  const user = useEvolveUser();\n  const cacheKey = useChartDataCacheKey(apiConfig.fieldName, apiConfig.searchParams);\n\n  const { refetch } = useChartData({\n    encounterId,\n    requestedFields: { [apiConfig.fieldName]: apiConfig.searchParams },\n  });\n\n  const handleEdit = useCallback(\n    async (entity: EditableNote, newText: string): Promise<void> => {\n      const updatedNote: NoteDTO = {\n        resourceId: entity.resourceId,\n        type: entity.type,\n        text: newText,\n        authorId: user?.profile?.split('/')?.[1] ?? 'unknown',\n        authorName: user?.userName ?? '',\n        patientId: entity.patientId,\n        encounterId: entity.encounterId,\n      };\n\n      await apiClient?.saveChartData?.({\n        encounterId: entity.encounterId,\n        [apiConfig.fieldName]: [updatedNote],\n      });\n\n      const result = queryClient.setQueryData(cacheKey, (oldData: any) => {\n        if (oldData?.[apiConfig.fieldName]) {\n          return {\n            ...oldData,\n            [apiConfig.fieldName]: (\n              oldData[apiConfig.fieldName] as GetChartDataResponse[typeof apiConfig.fieldName]\n            )?.map((note) => {\n              if (note.resourceId === updatedNote.resourceId) {\n                return { ...note, ...updatedNote };\n              }\n              return note;\n            }),\n          };\n        }\n        return oldData;\n      });\n\n      if (result?.[apiConfig.fieldName] === undefined) {\n        // refetch all if the cache didn't found\n        await refetch();\n      }\n    },\n    [user?.profile, user?.userName, apiClient, apiConfig, queryClient, cacheKey, refetch]\n  );\n\n  return handleEdit;\n};\n"]}