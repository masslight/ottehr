{"version":3,"file":"HospitalizationForm.js","sourceRoot":"","sources":["HospitalizationForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Autocomplete, Box, Card, Stack, TextField, Typography } from '@mui/material';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { RoundedButton } from 'src/components/RoundedButton';\nimport { HospitalizationDTO } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport {\n  ActionsList,\n  DeleteIconButton,\n  useAppointmentStore,\n  useChartDataArrayValue,\n  useGetAppointmentAccessibility,\n} from '../../../../telemed';\nimport { ProviderSideListSkeleton } from '../../../../telemed/features/appointment';\n\nconst HospitalizationOptions: HospitalizationDTO[] = [\n  {\n    display: 'Anaphylaxis',\n    code: '39579001',\n  },\n  {\n    display: 'Appendicitis',\n    code: '74400008',\n  },\n  {\n    display: 'Exacerbation of asthma',\n    code: '281239006',\n  },\n  {\n    display: 'Burn injury',\n    code: '48333001',\n  },\n  {\n    display: 'Cellulitis',\n    code: '385627004',\n  },\n  {\n    display: 'Human parturition, function',\n    code: '386216000',\n  },\n  {\n    display: 'Dehydration',\n    code: '34095006',\n  },\n  {\n    display: 'Diabetes type',\n    code: '405751000',\n  },\n  {\n    display: 'Disorder of digestive system',\n    code: '53619000',\n  },\n  {\n    display: 'Overdose',\n    code: '1149222004',\n  },\n  {\n    display: 'Febrile convulsion',\n    code: '41497008',\n  },\n  {\n    display: 'Fever',\n    code: '386661006',\n  },\n  {\n    display: 'Injury of head',\n    code: '82271004',\n  },\n  {\n    display: 'Influenza',\n    code: '6142004',\n  },\n  {\n    display: 'Jaundice',\n    code: '18165001',\n  },\n  {\n    display: 'Meningitis',\n    code: '7180009',\n  },\n  {\n    display: 'Problem behavior',\n    code: '277843001',\n  },\n  {\n    display: 'Injury due to motor vehicle accident',\n    code: '407153006',\n  },\n  {\n    display: 'Injury of musculoskeletal system',\n    code: '105606008',\n  },\n  {\n    display: 'Dysmorphism',\n    code: '276720006',\n  },\n  {\n    display: 'Pneumonia',\n    code: '233604007',\n  },\n  {\n    display: 'Poisoning',\n    code: '75478009',\n  },\n  {\n    display: 'Post-trauma response',\n    code: '39093002',\n  },\n  {\n    display: 'Prematurity of infant',\n    code: '771299009',\n  },\n  {\n    display: 'Mental disorder',\n    code: '74732009',\n  },\n  {\n    display: 'Disorder of respiratory system',\n    code: '50043002',\n  },\n  {\n    display: 'Respiratory syncytial virus infection',\n    code: '55735004',\n  },\n  {\n    display: 'Seizure',\n    code: '91175000',\n  },\n  {\n    display: 'Urinary tract infectious disease',\n    code: '68566005',\n  },\n];\n\nexport const HospitalizationForm: FC = () => {\n  const methods = useForm<{\n    selectedHospitalization: HospitalizationDTO | null;\n    otherHospitalizationName: string;\n  }>({\n    defaultValues: {\n      selectedHospitalization: null,\n      otherHospitalizationName: '',\n    },\n  });\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const { control, reset, handleSubmit } = methods;\n\n  const { isLoading, onSubmit, onRemove, values: hospitalization } = useChartDataArrayValue('episodeOfCare', reset, {});\n  const [isOtherOptionSelected, setIsOtherOptionSelected] = useState(false);\n\n  const handleSelectOption = useCallback(\n    async (data: HospitalizationDTO | null): Promise<void> => {\n      if (data) {\n        await onSubmit(data);\n        reset({ selectedHospitalization: null, otherHospitalizationName: '' });\n        setIsOtherOptionSelected(false);\n      }\n    },\n    [onSubmit, reset]\n  );\n\n  const sortedHospitalizationOptions = useMemo(() => {\n    return [\n      ...HospitalizationOptions.sort((a, b) => a.display.toLowerCase().localeCompare(b.display.toLowerCase())),\n      {\n        display: 'Other',\n        code: 'other',\n      },\n    ];\n  }, []);\n\n  const onSubmitForm = (data: {\n    selectedHospitalization: HospitalizationDTO | null;\n    otherHospitalizationName: string;\n  }): void => {\n    if (data.selectedHospitalization) {\n      void handleSelectOption({\n        ...data.selectedHospitalization,\n        display: 'Other' + (data.otherHospitalizationName ? ` (${data.otherHospitalizationName})` : ''),\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmitForm)}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {isReadOnly ? (\n          <ActionsList\n            data={hospitalization}\n            getKey={(value) => value.resourceId!}\n            renderItem={(value) => <Typography>{value.display}</Typography>}\n            divider\n          />\n        ) : (\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 1,\n                mb: hospitalization.length || isChartDataLoading ? 2 : 0,\n              }}\n            >\n              {isChartDataLoading ? (\n                <ProviderSideListSkeleton />\n              ) : (\n                <ActionsList\n                  data={hospitalization}\n                  getKey={(value) => value.resourceId!}\n                  renderItem={(value) => <Typography>{value.display}</Typography>}\n                  renderActions={(value) => (\n                    <DeleteIconButton disabled={isLoading} onClick={() => onRemove(value.resourceId!)} />\n                  )}\n                  divider\n                />\n              )}\n            </Box>\n            <Card\n              elevation={0}\n              sx={{\n                p: 3,\n                backgroundColor: otherColors.formCardBg,\n                borderRadius: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: 2,\n              }}\n            >\n              <Controller\n                name=\"selectedHospitalization\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { value, onChange } }) => (\n                  <Autocomplete\n                    value={value || null}\n                    onChange={async (_e, data) => {\n                      onChange(data);\n                      if (data?.display === 'Other') {\n                        setIsOtherOptionSelected(true);\n                      } else {\n                        setIsOtherOptionSelected(false);\n                        await handleSelectOption(data);\n                      }\n                    }}\n                    fullWidth\n                    size=\"small\"\n                    disabled={isLoading || isChartDataLoading}\n                    options={sortedHospitalizationOptions}\n                    noOptionsText=\"Nothing found for this search criteria\"\n                    getOptionLabel={(option) => `${option.display}`}\n                    renderOption={(props, option) => (\n                      <li {...props}>\n                        <Typography component=\"span\"> {option.display} </Typography>\n                      </li>\n                    )}\n                    isOptionEqualToValue={(option, value) => option.code === value.code}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Hospitalization\"\n                        placeholder=\"Search\"\n                        InputLabelProps={{ shrink: true }}\n                        sx={{\n                          '& .MuiInputLabel-root': {\n                            fontWeight: 'bold',\n                          },\n                        }}\n                      />\n                    )}\n                  />\n                )}\n              />\n              {isOtherOptionSelected && (\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                  <Controller\n                    name=\"otherHospitalizationName\"\n                    control={control}\n                    render={({ field: { value, onChange } }) => (\n                      <TextField\n                        value={value}\n                        onChange={(e) => onChange(e.target.value)}\n                        label=\"Other hospitalization\"\n                        placeholder=\"Please specify\"\n                        fullWidth\n                        size=\"small\"\n                      />\n                    )}\n                  />\n                  <RoundedButton type=\"submit\">Add</RoundedButton>\n                </Stack>\n              )}\n            </Card>\n          </Box>\n        )}\n      </Box>\n    </form>\n  );\n};\n"]}