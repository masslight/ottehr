{"version":3,"file":"HospitalizationPatientComponent.js","sourceRoot":"","sources":["HospitalizationPatientComponent.tsx"],"names":[],"mappings":";;;AAAA,0CAAmE;AAEnE,+BAAoE;AACpE,oEAA+D;AAC/D,sEAAqE;AACrE,+CAA0D;AAC1D,wEAAmF;AACnF,6DAA4D;AAErD,IAAM,+BAA+B,GAAO;;IACjD,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEnB,IAAA,KAAsC,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC,EAA5G,oBAAoB,0BAAA,EAAE,SAAS,eAA6E,CAAC;IAC7G,IAAY,aAAa,GAAK,IAAA,+BAAc,GAAE,WAArB,CAAsB;IAEvD,IAAM,gBAAgB,GAAG,aAAa,CAAC,gBAAgB,CAAC;IAExD,IAAM,iBAAiB,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,0CAAE,IAAI,CACrD,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,KAAK,0BAAkB,CAAC,uBAAuB,EAAhE,CAAgE,CACvD,CAAC;IAE7B,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,GAAG,EAAE,CAAC;SACP,CAAC,CAEF;MAAA,CAAC,oBAAoB,CAAC,CAAC,CAAC,CACtB,CAAC,qCAAuB,CAAC,AAAD,EAAG,CAC5B,CAAC,CAAC,CAAC,CAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,MAAM,EAAC,CAAC,CAAC,CAC7B,gBAAgB,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAK,OAAA,CAC3C,CAAC,cAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CACd;YAAA,CAAC,qBAAU,CAAC,CAAC,MAAM,CAAC,EAAE,qBAAU,CAChC;YAAA,CAAC,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,MAAM,IAAI,CAAC,kBAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAG,CACzD;UAAA,EAAE,cAAG,CAAC,CACP,EAL4C,CAK5C,CAAC,CACH,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,8BAA8B,EAAE,qBAAU,CAAC,CAC7F,CACD;MAAA,CAAC,iBAAiB,CAAC,CAAC,CAAC,CACnB,EACE;UAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAE,qBAAqB,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,EACxE;UAAA,CAAC,sBAAY,CAAC,KAAK,CAAC,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAC3E;QAAA,GAAG,CACJ,CAAC,CAAC,CAAC,SAAS,CACf;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAxCW,QAAA,+BAA+B,mCAwC1C","sourcesContent":["import { Box, Divider, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { AiObservationField, ObservationTextFieldDTO } from 'utils';\nimport AiSuggestion from '../../../../components/AiSuggestion';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../telemed';\nimport { PatientSideListSkeleton } from '../../../../telemed/features/appointment';\nimport { useAppointment } from '../../hooks/useAppointment';\n\nexport const HospitalizationPatientComponent: FC = () => {\n  const theme = useTheme();\n\n  const { isAppointmentLoading, chartData } = getSelectors(useAppointmentStore, ['isAppointmentLoading', 'chartData']);\n  const { mappedData: questionnaire } = useAppointment();\n\n  const hospitalizations = questionnaire.hospitalizations;\n\n  const aiHospitalization = chartData?.observations?.find(\n    (observation) => observation.field === AiObservationField.HospitalizationsHistory\n  ) as ObservationTextFieldDTO;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1,\n      }}\n    >\n      {isAppointmentLoading ? (\n        <PatientSideListSkeleton />\n      ) : hospitalizations?.length ? (\n        hospitalizations.map((answer, index, arr) => (\n          <Box key={index}>\n            <Typography>{answer}</Typography>\n            {index + 1 !== arr.length && <Divider sx={{ pt: 1 }} />}\n          </Box>\n        ))\n      ) : (\n        <Typography color={theme.palette.text.secondary}>Patient has no hospitalization</Typography>\n      )}\n      {aiHospitalization ? (\n        <>\n          <hr style={{ border: '0.5px solid #DFE5E9', margin: '0 -16px 0 -16px' }} />\n          <AiSuggestion title={'Hospitalization'} content={aiHospitalization.value} />\n        </>\n      ) : undefined}\n    </Box>\n  );\n};\n"]}