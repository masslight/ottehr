{"version":3,"file":"BirthHistory.js","sourceRoot":"","sources":["BirthHistory.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport {\n  Box,\n  Card,\n  CircularProgress,\n  debounce,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  Skeleton,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useMemo, useState } from 'react';\nimport { BirthHistoryDTO } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport {\n  AccordionCard,\n  useAppointmentStore,\n  useGetAppointmentAccessibility,\n  useSaveChartData,\n} from '../../../../telemed';\nimport { useAppointment } from '../../hooks/useAppointment';\nimport { useChartData } from '../../hooks/useChartData';\n\ntype BirthHistoryProps = {\n  appointmentID?: string;\n};\n\nexport const BirthHistory: FC<BirthHistoryProps> = ({ appointmentID }) => {\n  const { mappedData } = useAppointment(appointmentID);\n\n  const [isCollapsed, setIsCollapsed] = useState(\n    -DateTime.fromFormat(mappedData.DOB || '', 'yyyy-dd-MM').diff(DateTime.now(), 'days').days > 90\n  );\n  const { encounter, chartData } = getSelectors(useAppointmentStore, ['encounter', 'chartData']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const { isLoading: isChartDataLoading } = useChartData({\n    encounterId: encounter.id || '',\n    requestedFields: {\n      birthHistory: {\n        _search_by: 'patient',\n        _sort: '-_lastUpdated',\n      },\n    },\n    onSuccess: (data) => {\n      useAppointmentStore.setState((prevState) => ({\n        ...prevState,\n        chartData: {\n          ...prevState.chartData,\n          patientId: prevState.chartData?.patientId || '',\n          birthHistory: data.birthHistory,\n        },\n      }));\n    },\n  });\n\n  const age = chartData?.birthHistory?.find((item) => item.field === 'age');\n  const weight = chartData?.birthHistory?.find((item) => item.field === 'weight');\n  const length = chartData?.birthHistory?.find((item) => item.field === 'length');\n  const pregCompl = chartData?.birthHistory?.find((item) => item.field === 'preg-compl');\n  const delCompl = chartData?.birthHistory?.find((item) => item.field === 'del-compl');\n\n  return (\n    <AccordionCard\n      label={\n        <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n          <Typography variant=\"h6\" color=\"primary.dark\">\n            Birth history\n          </Typography>\n          {(typeof age?.value === 'number' ||\n            typeof weight?.value === 'number' ||\n            typeof length?.value === 'number') && (\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              {typeof age?.value === 'number' && <Typography>Gestational age at birth: {age?.value} weeks</Typography>}\n              {typeof weight?.value === 'number' && <Typography>Weight: {weight?.value} kg</Typography>}\n              {typeof length?.value === 'number' && <Typography>Length: {length?.value} cm</Typography>}\n            </Box>\n          )}\n        </Box>\n      }\n      collapsed={isCollapsed}\n      onSwitch={() => setIsCollapsed((state) => !state)}\n    >\n      {isChartDataLoading ? (\n        <Box sx={{ p: 2 }}>\n          <Skeleton variant=\"rounded\" width=\"100%\" height={200} />\n        </Box>\n      ) : (\n        <Card\n          elevation={0}\n          sx={{\n            p: 2,\n            m: 2,\n            backgroundColor: otherColors.formCardBg,\n            borderRadius: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n          }}\n        >\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <NumberDebounceField\n              field={age}\n              disabled={isReadOnly}\n              fieldName=\"age\"\n              label=\"Gestational age at birth (weeks)\"\n            />\n            <NumberDebounceField\n              field={weight}\n              disabled={isReadOnly}\n              fieldName=\"weight\"\n              label=\"Wt (kg)\"\n              convertProps={{\n                label: 'Wt (lbs)',\n                convertFunc: (value) => {\n                  const num = toNumber(value);\n                  if (typeof num === 'number') {\n                    return (Math.round(num * 2.205 * 100) / 100).toString();\n                  } else {\n                    return '';\n                  }\n                },\n              }}\n            />\n            <NumberDebounceField\n              field={length}\n              disabled={isReadOnly}\n              fieldName=\"length\"\n              label=\"Length (cm)\"\n              convertProps={{\n                label: 'Length (inch)',\n                convertFunc: (value) => {\n                  const num = toNumber(value);\n                  if (typeof num === 'number') {\n                    return (Math.round((num / 2.54) * 100) / 100).toString();\n                  } else {\n                    return '';\n                  }\n                },\n              }}\n            />\n          </Box>\n\n          <CheckboxWithNotesField\n            field={pregCompl}\n            fieldName=\"preg-compl\"\n            disabled={isReadOnly}\n            label=\"Any complications during pregnancy?\"\n          />\n          <CheckboxWithNotesField\n            field={delCompl}\n            fieldName=\"del-compl\"\n            disabled={isReadOnly}\n            label=\"Any complications during delivery??\"\n          />\n        </Card>\n      )}\n    </AccordionCard>\n  );\n};\n\nconst showErrorSnackbar = (field: BirthHistoryDTO['field']): void => {\n  const mapFieldToName: { [field in BirthHistoryDTO['field']]: string } = {\n    age: 'gestational age',\n    weight: 'weight',\n    length: 'length',\n    'preg-compl': 'pregnancy complications',\n    'del-compl': 'delivery complications',\n  };\n\n  enqueueSnackbar(`An error has occurred while updating ${mapFieldToName[field]}. Please try again.`, {\n    variant: 'error',\n  });\n};\n\nconst setUpdatedField = (updated?: BirthHistoryDTO): void => {\n  if (updated) {\n    useAppointmentStore.setState((prevState) => ({\n      chartData: {\n        ...prevState.chartData!,\n        birthHistory: prevState.chartData?.birthHistory?.find((item) => item.resourceId === updated.resourceId)\n          ? prevState.chartData?.birthHistory?.map((item) => (item.resourceId === updated.resourceId ? updated : item))\n          : [...(prevState.chartData?.birthHistory || []), updated],\n      },\n    }));\n  }\n};\n\nconst toNumber = (value: string): number | undefined => (value ? (isNaN(+value) ? undefined : +value) : undefined);\n\ntype NumberDebounceFieldProps = {\n  fieldName: 'age' | 'weight' | 'length';\n  field?: BirthHistoryDTO;\n  disabled?: boolean;\n  label: string;\n  convertProps?: {\n    label: string;\n    convertFunc: (value: string) => string;\n  };\n};\n\nconst NumberDebounceField: FC<NumberDebounceFieldProps> = (props) => {\n  const { field, disabled, fieldName, label, convertProps } = props;\n\n  const [value, setValue] = useState<string>(typeof field?.value === 'number' ? field.value.toString() : '');\n  const { mutate: updateChartData, isLoading: isUpdateLoading } = useSaveChartData();\n\n  const areEqual = value === `${field?.value?.toString() || ''}`;\n\n  const debouncedHandleInputChange = useMemo(\n    () =>\n      debounce((value?: number) => {\n        updateChartData(\n          {\n            birthHistory: [{ ...(field || { field: fieldName }), value }],\n          },\n          {\n            onSuccess: (data) => {\n              const updated = data.chartData.birthHistory?.[0];\n              setUpdatedField(updated);\n            },\n            onError: () => {\n              showErrorSnackbar(fieldName);\n            },\n          }\n        );\n      }, 1500),\n    [field, fieldName, updateChartData]\n  );\n\n  return (\n    <>\n      <TextField\n        disabled={disabled}\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n          debouncedHandleInputChange(toNumber(e.target.value));\n        }}\n        fullWidth\n        size=\"small\"\n        label={label}\n        type=\"number\"\n        InputProps={{\n          endAdornment: (!areEqual || isUpdateLoading) && (\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <CircularProgress size=\"20px\" />\n            </Box>\n          ),\n        }}\n      />\n      {convertProps && (\n        <>\n          <Typography alignSelf=\"center\" fontSize={20}>\n            /\n          </Typography>\n          <TextField\n            fullWidth\n            size=\"small\"\n            label={convertProps.label}\n            sx={{\n              '& fieldset': { border: 'none' },\n              maxWidth: '110px',\n            }}\n            disabled\n            InputLabelProps={{ shrink: true }}\n            value={convertProps.convertFunc(value)}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\ntype CheckboxWithNotesFieldProps = {\n  fieldName: 'preg-compl' | 'del-compl';\n  field?: BirthHistoryDTO;\n  disabled?: boolean;\n  label: string;\n};\n\nconst CheckboxWithNotesField: FC<CheckboxWithNotesFieldProps> = (props) => {\n  const { fieldName, field, disabled, label } = props;\n\n  const [value, setValue] = useState(field?.note || '');\n  const { mutate: updateChartData, isLoading: isUpdateLoading } = useSaveChartData();\n\n  const areEqual = value === `${field?.note?.toString() || ''}`;\n\n  const handleRadioChange = (newValue: string): void => {\n    updateChartData(\n      {\n        birthHistory: [{ ...(field || { field: fieldName }), flag: newValue === 'yes', note: undefined }],\n      },\n      {\n        onSuccess: (data) => {\n          const updated = data.chartData.birthHistory?.[0];\n          setValue('');\n          setUpdatedField(updated);\n        },\n        onError: () => {\n          showErrorSnackbar(fieldName);\n        },\n      }\n    );\n  };\n\n  const debouncedHandleInputChange = useMemo(\n    () =>\n      debounce((value?: string) => {\n        updateChartData(\n          {\n            birthHistory: [{ ...(field || { field: fieldName }), note: value }],\n          },\n          {\n            onSuccess: (data) => {\n              const updated = data.chartData.birthHistory?.[0];\n              setUpdatedField(updated);\n            },\n            onError: () => {\n              showErrorSnackbar(fieldName);\n            },\n          }\n        );\n      }, 1500),\n    [field, fieldName, updateChartData]\n  );\n\n  return (\n    <Box sx={{ display: 'flex', gap: 1, alignItems: 'flex-end' }}>\n      <FormControl\n        disabled={disabled || !areEqual || isUpdateLoading}\n        sx={{\n          minWidth: 'auto',\n        }}\n      >\n        <FormLabel\n          sx={{\n            fontWeight: 500,\n            color: 'primary.dark',\n            whiteSpace: 'nowrap',\n          }}\n        >\n          {label}\n        </FormLabel>\n        <RadioGroup\n          row\n          value={typeof field?.flag === 'boolean' ? (field.flag ? 'yes' : 'no') : null}\n          onChange={(e) => handleRadioChange(e.target.value)}\n        >\n          <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\n          <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\n        </RadioGroup>\n      </FormControl>\n      {field?.flag && (\n        <TextField\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n            debouncedHandleInputChange(e.target.value || undefined);\n          }}\n          fullWidth\n          size=\"small\"\n          label=\"Please describe\"\n          disabled={disabled || (areEqual && isUpdateLoading)}\n          InputProps={{\n            endAdornment: (!areEqual || (!areEqual && isUpdateLoading)) && (\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <CircularProgress size=\"20px\" />\n              </Box>\n            ),\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n"]}