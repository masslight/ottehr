{"version":3,"file":"InteractionAlertsDialog.js","sourceRoot":"","sources":["InteractionAlertsDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport PriorityHighOutlinedIcon from '@mui/icons-material/PriorityHighOutlined';\nimport {\n  Dialog,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Box, Stack } from '@mui/system';\nimport React, { ReactElement, useState } from 'react';\nimport { RoundedButton } from 'src/components/RoundedButton';\nimport { MedicationInteractions } from 'utils';\n\nconst OTHER = 'Other';\nconst OVERRIDE_REASON = [\n  'Will monitor or take precautions',\n  'Not clinically significant',\n  'Benefit Outweighs Risk',\n  'Patient tolerated previously',\n  'Dose adjusted',\n  OTHER,\n];\n\ninterface Props {\n  medicationName: string;\n  interactions: MedicationInteractions;\n  onCancel: () => void;\n  onContinue?: (interactions: MedicationInteractions) => void;\n  readonly?: boolean;\n}\n\nconst SEVERITY_ORDER = ['high', 'moderate', 'low'];\n\nconst SEVERITY_TO_LABEL = {\n  high: 'Severe',\n  moderate: 'Moderate',\n  low: 'Minor',\n  unknown: 'Unknown',\n};\n\nexport const InteractionAlertsDialog: React.FC<Props> = ({\n  medicationName,\n  interactions: initialInteractions,\n  onCancel,\n  onContinue,\n  readonly,\n}) => {\n  const [interactions, setInteractions] = useState<MedicationInteractions>(structuredClone(initialInteractions));\n\n  const allReasonsValid: boolean = [...interactions.drugInteractions, ...interactions.allergyInteractions].reduce(\n    (acc, val) => {\n      return acc && (val.overrideReason ?? '').trim().length > 0;\n    },\n    true\n  );\n\n  const interactionTypeTitle = (title: string): ReactElement => {\n    return (\n      <Stack direction=\"row\" spacing=\"12px\" alignItems=\"center\" style={{ marginTop: '16px' }}>\n        <Box\n          style={{\n            width: '19px',\n            height: '19px',\n            background: otherColors.priorityHighIcon,\n            borderRadius: '4px',\n            padding: '1px 2px 1px 2px',\n          }}\n        >\n          <PriorityHighOutlinedIcon style={{ width: '15px', height: '15px', color: '#FFF' }} />\n        </Box>\n        <Typography style={{ fontSize: '18px', fontWeight: 600, color: otherColors.priorityHighIcon }}>\n          {title}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  const interactionSubtitleBox = (text: string): ReactElement => {\n    return (\n      <Box\n        style={{ background: otherColors.lightErrorBg, marginTop: '16px', padding: '16px', borderRadius: '4px' }}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <Typography variant=\"body2\" style={{ color: otherColors.lightErrorText }}>\n          {text}\n        </Typography>\n      </Box>\n    );\n  };\n\n  const overrideReasonDropdown = (\n    value: string | undefined,\n    id: string,\n    onChange: (newValue: string) => void\n  ): ReactElement | undefined => {\n    if (readonly) {\n      if (value && OVERRIDE_REASON.includes(value)) {\n        return <>{value}</>;\n      } else {\n        return undefined;\n      }\n    }\n    if (value != null && !OVERRIDE_REASON.includes(value)) {\n      value = OTHER;\n    }\n    return (\n      <FormControl fullWidth sx={{ backgroundColor: 'white' }} size=\"small\">\n        <InputLabel id={id}>Override reason</InputLabel>\n        <Select\n          label=\"Override reason\"\n          labelId={id}\n          variant=\"outlined\"\n          value={value ?? ''}\n          onChange={(e) => onChange(e.target.value)}\n        >\n          {OVERRIDE_REASON.map((reason) => {\n            return (\n              <MenuItem key={reason} value={reason}>\n                <Typography color=\"textPrimary\" sx={{ fontSize: '16px' }}>\n                  {reason}\n                </Typography>\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n    );\n  };\n\n  const otherTextInput = (\n    value: string | undefined,\n    onChange: (newValue: string) => void\n  ): ReactElement | undefined => {\n    if (value == null || OVERRIDE_REASON.includes(value)) {\n      return undefined;\n    }\n    if (readonly) {\n      return <>Other: {value}</>;\n    }\n    return (\n      <TextField\n        label=\"Please specify*\"\n        size=\"small\"\n        value={value ?? ''}\n        fullWidth\n        onChange={(e: any) => onChange(e.target.value)}\n        style={{ marginTop: '8px' }}\n      />\n    );\n  };\n\n  const redCicrcle = (): ReactElement => {\n    return (\n      <Box\n        style={{\n          display: 'inline-block',\n          width: '12px',\n          height: '12px',\n          border: '6px #F44336 solid',\n          borderRadius: '6px',\n        }}\n      ></Box>\n    );\n  };\n\n  const emptyCicrcle = (): ReactElement => {\n    return (\n      <Box\n        style={{\n          display: 'inline-block',\n          width: '12px',\n          height: '12px',\n          border: '1px #DFE5E9 solid',\n          borderRadius: '6px',\n        }}\n      ></Box>\n    );\n  };\n\n  const severityWidget = (severity: 'high' | 'moderate' | 'low' | undefined): ReactElement => {\n    const order = SEVERITY_ORDER.indexOf(severity ?? '');\n    return (\n      <Stack direction=\"row\" spacing=\"2px\" display=\"flex\" alignItems=\"center\">\n        {order < 3 ? redCicrcle() : emptyCicrcle()}\n        {order < 2 ? redCicrcle() : emptyCicrcle()}\n        {order < 1 ? redCicrcle() : emptyCicrcle()}\n        <Typography style={{ marginLeft: '8px' }}>{SEVERITY_TO_LABEL[severity ?? 'unknown']}</Typography>\n      </Stack>\n    );\n  };\n\n  const renderSource = (source: string | undefined): ReactElement | undefined => {\n    if (!source) {\n      return <>Unknown</>;\n    }\n    const lines = source.split('\\n');\n    return (\n      <Stack>\n        <Typography variant=\"body2\">{lines[0]}</Typography>\n        <Typography color=\"secondary.light\" variant=\"body2\">\n          {lines[1]}\n        </Typography>\n        <Typography color=\"secondary.light\" variant=\"body2\">\n          {lines[2]}\n        </Typography>\n      </Stack>\n    );\n  };\n\n  const medicationsInteractions = (): ReactElement | undefined => {\n    if (interactions.drugInteractions.length === 0) {\n      return undefined;\n    }\n    return (\n      <Stack>\n        {interactionTypeTitle('Drug Interaction')}\n        {interactionSubtitleBox(\n          `According to the patient medication history, ordering “${medicationName}” may result in drug-drug interaction.`\n        )}\n        <Table style={{ border: '1px solid #DFE5E9', marginTop: '16px' }}>\n          <TableHead>\n            <TableRow>\n              <TableCell width=\"15%\">Ordered</TableCell>\n              <TableCell width=\"15%\">Interaction</TableCell>\n              <TableCell width=\"20%\">Source</TableCell>\n              <TableCell width=\"25%\">Interaction Description</TableCell>\n              <TableCell width=\"25%\">Override reason</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {interactions.drugInteractions\n              .sort((a, b) => SEVERITY_ORDER.indexOf(a.severity ?? '') - SEVERITY_ORDER.indexOf(b.severity ?? ''))\n              .map((interaction, index) => {\n                return (\n                  <>\n                    {index === 0 ? (\n                      <TableRow key={interaction.severity}>\n                        <TableCell colSpan={5} style={{ padding: '8px' }}>\n                          {severityWidget(interaction.severity)}\n                        </TableCell>\n                      </TableRow>\n                    ) : undefined}\n                    <TableRow key={index}>\n                      <TableCell>{medicationName}</TableCell>\n                      <TableCell>{interaction.drugs.map((drug) => drug.name).join(', ')}</TableCell>\n                      <TableCell>{renderSource(interaction.source?.display)}</TableCell>\n                      <TableCell style={{ verticalAlign: 'top' }}>{interaction.message}</TableCell>\n                      <TableCell>\n                        {overrideReasonDropdown(\n                          interaction.overrideReason,\n                          'medication-' + index,\n                          (newValue: string) => {\n                            if (newValue !== OTHER) {\n                              interaction.overrideReason = newValue;\n                            } else {\n                              interaction.overrideReason = '';\n                            }\n                            setInteractions({ ...interactions });\n                          }\n                        )}\n                        {otherTextInput(interaction.overrideReason, (newValue: string) => {\n                          interaction.overrideReason = newValue;\n                          setInteractions({ ...interactions });\n                        })}\n                      </TableCell>\n                    </TableRow>\n                  </>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </Stack>\n    );\n  };\n\n  const allergiesInteractions = (): ReactElement | undefined => {\n    if (interactions.allergyInteractions.length === 0) {\n      return undefined;\n    }\n    return (\n      <Stack>\n        {interactionTypeTitle('Allergy Interaction')}\n        {interactionSubtitleBox(\n          `According to the patient's reported allergy, ordering “${medicationName}” may result in an allergic reaction.`\n        )}\n        <Table style={{ border: '1px solid #DFE5E9', marginTop: '16px' }}>\n          <TableHead>\n            <TableRow>\n              <TableCell width=\"70%\">Allergy Description</TableCell>\n              <TableCell width=\"30%\">Override reason</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {interactions.allergyInteractions.map((interaction, index) => {\n              return (\n                <TableRow key={index}>\n                  <TableCell style={{ verticalAlign: 'top' }}>{interaction.message}</TableCell>\n                  <TableCell>\n                    {overrideReasonDropdown(interaction.overrideReason, 'allergy-' + index, (newValue: string) => {\n                      if (newValue !== OTHER) {\n                        interaction.overrideReason = newValue;\n                      } else {\n                        interaction.overrideReason = '';\n                      }\n                      setInteractions({ ...interactions });\n                    })}\n                    {otherTextInput(interaction.overrideReason, (newValue: string) => {\n                      interaction.overrideReason = newValue;\n                      setInteractions({ ...interactions });\n                    })}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Stack>\n    );\n  };\n\n  return (\n    <Dialog open={true} maxWidth=\"lg\" fullWidth>\n      <DialogContent style={{ padding: '8px 24px 24px 24px' }}>\n        {medicationsInteractions()}\n        {allergiesInteractions()}\n        <Box style={{ display: 'flex', justifyContent: 'space-between', marginTop: '16px' }}>\n          <RoundedButton variant=\"outlined\" onClick={onCancel}>\n            Cancel\n          </RoundedButton>\n          {onContinue && !readonly ? (\n            <RoundedButton variant=\"contained\" onClick={() => onContinue(interactions)} disabled={!allReasonsValid}>\n              Continue\n            </RoundedButton>\n          ) : null}\n        </Box>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"]}