{"version":3,"file":"MarTable.js","sourceRoot":"","sources":["MarTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { useState } from 'react';\nimport { CSSProperties } from 'react';\nimport { ExtendedMedicationDataForResponse } from 'utils';\nimport { AccordionCard } from '../../../../../telemed/components';\nimport { useMedicationAPI } from '../../../hooks/useMedicationOperations';\nimport { CSSLoader } from '../../CSSLoader';\nimport { MarTableRow } from './MarTableRow';\n\ninterface ColumnStyles {\n  [key: string]: CSSProperties;\n}\n\nconst cellStyles = {\n  padding: '8px',\n  wordWrap: 'break-word',\n  wordBreak: 'break-word',\n  hyphens: 'auto',\n  verticalAlign: 'top',\n} as CSSProperties;\n\nconst HEADER_CELL_STYLES = {\n  fontWeight: 'bold',\n} as CSSProperties;\n\nconst sortByDateTimeCreated = (\n  items: ExtendedMedicationDataForResponse[] = []\n): ExtendedMedicationDataForResponse[] => {\n  return items.sort((a, b) => {\n    const dateA = DateTime.fromISO(a.dateTimeCreated);\n    const dateB = DateTime.fromISO(b.dateTimeCreated);\n\n    if (!dateA.isValid && !dateB.isValid) return 0;\n    if (!dateA.isValid) return 1;\n    if (!dateB.isValid) return -1;\n\n    return dateB.toMillis() - dateA.toMillis();\n  });\n};\n\nexport const MarTable: React.FC = () => {\n  const [isPendingCollapsed, setIsPendingCollapsed] = useState(false);\n  const [isCompletedCollapsed, setIsCompletedCollapsed] = useState(false);\n  const { medications, isLoading } = useMedicationAPI();\n\n  const pendingMedications = sortByDateTimeCreated(medications?.filter?.((med) => med.status === 'pending') || []);\n  const completedMedications = sortByDateTimeCreated(medications?.filter?.((med) => med.status !== 'pending') || []);\n\n  const handlePendingToggle = (): void => {\n    setIsPendingCollapsed((prev) => !prev);\n  };\n\n  const handleCompletedToggle = (): void => {\n    setIsCompletedCollapsed((prev) => !prev);\n  };\n\n  const columnStyles: ColumnStyles = {\n    interactionsAlert: { width: '20px', ...cellStyles },\n    medication: { width: '25%', ...cellStyles },\n    dose: { width: '7%', ...cellStyles },\n    route: { width: '10%', ...cellStyles },\n    orderDateTime: { width: '12%', ...cellStyles },\n    orderedBy: { width: '12%', ...cellStyles },\n    instructions: { width: '15%', ...cellStyles },\n    status: {\n      width: 'auto',\n      textWrap: 'nowrap',\n      ...cellStyles,\n      paddingRight: '16px',\n    } as CSSProperties,\n  };\n\n  if (isLoading) {\n    return <CSSLoader height={'300px'} />;\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        sx={{ minWidth: 650, tableLayout: 'fixed', borderCollapse: 'separate', borderSpacing: 0 }}\n        aria-label=\"medication table\"\n      >\n        <TableBody>\n          <TableRow>\n            <TableCell colSpan={6} sx={{ padding: 0 }}>\n              <AccordionCard\n                label={`Pending (${pendingMedications.length})`}\n                collapsed={isPendingCollapsed}\n                onSwitch={handlePendingToggle}\n                withBorder={false}\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ ...columnStyles.interactionsAlert, ...HEADER_CELL_STYLES }}></TableCell>\n                      <TableCell sx={{ ...columnStyles.medication, ...HEADER_CELL_STYLES }}>Medication</TableCell>\n                      <TableCell sx={{ ...columnStyles.dose, ...HEADER_CELL_STYLES }}>Dose</TableCell>\n                      <TableCell sx={{ ...columnStyles.route, ...HEADER_CELL_STYLES }}>Route</TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>\n                        Order date/time\n                      </TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>Ordered by</TableCell>\n                      <TableCell sx={{ ...columnStyles.instructions, ...HEADER_CELL_STYLES }}>Instructions</TableCell>\n                      <TableCell sx={{ ...columnStyles.status, ...HEADER_CELL_STYLES }}>Status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {pendingMedications.map((row) => (\n                      <MarTableRow key={row.id} medication={row} columnStyles={columnStyles} />\n                    ))}\n                  </TableBody>\n                </Table>\n              </AccordionCard>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell colSpan={6} sx={{ padding: 0 }}>\n              <AccordionCard\n                label={`Completed (${completedMedications.length})`}\n                collapsed={isCompletedCollapsed}\n                onSwitch={handleCompletedToggle}\n                withBorder={false}\n              >\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ ...columnStyles.interactionsAlert, ...HEADER_CELL_STYLES }}></TableCell>\n                      <TableCell sx={{ ...columnStyles.medication, ...HEADER_CELL_STYLES }}>Medication</TableCell>\n                      <TableCell sx={{ ...columnStyles.dose, ...HEADER_CELL_STYLES }}>Dose</TableCell>\n                      <TableCell sx={{ ...columnStyles.route, ...HEADER_CELL_STYLES }}>Route</TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>\n                        Order date/time\n                      </TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>Ordered by</TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>Given</TableCell>\n                      <TableCell sx={{ ...columnStyles.orderDateTime, ...HEADER_CELL_STYLES }}>Given by</TableCell>\n                      <TableCell sx={{ ...columnStyles.instructions, ...HEADER_CELL_STYLES }}>Instructions</TableCell>\n                      <TableCell sx={{ ...columnStyles.status, ...HEADER_CELL_STYLES }}>Status</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {completedMedications.map((row) => (\n                      <MarTableRow key={row.id} medication={row} columnStyles={columnStyles} />\n                    ))}\n                  </TableBody>\n                </Table>\n              </AccordionCard>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n"]}