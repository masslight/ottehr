{"version":3,"file":"MedicationBarcodeScan.js","sourceRoot":"","sources":["MedicationBarcodeScan.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAA6D;AAC7D,+BAA0B;AAI1B,qCAAoC;AAMpC,IAAM,gBAAgB,GAAG,IAAA,iBAAM,EAAC,qBAAU,CAAC,CAAyB,UAAC,EAAoB;QAAlB,KAAK,WAAA,EAAE,SAAS,eAAA;IAAO,OAAA,YAC5F,OAAO,EAAE,MAAM,EACf,UAAU,EAAE,OAAO,EACnB,KAAK,EAAE,aAAa,IACjB,CAAC,SAAS;QACX,CAAC,CAAC;YACE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS;YACnC,cAAc,EAAE,MAAM;SACvB;QACH,CAAC,CAAC;YACE,MAAM,EAAE,SAAS;YACjB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI;YACjC,cAAc,EAAE,WAAW;SAC5B,CAAC,EACN;AAd4F,CAc5F,CAAC,CAAC;AAEG,IAAM,qBAAqB,GAAkC,UAAC,EAAc;QAAZ,UAAU,gBAAA;IAC/E,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IACzB,IAAM,SAAS,GAAG,IAAI,CAAC,CAAC,uCAAuC;IAE/D,OAAO,CACL,EACE;MAAA,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACnE;QAAA,CAAC,iBAAO,CACN,EAAE,CAAC,CAAC;YACF,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;YAC/B,UAAU,EAAE,CAAC;SACd,CAAC,EAEJ;QAAA,CAAC,UAAU,CAAC,cAAc,CAC5B;MAAA,EAAE,gBAAgB,CAClB;MAAA,CAAC;;;;aAII,CACP;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,qBAAqB,yBAwBhC","sourcesContent":["import { styled, Typography, useTheme } from '@mui/material';\nimport React from 'react';\n// import { ScanStatusChip } from '../statuses/ScanStatusChip';\n// import { MedicationField } from '../medicationTypes';\nimport { ExtendedMedicationDataForResponse } from 'utils';\nimport { BarIcon } from './BarIcon';\n\ninterface MedicationNameProps {\n  medication: ExtendedMedicationDataForResponse;\n}\n\nconst StyledTypography = styled(Typography)<{ isScanned: boolean }>(({ theme, isScanned }) => ({\n  display: 'flex',\n  alignItems: 'start',\n  width: 'fit-content',\n  ...(isScanned\n    ? {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n      }\n    : {\n        cursor: 'pointer',\n        color: theme.palette.primary.main,\n        textDecoration: 'underline',\n      }),\n}));\n\nexport const MedicationBarcodeScan: React.FC<MedicationNameProps> = ({ medication }) => {\n  const theme = useTheme();\n  const isScanned = true; // medication.scanStatus === 'SCANNED';\n\n  return (\n    <>\n      <StyledTypography isScanned={isScanned} sx={{ alignItems: 'center' }}>\n        <BarIcon\n          sx={{\n            width: '24px',\n            height: '24px',\n            marginRight: theme.spacing(1.5),\n            flexShrink: 0,\n          }}\n        />\n        {medication.medicationName}\n      </StyledTypography>\n      {/* {medication.scanStatus && (\n        <Box mt={1}>\n          <ScanStatusChip medication={medication} />\n        </Box>\n      )} */}\n    </>\n  );\n};\n"]}