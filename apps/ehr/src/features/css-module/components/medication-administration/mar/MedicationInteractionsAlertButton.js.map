{"version":3,"file":"MedicationInteractionsAlertButton.js","sourceRoot":"","sources":["MedicationInteractionsAlertButton.tsx"],"names":[],"mappings":";;;AAAA,2CAA+C;AAC/C,iFAAgF;AAChF,0CAAgD;AAChD,+BAAwC;AACxC,gEAA+D;AAE/D,sEAAqE;AACrE,gCAA8C;AAMvC,IAAM,iCAAiC,GAAoB,UAAC,EAAc;QAAZ,UAAU,gBAAA;IACvE,IAAA,KAAoD,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAlE,qBAAqB,QAAA,EAAE,wBAAwB,QAAmB,CAAC;IAE1E,OAAO,CACL,CAAC,cAAG,CAAC,OAAO,CAAC,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,eAAe,EAAE,EAAnB,CAAmB,CAAC,CACvC;MAAA,CAAC,UAAU,CAAC,YAAY;YACxB,CAAC,UAAU,CAAC,YAAY,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC;gBACrD,UAAU,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACvD,CAAC,+BAAc,CACb,KAAK,CAAC,CACJ,gBAAgB,GAAG,IAAA,0BAAmB,EAAC,UAAU,CAAC,YAAY,CAAC,GAAG,sCACpE,CAAC,CACD,WAAW,CAAC,OAAO,CACnB,SAAS,CAAC,KAAK,CAEf;UAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,wBAAwB,CAAC,IAAI,CAAC,EAA9B,CAA8B,CAAC,CACxD;YAAA,CAAC,8BAAwB,CACvB,KAAK,CAAC,CAAC;gBACL,KAAK,EAAE,MAAM;gBACb,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,MAAM;gBACb,UAAU,EAAE,oBAAW,CAAC,gBAAgB;gBACxC,YAAY,EAAE,KAAK;gBACnB,OAAO,EAAE,iBAAiB;aAC3B,CAAC,EAEN;UAAA,EAAE,qBAAU,CACd;QAAA,EAAE,+BAAc,CAAC,CAClB,CAAC,CAAC,CAAC,IAAI,CACR;MAAA,CAAC,qBAAqB,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAClD,CAAC,iDAAuB,CACtB,cAAc,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,CAC1C,YAAY,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,CACtC,QAAQ,CAAC,CAAC,IAAI,CAAC,CACf,QAAQ,CAAC,CAAC,cAAM,OAAA,wBAAwB,CAAC,KAAK,CAAC,EAA/B,CAA+B,CAAC,EAChD,CACH,CAAC,CAAC,CAAC,IAAI,CACV;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAvCW,QAAA,iCAAiC,qCAuC5C","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport PriorityHighOutlinedIcon from '@mui/icons-material/PriorityHighOutlined';\nimport { Box, IconButton } from '@mui/material';\nimport React, { useState } from 'react';\nimport { GenericToolTip } from 'src/components/GenericToolTip';\nimport { ExtendedMedicationDataForResponse } from 'utils';\nimport { InteractionAlertsDialog } from '../InteractionAlertsDialog';\nimport { interactionsSummary } from '../util';\n\ninterface Props {\n  medication: ExtendedMedicationDataForResponse;\n}\n\nexport const MedicationInteractionsAlertButton: React.FC<Props> = ({ medication }) => {\n  const [showInteractionAlerts, setShowInteractionAlerts] = useState(false);\n\n  return (\n    <Box onClick={(e) => e.stopPropagation()}>\n      {medication.interactions &&\n      (medication.interactions.allergyInteractions.length > 0 ||\n        medication.interactions.drugInteractions.length > 0) ? (\n        <GenericToolTip\n          title={\n            'Interactions: ' + interactionsSummary(medication.interactions) + '. Click on alert icon to see details'\n          }\n          customWidth=\"500px\"\n          placement=\"top\"\n        >\n          <IconButton onClick={() => setShowInteractionAlerts(true)}>\n            <PriorityHighOutlinedIcon\n              style={{\n                width: '15px',\n                height: '15px',\n                color: '#FFF',\n                background: otherColors.priorityHighIcon,\n                borderRadius: '4px',\n                padding: '1px 2px 1px 2px',\n              }}\n            />\n          </IconButton>\n        </GenericToolTip>\n      ) : null}\n      {showInteractionAlerts && medication.interactions ? (\n        <InteractionAlertsDialog\n          medicationName={medication.medicationName}\n          interactions={medication.interactions}\n          readonly={true}\n          onCancel={() => setShowInteractionAlerts(false)}\n        />\n      ) : null}\n    </Box>\n  );\n};\n"]}