{"version":3,"file":"MedicationList.js","sourceRoot":"","sources":["MedicationList.tsx"],"names":[],"mappings":";;;AAAA,0CAAgD;AAChD,+BAAwD;AACxD,qDAAmD;AACnD,kFAAiF;AACjF,6FAA4F;AAC5F,2DAA0D;AAEnD,IAAM,cAAc,GAAa;IAC9B,IAAA,WAAW,GAAK,IAAA,iDAAuB,GAAE,YAA9B,CAA+B;IAClD,oDAAoD;IAC7C,IAAA,YAAY,GAAI,IAAA,kCAAe,GAAE,GAArB,CAAsB;IACzC,IAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAE9C,IAAM,kBAAkB,GAAG,IAAA,eAAO,EAAC;QACjC,OAAO,WAAW,CAAC,MAAM,CAAC,UAAC,UAAU,IAAK,OAAA,UAAU,CAAC,MAAM,KAAK,SAAS,EAA/B,CAA+B,CAAC,CAAC;IAC7E,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAElB,IAAA,uBAAe,EAAC;QACd,IAAI,QAAQ,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC9C,qBAAqB,CAAC;;gBACpB,IAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,qBAAc,QAAQ,CAAE,CAAC,CAAC;gBAClE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,wDAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;gBAEnF,IAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAC1C,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACpC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,EAAE,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEnC,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC7B,OAAO,CAAC,qBAAU,CAAC,qBAAqB,EAAE,qBAAU,CAAC,CAAC;IACxD,CAAC;IAED,OAAO,CACL,CAAC,cAAG,CACF;MAAA,CAAC,uCAAkB,CAAC,AAAD,EACnB;MAAA,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,UAAU,IAAK,OAAA,CACtC,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;gBACF,eAAe,EAAE,MAAM,EAAE,mGAAmG;aAC7H,CAAC,CACF,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CACnB,EAAE,CAAC,CAAC,qBAAc,UAAU,CAAC,EAAE,CAAE,CAAC,CAElC;UAAA,CAAC,+CAAsB,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,EACjE;QAAA,EAAE,cAAG,CAAC,CACP,EAVuC,CAUvC,CAAC,CACJ;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA3CW,QAAA,cAAc,kBA2CzB","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport React, { useLayoutEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useMedicationManagement } from '../../../hooks/useMedicationManagement';\nimport { EditableMedicationCard } from '../medication-editable-card/EditableMedicationCard';\nimport { MedicationWarnings } from './MedicationWarnings';\n\nexport const MedicationList: React.FC = () => {\n  const { medications } = useMedicationManagement();\n  // const selectsOptions = useFieldsSelectsOptions();\n  const [searchParams] = useSearchParams();\n  const scrollTo = searchParams.get('scrollTo');\n\n  const pendingMedications = useMemo(() => {\n    return medications.filter((medication) => medication.status === 'pending');\n  }, [medications]);\n\n  useLayoutEffect(() => {\n    if (scrollTo && pendingMedications.length > 0) {\n      requestAnimationFrame(() => {\n        const element = document.getElementById(`medication-${scrollTo}`);\n        element?.scrollIntoView?.({ behavior: 'auto', block: 'start', inline: 'nearest' });\n\n        const url = new URL(window.location.href);\n        url.searchParams.delete('scrollTo');\n        window.history.replaceState({}, '', url.toString());\n      });\n    }\n  }, [scrollTo, pendingMedications]);\n\n  if (medications.length === 0) {\n    return <Typography>No medications found.</Typography>;\n  }\n\n  return (\n    <Box>\n      <MedicationWarnings />\n      {pendingMedications.map((medication) => (\n        <Box\n          sx={{\n            scrollMarginTop: '48px', // used for correct positioning on scrollIntoView to prevent table header overflow top card content\n          }}\n          key={medication.id}\n          id={`medication-${medication.id}`}\n        >\n          <EditableMedicationCard medication={medication} type=\"dispense\" />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n"]}