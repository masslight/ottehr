{"version":3,"file":"MedicationCardField.js","sourceRoot":"","sources":["MedicationCardField.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Autocomplete,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n  Skeleton,\n  TextField,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { AdapterLuxon } from '@mui/x-date-pickers/AdapterLuxon';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { IN_HOUSE_CONTAINED_MEDICATION_ID, MedicationData, REQUIRED_FIELD_ERROR_MESSAGE } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { OrderFieldsSelectsOptions } from '../../../hooks/useGetFieldOptions';\nimport { MedicationFieldType } from './fieldsConfig';\nimport { InHouseMedicationFieldType, medicationOrderFieldsWithOptions } from './utils';\n\ninterface MedicationCardFieldProps {\n  field: MedicationFieldType;\n  label: string;\n  type?: InHouseMedicationFieldType;\n  value: string | number | undefined;\n  onChange: <Field extends keyof MedicationData>(field: Field, value: MedicationData[Field]) => void;\n  required?: boolean;\n  showError?: boolean;\n  isEditable?: boolean;\n  selectsOptions: OrderFieldsSelectsOptions;\n  renderValue?: string;\n}\n\nconst StyledTextField = styled(TextField)({\n  '& .MuiInputBase-input': {\n    height: '1.44em',\n  },\n});\n\nconst StyledFormControl = styled(FormControl)({\n  width: '100%',\n});\n\nconst emptySelectsOptions: OrderFieldsSelectsOptions = {\n  medicationId: { options: [], status: 'loading' },\n  route: { options: [], status: 'loading' },\n  associatedDx: { options: [], status: 'loading' },\n  units: { options: [], status: 'loading' },\n  location: { options: [], status: 'loading' },\n  providerId: { options: [], status: 'loading' },\n};\n\nexport const MedicationCardField: React.FC<MedicationCardFieldProps> = ({\n  field,\n  label,\n  type = 'text',\n  value,\n  onChange,\n  required = false,\n  showError = false,\n  isEditable = true,\n  selectsOptions = emptySelectsOptions,\n  renderValue,\n}) => {\n  const handleChange = (newValue: string | number | undefined): void => {\n    onChange(field, newValue);\n  };\n\n  const isInstruction = field === 'instructions';\n\n  if (field === 'effectiveDateTime') {\n    const dateTimeValue = value ? DateTime.fromISO(value as string) : null;\n\n    return (\n      <LocalizationProvider dateAdapter={AdapterLuxon}>\n        <DateTimePicker\n          data-testid={dataTestIds.orderMedicationPage.inputField(field)}\n          label={label}\n          value={dateTimeValue}\n          onChange={(newValue) => {\n            if (!newValue) return;\n            const isoString = newValue.toISO();\n            if (isoString) {\n              handleChange(isoString);\n            }\n          }}\n          disabled={!isEditable}\n          slotProps={{\n            textField: {\n              fullWidth: true,\n              variant: 'outlined',\n              required: required,\n              error: showError && required && !value,\n              helperText: showError && required && !value ? REQUIRED_FIELD_ERROR_MESSAGE : '',\n            },\n          }}\n          format=\"yyyy-MM-dd HH:mm a\"\n        />\n      </LocalizationProvider>\n    );\n  }\n\n  if (type === 'autocomplete') {\n    const options = selectsOptions[field as keyof OrderFieldsSelectsOptions].options;\n    const foundOption =\n      options.find((option) => option.value === value) ?? options.find((option) => option.value === '');\n    const isOptionsLoaded = selectsOptions[field as keyof OrderFieldsSelectsOptions].status === 'loaded';\n    const currentValue = renderValue ? { value: IN_HOUSE_CONTAINED_MEDICATION_ID, label: renderValue } : foundOption;\n\n    const autocomplete = isOptionsLoaded ? (\n      <Autocomplete\n        disabled={!isOptionsLoaded || !isEditable}\n        options={options}\n        isOptionEqualToValue={(option, value) =>\n          option.value === value.value || value.value === IN_HOUSE_CONTAINED_MEDICATION_ID\n        }\n        value={currentValue}\n        getOptionLabel={(option) => option.label}\n        onChange={(_e, val) => handleChange(val?.value)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label={label}\n            placeholder={`Search ${label}`}\n            error={showError && required && !value}\n          />\n        )}\n      />\n    ) : (\n      <Skeleton variant=\"rectangular\" width=\"100%\" height={56} />\n    );\n\n    return (\n      <StyledFormControl\n        data-testid={dataTestIds.orderMedicationPage.inputField(field)}\n        disabled={!isEditable}\n        required={required}\n        error={showError && required && !value}\n      >\n        {autocomplete}\n        {showError && required && !value && <FormHelperText>This field is required</FormHelperText>}\n      </StyledFormControl>\n    );\n  }\n\n  if (type === 'select' && medicationOrderFieldsWithOptions.includes(field)) {\n    const options = selectsOptions[field as keyof OrderFieldsSelectsOptions].options;\n    const isOptionsLoaded = selectsOptions[field as keyof OrderFieldsSelectsOptions].status === 'loaded';\n\n    const select = isOptionsLoaded ? (\n      <Select\n        disabled={!isEditable}\n        labelId={`${field}-label`}\n        value={value ?? ''}\n        {...(renderValue\n          ? {\n              renderValue: () => renderValue,\n            }\n          : {})}\n        onChange={(e) => handleChange(e.target.value)}\n        label={label}\n        required={required}\n        error={showError && required && !value}\n        autoComplete=\"off\"\n      >\n        <MenuItem value=\"\">Select {label}</MenuItem>\n        {options.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n    ) : (\n      <Skeleton variant=\"rectangular\" width=\"100%\" height={56} />\n    );\n\n    return (\n      <StyledFormControl\n        data-testid={dataTestIds.orderMedicationPage.inputField(field)}\n        disabled={!isEditable}\n        required={required}\n        error={showError && required && !value}\n      >\n        <InputLabel id={`${field}-label`}>{label}</InputLabel>\n        {select}\n        {showError && required && !value && <FormHelperText>This field is required</FormHelperText>}\n      </StyledFormControl>\n    );\n  }\n\n  return (\n    <StyledTextField\n      data-testid={dataTestIds.orderMedicationPage.inputField(field)}\n      disabled={!isEditable}\n      autoComplete=\"off\"\n      fullWidth\n      label={label}\n      variant=\"outlined\"\n      value={value ?? ''}\n      onChange={(e) => handleChange(e.target.value)}\n      type={type}\n      {...(type === 'number' ? { inputProps: { min: 0 } } : {})}\n      multiline={isInstruction}\n      rows={isInstruction ? 3 : undefined}\n      InputLabelProps={type === 'datetime' || type === 'month' || isInstruction ? { shrink: true } : undefined}\n      required={required}\n      error={showError && required && !value}\n      helperText={showError && required && !value ? REQUIRED_FIELD_ERROR_MESSAGE : ''}\n      // https://github.com/mui/material-ui/issues/7960#issuecomment-1858083123\n      {...(type === 'number'\n        ? { onFocus: (e) => e.target.addEventListener('wheel', (e) => e.preventDefault(), { passive: false }) }\n        : {})}\n    />\n  );\n};\n\nexport default MedicationCardField;\n"]}