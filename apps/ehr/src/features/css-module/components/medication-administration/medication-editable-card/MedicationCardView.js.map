{"version":3,"file":"MedicationCardView.js","sourceRoot":"","sources":["MedicationCardView.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport CheckCircleOutline from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineOutlined from '@mui/icons-material/ErrorOutlineOutlined';\nimport { Box, CircularProgress, Grid, Paper, Typography, useTheme } from '@mui/material';\nimport { Stack } from '@mui/system';\nimport { DateTime } from 'luxon';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  ExtendedMedicationDataForResponse,\n  IN_HOUSE_CONTAINED_MEDICATION_ID,\n  makeMedicationOrderUpdateRequestInput,\n  MedicationData,\n  MedicationOrderStatusesType,\n  UpdateMedicationOrderInput,\n} from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { OrderFieldsSelectsOptions } from '../../../hooks/useGetFieldOptions';\nimport { getInHouseMedicationMARUrl } from '../../../routing/helpers';\nimport { CSSLoader } from '../../CSSLoader';\nimport { ButtonRounded } from '../../RoundedButton';\nimport { MedicationStatusChip } from '../statuses/MedicationStatusChip';\nimport { getFieldLabel, MedicationFieldType, MedicationOrderType } from './fieldsConfig';\nimport { MedicationCardField } from './MedicationCardField';\nimport { InHouseMedicationFieldType } from './utils';\n\nexport interface InteractionsMessage {\n  style: 'loading' | 'warning' | 'success';\n  message: string;\n}\n\ntype MedicationCardViewProps = {\n  type: MedicationOrderType;\n  onSave: (medicationSaveOrUpdateRequest: UpdateMedicationOrderInput) => void;\n  medication?: ExtendedMedicationDataForResponse;\n  fieldsConfig: Partial<\n    Record<\n      keyof MedicationData,\n      {\n        xs: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n        isRequired: boolean;\n      }\n    >\n  >;\n  localValues: Partial<MedicationData>;\n  selectedStatus?: MedicationOrderStatusesType;\n  isUpdating: boolean;\n  onFieldValueChange: <Field extends keyof MedicationData>(field: Field, value: MedicationData[Field]) => void;\n  onStatusSelect: (newStatus: MedicationOrderStatusesType) => void;\n  getFieldValue: <Field extends keyof MedicationData>(\n    field: Field,\n    type?: string\n  ) => MedicationData[Field] | '' | undefined;\n  showErrors: boolean;\n  fieldErrors: Record<string, boolean>;\n  getFieldType: (field: keyof MedicationData) => InHouseMedicationFieldType;\n  isEditable: boolean;\n  saveButtonText: string;\n  isSaveButtonDisabled: boolean;\n  selectsOptions: OrderFieldsSelectsOptions;\n  interactionsMessage?: InteractionsMessage;\n  onInteractionsMessageClick: () => void;\n};\n\nexport const MedicationCardView: React.FC<MedicationCardViewProps> = ({\n  onSave,\n  medication,\n  fieldsConfig,\n  localValues,\n  selectedStatus,\n  isUpdating,\n  onFieldValueChange,\n  onStatusSelect,\n  getFieldValue,\n  type,\n  showErrors,\n  fieldErrors,\n  getFieldType,\n  isEditable,\n  saveButtonText,\n  isSaveButtonDisabled,\n  selectsOptions,\n  interactionsMessage,\n  onInteractionsMessageClick,\n}) => {\n  const navigate = useNavigate();\n  const { id: appointmentId } = useParams();\n  const theme = useTheme();\n\n  const OrderFooter = (): React.ReactElement => {\n    return (\n      <Box sx={{ minHeight: '40px' }} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <ButtonRounded\n          data-testid={dataTestIds.orderMedicationPage.backButton}\n          variant=\"outlined\"\n          onClick={() => navigate(getInHouseMedicationMARUrl(appointmentId!))}\n          color=\"primary\"\n          size=\"large\"\n          startIcon={<ArrowBackIcon />}\n        >\n          Back\n        </ButtonRounded>\n        {isEditable && (\n          <ButtonRounded\n            data-testid={dataTestIds.orderMedicationPage.fillOrderToSaveButton}\n            disabled={isSaveButtonDisabled}\n            onClick={() =>\n              onSave(\n                makeMedicationOrderUpdateRequestInput({\n                  id: medication?.id,\n                  orderData: { ...localValues },\n                  newStatus: selectedStatus,\n                })\n              )\n            }\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            {saveButtonText}\n          </ButtonRounded>\n        )}\n      </Box>\n    );\n  };\n\n  const DispenseFooter = (): React.ReactElement => {\n    return (\n      <Box sx={{ minHeight: '40px' }} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <MedicationStatusChip\n          isEditable={false}\n          medication={medication}\n          onClick={onStatusSelect}\n          status={selectedStatus}\n        />\n        {isEditable && (\n          <Box display=\"flex\" flexDirection=\"row\" gap={2}>\n            <ButtonRounded\n              disabled={isSaveButtonDisabled}\n              onClick={() =>\n                onSave(\n                  makeMedicationOrderUpdateRequestInput({\n                    id: medication?.id,\n                    orderData: { ...localValues },\n                    newStatus: 'administered-not',\n                  })\n                )\n              }\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Not Administered\n            </ButtonRounded>\n            <ButtonRounded\n              disabled={isSaveButtonDisabled}\n              onClick={() =>\n                onSave(\n                  makeMedicationOrderUpdateRequestInput({\n                    id: medication?.id,\n                    orderData: { ...localValues },\n                    newStatus: 'administered-partly',\n                  })\n                )\n              }\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Partly Administered\n            </ButtonRounded>\n            <ButtonRounded\n              disabled={isSaveButtonDisabled}\n              onClick={() =>\n                onSave(\n                  makeMedicationOrderUpdateRequestInput({\n                    id: medication?.id,\n                    orderData: { ...localValues },\n                    newStatus: 'administered',\n                  })\n                )\n              }\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n            >\n              Administered\n            </ButtonRounded>\n          </Box>\n        )}\n      </Box>\n    );\n  };\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n      <Grid container spacing={2}>\n        <Grid\n          item\n          xs={12}\n          sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}\n        >\n          {type !== 'order-new' && (\n            <Typography gutterBottom sx={{ height: '26px', display: 'flex', flexDirection: 'row', gap: 3 }}>\n              <span>Order ID: {medication?.id}</span>\n              <span>\n                {medication?.effectiveDateTime\n                  ? DateTime.fromISO(medication.effectiveDateTime).toFormat('MM/dd/yyyy hh:mm a')\n                  : ''}\n              </span>\n            </Typography>\n          )}\n          {isUpdating && (\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n              <CSSLoader size={24} height={'30px'} width={'30px'} />\n              <Box ml={1}>Saving...</Box>\n            </div>\n          )}\n        </Grid>\n        {Object.entries(fieldsConfig).map(([field, config]) => {\n          const value = getFieldValue(field as keyof MedicationData);\n          let renderValue: string | undefined;\n\n          // renderValue handles edge case when backend created new medication resource without id\n          if (field === 'medicationId' && medication?.medicationName && value === IN_HOUSE_CONTAINED_MEDICATION_ID) {\n            renderValue = medication.medicationName;\n          }\n\n          return (\n            <Grid item xs={config!.xs} key={field}>\n              <MedicationCardField\n                isEditable={isEditable && !(type === 'dispense' && field === 'medicationId')}\n                field={field as MedicationFieldType}\n                label={getFieldLabel(field as MedicationFieldType, type)}\n                type={getFieldType(field as keyof MedicationData)}\n                value={value}\n                renderValue={renderValue}\n                onChange={onFieldValueChange}\n                required={config!.isRequired}\n                showError={showErrors || fieldErrors[field]}\n                selectsOptions={selectsOptions}\n              />\n            </Grid>\n          );\n        })}\n        {interactionsMessage ? (\n          <Grid item xs={12}>\n            <Stack\n              style={{\n                background:\n                  interactionsMessage.style === 'warning'\n                    ? otherColors.lightErrorBg\n                    : interactionsMessage.style === 'success'\n                    ? otherColors.lightGreen\n                    : 'none',\n                padding: '16px',\n                borderRadius: '4px',\n                width: '100%',\n                cursor: 'pointer',\n              }}\n              alignItems=\"center\"\n              direction=\"row\"\n              onClick={onInteractionsMessageClick}\n            >\n              {interactionsMessage.style === 'warning' ? (\n                <ErrorOutlineOutlined style={{ width: '20px', height: '20px', color: theme.palette.error.main }} />\n              ) : interactionsMessage.style === 'success' ? (\n                <CheckCircleOutline style={{ width: '20px', height: '20px', color: theme.palette.success.main }} />\n              ) : (\n                <CircularProgress size=\"16px\" />\n              )}\n              <Typography\n                variant=\"body2\"\n                style={{\n                  color:\n                    interactionsMessage.style === 'warning'\n                      ? otherColors.lightErrorText\n                      : interactionsMessage.style === 'success'\n                      ? otherColors.darkGreenText\n                      : '#000',\n                  marginLeft: '12px',\n                }}\n                display=\"inline\"\n              >\n                <span style={{ fontWeight: '500' }}>Interaction: </span>\n                {interactionsMessage.message}\n              </Typography>\n            </Stack>\n          </Grid>\n        ) : null}\n        <Grid item xs={12}>\n          {type === 'dispense' || type === 'dispense-not-administered' ? <DispenseFooter /> : <OrderFooter />}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n"]}