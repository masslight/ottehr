{"version":3,"file":"ReasonSelect.js","sourceRoot":"","sources":["ReasonSelect.tsx"],"names":[],"mappings":";;;AAAA,0CAA4F;AAC5F,+BAA8D;AAE9D,sDAAuE;AAEhE,IAAM,YAAY,GAGpB,UAAC,EAA8C;QAA5C,qBAAqB,2BAAA,EAAE,mBAAmB,yBAAA;IAC1C,IAAA,KAAsC,IAAA,gBAAQ,EAAuB,EAAE,CAAC,EAAvE,cAAc,QAAA,EAAE,iBAAiB,QAAsC,CAAC;IACzE,IAAA,KAAgC,IAAA,gBAAQ,EAAC,EAAE,CAAC,EAA3C,WAAW,QAAA,EAAE,cAAc,QAAgB,CAAC;IAEnD,IAAA,iBAAS,EAAC;QACR,mBAAmB,CAAC,CAAC,cAAc,IAAI,CAAC,cAAc,KAAK,iCAAe,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5G,CAAC,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,mBAAmB,CAAC,CAAC,CAAC;IAEvD,IAAM,kBAAkB,GAAG,UAAC,KAAsB;;QAChD,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,MAAA,qBAAqB,CAAC,OAAO,0CAAE,SAAS,EAAE,CAAC;YAC7C,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;YACvD,IAAI,KAAK,KAAK,iCAAe,CAAC,KAAK,EAAE,CAAC;gBACpC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;gBACzD,cAAc,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC;QACH,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,uBAAuB,GAAG,UAAC,KAAa;;QAC5C,cAAc,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,MAAA,qBAAqB,CAAC,OAAO,0CAAE,SAAS,EAAE,CAAC;YAC7C,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;QAC9D,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC/B;MAAA,CAAC,sBAAW,CAAC,SAAS,CACpB;QAAA,CAAC,qBAAU,CAAC,MAAM,EAAE,qBAAU,CAC9B;QAAA,CAAC,iBAAM,CACL,KAAK,CAAC,CAAC,cAAc,CAAC,CACtB,QAAQ,CAAC,CAAC,UAAC,CAAC,IAAK,OAAA,kBAAkB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAwB,CAAC,EAArD,CAAqD,CAAC,CACvE,KAAK,CAAC,QAAQ,CAEd;UAAA,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAgB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAa;gBAAZ,IAAI,QAAA,EAAE,KAAK,QAAA;YAAM,OAAA,CACvD,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAC/B;cAAA,CAAC,KAAK,CACR;YAAA,EAAE,mBAAQ,CAAC,CACZ;QAJwD,CAIxD,CAAC,CACJ;QAAA,EAAE,iBAAM,CACV;MAAA,EAAE,sBAAW,CAEb;;MAAA,CAAC,cAAc,KAAK,iCAAe,CAAC,KAAK,IAAI,CAC3C,CAAC,oBAAS,CACR,SAAS,CACT,KAAK,CAAC,gBAAgB,CACtB,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,QAAQ,CAAC,CAAC,UAAC,CAAC,IAAK,OAAA,uBAAuB,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAvC,CAAuC,CAAC,EACzD,CACH,CACH;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AAxDW,QAAA,YAAY,gBAwDvB","sourcesContent":["import { FormControl, InputLabel, MenuItem, Select, Stack, TextField } from '@mui/material';\nimport { MutableRefObject, useEffect, useState } from 'react';\nimport { UpdateMedicationOrderInput } from 'utils';\nimport { ReasonListCodes, reasonListValues } from '../medicationTypes';\n\nexport const ReasonSelect: React.FC<{\n  updateRequestInputRef: MutableRefObject<UpdateMedicationOrderInput | null>;\n  setIsReasonSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}> = ({ updateRequestInputRef, setIsReasonSelected }) => {\n  const [selectedReason, setSelectedReason] = useState<ReasonListCodes | ''>('');\n  const [otherReason, setOtherReason] = useState('');\n\n  useEffect(() => {\n    setIsReasonSelected(!selectedReason || (selectedReason === ReasonListCodes.OTHER && !otherReason.trim()));\n  }, [selectedReason, otherReason, setIsReasonSelected]);\n\n  const handleReasonChange = (value: ReasonListCodes): void => {\n    setSelectedReason(value);\n    if (updateRequestInputRef.current?.orderData) {\n      updateRequestInputRef.current.orderData.reason = value;\n      if (value !== ReasonListCodes.OTHER) {\n        updateRequestInputRef.current.orderData.otherReason = '';\n        setOtherReason('');\n      }\n    }\n  };\n\n  const handleOtherReasonChange = (value: string): void => {\n    setOtherReason(value);\n    if (updateRequestInputRef.current?.orderData) {\n      updateRequestInputRef.current.orderData.otherReason = value;\n    }\n  };\n\n  return (\n    <Stack spacing={2} sx={{ mt: 2 }}>\n      <FormControl fullWidth>\n        <InputLabel>Reason</InputLabel>\n        <Select\n          value={selectedReason}\n          onChange={(e) => handleReasonChange(e.target.value as ReasonListCodes)}\n          label=\"Reason\"\n        >\n          {Object.entries(reasonListValues).map(([code, label]) => (\n            <MenuItem key={code} value={code}>\n              {label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {selectedReason === ReasonListCodes.OTHER && (\n        <TextField\n          fullWidth\n          label=\"Specify reason\"\n          value={otherReason}\n          onChange={(e) => handleOtherReasonChange(e.target.value)}\n        />\n      )}\n    </Stack>\n  );\n};\n"]}