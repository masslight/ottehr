{"version":3,"file":"fieldsConfig.js","sourceRoot":"","sources":["fieldsConfig.ts"],"names":[],"mappings":"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","sourcesContent":["export type MedicationOrderType = 'order-new' | 'order-edit' | 'dispense' | 'dispense-not-administered';\n\nexport type MedicationFieldType =\n  | 'medicationId'\n  | 'associatedDx'\n  | 'dose'\n  | 'units'\n  | 'manufacturer'\n  | 'route'\n  | 'providerId'\n  | 'effectiveDateTime'\n  | 'instructions'\n  | 'lotNumber'\n  | 'expDate';\n\nexport type MedicationFormType = 'order-new' | 'order-edit' | 'dispense' | 'dispense-not-administered';\n\ntype XsVariants = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n\nexport const fieldsConfigForOrder: Record<\n  Exclude<MedicationFieldType, 'effectiveDateTime' | 'lotNumber' | 'expDate'>,\n  { xs: XsVariants; isRequired: boolean }\n> = {\n  medicationId: { xs: 6, isRequired: true },\n  associatedDx: { xs: 6, isRequired: false },\n  dose: { xs: 6, isRequired: true },\n  units: { xs: 6, isRequired: true },\n  manufacturer: { xs: 6, isRequired: false },\n  route: { xs: 6, isRequired: true },\n  providerId: { xs: 6, isRequired: true },\n\n  // TODO: uncomment when the \"anatomical locations\" feature is completed\n  // location: { xs: 6, isRequired: false },\n  instructions: { xs: 12, isRequired: false },\n} as const;\n\nexport const fieldsConfigForDispense: Record<MedicationFieldType, { xs: XsVariants; isRequired: boolean }> = {\n  medicationId: { xs: 6, isRequired: true },\n  associatedDx: { xs: 6, isRequired: false },\n  dose: { xs: 6, isRequired: true },\n  units: { xs: 6, isRequired: true },\n  lotNumber: { xs: 3, isRequired: true },\n  expDate: { xs: 3, isRequired: true },\n  manufacturer: { xs: 6, isRequired: false },\n  route: { xs: 6, isRequired: true },\n  providerId: { xs: 6, isRequired: true },\n\n  // TODO: uncomment when the \"anatomical locations\" feature is completed\n  // location: { xs: 6, isRequired: false },\n  effectiveDateTime: { xs: 6, isRequired: true },\n  instructions: { xs: 12, isRequired: false },\n} as const;\n\nexport const fieldsConfigForNotAdministered: Record<MedicationFieldType, { xs: XsVariants; isRequired: boolean }> = {\n  medicationId: { xs: 6, isRequired: true },\n  associatedDx: { xs: 6, isRequired: false },\n  dose: { xs: 6, isRequired: true },\n  units: { xs: 6, isRequired: true },\n  lotNumber: { xs: 3, isRequired: false }, // Not required for partial administration\n  expDate: { xs: 3, isRequired: false }, // Not required for partial administration\n  manufacturer: { xs: 6, isRequired: false },\n  route: { xs: 6, isRequired: true },\n  providerId: { xs: 6, isRequired: true },\n\n  // TODO: uncomment when the \"anatomical locations\" feature is completed\n  // location: { xs: 6, isRequired: false },\n  effectiveDateTime: { xs: 6, isRequired: true },\n  instructions: { xs: 12, isRequired: false },\n} as const;\n\nexport const fieldsConfig: Record<\n  MedicationFormType,\n  typeof fieldsConfigForOrder | typeof fieldsConfigForDispense | typeof fieldsConfigForNotAdministered\n> = {\n  'order-new': fieldsConfigForOrder,\n  'order-edit': fieldsConfigForOrder,\n  dispense: fieldsConfigForDispense,\n  'dispense-not-administered': fieldsConfigForNotAdministered,\n} as const;\n\nexport const getFieldLabel = (\n  field: MedicationFieldType,\n  form: MedicationFormType | 'form-independent' = 'form-independent'\n): string => {\n  const labelMap: Record<MedicationFieldType, Partial<Record<MedicationFormType | 'form-independent', string>>> = {\n    medicationId: { 'form-independent': 'Medication' },\n    associatedDx: { 'form-independent': 'Associated Dx' },\n    dose: { 'form-independent': 'Dose' },\n    units: { 'form-independent': 'Units' },\n    manufacturer: { 'form-independent': 'Manufacturer' },\n    route: { 'form-independent': 'Route' },\n    providerId: { 'form-independent': 'Ordered by' },\n    effectiveDateTime: { 'form-independent': 'Date/Time Given' },\n    instructions: { 'form-independent': 'Instructions', dispense: 'Comments', 'dispense-not-administered': 'Comments' },\n    lotNumber: { 'form-independent': 'Lot Number' },\n    expDate: { 'form-independent': 'Expiration Date' },\n  };\n  return labelMap[field][form] || labelMap[field]['form-independent'] || field;\n};\n"]}