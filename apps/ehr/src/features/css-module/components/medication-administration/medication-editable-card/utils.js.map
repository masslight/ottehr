{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport Oystehr, { ErxCheckPrecheckInteractionsResponse } from '@oystehr/sdk';\nimport { MedicationRequest } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { MedicationWithTypeDTO } from 'src/features/css-module/hooks/useMedicationHistory';\nimport {\n  AllergyInteraction,\n  DrugInteraction,\n  ExtendedMedicationDataForResponse,\n  MedicationData,\n  MedicationInteractions,\n  MedicationOrderStatusesType,\n  medicationStatusDisplayLabelMap,\n  MEDISPAN_DISPENSABLE_DRUG_ID_CODE_SYSTEM,\n  UpdateMedicationOrderInput,\n} from 'utils';\nimport { fieldsConfig, MedicationOrderType } from './fieldsConfig';\nimport { ReasonSelect } from './ReasonSelect';\n\nexport const medicationOrderFieldsWithOptions: Partial<keyof ExtendedMedicationDataForResponse>[] = [\n  'medicationId',\n  'associatedDx',\n  'route',\n  'location',\n  'units',\n  'providerId',\n];\n\nexport type MedicationOrderFieldWithOptionsType = (typeof medicationOrderFieldsWithOptions)[number];\n\nexport type InHouseMedicationFieldType = 'text' | 'number' | 'select' | 'datetime' | 'month' | 'autocomplete';\n\nexport const getFieldType = (field: keyof MedicationData): InHouseMedicationFieldType => {\n  if (field === 'dose') return 'number';\n  if (field === 'expDate') return 'month';\n  if (field === 'effectiveDateTime') return 'datetime';\n  if (field === 'medicationId') return 'autocomplete';\n  if (medicationOrderFieldsWithOptions.includes(field)) return 'select';\n  return 'text';\n};\n\nexport const validateMedicationField = (field: string, value: string | number, type: MedicationOrderType): boolean => {\n  const config = fieldsConfig[type][field as keyof (typeof fieldsConfig)[typeof type]];\n  return config?.isRequired ? value.toString().trim() !== '' : true;\n};\n\nexport const validateAllMedicationFields = (\n  localValues: Partial<MedicationData>,\n  medication: MedicationData | undefined = undefined,\n  type: MedicationOrderType,\n  setFieldErrors: (errors: Record<string, boolean>) => void\n): { isValid: boolean; missingFields: string[] } => {\n  const currentFieldsConfig = fieldsConfig[type];\n  const errors: Record<string, boolean> = {};\n  const missingFields: string[] = [];\n\n  Object.entries(currentFieldsConfig).forEach(([field, config]) => {\n    if (config.isRequired) {\n      const fieldKey = field as keyof MedicationData;\n      const value = localValues[fieldKey] ?? medication?.[fieldKey] ?? '';\n      const isValid = validateMedicationField(field, value as string, type);\n      errors[field] = !isValid;\n      if (!isValid) {\n        missingFields.push(field);\n      }\n    }\n  });\n\n  setFieldErrors(errors);\n  return { isValid: missingFields.length === 0, missingFields };\n};\n\n// this check is used in order-new and order-edit to prevent user from exit page and lose unsaved data\nexport const isUnsavedMedicationData = (\n  savedMedication: ExtendedMedicationDataForResponse | undefined,\n  localValues: Partial<MedicationData>,\n  selectedStatus: MedicationOrderStatusesType | undefined,\n  getMedicationFieldValue: <Field extends keyof MedicationData>(\n    medication: MedicationData,\n    field: Field,\n    type?: string\n  ) => MedicationData[Field] | '',\n  autoFilledFieldsRef: React.MutableRefObject<Partial<MedicationData>>,\n  interactions: MedicationInteractions | undefined\n): boolean => {\n  if (!savedMedication) {\n    return Object.values(localValues).some((value) => value !== '' && value !== undefined);\n  }\n\n  return (\n    selectedStatus !== savedMedication?.status ||\n    JSON.stringify(interactions) !== JSON.stringify(savedMedication.interactions) ||\n    Object.entries(localValues).some(([field, value]) => {\n      const isAutofilledField = Object.keys(autoFilledFieldsRef.current).includes(field);\n      const savedValue = getMedicationFieldValue(savedMedication, field as keyof MedicationData);\n      const isChangedField = (value || savedValue) && value !== savedValue;\n\n      // we don't have autofilled fields in the order-edit or order-edit, so we don't have to check them\n      return isAutofilledField ? false : isChangedField;\n    })\n  );\n};\n\nexport const getSaveButtonText = (\n  currentStatus: MedicationOrderStatusesType,\n  type: MedicationOrderType,\n  selectedStatus: MedicationOrderStatusesType | undefined,\n  isUnsavedData: boolean\n): string => {\n  if ((type === 'dispense' || type === 'dispense-not-administered') && currentStatus === 'pending' && selectedStatus) {\n    return `Mark as ${selectedStatus\n      .toLocaleLowerCase()\n      .split(' ')\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ')}`;\n  }\n  if (type === 'order-new') {\n    return isUnsavedData ? 'Order Medication' : 'Fill Order to Save';\n  }\n  if (type === 'order-edit' && currentStatus === 'pending') {\n    return isUnsavedData ? 'Save' : 'Saved';\n  }\n  return '';\n};\n\nexport interface ConfirmSaveModalConfig {\n  title: string;\n  confirmText: string;\n  closeButtonText: string;\n  color?: string;\n  icon?: React.ReactNode;\n  showCloseButton?: boolean;\n  showConfirmButton?: boolean;\n  ContentComponent?: React.FC;\n}\n\nexport const getConfirmSaveModalConfigs = ({\n  patientName,\n  medicationName,\n  newStatus,\n  updateRequestInputRef,\n  setIsReasonSelected,\n  routeName,\n}: {\n  patientName: string;\n  medicationName: string;\n  newStatus: MedicationOrderStatusesType;\n  updateRequestInputRef: React.MutableRefObject<UpdateMedicationOrderInput | null>;\n  setIsReasonSelected: React.Dispatch<React.SetStateAction<boolean>>;\n  routeName: string;\n}): Partial<Record<MedicationOrderStatusesType, ConfirmSaveModalConfig>> => {\n  const confirmationModalContentJSX = (\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Typography>\n        <strong>Patient:</strong> {patientName}\n      </Typography>\n      <Typography>\n        <strong>Medication:</strong> {medicationName} / {updateRequestInputRef.current?.orderData?.dose}\n        {updateRequestInputRef.current?.orderData?.units} / {routeName}\n      </Typography>\n      <Typography>\n        Please confirm that you want to mark this medication order as{' '}\n        {<strong>{medicationStatusDisplayLabelMap[newStatus] || newStatus}</strong>}\n        {newStatus !== 'administered' ? ' and select the reason.' : '.'}\n      </Typography>\n    </Box>\n  );\n\n  const ReasonSelectField = (): React.ReactElement => (\n    <ReasonSelect updateRequestInputRef={updateRequestInputRef} setIsReasonSelected={setIsReasonSelected} />\n  );\n\n  return {\n    administered: {\n      icon: null,\n      color: 'primary.main',\n      title: 'Medication Administered',\n      confirmText: 'Mark as Administered',\n      closeButtonText: 'Cancel',\n      showCloseButton: true,\n      showConfirmButton: true,\n      ContentComponent: () => {\n        return confirmationModalContentJSX;\n      },\n    },\n    'administered-partly': {\n      icon: null,\n      color: 'primary.main',\n      title: 'Medication Partly Administered',\n      confirmText: 'Mark as Partly Administered',\n      closeButtonText: 'Cancel',\n      showCloseButton: true,\n      showConfirmButton: true,\n      ContentComponent: () => (\n        <>\n          {confirmationModalContentJSX}\n          <ReasonSelectField />\n        </>\n      ),\n    },\n    'administered-not': {\n      icon: null,\n      color: 'primary.main',\n      title: 'Medication Not Administered',\n      confirmText: 'Mark as Not Administered',\n      closeButtonText: 'Cancel',\n      showCloseButton: true,\n      showConfirmButton: true,\n      ContentComponent: () => (\n        <>\n          {confirmationModalContentJSX}\n          <ReasonSelectField />\n        </>\n      ),\n    },\n  };\n};\n\nexport const getInitialAutoFilledFields = (\n  medication: ExtendedMedicationDataForResponse | undefined,\n  autoFilledFieldsRef: React.MutableRefObject<Partial<MedicationData>>\n): Partial<Record<'effectiveDateTime', string>> => {\n  const shouldSetDefaultTime = medication?.status === 'pending' && !medication?.effectiveDateTime;\n\n  if (shouldSetDefaultTime) {\n    const currentDateTime = DateTime.now().toISO();\n\n    autoFilledFieldsRef.current = {\n      effectiveDateTime: currentDateTime,\n    };\n\n    return autoFilledFieldsRef.current;\n  }\n\n  return {};\n};\n\nconst SEVERITY_LEVEL_TO_SEVERITY: Record<string, 'high' | 'moderate' | 'low' | undefined> = {\n  MinorInteraction: 'low',\n  ModerateInteraction: 'moderate',\n  MajorInteraction: 'high',\n  Unknown: undefined,\n};\n\nexport const medicationInteractionsFromErxResponse = (\n  response: ErxCheckPrecheckInteractionsResponse,\n  medicationHistory: MedicationWithTypeDTO[],\n  prescriptions: MedicationRequest[]\n): MedicationInteractions => {\n  const drugInteractions: DrugInteraction[] = (response.medications ?? []).map((medication) => {\n    return {\n      drugs: (medication.medications ?? []).map((nestedMedication) => ({\n        id: nestedMedication.id.toString(),\n        name: nestedMedication.name,\n      })),\n      severity: SEVERITY_LEVEL_TO_SEVERITY[medication.severityLevel],\n      message: medication.message,\n    };\n  });\n  drugInteractions.forEach((drugInteraction) => {\n    const drugIds = drugInteraction.drugs.map((drug) => drug.id);\n    const sourceMedication = medicationHistory.find((medication) => medication.id && drugIds.includes(medication.id));\n    let display: string | undefined = undefined;\n    if (sourceMedication && sourceMedication.resourceId && sourceMedication?.chartDataField && sourceMedication?.type) {\n      display = sourceMedication.chartDataField === 'medications' ? 'Patient' : 'In-house';\n      display += sourceMedication.type == 'scheduled' ? ' - Scheduled' : ' - As needed';\n      if (sourceMedication?.intakeInfo?.date) {\n        display += '\\nlast taken\\n' + DateTime.fromISO(sourceMedication.intakeInfo.date).toFormat('MM/dd/yyyy');\n      }\n      drugInteraction.source = {\n        reference: 'Medication/' + sourceMedication.resourceId,\n        display: display,\n      };\n      return;\n    }\n    const sourcePrescription = prescriptions.find((prescription) => {\n      const code = prescription.medicationCodeableConcept?.coding?.find(\n        (coding) => coding.system === MEDISPAN_DISPENSABLE_DRUG_ID_CODE_SYSTEM\n      )?.code;\n      return code && drugIds.includes(code);\n    });\n    const dateString = sourcePrescription?.extension?.find(\n      (extension) => extension.url === 'http://api.zapehr.com/photon-event-time'\n    )?.valueDateTime;\n    if (sourcePrescription && sourcePrescription.id && dateString) {\n      drugInteraction.source = {\n        reference: 'MedicationRequest/' + sourcePrescription.id,\n        display: 'Prescription\\norder added\\n' + DateTime.fromISO(dateString).toFormat('MM/dd/yyyy'),\n      };\n    }\n  });\n  const allergyInteractions: AllergyInteraction[] = (response.allergies ?? []).map((allergy) => {\n    return {\n      message: allergy.message,\n    };\n  });\n  return {\n    drugInteractions,\n    allergyInteractions,\n  };\n};\n\nexport const findPrescriptionsForInteractions = async (\n  patientId: string | undefined,\n  interationsResponse: ErxCheckPrecheckInteractionsResponse,\n  oystehr: Oystehr\n): Promise<MedicationRequest[]> => {\n  const interactingDrugIds = interationsResponse.medications.flatMap(\n    (medication) => medication.medications?.map((nestedMedication) => nestedMedication.id.toString()) ?? []\n  );\n  if (interactingDrugIds.length === 0) {\n    return [];\n  }\n  return (\n    await oystehr.fhir.search<MedicationRequest>({\n      resourceType: 'MedicationRequest',\n      params: [\n        {\n          name: 'status',\n          value: 'active',\n        },\n        {\n          name: 'subject',\n          value: 'Patient/' + patientId,\n        },\n        {\n          name: '_tag',\n          value: 'erx-medication',\n        },\n        {\n          name: 'code',\n          value: interactingDrugIds.map((drugId) => MEDISPAN_DISPENSABLE_DRUG_ID_CODE_SYSTEM + '|' + drugId).join(','),\n        },\n      ],\n    })\n  ).unbundle();\n};\n\nexport const interactionsUnresolved = (interactions: MedicationInteractions | undefined): boolean => {\n  const unresolvedInteraction = [\n    ...(interactions?.drugInteractions ?? []),\n    ...(interactions?.allergyInteractions ?? []),\n  ].find((interaction) => interaction.overrideReason == null);\n  return unresolvedInteraction != null;\n};\n"]}