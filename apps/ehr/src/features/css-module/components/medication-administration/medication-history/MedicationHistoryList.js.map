{"version":3,"file":"MedicationHistoryList.js","sourceRoot":"","sources":["MedicationHistoryList.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport {\n  Box,\n  Paper,\n  Skeleton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\nimport React, { useMemo, useState } from 'react';\nimport { COLLAPSED_MEDS_COUNT, useMedicationHistory } from 'src/features/css-module/hooks/useMedicationHistory';\nimport { AccordionCard } from '../../../../../telemed/components';\nimport { ButtonStyled } from '../../generic-notes-list/components/ui/ButtonStyled';\nimport { MedicationHistoryEntity } from './MedicationHistoryEntity';\n\nexport const MedicationHistoryList: React.FC = () => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [seeMoreOpen, setSeeMoreOpen] = useState(false);\n\n  const { isLoading, medicationHistory } = useMedicationHistory();\n\n  // todo: need to update react-query and use isInitialLoading\n  const showSkeletons = isLoading && medicationHistory.length === 0;\n\n  const shownMeds = useMemo(() => {\n    if (!seeMoreOpen) {\n      return medicationHistory.slice(0, COLLAPSED_MEDS_COUNT);\n    } else {\n      return medicationHistory;\n    }\n  }, [seeMoreOpen, medicationHistory]);\n\n  const handleToggle = (): void => {\n    setIsCollapsed((v) => !v);\n  };\n\n  const toggleShowMore = (): void => {\n    setSeeMoreOpen((state) => !state);\n  };\n\n  const getSeeMoreButtonLabel = (): string => {\n    return seeMoreOpen ? 'See less' : 'See more';\n  };\n\n  return (\n    <AccordionCard label=\"Medication History\" collapsed={isCollapsed} onSwitch={handleToggle}>\n      <Box sx={{ px: 3, py: 1 }}>\n        <TableContainer component={Paper} elevation={0}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Medication</TableCell>\n                <TableCell>Type</TableCell>\n                <TableCell>Who Added</TableCell>\n                <TableCell>Last Time Taken</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {showSkeletons ? (\n                <>\n                  <TableRow>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                    <TableCell>\n                      <Skeleton width={'100%'} height={24} />\n                    </TableCell>\n                  </TableRow>\n                </>\n              ) : (\n                shownMeds.map((item) => <MedicationHistoryEntity key={item.resourceId} item={item} />)\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {!showSkeletons && medicationHistory.length > COLLAPSED_MEDS_COUNT && (\n          <ButtonStyled onClick={toggleShowMore} startIcon={seeMoreOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}>\n            {getSeeMoreButtonLabel()}\n          </ButtonStyled>\n        )}\n        {!showSkeletons && medicationHistory.length === 0 && (\n          <Typography variant=\"body1\" sx={{ opacity: 0.65 }}>\n            No previous medication history available\n          </Typography>\n        )}\n      </Box>\n    </AccordionCard>\n  );\n};\n"]}