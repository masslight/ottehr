{"version":3,"file":"MedicationStatusChip.js","sourceRoot":"","sources":["MedicationStatusChip.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport { Box, Chip, MenuItem, Popover, Stack, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { MedicationOrderStatusesType, medicationStatusDisplayLabelMap } from 'utils';\nimport { ExtendedMedicationDataForResponse } from 'utils';\nimport { useMedicationManagement } from '../../../hooks/useMedicationManagement';\n\ninterface MedicationStatusChipProps {\n  medication?: ExtendedMedicationDataForResponse;\n  onClick?: (newStatus: MedicationOrderStatusesType) => any;\n  status?: MedicationOrderStatusesType;\n  isEditable?: boolean;\n}\n\ninterface ColorScheme {\n  bg: string;\n  text: string;\n  border?: string;\n}\n\nconst StyledChip = styled(Chip)(() => ({\n  borderRadius: '8px',\n  padding: '0 9px',\n  margin: 0,\n  height: '24px',\n  '& .MuiChip-label': {\n    padding: 0,\n    fontWeight: 'bold',\n    fontSize: '12px',\n  },\n  '& .MuiChip-icon': {\n    marginLeft: 'auto',\n    marginRight: '-4px',\n    order: 1,\n  },\n}));\n\nconst StatusMenuItem = styled(MenuItem)({\n  padding: 0,\n  '& .MuiChip-root': {\n    width: '100%',\n    borderRadius: '4px',\n    justifyContent: 'flex-start',\n  },\n});\n\nexport const statusColors: Record<MedicationOrderStatusesType, ColorScheme> = {\n  pending: { bg: '#f1f2f6', text: '#616161' },\n  'administered-partly': { bg: '#B2EBF2', text: '#006064' },\n  'administered-not': { bg: '#FECDD2', text: '#B71C1C' },\n  administered: { bg: '#C8E6C9', text: '#1B5E20' },\n  cancelled: { bg: '#FFFFFF', text: '#616161', border: '#BFC2C6' },\n};\n\nexport const MedicationStatusChip: React.FC<MedicationStatusChipProps> = ({\n  medication,\n  onClick,\n  status: currentStatus,\n  isEditable = false,\n}) => {\n  const { getAvailableStatuses } = useMedicationManagement();\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const status = (currentStatus ?? medication?.status ?? 'pending') as MedicationOrderStatusesType;\n\n  const chipColors = statusColors[status] || { bg: '#F5F5F5', text: '#757575' };\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>): void => {\n    if (isEditable && onClick) {\n      setAnchorEl(event.currentTarget);\n    }\n  };\n\n  const handleClosePopover = (): void => {\n    setAnchorEl(null);\n  };\n\n  const handleStatusClick = async (newStatus: MedicationOrderStatusesType): Promise<void> => {\n    if (onClick) {\n      void onClick(newStatus);\n      handleClosePopover();\n    }\n  };\n\n  const availableStatuses = onClick ? getAvailableStatuses(medication?.status) : [];\n\n  const formatReason = (reason: string): string => {\n    if (!reason) return '';\n    return reason.replace(/-/g, ' ');\n  };\n\n  return (\n    <>\n      <Stack direction=\"column\" spacing={1} sx={{ width: 'fit-content' }}>\n        <StyledChip\n          label={medicationStatusDisplayLabelMap[status] || status}\n          onClick={handleClick}\n          icon={isEditable && onClick ? <ArrowDropDownIcon /> : undefined}\n          sx={{\n            backgroundColor: chipColors.bg,\n            color: chipColors.text,\n            border: chipColors.border ? `1px solid ${chipColors.border}` : 'none',\n            '& .MuiSvgIcon-root': {\n              color: 'inherit',\n              fontSize: '1.2rem',\n              margin: '0 -4px 0 2px',\n            },\n            cursor: isEditable && onClick ? 'pointer' : 'default',\n            width: 'fit-content',\n          }}\n        />\n        {medication?.reason && (\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              color: 'text.secondary',\n              fontSize: '0.75rem',\n              lineHeight: 1.2,\n              whiteSpace: 'nowrap',\n            }}\n          >\n            {formatReason(medication.reason)}\n          </Typography>\n        )}\n      </Stack>\n      {isEditable ? (\n        <Popover\n          open={Boolean(anchorEl)}\n          anchorEl={anchorEl}\n          onClose={handleClosePopover}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <Box sx={{ p: 1 }}>\n            {availableStatuses.map((status) => (\n              <StatusMenuItem key={status} onClick={() => handleStatusClick(status)}>\n                <Chip\n                  label={status}\n                  sx={{\n                    my: 0.5,\n                    backgroundColor: statusColors[status].bg,\n                    color: statusColors[status].text,\n                    border: statusColors[status].border ? `1px solid ${statusColors[status].border}` : 'none',\n                    fontWeight: 'bold',\n                    '& .MuiChip-label': {\n                      padding: '4px 8px',\n                    },\n                  }}\n                />\n              </StatusMenuItem>\n            ))}\n          </Box>\n        </Popover>\n      ) : null}\n    </>\n  );\n};\n"]}