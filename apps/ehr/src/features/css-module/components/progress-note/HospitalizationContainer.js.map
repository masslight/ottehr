{"version":3,"file":"HospitalizationContainer.js","sourceRoot":"","sources":["HospitalizationContainer.tsx"],"names":[],"mappings":";;;AAAA,0CAA0D;AAE1D,6GAA4G;AAC5G,+BAA8C;AAC9C,+CAA0D;AAEnD,IAAM,wBAAwB,GAA8B,UAAC,EAAS;QAAP,KAAK,WAAA;IACjE,IAAA,SAAS,GAAK,IAAA,oBAAY,EAAC,6BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IACvE,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,aAAa,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,aAAa,CAAC;IAE/C,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAC7E;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC3C;;MACF,EAAE,qBAAU,CACZ;MAAA,CAAC,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,MAAM,EAAC,CAAC,CAAC,CACvB,aAAa,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,EAA7D,CAA6D,CAAC,CAC3F,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,mBAAmB,EAAE,qBAAU,CAAC,CAClF,CAED;;MAAA,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAC5B,EACE;UAAA,CAAC,iCAAe,CAAC,qBAAqB,EAAE,iCAAe,CACvD;UAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC9D;YAAA,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAA1D,CAA0D,CAAC,CACnF;UAAA,EAAE,cAAG,CACP;QAAA,GAAG,CACJ,CACH;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA3BW,QAAA,wBAAwB,4BA2BnC","sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { AssessmentTitle } from 'src/telemed/features/appointment/AssessmentTab/components/AssessmentTitle';\nimport { getSelectors, NoteDTO } from 'utils';\nimport { useAppointmentStore } from '../../../../telemed';\n\nexport const HospitalizationContainer: FC<{ notes?: NoteDTO[] }> = ({ notes }) => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const theme = useTheme();\n\n  const episodeOfCare = chartData?.episodeOfCare;\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Hospitalization\n      </Typography>\n      {episodeOfCare?.length ? (\n        episodeOfCare.map((item) => <Typography key={item.resourceId}>{item.display}</Typography>)\n      ) : (\n        <Typography color={theme.palette.text.secondary}>No hospitalizations</Typography>\n      )}\n\n      {notes && notes.length > 0 && (\n        <>\n          <AssessmentTitle>Hospitalization notes</AssessmentTitle>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            {notes?.map((note) => <Typography key={note.resourceId}>{note.text}</Typography>)}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n"]}