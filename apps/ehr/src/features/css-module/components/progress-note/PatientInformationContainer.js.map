{"version":3,"file":"PatientInformationContainer.js","sourceRoot":"","sources":["PatientInformationContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport { capitalize, IconButton, Stack, Typography } from '@mui/material';\nimport React, { FC, useState } from 'react';\nimport { calculatePatientAge, getPatientAddress, getSelectors, standardizePhoneNumber } from 'utils';\nimport { EditPatientDialog } from '../../../../components/dialogs';\nimport { formatDateUsingSlashes } from '../../../../helpers/formatDateTime';\nimport { ActionsList, useAppointmentStore } from '../../../../telemed';\nimport { VisitNoteItem } from '../../../../telemed/features/appointment/ReviewTab';\nimport { getPatientName } from '../../../../telemed/utils';\n\nexport const PatientInformationContainer: FC = () => {\n  const { patient } = getSelectors(useAppointmentStore, ['patient']);\n\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n\n  const name = getPatientName(patient?.name).firstMiddleLastName;\n  const dob =\n    patient?.birthDate && `${formatDateUsingSlashes(patient.birthDate)} (${calculatePatientAge(patient.birthDate)})`;\n  const sex = patient?.gender && capitalize(patient.gender);\n  const phone = standardizePhoneNumber(patient?.telecom?.find((obj) => obj.system === 'phone')?.value);\n  const address = getPatientAddress(patient?.address).zipStateCityLine;\n\n  return (\n    <Stack spacing={2}>\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography fontSize={18} color=\"primary.dark\" fontWeight={600}>\n          Patient information\n        </Typography>\n\n        <IconButton size=\"small\" onClick={() => setIsEditDialogOpen(true)} sx={{ color: 'primary.main' }}>\n          <EditOutlinedIcon />\n        </IconButton>\n      </Stack>\n\n      <ActionsList\n        data={[\n          { label: 'Name', value: name },\n          { label: 'Date of birth (Age)', value: dob },\n          { label: 'Birth sex', value: sex },\n          { label: 'Phone', value: phone },\n          { label: 'Address', value: address },\n        ]}\n        getKey={(item) => item.label}\n        renderItem={(item) => (\n          <Stack width=\"100%\">\n            <VisitNoteItem label={item.label} value={item.value} noMaxWidth />\n          </Stack>\n        )}\n        gap={0.75}\n        divider\n      />\n\n      {isEditDialogOpen && (\n        <EditPatientDialog modalOpen={isEditDialogOpen} onClose={() => setIsEditDialogOpen(false)} />\n      )}\n    </Stack>\n  );\n};\n"]}