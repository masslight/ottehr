{"version":3,"file":"ProgressNoteDetails.js","sourceRoot":"","sources":["ProgressNoteDetails.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Stack, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { ProceduresContainer } from 'src/telemed/features/appointment/ReviewTab/components/ProceduresContainer';\nimport { getProgressNoteChartDataRequestedFields, LabType, NOTE_TYPE } from 'utils';\nimport { dataTestIds } from '../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard, SectionList, useAppointmentStore, usePatientInstructionsVisibility } from '../../../../telemed';\nimport {\n  AdditionalQuestionsContainer,\n  AllergiesContainer,\n  AssessmentContainer,\n  ChiefComplaintContainer,\n  CPTCodesContainer,\n  EMCodeContainer,\n  LabResultsReviewContainer,\n  MedicalConditionsContainer,\n  MedicalDecisionMakingContainer,\n  MedicationsContainer,\n  PatientInstructionsContainer,\n  PrescribedMedicationsContainer,\n  PrivacyPolicyAcknowledgement,\n  ReviewOfSystemsContainer,\n  SurgicalHistoryContainer,\n} from '../../../../telemed/features/appointment/ReviewTab';\nimport { useChartData } from '../../hooks/useChartData';\nimport { useMedicationAPI } from '../../hooks/useMedicationOperations';\nimport { ExamReadOnlyBlock } from '../examination/ExamReadOnly';\nimport { HospitalizationContainer } from './HospitalizationContainer';\nimport { InHouseMedicationsContainer } from './InHouseMedicationsContainer';\nimport { PatientVitalsContainer } from './PatientVitalsContainer';\nimport { RadiologyContainer } from './RadiologyContainer';\n\nexport const ProgressNoteDetails: FC = () => {\n  const { chartData, encounter, setPartialChartData } = getSelectors(useAppointmentStore, [\n    'chartData',\n    'encounter',\n    'setPartialChartData',\n  ]);\n\n  const { chartData: additionalChartData } = useChartData({\n    encounterId: encounter.id || '',\n    requestedFields: getProgressNoteChartDataRequestedFields(),\n    onSuccess: (data) => {\n      setPartialChartData({\n        episodeOfCare: data?.episodeOfCare,\n        vitalsObservations: data?.vitalsObservations,\n        prescribedMedications: data?.prescribedMedications,\n        externalLabResults: data?.externalLabResults,\n        inHouseLabResults: data?.inHouseLabResults,\n        disposition: data?.disposition,\n        medicalDecision: data?.medicalDecision,\n      });\n    },\n  });\n  const { medications: inHouseMedicationsWithCanceled } = useMedicationAPI();\n  const inHouseMedications = inHouseMedicationsWithCanceled.filter((medication) => medication.status !== 'cancelled');\n\n  const screeningNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.SCREENING);\n  const vitalsNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.VITALS);\n  const allergyNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.ALLERGY);\n  const intakeMedicationNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.INTAKE_MEDICATION);\n  const hospitalizationNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.HOSPITALIZATION);\n  const medicalConditionNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.MEDICAL_CONDITION);\n  const surgicalHistoryNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.SURGICAL_HISTORY);\n  const inHouseMedicationNotes = additionalChartData?.notes?.filter((note) => note.type === NOTE_TYPE.MEDICATION);\n\n  const chiefComplaint = chartData?.chiefComplaint?.text;\n  const ros = chartData?.ros?.text;\n  const diagnoses = chartData?.diagnosis;\n  const medicalDecision = chartData?.medicalDecision?.text;\n  const emCode = chartData?.emCode;\n  const cptCodes = chartData?.cptCodes;\n  const prescriptions = chartData?.prescribedMedications;\n  const observations = chartData?.observations;\n  const vitalsObservations = chartData?.vitalsObservations;\n  const externalLabResults = chartData?.externalLabResults;\n  const inHouseLabResults = chartData?.inHouseLabResults;\n\n  const showChiefComplaint = !!(chiefComplaint && chiefComplaint.length > 0);\n  const showReviewOfSystems = !!(ros && ros.length > 0);\n  const showAdditionalQuestions =\n    !!(observations && observations.length > 0) || !!(screeningNotes && screeningNotes.length > 0);\n  const showAssessment = !!(diagnoses && diagnoses.length > 0);\n  const showMedicalDecisionMaking = !!(medicalDecision && medicalDecision.length > 0);\n  const showEmCode = !!emCode;\n  const showCptCodes = !!(cptCodes && cptCodes.length > 0);\n  const showExternalLabsResultsContainer = !!(\n    externalLabResults?.resultsPending ||\n    (externalLabResults?.labOrderResults && externalLabResults?.labOrderResults.length > 0)\n  );\n  const showInHouseLabsResultsContainer = !!(\n    inHouseLabResults?.resultsPending ||\n    (inHouseLabResults?.labOrderResults && inHouseLabResults?.labOrderResults.length > 0)\n  );\n  const showProceduresContainer = (chartData?.procedures?.length ?? 0) > 0;\n  const showPrescribedMedications = !!(prescriptions && prescriptions.length > 0);\n  const { showPatientInstructions } = usePatientInstructionsVisibility();\n  const showInHouseMedications =\n    !!(inHouseMedications && inHouseMedications.length > 0) ||\n    !!(inHouseMedicationNotes && inHouseMedicationNotes.length > 0);\n\n  const showVitalsObservations =\n    !!(vitalsObservations && vitalsObservations.length > 0) || !!(vitalsNotes && vitalsNotes.length > 0);\n\n  const sections = [\n    showChiefComplaint && <ChiefComplaintContainer />,\n    showReviewOfSystems && <ReviewOfSystemsContainer />,\n    showAdditionalQuestions && <AdditionalQuestionsContainer notes={screeningNotes} />,\n    showVitalsObservations && <PatientVitalsContainer notes={vitalsNotes} encounterId={encounter?.id} />,\n    <Stack spacing={1}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Examination\n      </Typography>\n      <ExamReadOnlyBlock />\n    </Stack>,\n    <AllergiesContainer notes={allergyNotes} />,\n    <MedicationsContainer notes={intakeMedicationNotes} />,\n    <MedicalConditionsContainer notes={medicalConditionNotes} />,\n    <SurgicalHistoryContainer notes={surgicalHistoryNotes} />,\n    <HospitalizationContainer notes={hospitalizationNotes} />,\n    showInHouseMedications && (\n      <InHouseMedicationsContainer medications={inHouseMedications} notes={inHouseMedicationNotes} />\n    ),\n    showAssessment && <AssessmentContainer />,\n    showMedicalDecisionMaking && <MedicalDecisionMakingContainer />,\n    showEmCode && <EMCodeContainer />,\n    showCptCodes && <CPTCodesContainer />,\n    showInHouseLabsResultsContainer && (\n      <LabResultsReviewContainer\n        resultDetails={{ type: LabType.inHouse, results: inHouseLabResults.labOrderResults }}\n        resultsPending={inHouseLabResults.resultsPending}\n      />\n    ),\n    showExternalLabsResultsContainer && (\n      <LabResultsReviewContainer\n        resultDetails={{ type: LabType.external, results: externalLabResults.labOrderResults }}\n        resultsPending={externalLabResults.resultsPending}\n      />\n    ),\n    <RadiologyContainer />,\n    showProceduresContainer && <ProceduresContainer />,\n    showPrescribedMedications && <PrescribedMedicationsContainer />,\n    showPatientInstructions && <PatientInstructionsContainer />,\n    <PrivacyPolicyAcknowledgement />,\n  ].filter(Boolean);\n\n  return (\n    <AccordionCard label=\"Objective\" dataTestId={dataTestIds.progressNotePage.visitNoteCard}>\n      <SectionList sections={sections} sx={{ p: 2 }} />\n    </AccordionCard>\n  );\n};\n"]}