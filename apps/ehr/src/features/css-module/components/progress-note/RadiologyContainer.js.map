{"version":3,"file":"RadiologyContainer.js","sourceRoot":"","sources":["RadiologyContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Link, Stack, Typography, useTheme } from '@mui/material';\nimport ImageIcon from '@mui/icons-material/Image';\nimport { FC, ReactElement } from 'react';\nimport { GetRadiologyOrderListZambdaOrder } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../telemed';\nimport { usePatientRadiologyOrders } from '../../../radiology/components/usePatientRadiologyOrders';\n\nexport const RadiologyContainer: FC = () => {\n  const { encounter } = getSelectors(useAppointmentStore, ['encounter']);\n  const theme = useTheme();\n\n  const { orders, loading } = usePatientRadiologyOrders({\n    encounterIds: encounter.id,\n  });\n\n  const renderProperty = (label: string, value: string | undefined): ReactElement | undefined => {\n    if (value == null || value === '') {\n      return undefined;\n    }\n    return (\n      <Box>\n        <Typography component=\"span\" sx={{ fontWeight: '500' }}>\n          {label}:\n        </Typography>{' '}\n        {value}\n      </Box>\n    );\n  };\n\n  const renderRadiologyOrder = (order: GetRadiologyOrderListZambdaOrder): ReactElement => {\n    return (\n      <Stack key={order.serviceRequestId} spacing={1} sx={{ mb: 2 }}>\n        <Typography sx={{ color: '#0F347C', fontWeight: '500' }}>\n          {order.studyType}\n        </Typography>\n        {renderProperty('Diagnosis', order.diagnosis)}\n        {renderProperty('Clinical History', order.clinicalHistory)}\n        {order.history && order.history.length > 0 && (\n          <>\n            {order.history\n              .filter(h => h.status === 'preliminary')\n              .map((h, idx) => (\n                <Box key={`preliminary-${idx}`}>\n                  <Typography component=\"span\" sx={{ fontWeight: '500' }}>\n                    Preliminary Read:\n                  </Typography>{' '}\n                  {order.result || 'See AdvaPACS'}\n                </Box>\n              ))}\n            {order.history\n              .filter(h => h.status === 'final')\n              .map((h, idx) => (\n                <Box key={`final-${idx}`}>\n                  <Typography component=\"span\" sx={{ fontWeight: '500' }}>\n                    Final Read:\n                  </Typography>{' '}\n                  {order.result || 'See AdvaPACS'}\n                </Box>\n              ))}\n          </>\n        )}\n        {renderProperty('Result', order.result)}\n        {order.result && (\n          <Link\n            href=\"#\"\n            sx={{\n              display: 'inline-flex',\n              alignItems: 'center',\n              gap: 0.5,\n              color: theme.palette.primary.main,\n              textDecoration: 'none',\n              '&:hover': {\n                textDecoration: 'underline',\n              },\n            }}\n          >\n            <ImageIcon fontSize=\"small\" />\n            View Image\n          </Link>\n        )}\n      </Stack>\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}>\n        <Typography variant=\"h5\" color=\"primary.dark\">\n          Radiology\n        </Typography>\n        <Typography>Loading...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Radiology\n      </Typography>\n      {orders?.length ? (\n        orders.map(renderRadiologyOrder)\n      ) : (\n        <Typography color={theme.palette.text.secondary}>No radiology orders</Typography>\n      )}\n    </Box>\n  );\n};"]}