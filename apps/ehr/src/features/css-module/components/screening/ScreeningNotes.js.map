{"version":3,"file":"ScreeningNotes.js","sourceRoot":"","sources":["ScreeningNotes.tsx"],"names":[],"mappings":";;;AAAA,+BAA2E;AAC3E,yEAAwE;AAGxE,IAAM,oBAAoB,GAAuB;IAC/C,SAAS,EAAE;QACT,SAAS,EAAE,OAAO;QAClB,IAAI,EAAE,iBAAS,CAAC,SAAS;QACzB,YAAY,EAAE;YACZ,KAAK,EAAE,eAAe;YACtB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,UAAG,kCAA0B,cAAI,iBAAS,CAAC,SAAS,cAAI,mBAAW,CAAE;SAC5E;KACF;IACD,OAAO,EAAE;QACP,WAAW,EAAE,gBAAgB;QAC7B,cAAc,EAAE,qBAAqB;QACrC,oBAAoB,EAAE,gBAAgB;QACtC,gBAAgB,EAAE,UAAC,QAAiB,IAAK,OAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,EAAhC,CAAgC;QACzE,iBAAiB,EAAE,UAAC,mBAA4B,IAAK,OAAA,CAAC,mBAAmB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,EAA/C,CAA+C;QACpG,mBAAmB,EAAE,UAAC,WAAmB,IAAK,OAAA,iBAAU,WAAW,CAAE,EAAvB,CAAuB;QACrE,qBAAqB,EAAE,UAAC,WAAmB,IAAK,OAAA,2DAAoD,WAAW,MAAG,EAAlE,CAAkE;QAClH,iBAAiB,EAAE,cAAM,OAAA,MAAM,EAAN,CAAM;QAC/B,mBAAmB,EAAE,UAAC,UAAmB,IAAK,OAAA,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAvC,CAAuC;QACrF,kBAAkB,EAAE,cAAM,OAAA,OAAO,EAAP,CAAO;QACjC,iBAAiB,EAAE,UAAC,QAAiB,IAAK,OAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,EAAjC,CAAiC;QAC3E,eAAe,EAAE,UAAC,MAAc,EAAE,WAAmB;YACnD,OAAA,uBAAgB,WAAW,cAAI,MAAM,wBAAqB;QAA1D,CAA0D;QAC5D,sBAAsB,EAAE,cAAM,OAAA,mEAAmE,EAAnE,CAAmE;KAClG;CACF,CAAC;AAEK,IAAM,cAAc,GAAa,cAAM,OAAA,CAC5C,CAAC,iCAAe,CAAC,SAAS,CAAC,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAG,CACtG,EAF6C,CAE7C,CAAC;AAFW,QAAA,cAAc,kBAEzB","sourcesContent":["import { CSS_NOTE_ID, NOTE_TYPE, PRIVATE_EXTENSION_BASE_URL } from 'utils';\nimport { GenericNoteList } from '../generic-notes-list/GenericNoteList';\nimport { GenericNotesConfig } from '../generic-notes-list/types';\n\nconst screeningNotesConfig: GenericNotesConfig = {\n  apiConfig: {\n    fieldName: 'notes',\n    type: NOTE_TYPE.SCREENING,\n    searchParams: {\n      _sort: '-_lastUpdated',\n      _count: 1000,\n      _tag: `${PRIVATE_EXTENSION_BASE_URL}/${NOTE_TYPE.SCREENING}|${CSS_NOTE_ID}`,\n    },\n  },\n  locales: {\n    entityLabel: 'screening note',\n    editModalTitle: 'Edit Screening Note',\n    editModalPlaceholder: 'Screening Note',\n    getAddButtonText: (isSaving: boolean) => (isSaving ? 'Saving...' : 'Add'),\n    getMoreButtonText: (isMoreEntitiesShown: boolean) => (isMoreEntitiesShown ? 'See less' : 'See more'),\n    getDeleteModalTitle: (entityLabel: string) => `Delete ${entityLabel}`,\n    getDeleteModalContent: (entityLabel: string) => `Are you sure you want to permanently delete this ${entityLabel}?`,\n    getKeepButtonText: () => 'Keep',\n    getDeleteButtonText: (isDeleting: boolean) => (isDeleting ? 'Deleting...' : 'Delete'),\n    getLeaveButtonText: () => 'Leave',\n    getSaveButtonText: (isSaving: boolean) => (isSaving ? 'Saving...' : 'Save'),\n    getErrorMessage: (action: string, entityLabel: string) =>\n      `Error during ${entityLabel} ${action}. Please try again.`,\n    getGenericErrorMessage: () => 'An error occurred while saving the information. Please try again.',\n  },\n};\n\nexport const ScreeningNotes: React.FC = () => (\n  <GenericNoteList apiConfig={screeningNotesConfig.apiConfig} locales={screeningNotesConfig.locales} />\n);\n"]}