{"version":3,"file":"VitalsTextInputFiled.js","sourceRoot":"","sources":["VitalsTextInputFiled.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAA2E;AAE9D,QAAA,oBAAoB,GAAG,IAAA,iBAAM,EAAC,UAAC,KAAoE,IAAK,OAAA,CACnH,CAAC,oBAAS,CACR,OAAO,CAAC,UAAU,CAClB,SAAS,CACT,YAAY,CAAC,KAAK,CAClB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAC1B,UAAU,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CACtD,mBAAmB,CAAC,CAAC;QACnB,EAAE,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE;KAC7E,CAAC,CACF,EAAE,CAAC,CAAC,WACF,eAAe,EAAE,OAAO,EACxB,0BAA0B,EAAE;YAC1B,MAAM,EAAE,MAAM;SACf,EACD,uBAAuB,EAAE;YACvB,KAAK,EAAE,gBAAgB;SACxB,EACD,wEAAwE,EAAE;YACxE,OAAO,EAAE,MAAM;SAChB,EACD,sBAAsB,EAAE;YACtB,aAAa,EAAE,WAAW;SAC3B,IACE,KAAK,CAAC,OAAO,EAChB,CACF,IAAI,CAAC,QAAQ,CACb,IAAI,KAAK,CAAC,EACV,CACH,EA9BoH,CA8BpH,CAAC,CAAC,cAAM,OAAA,CAAC,EAAE,CAAC,EAAJ,CAAI,CAAC,CAAC;AAEF,QAAA,wBAAwB,GAAG,IAAA,iBAAM,EAC5C,UAAC,KAAoE,IAAK,OAAA,CACxE,CAAC,oBAAS,CACR,OAAO,CAAC,UAAU,CAClB,SAAS,CACT,YAAY,CAAC,KAAK,CAClB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAC1B,UAAU,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CACtD,mBAAmB,CAAC,CAAC;QACnB,EAAE,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE;KAC7E,CAAC,CACF,EAAE,CAAC,CAAC,WACF,eAAe,EAAE,OAAO,EACxB,0BAA0B,EAAE;YAC1B,MAAM,EAAE,MAAM;SACf,EACD,uBAAuB,EAAE;YACvB,KAAK,EAAE,gBAAgB;SACxB,IACE,KAAK,CAAC,OAAO,EAChB,CACF,IAAI,CAAC,MAAM,CACX,IAAI,KAAK,CAAC,EACV,CACH,EAxByE,CAwBzE,CACF,CAAC,cAAM,OAAA,CAAC,EAAE,CAAC,EAAJ,CAAI,CAAC,CAAC","sourcesContent":["import { styled, SxProps, TextField, TextFieldProps } from '@mui/material';\n\nexport const VitalsTextInputFiled = styled((props: TextFieldProps & { extraSx?: SxProps; isInputError: boolean }) => (\n  <TextField\n    variant=\"outlined\"\n    fullWidth\n    autoComplete=\"off\"\n    size=\"small\"\n    error={props.isInputError}\n    helperText={props.isInputError ? 'Invalid value' : ''}\n    FormHelperTextProps={{\n      sx: { backgroundColor: '#F7F8F9', mx: 0, fontWeight: 500, fontSize: '14px' },\n    }}\n    sx={{\n      backgroundColor: 'white',\n      '& .MuiOutlinedInput-root': {\n        height: '100%',\n      },\n      '& .MuiInputLabel-root': {\n        color: 'text.secondary',\n      },\n      '& input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button': {\n        display: 'none',\n      },\n      '& input[type=number]': {\n        MozAppearance: 'textfield',\n      },\n      ...props.extraSx,\n    }}\n    type=\"number\"\n    {...props}\n  />\n))(() => ({}));\n\nexport const VitalsTextFreeInputField = styled(\n  (props: TextFieldProps & { extraSx?: SxProps; isInputError: boolean }) => (\n    <TextField\n      variant=\"outlined\"\n      fullWidth\n      autoComplete=\"off\"\n      size=\"small\"\n      error={props.isInputError}\n      helperText={props.isInputError ? 'Invalid value' : ''}\n      FormHelperTextProps={{\n        sx: { backgroundColor: '#F7F8F9', mx: 0, fontWeight: 500, fontSize: '14px' },\n      }}\n      sx={{\n        backgroundColor: 'white',\n        '& .MuiOutlinedInput-root': {\n          height: '100%',\n        },\n        '& .MuiInputLabel-root': {\n          color: 'text.secondary',\n        },\n        ...props.extraSx,\n      }}\n      type=\"text\"\n      {...props}\n    />\n  )\n)(() => ({}));\n"]}