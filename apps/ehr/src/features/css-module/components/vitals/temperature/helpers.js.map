{"version":3,"file":"helpers.js","sourceRoot":"","sources":["helpers.ts"],"names":[],"mappings":";;;AAAA,+BAAuE;AAEhE,IAAM,uBAAuB,GAAG,UAAC,IAAY;IAClD,IAAM,OAAO,GAAG,IAAA,0BAAkB,EAAC,IAAI,CAAC,CAAC;IACzC,IAAI,CAAC,OAAO;QAAE,OAAO;IACrB,OAAO,qBAAqB,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC,CAAC;AAJW,QAAA,uBAAuB,2BAIlC;AAEK,IAAM,mBAAmB,GAAG,UAAC,aAAqB;IACvD,OAAA,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,GAAG,EAAE,CAAC;AAAnD,CAAmD,CAAC;AADzC,QAAA,mBAAmB,uBACsB;AAEtD,IAAM,qBAAqB,GAAG,UAAC,WAAmB,IAAa,OAAA,IAAA,kCAA0B,EAAC,WAAW,EAAE,CAAC,CAAC,EAA1C,CAA0C,CAAC","sourcesContent":["import { roundNumberToDecimalPlaces, textToNumericValue } from 'utils';\n\nexport const textToTemperatureNumber = (text: string): number | undefined => {\n  const tempVal = textToNumericValue(text);\n  if (!tempVal) return;\n  return roundTemperatureValue(tempVal);\n};\n\nexport const celsiusToFahrenheit = (tempInCelsius: number): number =>\n  roundTemperatureValue((9 / 5) * tempInCelsius + 32);\n\nconst roundTemperatureValue = (temperature: number): number => roundNumberToDecimalPlaces(temperature, 1);\n"]}