{"version":3,"file":"useGetFieldOptions.js","sourceRoot":"","sources":["useGetFieldOptions.ts"],"names":[],"mappings":"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","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { Location } from 'fhir/r4b';\nimport { useEffect, useState } from 'react';\nimport { isLocationVirtual, MedicationApplianceRoutes, medicationApplianceRoutes, RoleType } from 'utils';\nimport { getEmployees } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport useEvolveUser from '../../../hooks/useEvolveUser';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore, useGetMedicationList } from '../../../telemed';\nimport { Option } from '../components/medication-administration/medicationTypes';\n\nconst getRoutesArray = (routes: MedicationApplianceRoutes): Option[] => {\n  return Object.entries(routes).map(([_, value]) => ({\n    value: value.code,\n    label: value.display,\n  })) as Option[];\n};\n\nexport type OrderFieldsSelectsOptions = Record<\n  'medicationId' | 'location' | 'route' | 'units' | 'associatedDx' | 'providerId',\n  { options: Option[]; status: 'loading' | 'loaded'; defaultOption?: Option }\n>;\n\n// fast fix to prevent multiple requests to get locations\nconst cacheLocations = {} as any;\n\nexport const useFieldsSelectsOptions = (): OrderFieldsSelectsOptions => {\n  const { data: medicationList, isLoading: isMedicationLoading } = useGetMedicationList();\n  const [locationsOptions, setLocationsOptions] = useState<Option[]>([]);\n  const [isLocationLoading, setIsLocationLoading] = useState(true);\n  const [providersOptions, setProvidersOptions] = useState<Option[]>([]);\n  const [isProvidersLoading, setIsProvidersLoading] = useState(true);\n  const { oystehrZambda } = useApiClients();\n  const currentUser = useEvolveUser();\n\n  const { chartData, isChartDataLoading, encounter } = getSelectors(useAppointmentStore, [\n    'chartData',\n    'isChartDataLoading',\n    'encounter',\n  ]);\n\n  const encounterId = encounter?.id;\n\n  const diagnosis = chartData?.diagnosis;\n\n  const diagnosisSelectOptions: Option[] =\n    diagnosis?.map((item) => ({\n      value: item.resourceId || '',\n      label: `${item.code} - ${item.display}`,\n    })) || [];\n  const primaryDiagnosis = diagnosis?.find((item) => item.isPrimary);\n  const diagnosisDefaultOption = primaryDiagnosis && {\n    value: primaryDiagnosis.resourceId || '',\n    label: `${primaryDiagnosis.code} - ${primaryDiagnosis.display}`,\n  };\n\n  useEffect(() => {\n    if (!oystehrZambda) {\n      return;\n    }\n\n    async function getLocationsResults(oystehr: Oystehr): Promise<void> {\n      try {\n        setIsLocationLoading(true);\n\n        cacheLocations[encounterId || 'default'] =\n          cacheLocations[encounterId || 'default'] ||\n          oystehr.fhir.search<Location>({\n            resourceType: 'Location',\n            params: [{ name: '_count', value: '1000' }],\n          });\n\n        const locationsBundle = await cacheLocations[encounterId || 'default'];\n        const locationsResults = locationsBundle.unbundle().filter((loc: Location) => !isLocationVirtual(loc));\n\n        setLocationsOptions(\n          locationsResults.map((loc: Location) => ({\n            value: loc.id as string,\n            label: loc.name as string,\n          }))\n        );\n      } catch (e) {\n        console.error('error loading locations', e);\n      } finally {\n        setIsLocationLoading(false);\n      }\n    }\n\n    void getLocationsResults(oystehrZambda);\n  }, [encounterId, oystehrZambda]);\n\n  useEffect(() => {\n    if (!oystehrZambda || !encounterId) {\n      return;\n    }\n\n    async function getProvidersResults(): Promise<void> {\n      try {\n        if (!oystehrZambda) {\n          return;\n        }\n\n        setIsProvidersLoading(true);\n        const data = await getEmployees(oystehrZambda);\n\n        if (data.employees) {\n          const activeProviders = data.employees.filter(\n            (employee: any) => employee.status === 'Active' && employee.isProvider\n          );\n\n          const providerOptions = activeProviders.map((employee: any) => ({\n            value: employee.profile.split('/')[1],\n            label: `${employee.firstName} ${employee.lastName}`.trim() || employee.name,\n          }));\n\n          providerOptions.sort((a: Option, b: Option) => a.label.toLowerCase().localeCompare(b.label.toLowerCase()));\n          setProvidersOptions(providerOptions);\n        }\n      } catch (e) {\n        console.error('error loading provided by field', e);\n      } finally {\n        setIsProvidersLoading(false);\n      }\n    }\n\n    void getProvidersResults();\n  }, [oystehrZambda, encounterId]);\n\n  const medicationListOptions: Option[] = Object.entries(medicationList || {})\n    .map(([id, value]) => ({\n      value: id,\n      label: value,\n    }))\n    .sort((a, b) => a.label.toLowerCase().localeCompare(b.label.toLowerCase()));\n  medicationListOptions.unshift({ value: '', label: 'Select Medication' });\n\n  // Determine default provider (current user for Provider role)\n  const currentUserProviderId = currentUser?.profile?.replace('Practitioner/', '');\n  const currentUserHasProviderRole = currentUser?.hasRole?.([RoleType.Provider]);\n  const defaultProvider =\n    currentUserHasProviderRole && currentUserProviderId\n      ? providersOptions.find((option) => option.value === currentUserProviderId)\n      : undefined;\n\n  return {\n    medicationId: {\n      options: medicationListOptions,\n      status: isMedicationLoading ? 'loading' : 'loaded',\n    },\n    location: {\n      options: locationsOptions,\n      status: isLocationLoading ? 'loading' : 'loaded',\n    },\n    route: {\n      options: getRoutesArray(medicationApplianceRoutes)?.sort((a, b) =>\n        a.label.toLowerCase().localeCompare(b.label.toLowerCase())\n      ),\n      status: 'loaded',\n    },\n    units: {\n      options: [\n        { value: 'mg', label: 'mg' },\n        { value: 'ml', label: 'mL' },\n        { value: 'g', label: 'g' },\n        { value: 'cc', label: 'cc' },\n        { value: 'unit', label: 'unit' },\n        { value: 'application', label: 'application' },\n      ],\n      status: 'loaded',\n    },\n    associatedDx: {\n      options: diagnosisSelectOptions,\n      status: isChartDataLoading ? 'loading' : 'loaded',\n      defaultOption: diagnosisDefaultOption,\n    },\n    providerId: {\n      options: providersOptions,\n      status: isProvidersLoading ? 'loading' : 'loaded',\n      defaultOption: defaultProvider,\n    },\n  };\n};\n"]}