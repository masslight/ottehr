{"version":3,"file":"useInternalNotes.js","sourceRoot":"","sources":["useInternalNotes.tsx"],"names":[],"mappings":"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","sourcesContent":["import CloseIcon from '@mui/icons-material/Close';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, Typography } from '@mui/material';\nimport React from 'react';\nimport { CSS_NOTE_ID, NOTE_TYPE, PRIVATE_EXTENSION_BASE_URL } from 'utils';\nimport { GenericNoteList } from '../components/generic-notes-list/GenericNoteList';\nimport { GenericNotesConfig } from '../components/generic-notes-list/types';\n\nexport const useInternalNotesModal = (): {\n  isOpen: boolean;\n  openModal: () => void;\n  closeModal: () => void;\n  InternalNotesModal: React.FC<InternalNotesModalProps>;\n} => {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const openModal = (): void => setIsOpen(true);\n  const closeModal = (): void => setIsOpen(false);\n\n  return {\n    isOpen,\n    openModal,\n    closeModal,\n    InternalNotesModal,\n  };\n};\n\ninterface InternalNotesModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nconst InternalNotesModal: React.FC<InternalNotesModalProps> = ({ open, onClose }) => {\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"lg\">\n      <DialogTitle>\n        <Box px={3} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h4\" component=\"div\">\n            Internal Notes\n          </Typography>\n          <IconButton sx={{ color: 'grey.500' }} edge=\"end\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n        </Box>\n        <Box px={3} display=\"flex\" alignItems=\"center\">\n          <VisibilityOffIcon color=\"primary\" />\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ ml: 1 }}>\n            Not visible to the patient\n          </Typography>\n        </Box>\n      </DialogTitle>\n\n      <DialogContent sx={{ mt: -3 }}>\n        <InternalNotes />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst internalNotesConfig: GenericNotesConfig = {\n  apiConfig: {\n    fieldName: 'notes',\n    type: NOTE_TYPE.INTERNAL,\n    searchParams: {\n      _search_by: 'encounter',\n      _sort: '-_lastUpdated',\n      _count: 1000,\n      _tag: `${PRIVATE_EXTENSION_BASE_URL}/${NOTE_TYPE.INTERNAL}|${CSS_NOTE_ID}`,\n    },\n  },\n  locales: {\n    entityLabel: 'internal note',\n    editModalTitle: 'Edit Internal Note',\n    editModalPlaceholder: 'Internal Note',\n    getAddButtonText: (isSaving: boolean) => (isSaving ? 'Saving Internal Note...' : 'Save Internal Note'),\n    getMoreButtonText: (isMoreEntitiesShown: boolean) => (isMoreEntitiesShown ? 'See less' : 'See more'),\n    getDeleteModalTitle: (entityLabel: string) => `Delete ${entityLabel}`,\n    getDeleteModalContent: (entityLabel: string) => `Are you sure you want to permanently delete this ${entityLabel}?`,\n    getKeepButtonText: () => 'Keep',\n    getDeleteButtonText: (isDeleting: boolean) => (isDeleting ? 'Deleting...' : 'Delete'),\n    getLeaveButtonText: () => 'Leave',\n    getSaveButtonText: (isSaving: boolean) => (isSaving ? 'Saving...' : 'Save'),\n    getErrorMessage: (action: string, entityLabel: string) =>\n      `Error during ${entityLabel} ${action}. Please try again.`,\n    getGenericErrorMessage: () => 'An error occurred while saving the information. Please try again.',\n  },\n};\n\nexport const InternalNotes: React.FC = () => (\n  <GenericNoteList\n    separateEncounterNotes={false}\n    apiConfig={internalNotesConfig.apiConfig}\n    locales={internalNotesConfig.locales}\n  />\n);\n"]}