{"version":3,"file":"usePractitioner.js","sourceRoot":"","sources":["usePractitioner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,2CAA0C;AAC1C,mCAAuE;AACvE,8DAA6D;AAC7D,mDAAkD;AAE3C,IAAM,sBAAsB,GAAG,UACpC,SAAgC,EAChC,MAAuB,EACvB,gBAA0B;;IAElB,IAAA,aAAa,GAAK,IAAA,6BAAa,GAAE,cAApB,CAAqB;IAClC,IAAS,kBAAkB,GAAK,IAAA,+BAAc,EACpD,MAAA,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,0CAAG,CAAC,CAAC,0CAAE,SAAS,0CAAE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CACpE,QAFkC,CAEjC;IAEF,IAAM,QAAQ,GAAG,IAAA,yBAAW,EAAC,UAAO,cAAsB;;;;;;oBAEtD,qBAAM,gBAAgB,CAAC,aAAa,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,EAAE,gBAAgB,CAAC,EAAA;;oBAA1F,SAA0F,CAAC;oBAC3F,qBAAM,kBAAkB,EAAE,EAAA;;oBAA1B,SAA0B,CAAC;;;;oBAE3B,MAAM,IAAI,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;;;;SAElC,CAAC,CAAC;IAEH,OAAO;QACL,wBAAwB,EAAE,QAAQ,CAAC,SAAS;QAC5C,wBAAwB,EAAE,QAAQ,CAAC,WAAW;KAC/C,CAAC;AACJ,CAAC,CAAC;AAvBW,QAAA,sBAAsB,0BAuBjC;AAEF,IAAM,gBAAgB,GAAG,UACvB,aAAkC,EAClC,SAAgC,EAChC,cAAsB,EACtB,MAAuB,EACvB,gBAA0B;;;;;gBAE1B,IAAI,CAAC,aAAa,IAAI,CAAC,SAAS,IAAI,CAAC,cAAc,EAAE,CAAC;oBACpD,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,EAAE,aAAa,eAAA,EAAE,SAAS,WAAA,EAAE,cAAc,gBAAA,EAAE,CAAC,CAAC;oBACrF,sBAAO;gBACT,CAAC;gBAED,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;oBAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;gBAC9C,CAAC;;;;qBAGK,CAAA,MAAM,KAAK,OAAO,CAAA,EAAlB,wBAAkB;gBACpB,qBAAM,IAAA,wBAAkB,EAAC,aAAa,EAAE;wBACtC,WAAW,EAAE,SAAS,CAAC,EAAE;wBACzB,cAAc,gBAAA;wBACd,QAAQ,EAAE,gBAAgB;qBAC3B,CAAC,EAAA;;gBAJF,SAIE,CAAC;;oBAEH,qBAAM,IAAA,0BAAoB,EAAC,aAAa,EAAE;oBACxC,WAAW,EAAE,SAAS,CAAC,EAAE;oBACzB,cAAc,gBAAA;oBACd,QAAQ,EAAE,gBAAgB;iBAC3B,CAAC,EAAA;;gBAJF,SAIE,CAAC;;;;;gBAGL,MAAM,IAAI,KAAK,CAAC,oBAAa,MAAM,4BAAkB,OAAK,CAAE,CAAC,CAAC;;;;KAEjE,CAAC","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { Coding, Encounter } from 'fhir/r4b';\nimport { useMutation } from 'react-query';\nimport { assignPractitioner, unassignPractitioner } from 'src/api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { useAppointment } from './useAppointment';\n\nexport const usePractitionerActions = (\n  encounter: Encounter | undefined,\n  action: 'start' | 'end',\n  practitionerType: Coding[]\n): { isEncounterUpdatePending: boolean; handleUpdatePractitioner: (practitionerId: string) => Promise<void> } => {\n  const { oystehrZambda } = useApiClients();\n  const { refetch: refetchAppointment } = useAppointment(\n    encounter?.appointment?.[0]?.reference?.replace('Appointment/', '')\n  );\n\n  const mutation = useMutation(async (practitionerId: string) => {\n    try {\n      await updateAssignment(oystehrZambda, encounter, practitionerId, action, practitionerType);\n      await refetchAppointment();\n    } catch (error: any) {\n      throw new Error(error.message);\n    }\n  });\n\n  return {\n    isEncounterUpdatePending: mutation.isLoading,\n    handleUpdatePractitioner: mutation.mutateAsync,\n  };\n};\n\nconst updateAssignment = async (\n  oystehrZambda: Oystehr | undefined,\n  encounter: Encounter | undefined,\n  practitionerId: string,\n  action: 'start' | 'end',\n  practitionerType: Coding[]\n): Promise<void> => {\n  if (!oystehrZambda || !encounter || !practitionerId) {\n    console.warn('Missing required data:', { oystehrZambda, encounter, practitionerId });\n    return;\n  }\n\n  if (!encounter.id) {\n    throw new Error('Encounter ID is required');\n  }\n\n  try {\n    if (action === 'start') {\n      await assignPractitioner(oystehrZambda, {\n        encounterId: encounter.id,\n        practitionerId,\n        userRole: practitionerType,\n      });\n    } else {\n      await unassignPractitioner(oystehrZambda, {\n        encounterId: encounter.id,\n        practitionerId,\n        userRole: practitionerType,\n      });\n    }\n  } catch (error) {\n    throw new Error(`Failed to ${action} practitioner: ${error}`);\n  }\n};\n"]}