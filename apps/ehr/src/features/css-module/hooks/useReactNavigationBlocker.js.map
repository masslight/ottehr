{"version":3,"file":"useReactNavigationBlocker.js","sourceRoot":"","sources":["useReactNavigationBlocker.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { UNSAFE_NavigationContext, useLocation, useNavigate } from 'react-router-dom';\nimport { CSSModal } from '../components/CSSModal';\n\ntype CSSModalProps =\n  | Partial<Omit<React.ComponentProps<typeof CSSModal>, 'handleConfirm' | 'open' | 'handleClose'>>\n  | undefined;\n\nexport const useReactNavigationBlocker = (\n  shouldBlock: () => boolean,\n  modalText = 'You have unsaved changes that will be lost if you leave this page.'\n): { ConfirmationModal: React.FC<CSSModalProps> } => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const resolveRef = useRef<((value: unknown) => void) | null>(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const navigationContext = React.useContext(UNSAFE_NavigationContext);\n  const lastLocationRef = useRef(location);\n\n  const showConfirmDialog = useCallback(() => {\n    if (!shouldBlock()) {\n      return Promise.resolve(true);\n    }\n    return new Promise((resolve) => {\n      setIsModalOpen(true);\n      resolveRef.current = resolve;\n    });\n  }, [shouldBlock]);\n\n  const handleConfirm = useCallback(() => {\n    setIsModalOpen(false);\n    resolveRef.current?.(false);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setIsModalOpen(false);\n    resolveRef.current?.(true);\n  }, []);\n\n  useEffect(() => {\n    if (!shouldBlock()) return;\n\n    const originalPush = navigationContext.navigator.push;\n    const originalReplace = navigationContext.navigator.replace;\n\n    navigationContext.navigator.push = async (to, state) => {\n      const canProceed = await showConfirmDialog();\n      if (canProceed) {\n        originalPush(to, state);\n      }\n    };\n\n    navigationContext.navigator.replace = async (to, state) => {\n      const canProceed = await showConfirmDialog();\n      if (canProceed) {\n        originalReplace(to, state);\n      }\n    };\n\n    return () => {\n      navigationContext.navigator.push = originalPush;\n      navigationContext.navigator.replace = originalReplace;\n    };\n  }, [navigationContext, shouldBlock, showConfirmDialog]);\n\n  useEffect(() => {\n    if (location !== lastLocationRef.current && shouldBlock()) {\n      const checkNavigation = async (): Promise<void> => {\n        const canProceed = await showConfirmDialog();\n        if (!canProceed) {\n          navigate(lastLocationRef.current, { replace: true });\n        } else {\n          lastLocationRef.current = location;\n        }\n      };\n      void checkNavigation();\n    } else {\n      lastLocationRef.current = location;\n    }\n  }, [location, navigate, shouldBlock, showConfirmDialog]);\n\n  const ConfirmationModal = (props?: CSSModalProps): React.ReactElement => (\n    <CSSModal\n      open={isModalOpen}\n      handleClose={handleClose}\n      title=\"Confirmation Required\"\n      description={modalText}\n      handleConfirm={handleConfirm}\n      confirmText=\"Continue edit\"\n      closeButtonText=\"Leave\"\n      closeButton={false}\n      {...props}\n    />\n  );\n\n  return { ConfirmationModal };\n};\n"]}