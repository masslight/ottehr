{"version":3,"file":"Hospitalization.js","sourceRoot":"","sources":["Hospitalization.tsx"],"names":[],"mappings":";;;AAAA,0CAAkD;AAClD,+BAA0B;AAC1B,qDAA6C;AAC7C,kEAA+D;AAC/D,mEAAkE;AAClE,4CAAuD;AACvD,mEAAkE;AAClE,qEAAiF;AACjF,qDAAoD;AACpD,yFAAwF;AACxF,2FAA0F;AAC1F,iHAAgH;AAChH,qDAAoD;AACpD,kEAAoE;AACpE,0DAAyD;AAMlD,IAAM,eAAe,GAAmC;IACrD,IAAI,aAAa,GAAK,IAAA,4BAAS,GAAE,GAAhB,CAAiB;IAEpC,IAAA,KAIF,IAAA,+BAAc,EAAC,aAAa,CAAC,EAHlB,WAAW,2BAAA,EACxB,SAAS,eAAA,EACT,KAAK,WAC0B,CAAC;IAE1B,IAAA,kBAAkB,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,oBAAoB,CAAC,CAAC,mBAA9D,CAA+D;IAEjF,IAAA,eAAe,GAAK,IAAA,wCAAoB,GAAE,gBAA3B,CAA4B;IAEnD,IAAI,SAAS,IAAI,kBAAkB;QAAE,OAAO,CAAC,qBAAS,CAAC,AAAD,EAAG,CAAC;IAC1D,IAAI,KAAK;QAAE,OAAO,CAAC,qBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,CAAC;IAClE,IAAI,CAAC,WAAW;QAAE,OAAO,CAAC,qBAAU,CAAC,iBAAiB,EAAE,qBAAU,CAAC,CAAC;IAEpE,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChB;MAAA,CAAC,qBAAS,CACR,UAAU,CAAC,CAAC,2BAAW,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CACjE,KAAK,CAAC,iBAAiB,CACvB,qBAAqB,CAAC,CAAC,eAAe,KAAK,QAAQ,CAAC,EAEtD;MAAA,CAAC,qBAAS,CAAC,IAAI,CAAC,qFAAqF,EACrG;MAAA,CAAC,sCAAwB,CACvB,WAAW,CAAC,CAAC,CAAC,iEAA+B,CAAC,AAAD,EAAG,CAAC,CACjD,gBAAgB,CAAC,kBAAkB,CACnC,YAAY,CAAC,CAAC,CAAC,yCAAmB,CAAC,AAAD,EAAG,CAAC,CACtC,iBAAiB,CAAC,wBAAwB,EAE5C;MAAA,CAAC,2CAAoB,CAAC,AAAD,EACvB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,eAAe,mBAkC1B","sourcesContent":["import { Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport { MedicalHistoryDoubleCard } from '../../../telemed/features/appointment';\nimport { CSSLoader } from '../components/CSSLoader';\nimport { HospitalizationForm } from '../components/hospitalization/HospitalizationForm';\nimport { HospitalizationNotes } from '../components/hospitalization/HospitalizationNotes';\nimport { HospitalizationPatientComponent } from '../components/hospitalization/HospitalizationPatientComponent';\nimport { InfoAlert } from '../components/InfoAlert';\nimport { useNavigationContext } from '../context/NavigationContext';\nimport { useAppointment } from '../hooks/useAppointment';\n\ninterface HospitalizationProps {\n  appointmentID?: string;\n}\n\nexport const Hospitalization: React.FC<HospitalizationProps> = () => {\n  const { id: appointmentID } = useParams();\n\n  const {\n    resources: { appointment },\n    isLoading,\n    error,\n  } = useAppointment(appointmentID);\n\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n\n  const { interactionMode } = useNavigationContext();\n\n  if (isLoading || isChartDataLoading) return <CSSLoader />;\n  if (error) return <Typography>Error: {error.message}</Typography>;\n  if (!appointment) return <Typography>No data available</Typography>;\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle\n        dataTestId={dataTestIds.hospitalizationPage.hospitalizationTitle}\n        label=\"Hospitalization\"\n        showIntakeNotesButton={interactionMode === 'intake'}\n      />\n      <InfoAlert text=\"Ask: Has the patient had any prior overnight hospital stays or hospital admissions?\" />\n      <MedicalHistoryDoubleCard\n        patientSide={<HospitalizationPatientComponent />}\n        patientSideLabel=\"Patient provided\"\n        providerSide={<HospitalizationForm />}\n        providerSideLabel=\"Healthcare staff input\"\n      />\n      <HospitalizationNotes />\n    </Stack>\n  );\n};\n"]}