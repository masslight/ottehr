{"version":3,"file":"InHouseMedication.js","sourceRoot":"","sources":["InHouseMedication.tsx"],"names":[],"mappings":"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","sourcesContent":["import { AppBar, Box, Tab, Tabs, useTheme } from '@mui/material';\nimport React, { useCallback, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport { CSSLoader } from '../components/CSSLoader';\nimport { MarTable } from '../components/medication-administration/mar/MarTable';\nimport { MedicationList } from '../components/medication-administration/medication-details/MedicationList';\nimport { MedicationHistoryList } from '../components/medication-administration/medication-history/MedicationHistoryList';\nimport { MedicationNotes } from '../components/medication-administration/MedicationNotes';\nimport { OrderButton } from '../components/medication-administration/OrderButton';\nimport { useMedicationAPI } from '../hooks/useMedicationOperations';\nimport { getInHouseMedicationDetailsUrl, getInHouseMedicationMARUrl } from '../routing/helpers';\n\ninterface TabContentProps {\n  isActive: boolean;\n  children: React.ReactNode;\n}\n\nconst TabContent: React.FC<TabContentProps> = ({ isActive, children }) => (\n  <Box\n    sx={{\n      display: isActive ? 'block' : 'none', // used this hack to fast switch between tabs, MUI take a lot of time to render tab from zero\n    }}\n  >\n    {children}\n  </Box>\n);\n\nexport const InHouseMedication: React.FC = () => {\n  const { id: appointmentId } = useParams();\n  const { medications } = useMedicationAPI();\n  const navigate = useNavigate();\n  const tabContentRef = useRef<HTMLDivElement>(null);\n  const tabsRef = useRef<HTMLDivElement>(null);\n  const { tabName } = useParams();\n  const theme = useTheme();\n  const isTabTransitionRef = useRef(false);\n  const [content, setContent] = useState<{ mar: React.ReactNode; details: React.ReactNode } | null>(null);\n\n  // handle tabs click navigation\n  const handleChange = useCallback(() => {\n    isTabTransitionRef.current = true;\n    requestAnimationFrame(() => {\n      if (tabName === 'mar') {\n        navigate(getInHouseMedicationDetailsUrl(appointmentId!));\n      } else {\n        navigate(getInHouseMedicationMARUrl(appointmentId!));\n      }\n    });\n  }, [appointmentId, navigate, tabName]);\n\n  const [searchParams] = useSearchParams();\n  const scrollTo = searchParams.get('scrollTo');\n\n  // handle scroll to element (row was clicked - scroll to element, or tab was clicked - scroll to table top)\n  useLayoutEffect(() => {\n    if (isTabTransitionRef.current || scrollTo) {\n      requestAnimationFrame(() => {\n        if (tabContentRef.current && tabsRef.current) {\n          const element = scrollTo ? document.getElementById(`medication-${scrollTo}`) : tabContentRef.current;\n          element?.scrollIntoView?.({ behavior: 'auto', block: 'start' });\n        }\n      });\n    }\n  }, [scrollTo, tabName]);\n\n  useEffect(() => {\n    // the page is heavy and rendering takes a time, to optimization we initially show loader and starting render process for content after that\n    setContent({ mar: <MarTable />, details: <MedicationList /> });\n  }, [medications]);\n\n  if (!content) {\n    return <CSSLoader />;\n  }\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <PageTitle\n          dataTestId={dataTestIds.inHouseMedicationsPage.title}\n          label=\"Medications\"\n          showIntakeNotesButton={false}\n        />\n        <OrderButton dataTestId={dataTestIds.inHouseMedicationsPage.orderButton} />\n      </Box>\n      <MedicationHistoryList />\n\n      <Box ref={tabContentRef}>\n        <AppBar\n          position=\"static\"\n          color=\"default\"\n          elevation={0}\n          sx={{\n            zIndex: 3,\n            mb: 2,\n            mt: 3,\n          }}\n          ref={tabsRef}\n        >\n          <Box\n            sx={{\n              marginLeft: '-20px',\n              padding: '0 24px',\n              width: 'calc(100% + 40px)',\n              backgroundColor: theme.palette.background.default,\n            }}\n          >\n            <Tabs value={tabName === 'mar' ? 0 : 1} onChange={handleChange} aria-label=\"medication tabs\">\n              <Tab label=\"MAR\" />\n              <Tab data-testid={dataTestIds.inHouseMedicationsPage.medicationDetailsTab} label=\"Medication Details\" />\n            </Tabs>\n          </Box>\n        </AppBar>\n\n        <TabContent isActive={tabName === 'mar'}>{content.mar}</TabContent>\n        <TabContent isActive={tabName === 'medication-details'}>{content.details}</TabContent>\n      </Box>\n\n      <MedicationNotes />\n    </Box>\n  );\n};\n"]}