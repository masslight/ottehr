{"version":3,"file":"Medications.js","sourceRoot":"","sources":["Medications.tsx"],"names":[],"mappings":";;;AAAA,0CAAkD;AAClD,+BAA0B;AAC1B,qDAA6C;AAC7C,mEAAkE;AAClE,4CAAuD;AACvD,mEAAkE;AAClE,qEAI+C;AAC/C,qDAAoD;AACpD,0HAAyH;AACzH,qFAAoF;AACpF,+EAA8E;AAC9E,kEAAoE;AACpE,0DAAyD;AAMlD,IAAM,WAAW,GAA+B;IAC7C,IAAI,aAAa,GAAK,IAAA,4BAAS,GAAE,GAAhB,CAAiB;IACpC,IAAA,KAIF,IAAA,+BAAc,EAAC,aAAa,CAAC,EAHlB,WAAW,2BAAA,EACxB,SAAS,eAAA,EACT,KAAK,WAC0B,CAAC;IAE1B,IAAA,kBAAkB,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,oBAAoB,CAAC,CAAC,mBAA9D,CAA+D;IAEjF,IAAA,eAAe,GAAK,IAAA,wCAAoB,GAAE,gBAA3B,CAA4B;IAEnD,IAAI,SAAS,IAAI,kBAAkB;QAAE,OAAO,CAAC,qBAAS,CAAC,AAAD,EAAG,CAAC;IAC1D,IAAI,KAAK;QAAE,OAAO,CAAC,qBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,CAAC;IAClE,IAAI,CAAC,WAAW;QAAE,OAAO,CAAC,qBAAU,CAAC,iBAAiB,EAAE,qBAAU,CAAC,CAAC;IAEpE,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChB;MAAA,CAAC,qBAAS,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,eAAe,KAAK,QAAQ,CAAC,EAEnF;;MAAA,CAAC,yCAAmB,CAAC,AAAD,EACpB;MAAA,CAAC,sCAAwB,CACvB,WAAW,CAAC,CAAC,CAAC,6CAA+B,CAAC,AAAD,EAAG,CAAC,CACjD,YAAY,CAAC,CAAC,CAAC,8CAAgC,CAAC,AAAD,EAAG,CAAC,EAGrD;;MAAA,CAAC,6CAAqB,CAAC,AAAD,EACtB;MAAA,CAAC,mCAAgB,CAAC,AAAD,EACnB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,WAAW,eA8BtB","sourcesContent":["import { Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport {\n  CurrentMedicationsPatientColumn,\n  CurrentMedicationsProviderColumn,\n  MedicalHistoryDoubleCard,\n} from '../../../telemed/features/appointment';\nimport { CSSLoader } from '../components/CSSLoader';\nimport { MedicationHistoryList } from '../components/medication-administration/medication-history/MedicationHistoryList';\nimport { AskMedicationsAlert } from '../components/medications/AskMedicationsAlert';\nimport { MedicationsNotes } from '../components/medications/MedicationsNotes';\nimport { useNavigationContext } from '../context/NavigationContext';\nimport { useAppointment } from '../hooks/useAppointment';\n\ninterface MedicationsProps {\n  appointmentID?: string;\n}\n\nexport const Medications: React.FC<MedicationsProps> = () => {\n  const { id: appointmentID } = useParams();\n  const {\n    resources: { appointment },\n    isLoading,\n    error,\n  } = useAppointment(appointmentID);\n\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n\n  const { interactionMode } = useNavigationContext();\n\n  if (isLoading || isChartDataLoading) return <CSSLoader />;\n  if (error) return <Typography>Error: {error.message}</Typography>;\n  if (!appointment) return <Typography>No data available</Typography>;\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle label=\"Medications\" showIntakeNotesButton={interactionMode === 'intake'} />\n\n      <AskMedicationsAlert />\n      <MedicalHistoryDoubleCard\n        patientSide={<CurrentMedicationsPatientColumn />}\n        providerSide={<CurrentMedicationsProviderColumn />}\n      />\n\n      <MedicationHistoryList />\n      <MedicationsNotes />\n    </Stack>\n  );\n};\n"]}