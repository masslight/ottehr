{"version":3,"file":"PatientVitals.js","sourceRoot":"","sources":["PatientVitals.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Stack, Typography } from '@mui/material';\nimport React, { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AssessmentTitle } from 'src/telemed/features/appointment/AssessmentTab';\nimport { GetVitalsResponseData, VitalFieldNames, VitalsObservationDTO } from 'utils';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport { CSSLoader } from '../components/CSSLoader';\nimport VitalsNotesCard from '../components/patient-info/VitalsNotesCard';\nimport VitalsBloodPressureCard from '../components/vitals/blood-pressure/VitalsBloodPressureCard';\nimport VitalHistoryElement from '../components/vitals/components/VitalsHistoryEntry';\nimport VitalsHeartbeatCard from '../components/vitals/heartbeat/VitalsHeartbeatCard';\nimport VitalsHeightCard from '../components/vitals/heights/VitalsHeightCard';\nimport { useDeleteVitals } from '../components/vitals/hooks/useDeleteVitals';\nimport { useGetHistoricalVitals, useGetVitals } from '../components/vitals/hooks/useGetVitals';\nimport { useSaveVitals } from '../components/vitals/hooks/useSaveVitals';\nimport VitalsOxygenSatCard from '../components/vitals/oxygen-saturation/VitalsOxygenSatCard';\nimport VitalsRespirationRateCard from '../components/vitals/respiration-rate/VitalsRespirationRateCard';\nimport VitalsTemperaturesCard from '../components/vitals/temperature/VitalsTemperaturesCard';\nimport VitalsVisionCard from '../components/vitals/vision/VitalsVisionCard';\nimport VitalsWeightsCard from '../components/vitals/weights/VitalsWeightsCard';\nimport { useNavigationContext } from '../context/NavigationContext';\nimport { useAppointment } from '../hooks/useAppointment';\nimport { useReactNavigationBlocker } from '../hooks/useReactNavigationBlocker';\n\ninterface PatientVitalsProps {\n  appointmentID?: string;\n}\n\nexport const PatientVitals: React.FC<PatientVitalsProps> = () => {\n  const { id: appointmentID } = useParams();\n  const {\n    resources: { appointment, encounter },\n    isLoading,\n    error,\n  } = useAppointment(appointmentID);\n\n  const saveVitals = useSaveVitals({\n    encounterId: encounter?.id ?? '',\n  });\n\n  const deleteVitals = useDeleteVitals({\n    encounterId: encounter?.id ?? '',\n  });\n\n  const {\n    data: encounterVitals,\n    isLoading: encounterVitalsLoading,\n    refetch: refetchEncounterVitals,\n  } = useGetVitals(encounter?.id);\n\n  const { data: historicalVitals } = useGetHistoricalVitals(encounter?.id);\n\n  const abnormalVitalsValues = useMemo(() => {\n    const alertingEntries = Object.entries(encounterVitals || {})\n      .map(([key, values]) => {\n        if (Array.isArray(values)) {\n          const newValues = (values as VitalsObservationDTO[]).filter((value) => {\n            if (value.alertCriticality) {\n              return true;\n            } else {\n              return false;\n            }\n          });\n          return [key, newValues];\n        } else {\n          return [key, []];\n        }\n      })\n      .filter(([_, values]) => values.length > 0);\n\n    return Object.fromEntries(alertingEntries);\n  }, [encounterVitals]);\n\n  const { interactionMode } = useNavigationContext();\n\n  const handleSaveVital = async (vitalEntity: VitalsObservationDTO): Promise<void> => {\n    await saveVitals(vitalEntity);\n    await refetchEncounterVitals();\n  };\n\n  const handleDeleteVital = async (vitalEntity: VitalsObservationDTO): Promise<void> => {\n    await deleteVitals(vitalEntity);\n    await refetchEncounterVitals();\n  };\n\n  if (isLoading || encounterVitalsLoading) return <CSSLoader />;\n  if (error) return <Typography>Error: {error.message}</Typography>;\n  if (!appointment) return <Typography>No data available</Typography>;\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle label=\"Vitals\" showIntakeNotesButton={interactionMode === 'intake'} />\n      <VitalsTemperaturesCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalTemperature] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalTemperature] ?? []}\n      />\n      <VitalsHeartbeatCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalHeartbeat] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalHeartbeat] ?? []}\n      />\n      <VitalsRespirationRateCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalRespirationRate] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalRespirationRate] ?? []}\n      />\n      <VitalsBloodPressureCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalBloodPressure] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalBloodPressure] ?? []}\n      />\n      <VitalsOxygenSatCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalOxygenSaturation] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalOxygenSaturation] ?? []}\n      />\n      <VitalsWeightsCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalWeight] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalWeight] ?? []}\n      />\n      <VitalsHeightCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalHeight] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalHeight] ?? []}\n      />\n      <VitalsVisionCard\n        handleSaveVital={handleSaveVital}\n        handleDeleteVital={handleDeleteVital}\n        currentObs={encounterVitals?.[VitalFieldNames.VitalVision] ?? []}\n        historicalObs={historicalVitals?.[VitalFieldNames.VitalVision] ?? []}\n      />\n      <VitalsNotesCard />\n      <AbnormalVitalsModal abnormalVitalsValues={abnormalVitalsValues} />\n    </Stack>\n  );\n};\n\ninterface AbnormalVitalsModalProps {\n  abnormalVitalsValues: GetVitalsResponseData;\n}\n\nconst AbnormalVitalsModal: React.FC<AbnormalVitalsModalProps> = ({ abnormalVitalsValues }) => {\n  const { ConfirmationModal } = useReactNavigationBlocker(() => {\n    return Object.values(abnormalVitalsValues).some((value) => value.length > 0);\n  });\n\n  const temperature = abnormalVitalsValues[VitalFieldNames.VitalTemperature];\n  const heartbeat = abnormalVitalsValues[VitalFieldNames.VitalHeartbeat];\n  const respirationRate = abnormalVitalsValues[VitalFieldNames.VitalRespirationRate];\n  const bloodPressure = abnormalVitalsValues[VitalFieldNames.VitalBloodPressure];\n  const oxygenSaturation = abnormalVitalsValues[VitalFieldNames.VitalOxygenSaturation];\n  const weight = abnormalVitalsValues[VitalFieldNames.VitalWeight];\n  const height = abnormalVitalsValues[VitalFieldNames.VitalHeight];\n\n  return (\n    <ConfirmationModal\n      title=\"Abnormal Vital Value\"\n      description=\"You have entered an abnormal value. Please verify:\"\n      ContentComponent={() => (\n        <Stack spacing={1}>\n          {temperature && temperature.length > 0 && (\n            <>\n              <AssessmentTitle>Temperature</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {temperature?.map((item) => <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />)}\n              </Box>\n            </>\n          )}\n          {heartbeat && heartbeat.length > 0 && (\n            <>\n              <AssessmentTitle>Heartbeat</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {heartbeat?.map((item) => <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />)}\n              </Box>\n            </>\n          )}\n          {respirationRate && respirationRate.length > 0 && (\n            <>\n              <AssessmentTitle>Respiration Rate</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {respirationRate?.map((item) => (\n                  <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />\n                ))}\n              </Box>\n            </>\n          )}\n          {bloodPressure && bloodPressure.length > 0 && (\n            <>\n              <AssessmentTitle>Blood Pressure</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {bloodPressure?.map((item) => <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />)}\n              </Box>\n            </>\n          )}\n          {oxygenSaturation && oxygenSaturation.length > 0 && (\n            <>\n              <AssessmentTitle>Oxygen Saturation</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {oxygenSaturation?.map((item) => (\n                  <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />\n                ))}\n              </Box>\n            </>\n          )}\n          {weight && weight.length > 0 && (\n            <>\n              <AssessmentTitle>Weight</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {weight?.map((item) => <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />)}\n              </Box>\n            </>\n          )}\n          {height && height.length > 0 && (\n            <>\n              <AssessmentTitle>Height</AssessmentTitle>\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                {height?.map((item) => <VitalHistoryElement key={item.resourceId} historyEntry={{ ...item }} />)}\n              </Box>\n            </>\n          )}\n        </Stack>\n      )}\n      confirmText=\"Back\"\n      closeButtonText=\"Continue\"\n    />\n  );\n};\n"]}