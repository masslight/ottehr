{"version":3,"file":"Plan.js","sourceRoot":"","sources":["Plan.tsx"],"names":[],"mappings":";;;AAAA,0CAAkD;AAElD,qDAA6C;AAC7C,mEAAkE;AAClE,4CAAuD;AACvD,mEAAkE;AAClE,yEAIuD;AACvD,qDAAoD;AACpD,0DAAyD;AAMlD,IAAM,IAAI,GAAkB;IACzB,IAAI,aAAa,GAAK,IAAA,4BAAS,GAAE,GAAhB,CAAiB;IACpC,IAAA,KAIF,IAAA,+BAAc,EAAC,aAAa,CAAC,EAHlB,WAAW,2BAAA,EACxB,SAAS,eAAA,EACT,KAAK,WAC0B,CAAC;IAE1B,IAAA,kBAAkB,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,oBAAoB,CAAC,CAAC,mBAA9D,CAA+D;IAEzF,IAAI,SAAS,IAAI,kBAAkB;QAAE,OAAO,CAAC,qBAAS,CAAC,AAAD,EAAG,CAAC;IAC1D,IAAI,KAAK;QAAE,OAAO,CAAC,qBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,CAAC;IAClE,IAAI,CAAC,WAAW;QAAE,OAAO,CAAC,qBAAU,CAAC,iBAAiB,EAAE,qBAAU,CAAC,CAAC;IAEpE,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChB;MAAA,CAAC,qBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,EACrD;MAAA,CAAC,iCAAuB,CAAC,AAAD,EACxB;MAAA,CAAC,yBAAe,CAAC,AAAD,EAChB;MAAA,CAAC,8BAAoB,CAAC,AAAD,EACvB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,IAAI,QAsBf","sourcesContent":["import { Stack, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport {\n  DispositionCard,\n  PatientInstructionsCard,\n  SchoolWorkExcuseCard,\n} from '../../../telemed/features/appointment/PlanTab';\nimport { CSSLoader } from '../components/CSSLoader';\nimport { useAppointment } from '../hooks/useAppointment';\n\ninterface PlanProps {\n  appointmentID?: string;\n}\n\nexport const Plan: FC<PlanProps> = () => {\n  const { id: appointmentID } = useParams();\n  const {\n    resources: { appointment },\n    isLoading,\n    error,\n  } = useAppointment(appointmentID);\n\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n\n  if (isLoading || isChartDataLoading) return <CSSLoader />;\n  if (error) return <Typography>Error: {error.message}</Typography>;\n  if (!appointment) return <Typography>No data available</Typography>;\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle label=\"Plan\" showIntakeNotesButton={false} />\n      <PatientInstructionsCard />\n      <DispositionCard />\n      <SchoolWorkExcuseCard />\n    </Stack>\n  );\n};\n"]}