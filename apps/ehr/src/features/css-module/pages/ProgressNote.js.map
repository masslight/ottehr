{"version":3,"file":"ProgressNote.js","sourceRoot":"","sources":["ProgressNote.tsx"],"names":[],"mappings":";;;AAAA,0CAAuD;AACvD,+BAA0B;AAC1B,qDAA6C;AAC7C,mEAAkE;AAClE,4CAK0B;AAC1B,mEAAkE;AAClE,qEAA2E;AAC3E,6EAMyD;AACzD,qDAAoD;AACpD,uGAAsG;AACtG,uFAAsF;AACtF,2FAA0F;AAC1F,wDAA0D;AAC1D,0DAAyD;AACzD,0DAAsD;AAM/C,IAAM,YAAY,GAA+B;IAC9C,IAAI,aAAa,GAAK,IAAA,4BAAS,GAAE,GAAhB,CAAiB;IACpC,IAAA,KAIF,IAAA,+BAAc,EAAC,aAAa,CAAC,EAHlB,WAAW,2BAAA,EACxB,SAAS,eAAA,EACT,KAAK,WAC0B,CAAC;IAE5B,IAAA,KAIF,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,aAAa,EAAE,WAAW,EAAE,oBAAoB,CAAC,CAAC,EAH1E,mBAAmB,iBAAA,EAChC,SAAS,eAAA,EACT,kBAAkB,wBACqE,CAAC;IAClF,IAAuB,UAAU,GAAK,IAAA,wCAA8B,GAAE,sBAArC,CAAsC;IACvE,IAAA,GAAG,GAAK,IAAA,8BAAe,GAAE,IAAtB,CAAuB;IAElC,IAAI,SAAS,IAAI,kBAAkB;QAAE,OAAO,CAAC,qBAAS,CAAC,AAAD,EAAG,CAAC;IAC1D,IAAI,KAAK;QAAE,OAAO,CAAC,qBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,CAAC;IAClE,IAAI,CAAC,WAAW;QAAE,OAAO,CAAC,qBAAU,CAAC,iBAAiB,EAAE,qBAAU,CAAC,CAAC;IAEpE,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChB;MAAA,CAAC,qBAAS,CAAC,KAAK,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,EAC9D;MAAA,CAAC,uBAAW,CAAC,AAAD,EAEZ;;MAAA,CAAC,uBAAa,CACZ;QAAA,CAAC,+BAAqB,CACpB,OAAO,CACP,OAAO,CACP,UAAU,CAAC,CAAC,CAAC,yDAA2B,CAAC,AAAD,EAAG,CAAC,CAC5C,WAAW,CAAC,CAAC,CAAC,6CAAqB,CAAC,AAAD,EAAG,CAAC,EAE3C;MAAA,EAAE,uBAAa,CAEf;;MAAA,CAAC,uBAAa,CAAC,KAAK,CAAC,cAAc,CACjC;QAAA,CAAC,4BAAW,CAAC,AAAD,EACd;MAAA,EAAE,uBAAa,CAEf;;MAAA,CAAC,gCAAkB,CAAC,AAAD,EAEnB;;MAAA,CAAC,yCAAmB,CAAC,AAAD,EAEpB;;MAAA,CAAC,wBAAY,CAAC,AAAD,EAEb;;MAAA,CAAC,CAAC,UAAU,IAAI,CACd,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,CAAC,CAC5D;UAAA,CAAC,yBAAa,CAAC,WAAW,CAAC,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAChF;UAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACnC;YAAA,CAAC,2BAAe,CAAC,AAAD,EAChB;YAAA,CAAC,+BAAmB,CAAC,AAAD,EACtB;UAAA,EAAE,cAAG,CACP;QAAA,EAAE,cAAG,CAAC,CACP,CACH;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AAvDW,QAAA,YAAY,gBAuDvB","sourcesContent":["import { Box, Stack, Typography } from '@mui/material';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport {\n  AccordionCard,\n  DoubleColumnContainer,\n  useAppointmentStore,\n  useGetAppointmentAccessibility,\n} from '../../../telemed';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport { ChiefComplaintCard } from '../../../telemed/features/appointment';\nimport {\n  AddendumCard,\n  DischargeButton,\n  MissingCard,\n  ReviewAndSignButton,\n  SendFaxButton,\n} from '../../../telemed/features/appointment/ReviewTab';\nimport { CSSLoader } from '../components/CSSLoader';\nimport { PatientInformationContainer } from '../components/progress-note/PatientInformationContainer';\nimport { ProgressNoteDetails } from '../components/progress-note/ProgressNoteDetails';\nimport { VisitDetailsContainer } from '../components/progress-note/VisitDetailsContainer';\nimport { useFeatureFlags } from '../context/featureFlags';\nimport { useAppointment } from '../hooks/useAppointment';\nimport { IntakeNotes } from '../hooks/useIntakeNotes';\n\ninterface PatientInfoProps {\n  appointmentID?: string;\n}\n\nexport const ProgressNote: React.FC<PatientInfoProps> = () => {\n  const { id: appointmentID } = useParams();\n  const {\n    resources: { appointment },\n    isLoading,\n    error,\n  } = useAppointment(appointmentID);\n\n  const {\n    appointment: appointmentResource,\n    encounter,\n    isChartDataLoading,\n  } = getSelectors(useAppointmentStore, ['appointment', 'encounter', 'isChartDataLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const { css } = useFeatureFlags();\n\n  if (isLoading || isChartDataLoading) return <CSSLoader />;\n  if (error) return <Typography>Error: {error.message}</Typography>;\n  if (!appointment) return <Typography>No data available</Typography>;\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle label=\"Progress Note\" showIntakeNotesButton={false} />\n      <MissingCard />\n\n      <AccordionCard>\n        <DoubleColumnContainer\n          divider\n          padding\n          leftColumn={<PatientInformationContainer />}\n          rightColumn={<VisitDetailsContainer />}\n        />\n      </AccordionCard>\n\n      <AccordionCard label=\"Intake Notes\">\n        <IntakeNotes />\n      </AccordionCard>\n\n      <ChiefComplaintCard />\n\n      <ProgressNoteDetails />\n\n      <AddendumCard />\n\n      {!isReadOnly && (\n        <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <SendFaxButton appointment={appointmentResource} encounter={encounter} css={css} />\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <DischargeButton />\n            <ReviewAndSignButton />\n          </Box>\n        </Box>\n      )}\n    </Stack>\n  );\n};\n"]}