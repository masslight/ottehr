{"version":3,"file":"css.queries.js","sourceRoot":"","sources":["css.queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,2CAAoE;AACpE,+BAA6G;AAC7G,wCAAmE;AACnE,8DAA6D;AAEtD,IAAM,uCAAuC,GAAG,UACrD,UAAmB,EACnB,SAA4E;IAEpE,IAAA,aAAa,GAAK,IAAA,6BAAa,GAAE,cAApB,CAAqB;IAC1C,OAAO,IAAA,sBAAQ,EACb,CAAC,sCAAsC,EAAE,UAAU,CAAC,EACpD;;;wBACS,qBAAM,IAAA,qCAA+B,EAAC,aAAc,EAAE,EAAE,UAAU,EAAE,UAAW,EAAE,CAAC,EAAA;wBAAzF,sBAAO,SAAkF,EAAC;;;SAC3F,EACD;QACE,SAAS,WAAA;QACT,OAAO,EAAE,OAAO,CAAC,aAAa,IAAI,UAAU,CAAC;KAC9C,CACF,CAAC;AACJ,CAAC,CAAC;AAfW,QAAA,uCAAuC,2CAelD;AAOF,4EAA4E;AACrE,IAAM,kCAAkC,GAAG;IACxC,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,EAAkE;;gBAAhE,eAAe,qBAAA,EAAE,cAAc,oBAAA;YAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACvC,CAAC;YAED,IAAM,UAAU,GAAgB,EAAE,CAAC;YACnC,IAAM,iBAAiB,GAAG,CAAC,cAAc,CAAC,KAAK,IAAI,CAAA,MAAA,cAAc,CAAC,KAAK,0CAAE,MAAM,MAAK,CAAC,CAAC;YACtF,IAAM,iBAAiB,GAAG,eAAe,CAAC,KAAK,IAAI,eAAe,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YAEtF,IAAI,iBAAiB,EAAE,CAAC;gBACtB,UAAU,CAAC,IAAI,CAAC,IAAA,uBAAe,EAAC,QAAQ,CAAC,CAAC,CAAC;YAC7C,CAAC;iBAAM,CAAC;gBACN,UAAU,CAAC,IAAI,CACb,IAAA,6BAAqB,EAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,cAAc,CAAC,KAAK,CAAC,CACzG,CAAC;YACJ,CAAC;YAED,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAU;gBACjC,YAAY,EAAE,SAAS;gBACvB,EAAE,EAAE,MAAA,cAAc,CAAC,EAAE,mCAAI,EAAE;gBAC3B,UAAU,EAAE,UAAU;aACvB,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,2DAA2D,EAAE,GAAG,CAAC,CAAC;QAClF,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AA9BW,QAAA,kCAAkC,sCA8B7C","sourcesContent":["import { Operation } from 'fast-json-patch';\nimport { Patient } from 'fhir/r4b';\nimport { useMutation, useQuery, UseQueryResult } from 'react-query';\nimport { addOrReplaceOperation, GetOrUploadPatientProfilePhotoZambdaResponse, removeOperation } from 'utils';\nimport { getSignedPatientProfilePhotoUrl } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\n\nexport const useGetSignedPatientProfilePhotoUrlQuery = (\n  z3PhotoUrl?: string,\n  onSuccess?: (response: GetOrUploadPatientProfilePhotoZambdaResponse) => void\n): UseQueryResult<GetOrUploadPatientProfilePhotoZambdaResponse, unknown> => {\n  const { oystehrZambda } = useApiClients();\n  return useQuery(\n    ['Get-Signed-Patient-Profile-Photo-Url', z3PhotoUrl],\n    async () => {\n      return await getSignedPatientProfilePhotoUrl(oystehrZambda!, { z3PhotoUrl: z3PhotoUrl! });\n    },\n    {\n      onSuccess,\n      enabled: Boolean(oystehrZambda && z3PhotoUrl),\n    }\n  );\n};\n\nexport type EditPatientProfilePhotoParams = {\n  originalPatient: Patient;\n  newPatientData: Patient;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useEditPatientProfilePhotoMutation = () => {\n  const { oystehr } = useApiClients();\n  return useMutation({\n    mutationFn: ({ originalPatient, newPatientData }: EditPatientProfilePhotoParams) => {\n      if (!oystehr) {\n        throw new Error('Oystehr not found');\n      }\n\n      const operations: Operation[] = [];\n      const shouldRemovePhoto = !newPatientData.photo || newPatientData.photo?.length === 0;\n      const hadPreviousPhotos = originalPatient.photo && originalPatient.photo.length !== 0;\n\n      if (shouldRemovePhoto) {\n        operations.push(removeOperation('/photo'));\n      } else {\n        operations.push(\n          addOrReplaceOperation(hadPreviousPhotos ? hadPreviousPhotos : undefined, '/photo', newPatientData.photo)\n        );\n      }\n\n      return oystehr.fhir.patch<Patient>({\n        resourceType: 'Patient',\n        id: newPatientData.id ?? '',\n        operations: operations,\n      });\n    },\n    onError: (err) => {\n      console.error('Error during updating patient profile photo information: ', err);\n    },\n  });\n};\n"]}