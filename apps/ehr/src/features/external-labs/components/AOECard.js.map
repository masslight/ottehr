{"version":3,"file":"AOECard.js","sourceRoot":"","sources":["AOECard.tsx"],"names":[],"mappings":";;;AAAA,0CAA0E;AAE1E,+BAAwC;AAExC,2EAA0E;AAC1E,6CAA4C;AASrC,IAAM,OAAO,GAAuB,UAAC,EAK3C;QAJC,SAAS,eAAA,EACT,yBAAyB,+BAAA,EACzB,UAAU,gBAAA,EACV,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA;IAEb,IAAA,KAA4B,IAAA,gBAAQ,EAAC,WAAW,CAAC,EAAhD,SAAS,QAAA,EAAE,YAAY,QAAyB,CAAC;IAClD,IAAA,KAA2B,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAzC,SAAS,QAAA,EAAE,WAAW,QAAmB,CAAC;IAEjD,OAAO,CACL,EACE;MAAA,CAAC,6BAAa,CACZ,KAAK,CAAC,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,CACpE,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,UAAU,CAAC,CAAC,KAAK,CAAC,CAClB,QAAQ,CAAC,CAAC;YACR,YAAY,CAAC,UAAC,SAAS,IAAK,OAAA,CAAC,SAAS,EAAV,CAAU,CAAC,CAAC;QAC1C,CAAC,CAAC,CAEF;QAAA,CAAC,SAAS,CAAC,CAAC,CAAC,CACX,CAAC,2BAAgB,CAAC,AAAD,EAAG,CACrB,CAAC,CAAC,CAAC,CACF,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAClB;YAAA,CAAC,eAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChD;cAAA,CAAC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,EAAC,CAAC,CAAC,CACnB,SAAS,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAE,KAAK;;gBAC5B,OAAO,CACL,CAAC,yBAAW,CACV,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,UAAU,CAAC,CAAC,UAAU,CAAC,CACvB,MAAM,CAAC,CACL,MAAA,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,EAAnC,CAAmC,CAAC,0CAAE,QACtF,CAAC,EACD,CACH,CAAC;YACJ,CAAC,CAAC,CACH,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,YAAY,EAAE,qBAAU,CAAC,CACtC,CACH;YAAA,EAAE,eAAI,CACR;UAAA,EAAE,gBAAK,CAAC,CACT,CACH;MAAA,EAAE,6BAAa,CACjB;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AA9CW,QAAA,OAAO,WA8ClB","sourcesContent":["import { CircularProgress, Grid, Paper, Typography } from '@mui/material';\nimport { QuestionnaireItem } from 'fhir/r4b';\nimport React, { useState } from 'react';\nimport { LabQuestionnaireResponse } from 'utils';\nimport { AccordionCard } from '../../../telemed/components/AccordionCard';\nimport { AOEQuestion } from './AOEQuestion';\n\ninterface AOEProps {\n  questions: QuestionnaireItem[];\n  labQuestionnaireResponses: LabQuestionnaireResponse[] | undefined;\n  isReadOnly?: boolean;\n  isCollapsed?: boolean;\n}\n\nexport const AOECard: React.FC<AOEProps> = ({\n  questions,\n  labQuestionnaireResponses,\n  isReadOnly,\n  isCollapsed = false,\n}) => {\n  const [collapsed, setCollapsed] = useState(isCollapsed);\n  const [isLoading, _setLoading] = useState(false);\n\n  return (\n    <>\n      <AccordionCard\n        label={!labQuestionnaireResponses ? 'AOE Questions' : 'AOE Answers'}\n        collapsed={collapsed}\n        withBorder={false}\n        onSwitch={() => {\n          setCollapsed((prevState) => !prevState);\n        }}\n      >\n        {isLoading ? (\n          <CircularProgress />\n        ) : (\n          <Paper sx={{ p: 3 }}>\n            <Grid container sx={{ width: '100%' }} spacing={1}>\n              {questions?.length ? (\n                questions.map((question, index) => {\n                  return (\n                    <AOEQuestion\n                      key={index}\n                      question={question}\n                      isReadOnly={isReadOnly}\n                      answer={\n                        labQuestionnaireResponses?.find((response) => response.linkId === question.linkId)?.response\n                      }\n                    />\n                  );\n                })\n              ) : (\n                <Typography>No questions</Typography>\n              )}\n            </Grid>\n          </Paper>\n        )}\n      </AccordionCard>\n    </>\n  );\n};\n"]}