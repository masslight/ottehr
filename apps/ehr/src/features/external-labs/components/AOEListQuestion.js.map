{"version":3,"file":"AOEListQuestion.js","sourceRoot":"","sources":["AOEListQuestion.tsx"],"names":[],"mappings":";;;AAAA,0CAA6D;AAE7D,mDAAqF;AAW9E,IAAM,eAAe,GAAgC,UAAC,KAAK;IAChE,yBAAyB;IAEV,IAAA,MAAM,GACjB,IAAA,gCAAc,GAAE,iBADC,CACA;IAEb,IAAA,YAAY,GAA8C,KAAK,aAAnD,EAAE,MAAM,GAAsC,KAAK,OAA3C,EAAE,YAAY,GAAwB,KAAK,aAA7B,EAAE,UAAU,GAAY,KAAK,WAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;IAExE,IAAM,OAAO,GAAG,iBAAU,MAAM,WAAQ,CAAC;IACzC,OAAO,CACL,EACE;MAAA,CAAC,qBAAU,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,qBAAU,CACnD;MAAA,CAAC,iBAAM,CACL,IAAI,KAAK,CAAC,CACV,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,EAAE,CAAC,CAAC,iBAAU,MAAM,CAAE,CAAC,CACvB,KAAK,CAAC,CAAC,YAAY,CAAC,CACpB,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CACxB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAErB;QAAA,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,GAAG,IAAK,OAAA,CACjC,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAC5C;YAAA,CAAC,MAAM,CAAC,WAAW,CACrB;UAAA,EAAE,mBAAQ,CAAC,CACZ,EAJkC,CAIlC,CAAC,CACJ;MAAA,EAAE,iBAAM,CACV;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AA5BW,QAAA,eAAe,mBA4B1B","sourcesContent":["import { InputLabel, MenuItem, Select } from '@mui/material';\nimport { QuestionnaireItemAnswerOption } from 'fhir/r4b';\nimport { ControllerRenderProps, FieldValues, useFormContext } from 'react-hook-form';\n\ninterface ListQuestionProps {\n  questionText: string;\n  linkId: string;\n  answerOption: QuestionnaireItemAnswerOption[];\n  required: boolean;\n  isReadOnly?: boolean;\n  field: ControllerRenderProps<FieldValues, string>;\n}\n\nexport const AOEListQuestion: React.FC<ListQuestionProps> = (props) => {\n  // single select dropdown\n  const {\n    formState: { errors },\n  } = useFormContext();\n\n  const { questionText, linkId, answerOption, isReadOnly, field } = props;\n\n  const labelId = `select-${linkId}-label`;\n  return (\n    <>\n      <InputLabel id={labelId}>{questionText}</InputLabel>\n      <Select\n        {...field}\n        labelId={labelId}\n        id={`select-${linkId}`}\n        label={questionText}\n        error={!!errors[linkId]}\n        readOnly={isReadOnly}\n      >\n        {answerOption.map((option, idx) => (\n          <MenuItem key={idx} value={option.valueString}>\n            {option.valueString}\n          </MenuItem>\n        ))}\n      </Select>\n    </>\n  );\n};\n"]}