{"version":3,"file":"AOEQuestion.js","sourceRoot":"","sources":["AOEQuestion.tsx"],"names":[],"mappings":"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","sourcesContent":["// cSpell:ignore AOEYes\nimport { Grid } from '@mui/material';\nimport { FormControl } from '@mui/material';\nimport { QuestionnaireItem } from 'fhir/r4b';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { LabQuestionnaireResponseItem } from 'utils';\nimport { AOEDateQuestion } from './AOEDateQuestion';\nimport { AOEFreeTextQuestion } from './AOEFreeTextQuestion';\nimport { AOEListQuestion } from './AOEListQuestion';\nimport { AOEMultiSelectListQuestion } from './AOEMultiSelectListQuestion';\nimport { AOENumberQuestion } from './AOENumberQuestion';\nimport { AOEYesNoQuestion } from './AOEYesNoQuestion';\n\ninterface AOEQuestionProps {\n  question: QuestionnaireItem;\n  answer?: LabQuestionnaireResponseItem;\n  isReadOnly?: boolean;\n}\n\nexport const AOEQuestion: React.FC<AOEQuestionProps> = (questionProps) => {\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext();\n\n  const { question, answer } = questionProps;\n  const { linkId, text, type, required, extension, answerOption } = question;\n\n  const questionIsList = type === 'choice' && answerOption && extension === undefined;\n  const questionIsMultiSelectList =\n    type === 'choice' && answerOption && extension?.some((ext) => ext.valueString === 'multi-select list');\n\n  let defaultValue = undefined;\n\n  if (questionIsMultiSelectList) {\n    if (!answer) {\n      defaultValue = [];\n    } else {\n      defaultValue = answer;\n    }\n  } else {\n    defaultValue = answer?.join(',');\n  }\n\n  // keep components in a controlled state\n  if ((questionIsList || type === 'text' || type === 'boolean') && defaultValue === undefined) {\n    defaultValue = '';\n  }\n\n  if (!text) {\n    throw new Error('question text is not defined');\n  }\n\n  return (\n    // Athena TODO: consider Stack instead of grid...\n    <Grid item xs={12}>\n      <Controller\n        name={linkId}\n        control={control}\n        defaultValue={defaultValue}\n        render={({ field }) => (\n          <>\n            <FormControl fullWidth required={required} error={!!errors[linkId]}>\n              {questionIsList && (\n                <AOEListQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  answerOption={answerOption}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  field={field}\n                />\n              )}\n              {questionIsMultiSelectList && (\n                <AOEMultiSelectListQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  answerOption={answerOption}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  field={field}\n                />\n              )}\n              {type === 'text' && (\n                <AOEFreeTextQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  field={field}\n                />\n              )}\n              {type === 'date' && extension && (\n                <AOEDateQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  extension={extension}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  field={field}\n                />\n              )}\n              {type === 'integer' && extension && (\n                <AOENumberQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  extension={extension}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  idString={`integer-${linkId}`}\n                  field={field}\n                />\n              )}\n              {type === 'decimal' && extension && (\n                <AOENumberQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  extension={extension}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  idString={`decimal-${linkId}`}\n                  field={field}\n                />\n              )}\n              {type === 'boolean' && (\n                <AOEYesNoQuestion\n                  questionText={text}\n                  linkId={linkId}\n                  required={required || false}\n                  isReadOnly={questionProps.isReadOnly}\n                  field={field}\n                />\n              )}\n              {/* {!!errors[questionText] && <FormHelperText>{errors[questionText]}</FormHelperText>} */}\n            </FormControl>\n          </>\n        )}\n      />\n    </Grid>\n  );\n};\n"]}