{"version":3,"file":"AOEYesNoQuestion.js","sourceRoot":"","sources":["AOEYesNoQuestion.tsx"],"names":[],"mappings":";;;AAAA,2CAA+C;AAC/C,0CAA+E;AAC/E,mDAAqF;AAUrF,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE;QAChB,KAAK,EAAE,cAAc;KACtB;IACD,oBAAoB,EAAE;QACpB,KAAK,EAAE,cAAc;KACtB;CACF,CAAC;AAEF,IAAM,WAAW,GAAG;IAClB,oCAAoC,EAAE;QACpC,KAAK,EAAE,oBAAW,CAAC,QAAQ;KAC5B;IACD,6DAA6D,EAAE;QAC7D,KAAK,EAAE,oBAAW,CAAC,QAAQ;KAC5B;CACF,CAAC;AAEF,6BAA6B;AACtB,IAAM,gBAAgB,GAAiC,UAAC,KAAK;IAEnD,IAAQ,CAAC,GACpB,IAAA,gCAAc,GAAE,iBADI,CACH;IAEb,IAAA,YAAY,GAA0C,KAAK,aAA/C,EAAE,MAAM,GAAkC,KAAK,OAAvC,EAAE,QAAQ,GAAwB,KAAK,SAA7B,EAAE,UAAU,GAAY,KAAK,WAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;IAEpE,IAAM,OAAO,GAAG,kBAAW,MAAM,WAAQ,CAAC;IAC1C,OAAO,CACL,EACE;MAAA,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,oBAAS,CACjD;MAAA,CAAC,qBAAU,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,UAAG,OAAO,6BAA0B,CAAC,CAC9F;QAAA,CAAC,2BAAgB,CACf,KAAK,CAAC,MAAM,CACZ,OAAO,CAAC,CAAC,CAAC,gBAAK,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,EAAG,CAAC,CAC9F,KAAK,CAAC,KAAK,CACX,EAAE,CAAC,CAAC,WAAW,CAAC,EAElB;QAAA,CAAC,2BAAgB,CACf,KAAK,CAAC,OAAO,CACb,OAAO,CAAC,CAAC,CAAC,gBAAK,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,EAAG,CAAC,CAC9F,KAAK,CAAC,IAAI,CACV,EAAE,CAAC,CAAC,WAAW,CAAC,EAEpB;MAAA,EAAE,qBAAU,CACd;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AA3BW,QAAA,gBAAgB,oBA2B3B","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { FormControlLabel, FormLabel, Radio, RadioGroup } from '@mui/material';\nimport { ControllerRenderProps, FieldValues, useFormContext } from 'react-hook-form';\n\ninterface YesNoQuestionProps {\n  questionText: string;\n  linkId: string;\n  required: boolean;\n  isReadOnly?: boolean;\n  field: ControllerRenderProps<FieldValues, string>;\n}\n\nconst radioStyles = {\n  '&.Mui-disabled': {\n    color: 'primary.main',\n  },\n  '& .MuiSvgIcon-root': {\n    color: 'primary.main',\n  },\n};\n\nconst labelStyles = {\n  '&.Mui-disabled .MuiTypography-root': {\n    color: otherColors.tableRow,\n  },\n  '&.MuiFormControlLabel-root.Mui-disabled .MuiTypography-root': {\n    color: otherColors.tableRow,\n  },\n};\n\n// cSpell:disable-next AOEYes\nexport const AOEYesNoQuestion: React.FC<YesNoQuestionProps> = (props) => {\n  const {\n    formState: { errors: _ },\n  } = useFormContext();\n\n  const { questionText, linkId, required, isReadOnly, field } = props;\n\n  const labelId = `boolean-${linkId}-label`;\n  return (\n    <>\n      <FormLabel id={labelId}>{questionText}</FormLabel>\n      <RadioGroup {...field} row aria-labelledby={labelId} name={`${labelId}-row-radio-buttons-group`}>\n        <FormControlLabel\n          value=\"true\"\n          control={<Radio disabled={isReadOnly} inputProps={{ required: required }} sx={radioStyles} />}\n          label=\"Yes\"\n          sx={labelStyles}\n        />\n        <FormControlLabel\n          value=\"false\"\n          control={<Radio disabled={isReadOnly} inputProps={{ required: required }} sx={radioStyles} />}\n          label=\"No\"\n          sx={labelStyles}\n        />\n      </RadioGroup>\n    </>\n  );\n};\n"]}