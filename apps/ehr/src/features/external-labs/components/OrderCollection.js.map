{"version":3,"file":"OrderCollection.js","sourceRoot":"","sources":["OrderCollection.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Box, Button, Stack } from '@mui/material';\nimport Oystehr from '@oystehr/sdk';\nimport React, { useMemo, useState } from 'react';\nimport { FormProvider, SubmitHandler, useForm } from 'react-hook-form';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { CustomDialog } from 'src/components/dialogs';\nimport {\n  DynamicAOEInput,\n  ExternalLabsStatus,\n  LabOrderDetailedPageDTO,\n  LabQuestionnaireResponse,\n  ORDER_SUBMITTED_MESSAGE,\n} from 'utils';\nimport { submitLabOrder } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { AOECard } from './AOECard';\nimport { OrderHistoryCard } from './OrderHistoryCard';\nimport { OrderInformationCard } from './OrderInformationCard';\nimport { SampleCollectionInstructionsCard } from './SampleCollectionInstructionsCard';\n\ninterface SampleCollectionProps {\n  labOrder: LabOrderDetailedPageDTO;\n  showActionButtons?: boolean;\n  showOrderInfo?: boolean;\n  isAOECollapsed?: boolean;\n}\n\nexport async function openPdf(url: string): Promise<void> {\n  window.open(url, '_blank');\n}\n\nexport const OrderCollection: React.FC<SampleCollectionProps> = ({\n  labOrder,\n  showActionButtons = true,\n  showOrderInfo = true,\n  isAOECollapsed = false,\n}) => {\n  const { oystehrZambda: oystehr } = useApiClients();\n  // can add a Yup resolver {resolver: yupResolver(definedSchema)} for validation, see PaperworkGroup for example\n  const methods = useForm<DynamicAOEInput>();\n  const navigate = useNavigate();\n  const { id: appointmentID } = useParams();\n  // const currentUser = useEvolveUser();\n  const questionnaireData = labOrder?.questionnaire[0];\n  const orderStatus = labOrder.orderStatus;\n  const aoe = useMemo(() => questionnaireData?.questionnaire.item || [], [questionnaireData]);\n  const labQuestionnaireResponses = questionnaireData?.questionnaireResponseItems;\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [error, setError] = useState<string[] | undefined>(undefined);\n  const [manualSubmitError, setManualSubmitError] = useState<string[] | undefined>(undefined);\n  const [errorDialogOpen, setErrorDialogOpen] = useState<boolean>(false);\n  const [specimensData, setSpecimensData] = useState<{ [specimenId: string]: { date: string } }>({});\n  const shouldShowSampleCollectionInstructions =\n    !labOrder.isPSC &&\n    (labOrder.orderStatus === ExternalLabsStatus.pending || labOrder.orderStatus === ExternalLabsStatus.sent);\n  const showAOECard = aoe.length > 0;\n\n  const sanitizeFormData = (data: DynamicAOEInput): DynamicAOEInput => {\n    const sanitizedData = { ...data };\n\n    Object.keys(sanitizedData).forEach((item) => {\n      if (!sanitizedData[item]) {\n        delete sanitizedData[item];\n        return;\n      }\n\n      const question = aoe.find((question) => question.linkId === item);\n\n      if (question && question.type === 'boolean') {\n        if (sanitizedData[item] === 'true') {\n          sanitizedData[item] = true;\n        }\n        if (sanitizedData[item] === 'false') {\n          sanitizedData[item] = false;\n        }\n      }\n      console.log(sanitizedData[item]);\n      if (question && (question.type === 'integer' || question.type === 'decimal')) {\n        sanitizedData[item] = Number(sanitizedData[item]);\n      }\n    });\n\n    return sanitizedData;\n  };\n\n  const submitOrder = async ({ data, manualOrder }: { data: DynamicAOEInput; manualOrder: boolean }): Promise<void> => {\n    setSubmitLoading(true);\n\n    if (!oystehr) {\n      setError(['Oystehr client is undefined']);\n      setErrorDialogOpen(true);\n      return;\n    }\n\n    const sanitizedData = sanitizeFormData(data);\n\n    const { orderPdfUrl, labelPdfUrl } = await submitLabOrder(oystehr, {\n      serviceRequestID: labOrder.serviceRequestId,\n      accountNumber: labOrder.accountNumber,\n      manualOrder,\n      data: sanitizedData,\n      ...(!labOrder.isPSC && { specimens: specimensData }), // non PSC orders require specimens, validation is handled in the zambda\n    });\n\n    if (labelPdfUrl) await openPdf(labelPdfUrl);\n    await openPdf(orderPdfUrl);\n\n    setSubmitLoading(false);\n    setError(undefined);\n    navigate(`/in-person/${appointmentID}/external-lab-orders`);\n\n    console.log(`data at submit: ${JSON.stringify(sanitizedData)}`);\n  };\n\n  const handleAutomatedSubmit: SubmitHandler<DynamicAOEInput> = async (data) => {\n    try {\n      await submitOrder({ data, manualOrder: false });\n    } catch (e) {\n      const sdkError = e as Oystehr.OystehrSdkError;\n      console.log('error creating external lab order1', sdkError.code, sdkError.message);\n      const errorMessage = [sdkError.message || 'There was an error submitting the lab order'];\n      setError(errorMessage);\n      setErrorDialogOpen(true);\n      setSubmitLoading(false);\n    }\n  };\n\n  const handleManualSubmit = async (): Promise<void> => {\n    const data = methods.getValues();\n    try {\n      await submitOrder({ data, manualOrder: true });\n    } catch (e) {\n      const sdkError = e as Oystehr.OystehrSdkError;\n      console.log('error creating external lab order1', sdkError.code, sdkError.message);\n      const errorMessages = [sdkError.message || 'There was an error submitting the lab order'];\n      if (sdkError.message === ORDER_SUBMITTED_MESSAGE) {\n        errorMessages.push('please refresh this page');\n      }\n      setManualSubmitError(errorMessages);\n      setSubmitLoading(false);\n    }\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(handleAutomatedSubmit)}>\n        {showAOECard && (\n          <AOECard\n            questions={aoe}\n            isReadOnly={orderStatus !== 'pending'}\n            labQuestionnaireResponses={labQuestionnaireResponses as LabQuestionnaireResponse[]}\n            isCollapsed={isAOECollapsed}\n          />\n        )}\n\n        {shouldShowSampleCollectionInstructions &&\n          labOrder.samples.map((sample) => (\n            <Box sx={{ marginTop: showAOECard ? 2 : 0 }} key={`sample-card-${sample.specimen.id}`}>\n              <SampleCollectionInstructionsCard\n                sample={sample}\n                serviceRequestId={labOrder.serviceRequestId}\n                timezone={labOrder.encounterTimezone}\n                setSpecimenData={(specimenId: string, date: string) =>\n                  setSpecimensData((prev) => ({ ...prev, [specimenId]: { date } }))\n                }\n                printLabelVisible={orderStatus === 'sent'}\n                isDateEditable={orderStatus === 'pending'}\n              />\n            </Box>\n          ))}\n\n        {showOrderInfo && <OrderInformationCard orderPdfUrl={labOrder.orderPdfUrl} />}\n\n        <Box sx={{ mt: 2 }}>\n          <OrderHistoryCard\n            isPSCPerformed={labOrder.isPSC}\n            orderHistory={labOrder?.history}\n            timezone={labOrder.encounterTimezone}\n          />\n        </Box>\n\n        {showActionButtons && (\n          <Stack direction=\"row\" sx={{ justifyContent: 'space-between', alignItems: 'center', marginTop: 2 }}>\n            <Link to={`/in-person/${appointmentID}/external-lab-orders`}>\n              <Button variant=\"outlined\" sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}>\n                Back\n              </Button>\n            </Link>\n            {orderStatus === 'pending' && (\n              <Stack>\n                <LoadingButton\n                  loading={submitLoading}\n                  variant=\"contained\"\n                  sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n                  type=\"submit\"\n                >\n                  Submit & Print Order{!labOrder.isPSC ? ' and Label' : ''}\n                </LoadingButton>\n              </Stack>\n            )}\n          </Stack>\n        )}\n        <CustomDialog\n          open={errorDialogOpen}\n          confirmLoading={submitLoading}\n          handleConfirm={() => handleManualSubmit()}\n          confirmText=\"Manually submit lab order\"\n          handleClose={() => {\n            setErrorDialogOpen(false);\n            setManualSubmitError(undefined);\n          }}\n          title=\"Error submitting lab order\"\n          description={error?.join(',') || 'Error submitting lab order'}\n          error={manualSubmitError?.join(', ')}\n          closeButtonText=\"cancel\"\n        />\n      </form>\n    </FormProvider>\n  );\n};\n"]}