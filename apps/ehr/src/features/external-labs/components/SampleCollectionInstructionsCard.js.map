{"version":3,"file":"SampleCollectionInstructionsCard.js","sourceRoot":"","sources":["SampleCollectionInstructionsCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Box, Grid, Paper, Stack, TextField, Typography, useTheme } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useApiClients } from 'src/hooks/useAppClients';\nimport { APIError, EXTERNAL_LAB_LABEL_DOC_REF_DOCTYPE, sampleDTO } from 'utils';\nimport { getLabelPdf } from '../../../api/api';\nimport { AccordionCard } from '../../../telemed/components/AccordionCard';\nimport { BoldedTitleText } from './BoldedTitleText';\nimport { openPdf } from './OrderCollection';\n\ninterface SampleCollectionInstructionsCardProps {\n  sample: sampleDTO;\n  serviceRequestId: string;\n  timezone?: string;\n  setSpecimenData: (specimenId: string, date: string) => void;\n  printLabelVisible: boolean;\n  isDateEditable: boolean;\n}\n\nexport const SampleCollectionInstructionsCard: React.FC<SampleCollectionInstructionsCardProps> = ({\n  sample,\n  serviceRequestId,\n  timezone,\n  setSpecimenData,\n  printLabelVisible,\n  isDateEditable,\n}) => {\n  const { specimen, definition } = sample;\n  const [collapsed, setCollapsed] = useState(false);\n  const [labelLoading, setLabelLoading] = useState(false);\n  const [error, setError] = useState<string[]>();\n  const { oystehrZambda: oystehr } = useApiClients();\n  const theme = useTheme();\n\n  const [date, setDate] = useState(() =>\n    specimen.collectionDate\n      ? DateTime.fromISO(specimen.collectionDate, { zone: timezone })\n      : DateTime.now().setZone(timezone)\n  );\n\n  useEffect(() => {\n    if (date.isValid) {\n      setSpecimenData(specimen.id, date.toISO());\n    }\n  }, [date, setSpecimenData, specimen.id]);\n\n  const handleDateChange = (field: 'collectionDate' | 'collectionTime', value: string): void => {\n    setDate((prev) => {\n      const parts = value.split(field === 'collectionDate' ? '-' : ':').map(Number);\n      const updated =\n        field === 'collectionDate'\n          ? prev.set({ year: parts[0] || prev.year, month: parts[1] || prev.month, day: parts[2] || prev.day })\n          : prev.set({ hour: parts[0] || prev.hour, minute: parts[1] || prev.minute });\n\n      return updated.isValid ? updated : prev;\n    });\n  };\n\n  const printLabel = useCallback(async () => {\n    if (!oystehr) return setError(['Oystehr client is undefined']);\n\n    setLabelLoading(true);\n    try {\n      const labelPdfs = await getLabelPdf(oystehr, {\n        contextRelatedReference: { reference: `ServiceRequest/${serviceRequestId}` },\n        searchParams: [\n          { name: 'status', value: 'current' },\n          { name: 'type', value: EXTERNAL_LAB_LABEL_DOC_REF_DOCTYPE.code },\n        ],\n      });\n\n      if (labelPdfs?.length !== 1) throw new Error('Unexpected number of label pdfs');\n\n      await openPdf(labelPdfs[0].presignedURL);\n    } catch (error) {\n      const apiError = error as APIError;\n      setError([`Unable to load label pdf. Error: ${apiError.message}`]);\n    } finally {\n      setLabelLoading(false);\n    }\n  }, [oystehr, serviceRequestId]);\n\n  return (\n    <AccordionCard\n      label=\"Sample Collection Instructions\"\n      collapsed={collapsed}\n      withBorder={false}\n      onSwitch={() => setCollapsed((prev) => !prev)}\n    >\n      <Paper sx={{ p: 3 }}>\n        <Stack spacing={1}>\n          <BoldedTitleText title=\"Container\" description={definition.container} />\n          <BoldedTitleText title=\"Volume\" description={definition.volume} />\n          <BoldedTitleText title=\"Minimum Volume\" description={definition.minimumVolume} />\n          <BoldedTitleText title=\"Storage Requirements\" description={definition.storageRequirements} />\n          <BoldedTitleText title=\"Collection Instructions\" description={definition.collectionInstructions} />\n        </Stack>\n\n        <Grid container spacing={2} sx={{ mt: 2 }}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"body2\" sx={{ mb: 1, color: 'text.secondary' }}>\n              Collection date\n            </Typography>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              type=\"date\"\n              value={date.toFormat('yyyy-MM-dd')}\n              onChange={(e) => handleDateChange('collectionDate', e.target.value)}\n              disabled={!isDateEditable}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"body2\" sx={{ mb: 1, color: 'text.secondary' }}>\n              Collection time\n            </Typography>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              type=\"time\"\n              value={date.toFormat('HH:mm')}\n              onChange={(e) => handleDateChange('collectionTime', e.target.value)}\n              disabled={!isDateEditable}\n            />\n          </Grid>\n        </Grid>\n\n        {printLabelVisible && (\n          <LoadingButton\n            variant=\"outlined\"\n            type=\"button\"\n            sx={{ width: 170, borderRadius: '50px', textTransform: 'none', mt: 3 }}\n            onClick={printLabel}\n            loading={labelLoading}\n          >\n            Print label\n          </LoadingButton>\n        )}\n        {error && error.length > 0 && (\n          <Box sx={{ justifyContent: 'space-between', alignItems: 'center' }}>\n            {error.map((msg, idx) => (\n              <Box sx={{ textAlign: 'left', paddingTop: 1 }} key={idx}>\n                <Typography sx={{ color: theme.palette.error.main }} key={`errorMsg-${idx}`}>\n                  {typeof msg === 'string' ? msg : JSON.stringify(msg, null, 2)}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        )}\n      </Paper>\n    </AccordionCard>\n  );\n};\n"]}