{"version":3,"file":"TaskBanner.js","sourceRoot":"","sources":["TaskBanner.tsx"],"names":[],"mappings":";;;AAAA,2CAA+C;AAC/C,yDAAwD;AACxD,gCAAyC;AACzC,0CAAoF;AAEpF,+BAAwC;AAUjC,IAAM,UAAU,GAA8B,UAAC,EAMrD;QALC,SAAS,eAAA,EACT,iBAAiB,uBAAA,EACjB,aAAa,mBAAA,EACb,UAAU,gBAAA,EACV,OAAO,aAAA;IAED,IAAA,KAA4B,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAA1C,SAAS,QAAA,EAAE,YAAY,QAAmB,CAAC;IAElD,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IACzB,IAAM,IAAI,GAAG,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC;IAC1E,IAAM,SAAS,GAAG,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,OAAO,EAAE,CAAC;IAE3C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IACpC,oHAAoH;IACpH,OAAO,CACL,EACE;MAAA,CAAC,gBAAK,CACJ,SAAS,CAAC,CAAC,CAAC,CAAC,CACb,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,CAAC;YACV,eAAe,EAAE,oBAAW,CAAC,SAAS;YACtC,YAAY,EAAE,CAAC;YACf,GAAG,EAAE,CAAC;SACP,CAAC,CAEF;QAAA,CAAC,gBAAK,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAC/F;UAAA,CAAC,gBAAK,CACJ;YAAA,CAAC,qBAAU,CAAC,SAAS,CAAC,KAAK,CACzB;cAAA,CAAC,cAAG,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CACrC;gBAAA,CAAC,UAAG,IAAI,gBAAK,SAAS,gBAAM,OAAO,OAAG,CACxC;cAAA,EAAE,cAAG,CACP;YAAA,EAAE,qBAAU,CACZ;YAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,qBAAc,iBAAiB,iBAC1D,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAC,YAAY,CAAC,KAAI,cAAc,iBAC9C,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,QAAQ,CAAC,SAAS,CAAC,KAAI,cAAc,CAAE,CAAC,EAAE,qBAAU,CACxE;UAAA,EAAE,gBAAK,CACP;UAAA,CAAC,gBAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAClD;YAAA,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,SAAS,CAAC,CACnB,OAAO,CAAC,UAAU,CAClB,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,CACrE,OAAO,CAAC,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,YAAY,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAEF;;YACF,EAAE,mBAAa,CACf;YAAA,CAAC,qBAAU,CAAC,KAAK,CAAC,MAAM,CACtB;cAAA,CAAC,kBAAY,CAAC,QAAQ,CAAC,QAAQ,EACjC;YAAA,EAAE,qBAAU,CACd;UAAA,EAAE,gBAAK,CACT;QAAA,EAAE,gBAAK,CACT;MAAA,EAAE,gBAAK,CACT;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAzDW,QAAA,UAAU,cAyDrB","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, IconButton, Paper, Stack, Typography, useTheme } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { useState } from 'react';\n\ninterface TaskBannerProps {\n  orderName: string;\n  orderingPhysician: string;\n  orderedOnDate: DateTime | undefined;\n  labName: string;\n  taskStatus: string;\n}\n\nexport const TaskBanner: React.FC<TaskBannerProps> = ({\n  orderName,\n  orderingPhysician,\n  orderedOnDate,\n  taskStatus,\n  labName,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const theme = useTheme();\n  const verb = taskStatus === 'pending' ? 'Collect sample' : 'Do Something';\n  const localDate = orderedOnDate?.toLocal();\n\n  console.log('This is theme', theme);\n  // Note: Alert did not allow for easy justifying of content for nice spacing, so had to re-invent the wheel. Sad MUI\n  return (\n    <>\n      <Paper\n        elevation={3}\n        sx={{\n          padding: 2,\n          backgroundColor: otherColors.infoAlert,\n          borderRadius: 2,\n          gap: 2,\n        }}\n      >\n        <Stack direction=\"row\" spacing={4} sx={{ justifyContent: 'space-between', alignItems: 'center' }}>\n          <Stack>\n            <Typography component=\"div\">\n              <Box fontWeight=\"bold\" display=\"inline\">\n                {`${verb} \"${orderName} / ${labName}\"`}\n              </Box>\n            </Typography>\n            <Typography variant=\"body1\">{`Ordered by ${orderingPhysician} on ${\n              localDate?.toFormat('MM/dd/yyyy') || 'Unknown date'\n            } at ${localDate?.toFormat('hh:mm a') || 'Unknown date'}`}</Typography>\n          </Stack>\n          <Stack direction=\"row\" sx={{ alignItems: 'center' }}>\n            <LoadingButton\n              loading={isLoading}\n              variant=\"outlined\"\n              sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n              onClick={() => {\n                console.log('Attempting assign');\n                setIsLoading(true);\n              }}\n            >\n              Assign Myself\n            </LoadingButton>\n            <IconButton color=\"info\">\n              <MoreVertIcon fontSize=\"medium\" />\n            </IconButton>\n          </Stack>\n        </Stack>\n      </Paper>\n    </>\n  );\n};\n"]}