{"version":3,"file":"DetailsWithResults.js","sourceRoot":"","sources":["DetailsWithResults.tsx"],"names":[],"mappings":";;;AAAA,0CAAmD;AACnD,+BAA0B;AAC1B,qDAA+C;AAE/C,sEAAwE;AACxE,sDAAqD;AACrD,2CAA0C;AAEnC,IAAM,kBAAkB,GAI1B,UAAC,EAAyC;QAAvC,QAAQ,cAAA,EAAE,kBAAkB,wBAAA,EAAE,OAAO,aAAA;IAC3C,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAE/B,IAAM,UAAU,GAAG;QACjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,OAAO,CACL,EACE;MAAA,CAAC,wBAAY,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,wBAAY,CAE/C;;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACvD;QAAA,CAAC,QAAQ,CAAC,SAAS,CACrB;MAAA,EAAE,qBAAU,CAEZ;;MAAA,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,GAAG,IAAK,OAAA,CAC5C,CAAC,uBAAU,CACT,GAAG,CAAC,CAAC,wBAAiB,GAAG,cAAI,MAAM,CAAC,kBAAkB,CAAE,CAAC,CACzD,gBAAgB,CAAC,CAAC;gBAChB,OAAA,kBAAkB,CAAC;oBACjB,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,gBAAgB,EAAE,QAAQ,CAAC,gBAAgB;oBAC3C,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;oBAC7C,aAAa,EAAE,QAAQ,CAAC,aAAa;iBACtC,CAAC;YALF,CAMF,CAAC,CACD,aAAa,CAAC,CAAC,MAAM,CAAC,CACtB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,EACjB,CACH,EAf6C,CAe7C,CAAC,CAEF;;MAAA,CAAC,iCAAe,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAE1G;;MAAA,CAAC,iBAAM,CACL,OAAO,CAAC,UAAU,CAClB,KAAK,CAAC,SAAS,CACf,EAAE,CAAC,CAAC;YACF,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,UAAU;YACnB,SAAS,EAAE,YAAY;YACvB,SAAS,EAAE,CAAC;YACZ,aAAa,EAAE,MAAM;SACtB,CAAC,CACF,OAAO,CAAC,CAAC,UAAU,CAAC,CAEpB;;MACF,EAAE,iBAAM,CACV;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAtDW,QAAA,kBAAkB,sBAsD7B","sourcesContent":["import { Button, Typography } from '@mui/material';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LabOrderDetailedPageDTO, TaskReviewedParameters } from 'utils';\nimport { CSSPageTitle } from '../../../../telemed/components/PageTitle';\nimport { OrderCollection } from '../OrderCollection';\nimport { ResultItem } from './ResultItem';\n\nexport const DetailsWithResults: React.FC<{\n  labOrder: LabOrderDetailedPageDTO;\n  markTaskAsReviewed: (parameters: TaskReviewedParameters & { appointmentId: string }) => Promise<void>;\n  loading: boolean;\n}> = ({ labOrder, markTaskAsReviewed, loading }) => {\n  const navigate = useNavigate();\n\n  const handleBack = (): void => {\n    navigate(-1);\n  };\n\n  return (\n    <>\n      <CSSPageTitle>{labOrder.testItem}</CSSPageTitle>\n\n      <Typography variant=\"body1\" sx={{ fontWeight: 'medium' }}>\n        {labOrder.diagnoses}\n      </Typography>\n\n      {labOrder.resultsDetails.map((result, idx) => (\n        <ResultItem\n          key={`result-detail-${idx}-${result.diagnosticReportId}`}\n          onMarkAsReviewed={() =>\n            markTaskAsReviewed({\n              taskId: result.taskId,\n              serviceRequestId: labOrder.serviceRequestId,\n              diagnosticReportId: result.diagnosticReportId,\n              appointmentId: labOrder.appointmentId,\n            })\n          }\n          resultDetails={result}\n          labOrder={labOrder}\n          loading={loading}\n        />\n      ))}\n\n      <OrderCollection showActionButtons={false} showOrderInfo={false} isAOECollapsed={true} labOrder={labOrder} />\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        sx={{\n          borderRadius: 28,\n          padding: '8px 22px',\n          alignSelf: 'flex-start',\n          marginTop: 2,\n          textTransform: 'none',\n        }}\n        onClick={handleBack}\n      >\n        Back\n      </Button>\n    </>\n  );\n};\n"]}