{"version":3,"file":"FinalCardView.js","sourceRoot":"","sources":["FinalCardView.tsx"],"names":[],"mappings":";;;AAAA,uEAAsE;AACtE,gCAAyC;AACzC,0CAAqD;AAErD,+BAA2C;AASpC,IAAM,aAAa,GAA2B,UAAC,EAAsD;QAApD,YAAY,kBAAA,EAAE,SAAS,eAAA,EAAE,gBAAgB,sBAAA,EAAE,OAAO,aAAA;IACxG,IAAM,OAAO,GAAG;QACd,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QACtC,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,6BAA6B,GACjC,SAAS,KAAK,0BAAkB,CAAC,QAAQ,IAAI,SAAS,KAAK,0BAAkB,CAAC,SAAS,CAAC;IAE1F,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,mBAAmB,EAAE,YAAY,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CACjF;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CACtB;QAAA,CAAC,iBAAM,CACL,OAAO,CAAC,UAAU,CAClB,SAAS,CAAC,CAAC,CAAC,yBAAmB,CAAC,AAAD,EAAG,CAAC,CACnC,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CACpD,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAExB;;QACF,EAAE,iBAAM,CACV;MAAA,EAAE,cAAG,CAEL;;MAAA,CAAC,yFAAyF,CAC1F;MAAA,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAC/B,EACE;UAAA,CAAC,kBAAO,CAAC,AAAD,EAER;;UAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAC9F;YAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACjD;cAAA,CAAC;;;;;;;8FAOiF,CACpF;YAAA,EAAE,cAAG,CAEL;;YAAA,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAC/B,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,OAAO,CAAC,WAAW,CACnB,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAC1B,EAAE,CAAC,CAAC;oBACF,YAAY,EAAE,MAAM;oBACpB,aAAa,EAAE,MAAM;iBACtB,CAAC,CACF,KAAK,CAAC,SAAS,CAEf;;cACF,EAAE,mBAAa,CAAC,CACjB,CAAC,CAAC,CAAC,IAAI,CACV;UAAA,EAAE,cAAG,CACP;QAAA,GAAG,CACJ,CAAC,CAAC,CAAC,IAAI,CACV;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA5DW,QAAA,aAAa,iBA4DxB","sourcesContent":["import BiotechOutlinedIcon from '@mui/icons-material/BiotechOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Button, Divider } from '@mui/material';\nimport { FC } from 'react';\nimport { ExternalLabsStatus } from 'utils';\n\ninterface FinalCardViewProps {\n  resultPdfUrl: string | null;\n  labStatus: ExternalLabsStatus;\n  onMarkAsReviewed: () => void;\n  loading: boolean;\n}\n\nexport const FinalCardView: FC<FinalCardViewProps> = ({ resultPdfUrl, labStatus, onMarkAsReviewed, loading }) => {\n  const openPdf = (): void => {\n    if (resultPdfUrl) {\n      window.open(resultPdfUrl, '_blank');\n    }\n  };\n\n  const isMarkAsReviewedButtonVisible =\n    labStatus === ExternalLabsStatus.received || labStatus === ExternalLabsStatus.corrected;\n\n  return (\n    <Box sx={{ border: '1px solid #e0e0e0', borderRadius: 1, backgroundColor: '#fff' }}>\n      <Box sx={{ padding: 2 }}>\n        <Button\n          variant=\"outlined\"\n          startIcon={<BiotechOutlinedIcon />}\n          onClick={openPdf}\n          sx={{ borderRadius: '50px', textTransform: 'none' }}\n          disabled={!resultPdfUrl}\n        >\n          View Results\n        </Button>\n      </Box>\n\n      {/* while toggle is hidden, the bottom panel is visible only when the button is visible */}\n      {isMarkAsReviewedButtonVisible ? (\n        <>\n          <Divider />\n\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              {/* <Switch\n                    disabled={true} // todo: will be released in the future\n                    checked={false} // todo: will be released in the future\n                    onChange={() => null} // todo: will be released in the future\n                    color=\"primary\"\n                    sx={{ mr: 1 }}\n                  />\n                  <Typography variant=\"body2\">Show Results on the Patient Portal</Typography> */}\n            </Box>\n\n            {isMarkAsReviewedButtonVisible ? (\n              <LoadingButton\n                loading={loading}\n                variant=\"contained\"\n                onClick={onMarkAsReviewed}\n                sx={{\n                  borderRadius: '50px',\n                  textTransform: 'none',\n                }}\n                color=\"primary\"\n              >\n                Mark as Reviewed\n              </LoadingButton>\n            ) : null}\n          </Box>\n        </>\n      ) : null}\n    </Box>\n  );\n};\n"]}