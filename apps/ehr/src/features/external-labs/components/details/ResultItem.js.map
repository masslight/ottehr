{"version":3,"file":"ResultItem.js","sourceRoot":"","sources":["ResultItem.tsx"],"names":[],"mappings":";;;AAAA,0CAA0D;AAE1D,+BAAmF;AACnF,oEAAgE;AAChE,iDAAgD;AAChD,mDAAkD;AAS3C,IAAM,UAAU,GAAG,UAAC,EAAuE;QAArE,gBAAgB,sBAAA,EAAE,QAAQ,cAAA,EAAE,aAAa,mBAAA,EAAE,OAAO,aAAA;IAC7E,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IACzB,OAAO,CACL,EACE;MAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,cAAc,EAAE,eAAe;YAC/B,UAAU,EAAE,QAAQ;YACpB,EAAE,EAAE,CAAC;SACN,CAAC,CAEF;QAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,UAAU,EAAE,QAAQ;YACpB,GAAG,EAAE,CAAC;YACN,aAAa,EAAE,KAAK;YACpB,UAAU,EAAE,MAAM;YAClB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI;SAClC,CAAC,CAEF;UAAA,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CACrC;UAAA,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,IAAI,CACtC;QAAA,EAAE,cAAG,CACL;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CAC/E;UAAA,CAAC,QAAQ,CAAC,KAAK,IAAI,CACjB,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACnF;cAAA,CAAC,kBAAU,CACb;YAAA,EAAE,qBAAU,CAAC,CACd,CACD;UAAA,CAAC,4CAAmB,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,EACvD;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,cAAG,CAEL;;MAAA,CAAC,CAAC,aAAa,CAAC,UAAU,KAAK,OAAO,IAAI,aAAa,CAAC,UAAU,KAAK,WAAW,CAAC,IAAI,CACrF,CAAC,6BAAa,CACZ,YAAY,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CACzC,SAAS,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CACnC,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CACnC,OAAO,CAAC,CAAC,OAAO,CAAC,EACjB,CACH,CAED;;MAAA,CAAC,aAAa,CAAC,UAAU,KAAK,aAAa,IAAI,CAC7C,CAAC,+BAAc,CACb,YAAY,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CACzC,YAAY,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CACzC,YAAY,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CACzC,YAAY,CAAC,CAAC,cAAM,OAAA,gBAAgB,EAAE,EAAlB,CAAkB,CAAC,CAAC,6CAA6C;SACrF,QAAQ,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EACrC,CACH,CACH;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAvDW,QAAA,UAAU,cAuDrB","sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { LabOrderDetailedPageDTO, LabOrderResultDetails, PSC_LOCALE } from 'utils';\nimport { LabsOrderStatusChip } from '../ExternalLabsStatusChip';\nimport { FinalCardView } from './FinalCardView';\nimport { PrelimCardView } from './PrelimCardView';\n\ninterface ResultItemProps {\n  labOrder: LabOrderDetailedPageDTO;\n  onMarkAsReviewed: () => void;\n  resultDetails: LabOrderResultDetails;\n  loading: boolean;\n}\n\nexport const ResultItem = ({ onMarkAsReviewed, labOrder, resultDetails, loading }: ResultItemProps): ReactElement => {\n  const theme = useTheme();\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 1,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            flexDirection: 'row',\n            fontWeight: 'bold',\n            color: theme.palette.primary.dark,\n          }}\n        >\n          <span>{resultDetails.testType}:</span>\n          <span>{resultDetails.testItem}</span>\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexDirection: 'row' }}>\n          {labOrder.isPSC && (\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontWeight: 'bold', mr: 1 }}>\n              {PSC_LOCALE}\n            </Typography>\n          )}\n          <LabsOrderStatusChip status={resultDetails.labStatus} />\n        </Box>\n      </Box>\n\n      {(resultDetails.resultType === 'final' || resultDetails.resultType === 'cancelled') && (\n        <FinalCardView\n          resultPdfUrl={resultDetails.resultPdfUrl}\n          labStatus={resultDetails.labStatus}\n          onMarkAsReviewed={onMarkAsReviewed}\n          loading={loading}\n        />\n      )}\n\n      {resultDetails.resultType === 'preliminary' && (\n        <PrelimCardView\n          resultPdfUrl={resultDetails.resultPdfUrl}\n          receivedDate={resultDetails.receivedDate}\n          reviewedDate={resultDetails.reviewedDate}\n          onPrelimView={() => onMarkAsReviewed()} // todo: add open PDF when task will be ready\n          timezone={labOrder.encounterTimezone}\n        />\n      )}\n    </>\n  );\n};\n"]}