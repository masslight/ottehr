{"version":3,"file":"LabsTable.js","sourceRoot":"","sources":["LabsTable.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,mDAAkD;AAClD,0CAcuB;AACvB,sDAAiD;AACjD,sDAA2D;AAC3D,iEAAgE;AAEhE,+BAA+C;AAC/C,qDAA+C;AAC/C,kDAKmC;AACnC,+DAAiF;AACjF,4EAA2E;AAC3E,qDAAoD;AACpD,+CAA8C;AAC9C,6DAA4D;AAuBrD,IAAM,SAAS,GAAG,UAAqC,EAOnC;QANzB,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA,EACnB,mBAAmB,EAAnB,WAAW,mBAAG,KAAK,KAAA,EACnB,SAAS,eAAA,EACT,aAAa,mBAAA;IAEb,IAAM,UAAU,GAAG,IAAA,8BAAW,GAAE,CAAC;IAE3B,IAAA,KAYF,IAAA,yCAAmB,EAAC,QAAQ,CAAC,EAX/B,SAAS,eAAA,EACT,OAAO,aAAA,EACP,UAAU,gBAAA,EACV,IAAI,UAAA,EACJ,eAAe,qBAAA,EACf,eAAe,qBAAA,EACf,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,wBAAwB,8BAAA,EACxB,iBAAiB,uBAAA,EACjB,eAAe,qBACgB,CAAC;IAE5B,IAAA,KAAgD,IAAA,gBAAQ,EAAmC,IAAI,CAAC,EAA/F,mBAAmB,QAAA,EAAE,sBAAsB,QAAoD,CAAC;IAEjG,IAAA,KAAsC,IAAA,gBAAQ,EAAC,eAAe,CAAC,EAA9D,cAAc,QAAA,EAAE,iBAAiB,QAA6B,CAAC;IAEtE,IAAM,kBAAkB,GAAG,UAAC,IAAsB;QAChD,IAAM,SAAS,GAAG,IAAI,IAAI,cAAc,CAAC;QACzC,eAAe,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,eAAe,EAAE,SAAS,EAAE,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG;QACtB,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACxB,eAAe,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEF,IAAM,gBAAgB,GAAG,UAAC,KAAiC,EAAE,KAAa;QACxE,eAAe,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC;IAEF,IAAM,UAAU,GAAG,UAAC,YAAiC;QACnD,UAAU,CAAC,IAAA,oCAA0B,EAAC,YAAY,CAAC,aAAa,EAAE,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACpG,CAAC,CAAC;IAEF,IAAM,6BAA6B,GAAG,UAAC,KAAuC;QAC5E,sBAAsB,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;QACtC,eAAe,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,cAAc,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,CAAC,SAAS,KAAI,EAAE,EAAE,CAAC,CAAC;IAClF,CAAC,CAAC;IAEF,IAAI,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;QAC1B,OAAO,CAAC,iCAAe,CAAC,AAAD,EAAG,CAAC;IAC7B,CAAC;IAED,IAAI,KAAK,EAAE,CAAC;QACV,OAAO,CACL,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CACvC;QAAA,CAAC,qBAAU,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CACpD;UAAA,CAAC,KAAK,CAAC,OAAO,IAAI,8DAA8D,CAClF;QAAA,EAAE,qBAAU,CACZ;QAAA,CAAC,aAAa,IAAI,CAChB,CAAC,iBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,aAAa,EAAE,EAAf,CAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACxE;;UACF,EAAE,iBAAM,CAAC,CACV,CACH;MAAA,EAAE,gBAAK,CAAC,CACT,CAAC;IACJ,CAAC;IAED,IAAM,cAAc,GAAG,UAAC,MAAuB;QAC7C,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,UAAU;gBACb,OAAO,KAAK,CAAC;YACf,KAAK,OAAO;gBACV,OAAO,KAAK,CAAC;YACf,KAAK,YAAY;gBACf,OAAO,KAAK,CAAC;YACf,KAAK,UAAU;gBACb,OAAO,KAAK,CAAC;YACf,KAAK,IAAI;gBACP,OAAO,KAAK,CAAC;YACf,KAAK,iBAAiB;gBACpB,OAAO,KAAK,CAAC;YACf,KAAK,iBAAiB;gBACpB,OAAO,KAAK,CAAC;YACf,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC;YACd,KAAK,KAAK;gBACR,OAAO,IAAI,CAAC;YACd,KAAK,SAAS;gBACZ,OAAO,IAAI,CAAC;YACd;gBACE,OAAO,KAAK,CAAC;QACjB,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,MAAuB;QAC9C,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,UAAU;gBACb,OAAO,WAAW,CAAC;YACrB,KAAK,OAAO;gBACV,OAAO,OAAO,CAAC;YACjB,KAAK,YAAY;gBACf,OAAO,aAAa,CAAC;YACvB,KAAK,UAAU;gBACb,OAAO,UAAU,CAAC;YACpB,KAAK,IAAI;gBACP,OAAO,IAAI,CAAC;YACd,KAAK,iBAAiB;gBACpB,OAAO,kBAAkB,CAAC;YAC5B,KAAK,iBAAiB;gBACpB,OAAO,aAAa,CAAC;YACvB,KAAK,QAAQ;gBACX,OAAO,QAAQ,CAAC;YAClB,KAAK,KAAK;gBACR,OAAO,iBAAU,CAAC;YACpB,KAAK,SAAS;gBACZ,OAAO,EAAE,CAAC;YACZ;gBACE,OAAO,EAAE,CAAC;QACd,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,gBAAK,CACJ,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,UAAU,EAAE,QAAQ;YACpB,GAAG,EAAE,CAAC;YACN,EAAE,EAAE,CAAC;YACL,CAAC,EAAE,CAAC;YACJ,QAAQ,EAAE,UAAU;SACrB,CAAC,CAEF;MAAA,CAAC,OAAO,IAAI,CAAC,iCAAe,CAAC,AAAD,EAAG,CAE/B;;MAAA,CAAC,SAAS,IAAI,CACZ,CAAC,qBAAU,CACT,OAAO,CAAC,IAAI,CACZ,KAAK,CAAC,cAAc,CACpB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,CAAC,CAEpF;UAAA,CAAC,SAAS,CACZ;QAAA,EAAE,qBAAU,CAAC,CACd,CAED;;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CACzB;QAAA,CAAC,WAAW,IAAI,CACd,CAAC,qCAAoB,CAAC,WAAW,CAAC,CAAC,2BAAY,CAAC,CAC9C;YAAA,CAAC,eAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC/C;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,CACzC,CAAC,uDAA0B,CACzB,eAAe,CAAC,CAAC,eAAe,CAAC,CACjC,eAAe,CAAC,CAAC,mBAAmB,CAAC,CACrC,kBAAkB,CAAC,CAAC,6BAA6B,CAAC,EAClD,CACH,CAAC,CAAC,CAAC,IAAI,CACV;cAAA,EAAE,eAAI,CACN;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,2BAAU,CACT,KAAK,CAAC,YAAY,CAClB,KAAK,CAAC,CAAC,cAAc,CAAC,CACtB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAC5B,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAC7B,MAAM,CAAC,YAAY,CACnB,SAAS,CAAC,CAAC;gBACT,SAAS,EAAE,UAAC,MAAM;;oBAAK,OAAA,uBAClB,MAAM,KACT,MAAM,EAAE,cAAM,OAAA,kBAAkB,EAAE,EAApB,CAAoB,EAClC,SAAS,EAAE,IAAI,EACf,IAAI,EAAE,OAAO,EACb,UAAU,wBACL,MAAM,CAAC,UAAU,KACpB,YAAY,EAAE,CACZ,EACE;4BAAA,CAAC,cAAc,IAAI,CACjB,CAAC,qBAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,KAAK,CAC3D;gCAAA,CAAC,eAAS,CAAC,QAAQ,CAAC,OAAO,EAC7B;8BAAA,EAAE,qBAAU,CAAC,CACd,CACD;4BAAA,CAAC,MAAA,MAAM,CAAC,UAAU,0CAAE,YAAY,CAClC;0BAAA,GAAG,CACJ,OAEH,CAAA;iBAAA;aACH,CAAC,EAEN;cAAA,EAAE,eAAI,CACR;YAAA,EAAE,eAAI,CACR;UAAA,EAAE,qCAAoB,CAAC,CACxB,CAED;;QAAA,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CACrD,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CACrC;YAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CACtC;;YACF,EAAE,qBAAU,CACZ;YAAA,CAAC,aAAa,IAAI,CAChB,CAAC,iBAAM,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,aAAa,EAAE,EAAf,CAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACxE;;cACF,EAAE,iBAAM,CAAC,CACV,CACH;UAAA,EAAE,cAAG,CAAC,CACP,CAAC,CAAC,CAAC,CACF,CAAC,yBAAc,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,mBAAmB,EAAE,CAAC,CAClD;YAAA,CAAC,gBAAK,CACJ;cAAA,CAAC,oBAAS,CACR;gBAAA,CAAC,mBAAQ,CACP;kBAAA,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CACvB,CAAC,oBAAS,CACR,GAAG,CAAC,CAAC,MAAM,CAAC,CACZ,KAAK,CAAC,MAAM,CACZ,EAAE,CAAC,CAAC;oBACF,UAAU,EAAE,MAAM;oBAClB,KAAK,EAAE,cAAc,CAAC,MAAM,CAAC;oBAC7B,OAAO,EAAE,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU;iBAC1D,CAAC,CAEF;sBAAA,CAAC,eAAe,CAAC,MAAM,CAAC,CAC1B;oBAAA,EAAE,oBAAS,CAAC,CACb,EAZwB,CAYxB,CAAC,CACJ;gBAAA,EAAE,mBAAQ,CACZ;cAAA,EAAE,oBAAS,CACX;cAAA,CAAC,oBAAS,CACR;gBAAA,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,CACxB,CAAC,2BAAY,CACX,GAAG,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAC5B,YAAY,CAAC,CAAC,KAAK,CAAC,CACpB,aAAa,CAAC,CAAC;oBACb,OAAA,wBAAwB,CAAC;wBACvB,gBAAgB,EAAE,KAAK,CAAC,gBAAgB;wBACxC,YAAY,EAAE,KAAK,CAAC,QAAQ;qBAC7B,CAAC;gBAHF,CAIF,CAAC,CACD,UAAU,CAAC,CAAC,cAAM,OAAA,UAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CACpC,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,WAAW,CAAC,CAAC,WAAW,CAAC,EACzB,CACH,EAdyB,CAczB,CAAC,CACJ;cAAA,EAAE,oBAAS,CACb;YAAA,EAAE,gBAAK,CACT;UAAA,EAAE,yBAAc,CAAC,CAClB,CAED;;QAAA,CAAC,cAAc,IAAI,UAAU,GAAG,CAAC,IAAI,CACnC,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAC/E;YAAA,CAAC,qBAAU,CACT,KAAK,CAAC,CAAC,UAAU,CAAC,CAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAC3B,EAAE,CAAC,CAAC;gBACF,wCAAwC,EAAE;oBACxC,eAAe,EAAE,UAAU;oBAC3B,SAAS,EAAE;wBACT,eAAe,EAAE,UAAU;qBAC5B;iBACF;aACF,CAAC,EAEN;UAAA,EAAE,cAAG,CAAC,CACP,CACH;MAAA,EAAE,cAAG,CAEL;;MAAA,CAAC,iBAAiB,CACpB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AA7QW,QAAA,SAAS,aA6QpB","sourcesContent":["import ClearIcon from '@mui/icons-material/Clear';\nimport {\n  Box,\n  Button,\n  Grid,\n  IconButton,\n  Pagination,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterLuxon } from '@mui/x-date-pickers/AdapterLuxon';\nimport { DateTime } from 'luxon';\nimport { ReactElement, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  LabOrderListPageDTO,\n  LabOrdersSearchBy,\n  OrderableItemSearchResult,\n  PSC_LOCALE,\n} from 'utils/lib/types/data/labs';\nimport { getExternalLabOrderEditUrl } from '../../../css-module/routing/helpers';\nimport { LabsAutocompleteForPatient } from '../LabsAutocompleteForPatient';\nimport { LabOrderLoading } from './LabOrderLoading';\nimport { LabsTableRow } from './LabsTableRow';\nimport { usePatientLabOrders } from './usePatientLabOrders';\n\nexport type LabsTableColumn =\n  | 'testType'\n  | 'visit'\n  | 'orderAdded'\n  | 'provider'\n  | 'dx'\n  | 'resultsReceived'\n  | 'accessionNumber'\n  | 'status'\n  | 'psc'\n  | 'actions';\n\ntype LabsTableProps<SearchBy extends LabOrdersSearchBy> = {\n  searchBy: SearchBy;\n  columns: LabsTableColumn[];\n  showFilters?: boolean;\n  allowDelete?: boolean;\n  titleText?: string;\n  onCreateOrder?: () => void;\n};\n\nexport const LabsTable = <SearchBy extends LabOrdersSearchBy>({\n  searchBy,\n  columns,\n  showFilters = false,\n  allowDelete = false,\n  titleText,\n  onCreateOrder,\n}: LabsTableProps<SearchBy>): ReactElement => {\n  const navigateTo = useNavigate();\n\n  const {\n    labOrders,\n    loading,\n    totalPages,\n    page,\n    setSearchParams,\n    visitDateFilter,\n    showPagination,\n    error,\n    showDeleteLabOrderDialog,\n    DeleteOrderDialog,\n    patientLabItems,\n  } = usePatientLabOrders(searchBy);\n\n  const [selectedOrderedItem, setSelectedOrderedItem] = useState<OrderableItemSearchResult | null>(null);\n\n  const [tempDateFilter, setTempDateFilter] = useState(visitDateFilter);\n\n  const submitFilterByDate = (date?: DateTime | null): void => {\n    const dateToSet = date || tempDateFilter;\n    setSearchParams({ pageNumber: 1, visitDateFilter: dateToSet });\n  };\n\n  const handleClearDate = (): void => {\n    setTempDateFilter(null);\n    setSearchParams({ pageNumber: 1, visitDateFilter: null });\n  };\n\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number): void => {\n    setSearchParams({ pageNumber: value });\n  };\n\n  const onRowClick = (labOrderData: LabOrderListPageDTO): void => {\n    navigateTo(getExternalLabOrderEditUrl(labOrderData.appointmentId, labOrderData.serviceRequestId));\n  };\n\n  const handleOrderableItemCodeChange = (value: OrderableItemSearchResult | null): void => {\n    setSelectedOrderedItem(value || null);\n    setSearchParams({ pageNumber: 1, testTypeFilter: value?.item.itemLoinc || '' });\n  };\n\n  if (loading || !labOrders) {\n    return <LabOrderLoading />;\n  }\n\n  if (error) {\n    return (\n      <Paper sx={{ p: 4, textAlign: 'center' }}>\n        <Typography color=\"error\" variant=\"body1\" gutterBottom>\n          {error.message || 'Failed to fetch external lab orders. Please try again later.'}\n        </Typography>\n        {onCreateOrder && (\n          <Button variant=\"contained\" onClick={() => onCreateOrder()} sx={{ mt: 2 }}>\n            Create New External Lab Order\n          </Button>\n        )}\n      </Paper>\n    );\n  }\n\n  const getColumnWidth = (column: LabsTableColumn): string => {\n    switch (column) {\n      case 'testType':\n        return '13%';\n      case 'visit':\n        return '10%';\n      case 'orderAdded':\n        return '10%';\n      case 'provider':\n        return '13%';\n      case 'dx':\n        return '18%';\n      case 'resultsReceived':\n        return '10%';\n      case 'accessionNumber':\n        return '10%';\n      case 'status':\n        return '5%';\n      case 'psc':\n        return '6%';\n      case 'actions':\n        return '5%';\n      default:\n        return '10%';\n    }\n  };\n\n  const getColumnHeader = (column: LabsTableColumn): string => {\n    switch (column) {\n      case 'testType':\n        return 'Test type';\n      case 'visit':\n        return 'Visit';\n      case 'orderAdded':\n        return 'Order added';\n      case 'provider':\n        return 'Provider';\n      case 'dx':\n        return 'Dx';\n      case 'resultsReceived':\n        return 'Results received';\n      case 'accessionNumber':\n        return 'Accession #';\n      case 'status':\n        return 'Status';\n      case 'psc':\n        return PSC_LOCALE;\n      case 'actions':\n        return '';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <Paper\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 3,\n        mt: 2,\n        p: 3,\n        position: 'relative',\n      }}\n    >\n      {loading && <LabOrderLoading />}\n\n      {titleText && (\n        <Typography\n          variant=\"h3\"\n          color=\"primary.dark\"\n          sx={{ mb: -2, mt: 2, width: '100%', display: 'flex', justifyContent: 'flex-start' }}\n        >\n          {titleText}\n        </Typography>\n      )}\n\n      <Box sx={{ width: '100%' }}>\n        {showFilters && (\n          <LocalizationProvider dateAdapter={AdapterLuxon}>\n            <Grid container spacing={2} sx={{ mb: 2, mt: 1 }}>\n              <Grid item xs={4}>\n                {searchBy.searchBy.field === 'patientId' ? (\n                  <LabsAutocompleteForPatient\n                    patientLabItems={patientLabItems}\n                    selectedLabItem={selectedOrderedItem}\n                    setSelectedLabItem={handleOrderableItemCodeChange}\n                  />\n                ) : null}\n              </Grid>\n              <Grid item xs={4}>\n                <DatePicker\n                  label=\"Visit date\"\n                  value={tempDateFilter}\n                  onChange={setTempDateFilter}\n                  onAccept={submitFilterByDate}\n                  format=\"MM/dd/yyyy\"\n                  slotProps={{\n                    textField: (params) => ({\n                      ...params,\n                      onBlur: () => submitFilterByDate(),\n                      fullWidth: true,\n                      size: 'small',\n                      InputProps: {\n                        ...params.InputProps,\n                        endAdornment: (\n                          <>\n                            {tempDateFilter && (\n                              <IconButton size=\"small\" onClick={handleClearDate} edge=\"end\">\n                                <ClearIcon fontSize=\"small\" />\n                              </IconButton>\n                            )}\n                            {params.InputProps?.endAdornment}\n                          </>\n                        ),\n                      },\n                    }),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </LocalizationProvider>\n        )}\n\n        {!Array.isArray(labOrders) || labOrders.length === 0 ? (\n          <Box sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"body1\" gutterBottom>\n              No External Lab Orders to display\n            </Typography>\n            {onCreateOrder && (\n              <Button variant=\"contained\" onClick={() => onCreateOrder()} sx={{ mt: 2 }}>\n                Create New External Lab Order\n              </Button>\n            )}\n          </Box>\n        ) : (\n          <TableContainer sx={{ border: '1px solid #e0e0e0' }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column}\n                      align=\"left\"\n                      sx={{\n                        fontWeight: 'bold',\n                        width: getColumnWidth(column),\n                        padding: column === 'testType' ? '16px 16px' : '8px 16px',\n                      }}\n                    >\n                      {getColumnHeader(column)}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {labOrders.map((order) => (\n                  <LabsTableRow\n                    key={order.serviceRequestId}\n                    labOrderData={order}\n                    onDeleteOrder={() =>\n                      showDeleteLabOrderDialog({\n                        serviceRequestId: order.serviceRequestId,\n                        testItemName: order.testItem,\n                      })\n                    }\n                    onRowClick={() => onRowClick(order)}\n                    columns={columns}\n                    allowDelete={allowDelete}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n\n        {showPagination && totalPages > 1 && (\n          <Box sx={{ display: 'flex', justifyContent: 'flex-start', mt: 2, width: '100%' }}>\n            <Pagination\n              count={totalPages}\n              page={page}\n              onChange={handlePageChange}\n              sx={{\n                '& .MuiPaginationItem-root.Mui-selected': {\n                  backgroundColor: 'grey.300',\n                  '&:hover': {\n                    backgroundColor: 'grey.400',\n                  },\n                },\n              }}\n            />\n          </Box>\n        )}\n      </Box>\n\n      {DeleteOrderDialog}\n    </Paper>\n  );\n};\n"]}