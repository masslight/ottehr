{"version":3,"file":"CreateExternalLabOrder.js","sourceRoot":"","sources":["CreateExternalLabOrder.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Switch,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport Oystehr from '@oystehr/sdk';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DetailPageContainer from 'src/features/common/DetailPageContainer';\nimport { DiagnosisDTO, getAttendingPractitionerId, OrderableItemSearchResult, PSC_HOLD_LOCALE } from 'utils';\nimport { createExternalLabOrder } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport {\n  ActionsList,\n  DeleteIconButton,\n  useAppointmentStore,\n  useDebounce,\n  useGetCreateExternalLabResources,\n  useGetIcd10Search,\n  useSaveChartData,\n} from '../../../telemed';\nimport { LabBreadcrumbs } from '../components/labs-orders/LabBreadcrumbs';\nimport { LabOrderLoading } from '../components/labs-orders/LabOrderLoading';\nimport { LabsAutocomplete } from '../components/LabsAutocomplete';\n\ninterface CreateExternalLabOrdersProps {\n  appointmentID?: string;\n}\n\nexport const CreateExternalLabOrder: React.FC<CreateExternalLabOrdersProps> = () => {\n  const theme = useTheme();\n  const { oystehrZambda } = useApiClients();\n  const navigate = useNavigate();\n  const [error, setError] = useState<string[] | undefined>(undefined);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n\n  const { mutate: saveChartData } = useSaveChartData();\n  const { chartData, encounter, appointment, patient, setPartialChartData } = getSelectors(useAppointmentStore, [\n    'chartData',\n    'encounter',\n    'appointment',\n    'patient',\n    'setPartialChartData',\n  ]);\n\n  const { diagnosis } = chartData || {};\n  const primaryDiagnosis = diagnosis?.find((d) => d.isPrimary);\n\n  const attendingPractitionerId = getAttendingPractitionerId(encounter);\n  const patientId = patient?.id || '';\n\n  const [orderDx, setOrderDx] = useState<DiagnosisDTO[]>(primaryDiagnosis ? [primaryDiagnosis] : []);\n  const [selectedLab, setSelectedLab] = useState<OrderableItemSearchResult | null>(null);\n  const [psc, setPsc] = useState<boolean>(false);\n\n  // used to fetch dx icd10 codes\n  const [debouncedDxSearchTerm, setDebouncedDxSearchTerm] = useState('');\n  const { isFetching: isSearching, data } = useGetIcd10Search({ search: debouncedDxSearchTerm, sabs: 'ICD10CM' });\n  const icdSearchOptions = data?.codes || [];\n  const { debounce } = useDebounce(800);\n  const debouncedHandleDxInputChange = (searchValue: string): void => {\n    debounce(() => {\n      setDebouncedDxSearchTerm(searchValue);\n    });\n  };\n\n  const {\n    isFetching: dataLoading,\n    data: createExternalLabResources,\n    isError,\n    error: resourceFetchError,\n  } = useGetCreateExternalLabResources({\n    patientId,\n  });\n  const coverageName = createExternalLabResources?.coverageName;\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setSubmitting(true);\n    const paramsSatisfied = orderDx.length && selectedLab;\n    if (oystehrZambda && paramsSatisfied) {\n      try {\n        await addAdditionalDxToEncounter();\n        await createExternalLabOrder(oystehrZambda, {\n          dx: orderDx,\n          encounter,\n          orderableItem: selectedLab,\n          psc,\n        });\n        navigate(`/in-person/${appointment?.id}/external-lab-orders`);\n      } catch (e) {\n        const sdkError = e as Oystehr.OystehrSdkError;\n        console.log('error creating external lab order', sdkError.code, sdkError.message);\n        const errorMessage = [sdkError.message];\n        setError(errorMessage);\n      }\n    } else if (!paramsSatisfied) {\n      const errorMessage = [];\n      if (!orderDx.length) errorMessage.push('Please enter at least one dx');\n      if (!selectedLab) errorMessage.push('Please select a lab to order');\n      if (!attendingPractitionerId) errorMessage.push('No attending practitioner has been assigned to this encounter');\n      if (errorMessage.length === 0) errorMessage.push('There was an error creating this external lab order');\n      setError(errorMessage);\n    }\n    setSubmitting(false);\n  };\n\n  const addAdditionalDxToEncounter = async (): Promise<void> => {\n    const dxToAdd: DiagnosisDTO[] = [];\n    orderDx.forEach((dx) => {\n      const alreadyExistsOnEncounter = diagnosis?.find((d) => d.code === dx.code);\n      if (!alreadyExistsOnEncounter) {\n        dxToAdd.push({\n          ...dx,\n          isPrimary: false,\n          addedViaLabOrder: true,\n        });\n      }\n    });\n    if (dxToAdd.length > 0) {\n      await new Promise<void>((resolve, reject) => {\n        saveChartData(\n          {\n            diagnosis: dxToAdd,\n          },\n          {\n            onSuccess: (data) => {\n              const returnedDiagnosis = data.chartData.diagnosis || [];\n              const allDx = [...returnedDiagnosis, ...(diagnosis || [])];\n              if (allDx) {\n                setPartialChartData({\n                  diagnosis: [...allDx],\n                });\n              }\n              resolve();\n            },\n            onError: (error) => {\n              reject(error);\n            },\n          }\n        );\n      });\n    }\n  };\n\n  if (isError || resourceFetchError) {\n    return (\n      <DetailPageContainer>\n        <LabBreadcrumbs sectionName=\"Order External Lab\">\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h4\" sx={{ fontWeight: '600px', color: theme.palette.primary.dark }}>\n              Order External Lab\n            </Typography>\n          </Box>\n          <Paper sx={{ p: 3 }}>\n            {(resourceFetchError as Error) && (\n              <Grid item xs={12} sx={{ paddingTop: 1 }}>\n                <Typography sx={{ color: theme.palette.error.main }}>\n                  {(resourceFetchError as Error)?.message || 'error'}\n                </Typography>\n              </Grid>\n            )}\n          </Paper>\n        </LabBreadcrumbs>\n      </DetailPageContainer>\n    );\n  }\n\n  return (\n    <DetailPageContainer>\n      <LabBreadcrumbs sectionName=\"Order External Lab\">\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h4\" sx={{ fontWeight: '600px', color: theme.palette.primary.dark }}>\n            Order External Lab\n          </Typography>\n        </Box>\n\n        {dataLoading ? (\n          <LabOrderLoading />\n        ) : (\n          <form onSubmit={handleSubmit}>\n            <Paper sx={{ p: 3 }}>\n              <Grid container sx={{ width: '100%' }} spacing={1} rowSpacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\" sx={{ fontWeight: '600px', color: theme.palette.primary.dark }}>\n                    Dx\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"select-dx-label\" shrink>\n                      Dx\n                    </InputLabel>\n                    <Select\n                      notched\n                      fullWidth\n                      id=\"select-dx\"\n                      label=\"Dx\"\n                      onChange={(e) => {\n                        const selectedDxCode = e.target.value;\n                        const selectedDx = diagnosis?.find((tempDx) => tempDx.code === selectedDxCode);\n                        if (selectedDx) {\n                          const alreadySelected = orderDx.find((tempDx) => tempDx.code === selectedDx.code);\n                          if (!alreadySelected) {\n                            setOrderDx([...orderDx, selectedDx]);\n                          } else {\n                            enqueueSnackbar('This Dx is already added to the order', {\n                              variant: 'error',\n                            });\n                          }\n                        }\n                      }}\n                      displayEmpty\n                      value=\"\"\n                      sx={{\n                        '& .MuiInputLabel-root': {\n                          top: -8,\n                        },\n                      }}\n                      size=\"small\"\n                    >\n                      <MenuItem value=\"\" disabled>\n                        <Typography sx={{ color: '#9E9E9E' }}>Add a Dx to Order</Typography>\n                      </MenuItem>\n                      {diagnosis?.map((d) => (\n                        <MenuItem id={d.resourceId} key={d.resourceId} value={d.code}>\n                          {d.code} {d.display}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                  <Autocomplete\n                    blurOnSelect\n                    id=\"select-additional-dx\"\n                    size=\"small\"\n                    fullWidth\n                    noOptionsText={\n                      debouncedDxSearchTerm && icdSearchOptions.length === 0\n                        ? 'Nothing found for this search criteria'\n                        : 'Start typing to load results'\n                    }\n                    value={null}\n                    isOptionEqualToValue={(option, value) => value.code === option.code}\n                    onChange={(event: any, selectedDx: any) => {\n                      const alreadySelected = orderDx.find((tempDx) => tempDx.code === selectedDx.code);\n                      if (!alreadySelected) {\n                        setOrderDx([...orderDx, selectedDx]);\n                      } else {\n                        enqueueSnackbar('This Dx is already added to the order', {\n                          variant: 'error',\n                        });\n                      }\n                    }}\n                    loading={isSearching}\n                    options={icdSearchOptions}\n                    getOptionLabel={(option) =>\n                      typeof option === 'string' ? option : `${option.code} ${option.display}`\n                    }\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        onChange={(e) => debouncedHandleDxInputChange(e.target.value)}\n                        label=\"Additional Dx\"\n                        placeholder=\"Search for Dx if not on list above\"\n                        InputLabelProps={{ shrink: true }}\n                      />\n                    )}\n                  />\n                </Grid>\n                {orderDx.length > 0 && (\n                  <Grid item xs={12}>\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      <ActionsList\n                        data={orderDx}\n                        getKey={(value, index) => value.resourceId || index}\n                        renderItem={(value) => (\n                          <Typography>\n                            {value.display} {value.code}\n                          </Typography>\n                        )}\n                        renderActions={(value) => (\n                          <DeleteIconButton\n                            onClick={() => setOrderDx(() => orderDx.filter((dxVal) => dxVal.code !== value.code))}\n                          />\n                        )}\n                      />\n                    </Box>\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\" sx={{ fontWeight: '600px', color: theme.palette.primary.dark }}>\n                    Patient insurance\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ paddingTop: '8px' }}>\n                    {coverageName || 'unknown'}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography\n                    variant=\"h6\"\n                    sx={{ fontWeight: '600px', color: theme.palette.primary.dark, marginBottom: '8px' }}\n                  >\n                    Lab\n                  </Typography>\n                  <LabsAutocomplete selectedLab={selectedLab} setSelectedLab={setSelectedLab}></LabsAutocomplete>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    sx={{ fontSize: '14px' }}\n                    control={<Switch checked={psc} onChange={() => setPsc((psc) => !psc)} />}\n                    label={<Typography variant=\"body2\">{PSC_HOLD_LOCALE}</Typography>}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Button\n                    variant=\"outlined\"\n                    sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n                    onClick={() => {\n                      navigate(`/in-person/${appointment?.id}/external-lab-orders`);\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n                <Grid item xs={6} display=\"flex\" justifyContent=\"flex-end\">\n                  <LoadingButton\n                    loading={submitting}\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n                  >\n                    Order\n                  </LoadingButton>\n                </Grid>\n                {error &&\n                  error.length > 0 &&\n                  error.map((msg, idx) => (\n                    <Grid item xs={12} sx={{ textAlign: 'right', paddingTop: 1 }} key={idx}>\n                      <Typography sx={{ color: theme.palette.error.main }}>\n                        {typeof msg === 'string' ? msg : JSON.stringify(msg, null, 2)}\n                      </Typography>\n                    </Grid>\n                  ))}\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      </LabBreadcrumbs>\n    </DetailPageContainer>\n  );\n};\n"]}