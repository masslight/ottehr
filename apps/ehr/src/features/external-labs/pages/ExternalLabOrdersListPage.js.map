{"version":3,"file":"ExternalLabOrdersListPage.js","sourceRoot":"","sources":["ExternalLabOrdersListPage.tsx"],"names":[],"mappings":";;;AAAA,0CAA2C;AAC3C,+BAA2C;AAC3C,qDAA+C;AAC/C,mEAAkE;AAClE,0FAA2F;AAC3F,oEAA+D;AAC/D,2EAA0E;AAC1E,iEAAiF;AAEjF,IAAM,mBAAmB,GAAsB,CAAC,UAAU,EAAE,YAAY,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAEjH,IAAM,yBAAyB,GAAa;IACjD,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAC/B,IAAM,WAAW,GAAG,IAAA,uCAAmB,EAAC,UAAC,KAAK,YAAK,OAAA,MAAA,KAAK,CAAC,SAAS,0CAAE,EAAE,CAAA,EAAA,CAAC,CAAC;IAExE,IAAM,iBAAiB,GAAG,IAAA,mBAAW,EAAC;QACpC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CACL,CAAC,2BAAiB,CAChB;MAAA,CAAC,cAAG,CACF;QAAA,CAAC,cAAG,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAC3E;UAAA,CAAC,qBAAS,CAAC,KAAK,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,EAC9D;UAAA,CAAC,gBAAK,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CACpD;YAAA,CAAC,6BAAa,CACZ,OAAO,CAAC,WAAW,CACnB,KAAK,CAAC,SAAS,CACf,IAAI,CAAC,CAAC,QAAQ,CAAC,CACf,OAAO,CAAC,CAAC,cAAM,OAAA,iBAAiB,EAAE,EAAnB,CAAmB,CAAC,CACnC,EAAE,CAAC,CAAC;YACF,EAAE,EAAE,CAAC;YACL,EAAE,EAAE,CAAC;SACN,CAAC,CAEF;;YACF,EAAE,6BAAa,CACjB;UAAA,EAAE,gBAAK,CACT;QAAA,EAAE,cAAG,CACL;QAAA,CAAC,qBAAS,CACR,QAAQ,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC,CACrE,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAC7B,WAAW,CAAC,CAAC,KAAK,CAAC,CACnB,WAAW,CAAC,CAAC,IAAI,CAAC,CAClB,aAAa,CAAC,CAAC,iBAAiB,CAAC,EAErC;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,2BAAiB,CAAC,CACrB,CAAC;AACJ,CAAC,CAAC;AA3CW,QAAA,yBAAyB,6BA2CpC","sourcesContent":["import { Box, Stack } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PageTitle } from '../../../telemed/components/PageTitle';\nimport { useAppointmentStore } from '../../../telemed/state/appointment/appointment.store';\nimport ListViewContainer from '../../common/ListViewContainer';\nimport { ButtonRounded } from '../../css-module/components/RoundedButton';\nimport { LabsTable, LabsTableColumn } from '../components/labs-orders/LabsTable';\n\nconst externalLabsColumns: LabsTableColumn[] = ['testType', 'orderAdded', 'provider', 'dx', 'status', 'psc', 'actions'];\n\nexport const ExternalLabOrdersListPage: React.FC = () => {\n  const navigate = useNavigate();\n  const encounterId = useAppointmentStore((state) => state.encounter?.id);\n\n  const handleCreateOrder = useCallback((): void => {\n    navigate(`create`);\n  }, [navigate]);\n\n  if (!encounterId) {\n    console.error('No encounter ID found');\n    return null;\n  }\n\n  return (\n    <ListViewContainer>\n      <Box>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <PageTitle label=\"External Labs\" showIntakeNotesButton={false} />\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <ButtonRounded\n              variant=\"contained\"\n              color=\"primary\"\n              size={'medium'}\n              onClick={() => handleCreateOrder()}\n              sx={{\n                py: 1,\n                px: 5,\n              }}\n            >\n              Order\n            </ButtonRounded>\n          </Stack>\n        </Box>\n        <LabsTable\n          searchBy={{ searchBy: { field: 'encounterId', value: encounterId } }}\n          columns={externalLabsColumns}\n          showFilters={false}\n          allowDelete={true}\n          onCreateOrder={handleCreateOrder}\n        />\n      </Box>\n    </ListViewContainer>\n  );\n};\n"]}