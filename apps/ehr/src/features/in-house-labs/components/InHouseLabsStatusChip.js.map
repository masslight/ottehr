{"version":3,"file":"InHouseLabsStatusChip.js","sourceRoot":"","sources":["InHouseLabsStatusChip.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAAyD;AAclD,IAAM,cAAc,GAAG,UAAC,MAAc;IAC3C,QAAQ,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;QAC7B,KAAK,OAAO;YACV,OAAO;gBACL,eAAe,EAAE,SAAS;gBAC1B,KAAK,EAAE,SAAS;aACjB,CAAC;QACJ,KAAK,WAAW;YACd,OAAO;gBACL,eAAe,EAAE,SAAS;gBAC1B,KAAK,EAAE,SAAS;aACjB,CAAC;QACJ,KAAK,SAAS;YACZ,OAAO;gBACL,eAAe,EAAE,SAAS;gBAC1B,KAAK,EAAE,SAAS;aACjB,CAAC;QACJ;YACE,OAAO;gBACL,eAAe,EAAE,SAAS;gBAC1B,KAAK,EAAE,SAAS;aACjB,CAAC;IACN,CAAC;AACH,CAAC,CAAC;AAvBW,QAAA,cAAc,kBAuBzB;AAEK,IAAM,qBAAqB,GAAG,UAAC,EAAyD;QAAvD,MAAM,YAAA,EAAE,iBAAiB,uBAAA;IAC/D,IAAM,YAAY,GAAG;QACnB,IAAM,MAAM,GAAG,IAAA,sBAAc,EAAC,MAAM,CAAC,CAAC;QAEtC,QAAQ,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;YAC7B,KAAK,OAAO;gBACV,OAAO;oBACL,KAAK,EAAE,OAAO;oBACd,EAAE,iCACG,MAAM,KACT,UAAU,EAAE,MAAM,EAClB,YAAY,EAAE,KAAK,KAChB,iBAAiB,CACrB;iBACF,CAAC;YACJ,KAAK,WAAW;gBACd,OAAO;oBACL,KAAK,EAAE,WAAW;oBAClB,EAAE,wBACG,MAAM,KACT,UAAU,EAAE,MAAM,EAClB,YAAY,EAAE,KAAK,GACpB;iBACF,CAAC;YACJ,KAAK,SAAS;gBACZ,OAAO;oBACL,KAAK,EAAE,SAAS;oBAChB,EAAE,wBACG,MAAM,KACT,UAAU,EAAE,MAAM,EAClB,YAAY,EAAE,KAAK,GACpB;iBACF,CAAC;YACJ;gBACE,OAAO;oBACL,KAAK,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,SAAS,CAAe,EAAE,kCAAkC;oBAC5F,EAAE,wBACG,MAAM,KACT,UAAU,EAAE,MAAM,EAClB,YAAY,EAAE,KAAK,GACpB;iBACF,CAAC;QACN,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,SAAS,GAAG,YAAY,EAAE,CAAC;IAEjC,OAAO,CAAC,eAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,EAAG,CAAC;AAC9C,CAAC,CAAC;AAhDW,QAAA,qBAAqB,yBAgDhC","sourcesContent":["import { Chip, ChipProps, SxProps } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { TestStatus } from 'utils/lib/types/data/in-house';\n\ninterface StatusColorConfig {\n  backgroundColor: string;\n  color: string;\n}\n\ninterface InHouseLabsStatusChipProps {\n  status: TestStatus | string;\n  additionalStyling?: SxProps;\n}\n\nexport const getStatusColor = (status: string): StatusColorConfig => {\n  switch (status.toLowerCase()) {\n    case 'final':\n      return {\n        backgroundColor: '#e6f4ff',\n        color: '#1976d2',\n      };\n    case 'collected':\n      return {\n        backgroundColor: '#e8deff',\n        color: '#5e35b1',\n      };\n    case 'pending':\n      return {\n        backgroundColor: '#fff4e5',\n        color: '#ed6c02',\n      };\n    default:\n      return {\n        backgroundColor: '#f5f5f5',\n        color: '#757575',\n      };\n  }\n};\n\nexport const InHouseLabsStatusChip = ({ status, additionalStyling }: InHouseLabsStatusChipProps): ReactElement => {\n  const getChipProps = (): ChipProps & { label: TestStatus } => {\n    const colors = getStatusColor(status);\n\n    switch (status.toLowerCase()) {\n      case 'final':\n        return {\n          label: 'FINAL',\n          sx: {\n            ...colors,\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            ...additionalStyling,\n          },\n        };\n      case 'collected':\n        return {\n          label: 'COLLECTED',\n          sx: {\n            ...colors,\n            fontWeight: 'bold',\n            borderRadius: '4px',\n          },\n        };\n      case 'pending':\n        return {\n          label: 'ORDERED',\n          sx: {\n            ...colors,\n            fontWeight: 'bold',\n            borderRadius: '4px',\n          },\n        };\n      default:\n        return {\n          label: (status.toUpperCase() || 'UNKNOWN') as TestStatus, // todo: clarify possible statuses\n          sx: {\n            ...colors,\n            fontWeight: 'bold',\n            borderRadius: '4px',\n          },\n        };\n    }\n  };\n\n  const chipProps = getChipProps();\n\n  return <Chip size=\"small\" {...chipProps} />;\n};\n"]}