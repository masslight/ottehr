{"version":3,"file":"FinalResultView.js","sourceRoot":"","sources":["FinalResultView.tsx"],"names":[],"mappings":";;;AAAA,sDAAsD;AACtD,0CAA+D;AAC/D,+BAA0B;AAC1B,qDAA+C;AAC/C,+BAA4D;AAE5D,qDAAoD;AAO7C,IAAM,eAAe,GAAmC,UAAC,EAAuB;QAArB,WAAW,iBAAA,EAAE,MAAM,YAAA;IACnF,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAE/B,sEAAsE;IACtE,uGAAuG;IACvG,IAAM,cAAc,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,CAAC,CAAC,CAAC;IACxC,IAAM,OAAO,GAAG;QACd,IAAI,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,aAAa,EAAE,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACtD,CAAC;IACH,CAAC,CAAC;IAEF,IAAM,SAAS,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,CAAC,UAAC,GAAmB,EAAE,MAAM;QAChE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,SAAS;YACpC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAzB,CAAyB,CAAC,EAAE,CAAC;gBAChD,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,YAAY,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,IAAI,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,UAAU,CAAC,UAAU,EAA5B,CAA4B,CAAC,CAAC;IACjF,IAAM,mBAAmB,GAAG;;QAC1B,QAAQ,CAAC,qBAAc,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,CAAC,EAAE,aAAa,gCAA6B,EAAE;YAClF,KAAK,EAAE;gBACL,YAAY,EAAE,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAG,CAAC,CAAC,0CAAE,YAAY;gBAC5C,SAAS,EAAE,SAAS;aACrB;SACF,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,OAAO,CACL,CAAC,cAAG,CACF;QAAA,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CACvC;UAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CACpC;;UACF,EAAE,qBAAU,CACd;QAAA,EAAE,gBAAK,CACT;MAAA,EAAE,cAAG,CAAC,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,CAAC,cAAG,CACF;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAC9D;QAAA,CAAC,IAAA,6BAAqB,EAAC,SAAS,IAAI,EAAE,CAAC,CACzC;MAAA,EAAE,qBAAU,CAEZ;;MAAA,CAAC,OAAO,IAAI,CACV,CAAC,iBAAM,CACL,OAAO,CAAC,UAAU,CAClB,KAAK,CAAC,SAAS,CACf,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAChE,OAAO,CAAC,CAAC,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,CACzB,SAAS,CAAC,CAAC,CAAC,gCAAe,CAAC,AAAD,EAAG,CAAC,CAC/B,QAAQ,CAAC,CAAC,CAAC,CAAA,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,aAAa,CAAA,CAAC,CAEzC;;QACF,EAAE,iBAAM,CAAC,CACV,CAED;;MAAA,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,GAAG,IAAK,OAAA,CAC9B,CAAC,iCAAe,CAAC,GAAG,CAAC,CAAC,UAAG,GAAG,cAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAG,CAC/F,EAF+B,CAE/B,CAAC,CAEF;;MAAA,CAAC,cAAG,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAC3E;QAAA,CAAC,iBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC9E;;QACF,EAAE,iBAAM,CACR;QAAA,CAAC,YAAY,IAAI,CACf,CAAC,iBAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC3F;;UACF,EAAE,iBAAM,CAAC,CACV,CACH;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA9EW,QAAA,eAAe,mBA8E1B","sourcesContent":["import { BiotechOutlined } from '@mui/icons-material';\nimport { Box, Button, Paper, Typography } from '@mui/material';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { DiagnosisDTO, getFormattedDiagnoses } from 'utils';\nimport { InHouseOrderDetailPageItemDTO } from 'utils/lib/types/data/in-house/in-house.types';\nimport { FinalResultCard } from './FinalResultCard';\n\ninterface FinalResultViewProps {\n  testDetails: InHouseOrderDetailPageItemDTO[] | undefined;\n  onBack: () => void;\n}\n\nexport const FinalResultView: React.FC<FinalResultViewProps> = ({ testDetails, onBack }) => {\n  const navigate = useNavigate();\n\n  // we sort the tests on the back end, most recent will always be first\n  // const sortedOrders = inHouseOrders.sort((a, b) => compareDates(a.orderAddedDate, b.orderAddedDate));\n  const mostRecentTest = testDetails?.[0];\n  const openPdf = (): void => {\n    if (mostRecentTest?.resultsPDFUrl) {\n      window.open(mostRecentTest.resultsPDFUrl, '_blank');\n    }\n  };\n\n  const diagnoses = testDetails?.reduce((acc: DiagnosisDTO[], detail) => {\n    detail.diagnosesDTO.forEach((diagnoses) => {\n      if (!acc.some((d) => d.code === diagnoses.code)) {\n        acc.push(diagnoses);\n      }\n    });\n    return acc;\n  }, []);\n\n  const isRepeatable = testDetails?.some((detail) => detail.labDetails.repeatable);\n  const handleRepeatOnClick = (): void => {\n    navigate(`/in-person/${testDetails?.[0].appointmentId}/in-house-lab-orders/create`, {\n      state: {\n        testItemName: testDetails?.[0]?.testItemName,\n        diagnoses: diagnoses,\n      },\n    });\n  };\n\n  if (!testDetails) {\n    return (\n      <Box>\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"error\">\n            Test details not found\n          </Typography>\n        </Paper>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"body1\" sx={{ mb: 2, fontWeight: 'medium' }}>\n        {getFormattedDiagnoses(diagnoses || [])}\n      </Typography>\n\n      {openPdf && (\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          sx={{ borderRadius: '50px', textTransform: 'none', mb: '12px' }}\n          onClick={() => openPdf()}\n          startIcon={<BiotechOutlined />}\n          disabled={!mostRecentTest?.resultsPDFUrl}\n        >\n          Results PDF\n        </Button>\n      )}\n\n      {testDetails.map((test, idx) => (\n        <FinalResultCard key={`${idx}-${test.testItemName.split(' ').join('')}`} testDetails={test} />\n      ))}\n\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={3}>\n        <Button variant=\"outlined\" onClick={onBack} sx={{ borderRadius: '50px', px: 4 }}>\n          Back\n        </Button>\n        {isRepeatable && (\n          <Button variant=\"outlined\" onClick={handleRepeatOnClick} sx={{ borderRadius: '50px', px: 4 }}>\n            Repeat\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n"]}