{"version":3,"file":"ResultEntryRadioButton.js","sourceRoot":"","sources":["ResultEntryRadioButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport { Box, Checkbox, FormControlLabel, Grid, Radio, RadioGroup, SxProps, Theme, Typography } from '@mui/material';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { CodeableConceptComponent } from 'utils';\n\ninterface ResultEntryRadioButtonProps {\n  testItemComponent: CodeableConceptComponent;\n  disabled?: boolean; // equates to the final view\n}\n\nconst ABNORMAL_FONT_COLOR = '#F44336';\nconst ABNORMAL_RADIO_COLOR_STYLING = {\n  color: ABNORMAL_FONT_COLOR,\n  '&.Mui-checked': {\n    color: ABNORMAL_FONT_COLOR,\n  },\n};\n\nconst NORMAL_FONT_COLOR = '#4CAF50';\nconst NORMAL_RADIO_COLOR_STYLING = {\n  color: NORMAL_FONT_COLOR,\n  '&.Mui-checked': {\n    color: NORMAL_FONT_COLOR,\n  },\n};\n\nconst NEUTRAL_RADIO_STYLING = {\n  color: 'primary.main',\n  '&.Mui-disabled': {\n    color: 'primary.main',\n    '& .MuiSvgIcon-root': {\n      fill: 'primary.main',\n    },\n  },\n};\n\nexport const ResultEntryRadioButton: React.FC<ResultEntryRadioButtonProps> = ({ testItemComponent, disabled }) => {\n  const nullCode = testItemComponent.nullOption?.code;\n  const { control } = useFormContext();\n\n  const isChecked = (curValueCode: string, selectedValue: string): boolean => {\n    return curValueCode === selectedValue;\n  };\n\n  const isNeutral = !testItemComponent.abnormalValues.length;\n\n  const isAbnormal = (curValueCode: string): boolean => {\n    if (isNeutral) return false;\n    return testItemComponent.abnormalValues.map((val) => val.code).includes(curValueCode);\n  };\n\n  const radioStylingColor = (curValueCode: string, selectedValue: string): SxProps<Theme> | undefined => {\n    if (isChecked(curValueCode, selectedValue)) {\n      if (!isNeutral) {\n        return isAbnormal(curValueCode) ? ABNORMAL_RADIO_COLOR_STYLING : NORMAL_RADIO_COLOR_STYLING;\n      } else {\n        return NEUTRAL_RADIO_STYLING;\n      }\n    }\n    return undefined;\n  };\n\n  const typographyStyling = (curValueCode: string, selectedValue: string): SxProps<Theme> => {\n    if (selectedValue) {\n      const valIsChecked = isChecked(curValueCode, selectedValue);\n      if (valIsChecked && isNeutral) return { fontWeight: 'bold' };\n      if (valIsChecked) {\n        if (isAbnormal(curValueCode)) {\n          return {\n            color: ABNORMAL_FONT_COLOR,\n            fontWeight: 'bold',\n          };\n        } else {\n          return {\n            color: NORMAL_FONT_COLOR,\n            fontWeight: 'bold',\n          };\n        }\n      } else {\n        return {\n          color: 'text.disabled',\n          fontWeight: 'bold',\n        };\n      }\n    } else {\n      if (isNeutral) return { fontWeight: 'bold' };\n      if (isAbnormal(curValueCode)) {\n        return {\n          color: ABNORMAL_FONT_COLOR,\n          fontWeight: 'bold',\n        };\n      } else {\n        return {\n          color: NORMAL_FONT_COLOR,\n          fontWeight: 'bold',\n        };\n      }\n    }\n  };\n\n  const getBackgroundColor = (curValue: string, selectedValue: string): string => {\n    if (isChecked(curValue, selectedValue) && !isNeutral) {\n      return isAbnormal(curValue) ? '#FFEBEE' : '#E8F5E9';\n    } else {\n      return 'transparent';\n    }\n  };\n\n  const finalViewNullOptionCheckboxStyling = (curValue: string): SxProps<Theme> => {\n    const isFinalView = !!disabled;\n    if (isFinalView) {\n      const isChecked = curValue === nullCode;\n      if (isChecked) {\n        return NEUTRAL_RADIO_STYLING;\n      } else {\n        return {};\n      }\n    }\n    return {};\n  };\n\n  const finalViewNullOptionCheckboxLabelStyling = (curValue: string): SxProps<Theme> => {\n    const isFinalView = !!disabled;\n    if (isFinalView) {\n      const isChecked = curValue === nullCode;\n      if (isChecked) {\n        return {\n          color: 'text.primary',\n          '& .MuiFormControlLabel-label': {\n            color: 'text.primary',\n          },\n          '&.Mui-disabled .MuiFormControlLabel-label': {\n            color: 'text.primary',\n          },\n        };\n      } else {\n        return {};\n      }\n    }\n    return {};\n  };\n\n  return (\n    <Controller\n      name={testItemComponent.observationDefinitionId}\n      control={control}\n      rules={{ required: 'Please select a value' }}\n      defaultValue={''}\n      render={({ field }) => (\n        <>\n          <RadioGroup\n            value={field.value === nullCode ? '' : field.value}\n            onChange={(e) => field.onChange(e.target.value)}\n          >\n            <Grid container spacing={2}>\n              {testItemComponent.valueSet.map((valueCode) => (\n                <Grid item xs={6} key={valueCode.code}>\n                  <FormControlLabel\n                    value={valueCode.code}\n                    control={<Radio sx={radioStylingColor(valueCode.code, field.value)} disabled={!!disabled} />}\n                    label={\n                      <Typography sx={typographyStyling(valueCode.code, field.value)}>{valueCode.display}</Typography>\n                    }\n                    sx={{\n                      margin: 0,\n                      padding: 2,\n                      width: '100%',\n                      border: '1px solid #E0E0E0',\n                      borderRadius: 1,\n                      backgroundColor: getBackgroundColor(valueCode.code, field.value),\n                    }}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </RadioGroup>\n\n          {testItemComponent.nullOption && (\n            <Box mt={2}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    icon={<RadioButtonUncheckedIcon />}\n                    checkedIcon={<RadioButtonCheckedIcon />}\n                    disabled={!!disabled}\n                    checked={field.value === nullCode}\n                    onChange={() => field.onChange(field.value === nullCode ? '' : nullCode)}\n                    sx={disabled ? finalViewNullOptionCheckboxStyling(field.value) : {}}\n                  />\n                }\n                label={testItemComponent.nullOption.text}\n                sx={disabled ? finalViewNullOptionCheckboxLabelStyling(field.value) : {}}\n              />\n            </Box>\n          )}\n        </>\n      )}\n    />\n  );\n};\n"]}