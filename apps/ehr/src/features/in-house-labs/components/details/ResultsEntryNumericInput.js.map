{"version":3,"file":"ResultsEntryNumericInput.js","sourceRoot":"","sources":["ResultsEntryNumericInput.tsx"],"names":[],"mappings":";;;AAAA,0CAAoD;AACpD,oDAAoD;AACpD,mDAA6D;AAUtD,IAAM,uBAAuB,GAA2C,UAAC,EAK/E;QAJC,iBAAiB,uBAAA,EACjB,UAAU,gBAAA,EACV,aAAa,mBAAA,EACb,QAAQ,cAAA;IAEA,IAAA,OAAO,GAAK,IAAA,gCAAc,GAAE,QAArB,CAAsB;IACrC,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,iBAAiB,GAAG,UAAC,KAAa;QACtC,IACE,iBAAiB,CAAC,QAAQ,KAAK,UAAU;YACzC,iBAAiB,CAAC,WAAW,CAAC,GAAG;YACjC,iBAAiB,CAAC,WAAW,CAAC,IAAI,EAClC,CAAC;YACD,IAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAA,KAAgB,iBAAiB,CAAC,WAAW,EAA3C,IAAI,UAAA,EAAE,GAAG,SAAkC,CAAC;YACpD,wEAAwE;YACxE,+FAA+F;YAC/F,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,GAAG,GAAG;gBAAE,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,GAAG;gBAAE,aAAa,CAAC,KAAK,CAAC,CAAC;QAChE,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,4BAAU,CACT,IAAI,CAAC,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAChD,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,EAAE,sBAAsB,EAAE,CAAC,CAC5C,YAAY,CAAC,EAAE,CACf,MAAM,CAAC,CAAC,UAAC,EAAS;gBAAP,KAAK,WAAA;YAAO,OAAA,CACrB,CAAC,oBAAS,CACR,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CACrB,IAAI,KAAK,CAAC,CACV,QAAQ,CAAC,CAAC,UAAC,CAAC;oBACV,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC7B,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACtB,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC,CAAC,CACF,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,CAAC,UAAU,CAAC,CAClB,EAAE,CAAC,CAAC;oBACF,KAAK,EAAE,KAAK;oBACZ,iBAAiB,EAAE;wBACjB,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;wBACrC,mBAAmB,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;qBACxF;oBACD,0BAA0B,EAAE;wBAC1B,gBAAgB,EAAE;4BAChB,oCAAoC,EAAE;gCACpC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;6BAC5C;yBACF;qBACF;iBACF,CAAC,CACF,IAAI,CAAC,OAAO,CACZ,UAAU,CAAC,CAAC;oBACV,oCAAoC;oBACpC,UAAU,EAAE;wBACV,IAAI,EAAE,MAAM;wBACZ,KAAK,EAAE,GAAG;wBACV,kBAAkB,EAAE,IAAI;qBACzB;iBACF,CAAC,CACF,YAAY,CAAC,CAAC,EAAE,CAAC,EACjB,CACH;QApCsB,CAoCtB,CAAC,EACF,CACH,CAAC;AACJ,CAAC,CAAC;AArEW,QAAA,uBAAuB,2BAqElC","sourcesContent":["import { TextField, useTheme } from '@mui/material';\n// import InputMask from 'src/components/InputMask';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { TestItemComponent } from 'utils';\n\ninterface ResultEntryNumericInputProps {\n  testItemComponent: TestItemComponent;\n  isAbnormal: boolean;\n  setIsAbnormal: (bool: boolean) => void;\n  disabled?: boolean; // equates to the final view\n}\n\nexport const ResultEntryNumericInput: React.FC<ResultEntryNumericInputProps> = ({\n  testItemComponent,\n  isAbnormal,\n  setIsAbnormal,\n  disabled,\n}) => {\n  const { control } = useFormContext();\n  const theme = useTheme();\n\n  const assessAbnormality = (entry: string): void => {\n    if (\n      testItemComponent.dataType === 'Quantity' &&\n      testItemComponent.normalRange.low &&\n      testItemComponent.normalRange.high\n    ) {\n      const entryNum = parseFloat(entry);\n      const { high, low } = testItemComponent.normalRange;\n      // todo double check with product team if this is inclusive on both ends\n      // meaning it would be abnormal if it is strictly greater or strictly less than (but not equal)\n      if (entryNum > high || entryNum < low) setIsAbnormal(true);\n      if (entryNum <= high && entryNum >= low) setIsAbnormal(false);\n    }\n  };\n\n  return (\n    <Controller\n      name={testItemComponent.observationDefinitionId}\n      control={control}\n      rules={{ required: 'Please enter a value' }}\n      defaultValue=\"\"\n      render={({ field }) => (\n        <TextField\n          disabled={!!disabled}\n          {...field}\n          onChange={(e) => {\n            const value = e.target.value;\n            field.onChange(value);\n            assessAbnormality(value);\n          }}\n          type=\"text\"\n          error={isAbnormal}\n          sx={{\n            width: '80%',\n            '& .Mui-disabled': {\n              color: isAbnormal ? 'error.dark' : '',\n              WebkitTextFillColor: isAbnormal ? theme.palette.error.dark : theme.palette.text.primary,\n            },\n            '& .MuiOutlinedInput-root': {\n              '&.Mui-disabled': {\n                '& .MuiOutlinedInput-notchedOutline': {\n                  borderColor: isAbnormal ? 'error.dark' : '',\n                },\n              },\n            },\n          }}\n          size=\"small\"\n          InputProps={{\n            // inputComponent: InputMask as any,\n            inputProps: {\n              mask: Number,\n              radix: '.',\n              padFractionalZeros: true,\n            },\n          }}\n          defaultValue={''}\n        />\n      )}\n    />\n  );\n};\n"]}