{"version":3,"file":"ResultsEntryTable.js","sourceRoot":"","sources":["ResultsEntryTable.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAA6G;AAE7G,+DAA6D;AAO7D,IAAM,kBAAkB,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,CAAC;AAErE,IAAM,gBAAgB,GAAoC,UAAC,EAAgC;QAA9B,kBAAkB,wBAAA,EAAE,QAAQ,cAAA;IAC9F,OAAO,CACL,CAAC,yBAAc,CACb;MAAA,CAAC,gBAAK,CACJ,UAAU,CAAC,mBAAmB,CAC9B,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,0BAA0B,EAAE,OAAO,EAAE,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC,CAE5F;QAAA,CAAC,oBAAS,CACR;UAAA,CAAC,mBAAQ,CACP;YAAA,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,WAAE,KAAK,EAAE,KAAK,IAAK,kBAAkB,EAAG,CACrD;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CACzC;;cACF,EAAE,qBAAU,CACd;YAAA,EAAE,oBAAS,CACX;YAAA,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,WAAE,KAAK,EAAE,KAAK,IAAK,kBAAkB,EAAG,CACrD;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CACzC;;cACF,EAAE,qBAAU,CACd;YAAA,EAAE,oBAAS,CACX;YAAA,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,WAAE,KAAK,EAAE,KAAK,IAAK,kBAAkB,EAAG,CACrD;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CACzC;;cACF,EAAE,qBAAU,CACd;YAAA,EAAE,oBAAS,CACX;YAAA,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,WAAE,KAAK,EAAE,KAAK,IAAK,kBAAkB,EAAG,CACrD;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CACzC;;cACF,EAAE,qBAAU,CACd;YAAA,EAAE,oBAAS,CACb;UAAA,EAAE,mBAAQ,CACZ;QAAA,EAAE,oBAAS,CACX;QAAA,CAAC,oBAAS,CACR;UAAA,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAC,SAAS,EAAE,KAAK,IAAK,OAAA,CAC5C,CAAC,0CAAmB,CAClB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,GAAG,CAAC,CAAC,cAAO,KAAK,cAAI,SAAS,CAAC,uBAAuB,CAAE,CAAC,CACzD,SAAS,CAAC,CAAC,KAAK,KAAK,kBAAkB,CAAC,MAAM,GAAG,CAAC,CAAC,EACnD,CACH,EAP6C,CAO7C,CAAC,CACJ;QAAA,EAAE,oBAAS,CACb;MAAA,EAAE,gBAAK,CACT;IAAA,EAAE,yBAAc,CAAC,CAClB,CAAC;AACJ,CAAC,CAAC;AA5CW,QAAA,gBAAgB,oBA4C3B","sourcesContent":["import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\nimport { TestItemComponent } from 'utils';\nimport { ResultEntryTableRow } from './ResultsEntryTableRow';\n\ninterface ResultEntryTableProps {\n  testItemComponents: TestItemComponent[];\n  disabled?: boolean; // equates to the final view\n}\n\nconst HEADER_ROW_STYLING = { borderBottom: 'none', padding: '0 8px 6px 0' };\n\nexport const ResultEntryTable: React.FC<ResultEntryTableProps> = ({ testItemComponents, disabled }) => {\n  return (\n    <TableContainer>\n      <Table\n        aria-label=\"lab results table\"\n        sx={{ backgroundColor: 'rgba(217, 217, 217, 0.2)', padding: 2, borderCollapse: 'separate' }}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ width: '23%', ...HEADER_ROW_STYLING }}>\n              <Typography variant=\"body2\" fontSize=\"12px\">\n                NAME\n              </Typography>\n            </TableCell>\n            <TableCell sx={{ width: '28%', ...HEADER_ROW_STYLING }}>\n              <Typography variant=\"body2\" fontSize=\"12px\">\n                VALUE\n              </Typography>\n            </TableCell>\n            <TableCell sx={{ width: '15%', ...HEADER_ROW_STYLING }}>\n              <Typography variant=\"body2\" fontSize=\"12px\">\n                UNITS\n              </Typography>\n            </TableCell>\n            <TableCell sx={{ width: '25%', ...HEADER_ROW_STYLING }}>\n              <Typography variant=\"body2\" fontSize=\"12px\">\n                REFERENCE RANGE\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {testItemComponents.map((component, index) => (\n            <ResultEntryTableRow\n              component={component}\n              disabled={disabled}\n              key={`row-${index}-${component.observationDefinitionId}`}\n              isLastRow={index === testItemComponents.length - 1}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n"]}