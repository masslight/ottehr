{"version":3,"file":"InHouseLabsTableRow.js","sourceRoot":"","sources":["InHouseLabsTableRow.tsx"],"names":[],"mappings":";;;AAAA,2CAA+C;AAC/C,qEAA4D;AAC5D,0CAAgG;AAEhG,+BAAuE;AACvE,kEAAiE;AAW1D,IAAM,mBAAmB,GAAG,UAAC,EAMT;QALzB,YAAY,kBAAA,EACZ,OAAO,aAAA,EACP,UAAU,gBAAA,EACV,WAAW,iBAAA,EACX,aAAa,mBAAA;IAEb,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,iBAAiB,GAAG,UAAC,MAA8B;;QACvD,QAAQ,MAAM,EAAE,CAAC;YACf,KAAK,UAAU;gBACb,OAAO,CACL,CAAC,cAAG,CACF;YAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,cAAG,CACnE;UAAA,EAAE,cAAG,CAAC,CACP,CAAC;YACJ,KAAK,OAAO;gBACV,OAAO,CAAC,cAAG,CAAC,CAAC,IAAA,yBAAiB,EAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAG,CAAC,CAAC;YACvF,KAAK,YAAY;gBACf,OAAO,CAAC,cAAG,CAAC,CAAC,IAAA,yBAAiB,EAAC,YAAY,CAAC,cAAc,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAG,CAAC,CAAC;YAC5F,KAAK,UAAU;gBACb,OAAO,YAAY,CAAC,yBAAyB,IAAI,EAAE,CAAC;YACtD,KAAK,IAAI,CAAC,CAAC,CAAC;gBACV,IAAM,OAAO,GAAG,CAAA,MAAA,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,0CAAE,OAAO,KAAI,EAAE,CAAC;gBAC5D,IAAM,WAAW,GAAG,CAAA,MAAA,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,0CAAE,IAAI,KAAI,EAAE,CAAC;gBAC7D,IAAM,WAAW,GAAG,UAAG,WAAW,cAAI,OAAO,CAAE,CAAC;gBAChD,IAAM,UAAU,GAAG,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,EAAE,IAAK,OAAA,UAAG,EAAE,CAAC,IAAI,cAAI,EAAE,CAAC,OAAO,CAAE,EAA1B,CAA0B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAChG,IAAM,OAAO,GAAG,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC;gBAEjD,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;oBAChB,OAAO,CACL,CAAC,kBAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAC/C;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CACzB;gBAAA,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,GAAG,CAAC,CAAE,KAAI,EAAE,IAAI,CACjG;cAAA,EAAE,qBAAU,CACd;YAAA,EAAE,kBAAO,CAAC,CACX,CAAC;gBACJ,CAAC;gBACD,OAAO,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,EAAE,qBAAU,CAAC,CAAC;YAChE,CAAC;YACD,KAAK,iBAAiB;gBACpB,OAAO,CAAC,cAAG,CAAC,CAAC,IAAA,yBAAiB,EAAC,YAAY,CAAC,kBAAkB,IAAI,GAAG,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,cAAG,CAAC,CAAC;YACvG,KAAK,QAAQ;gBACX,OAAO,CAAC,6CAAqB,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,EAAG,CAAC;YAChE,KAAK,SAAS;gBACZ,IAAI,WAAW,IAAI,YAAY,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;oBACrD,OAAO,CACL,CAAC,iBAAM,CACL,OAAO,CAAC,CAAC,UAAC,CAAC;4BACT,CAAC,CAAC,eAAe,EAAE,CAAC;4BACpB,aAAa,aAAb,aAAa,uBAAb,aAAa,EAAI,CAAC;wBACpB,CAAC,CAAC,CACF,EAAE,CAAC,CAAC;4BACF,aAAa,EAAE,MAAM;4BACrB,YAAY,EAAE,EAAE;4BAChB,UAAU,EAAE,MAAM;yBACnB,CAAC,CAEF;cAAA,CAAC,wBAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,oBAAW,CAAC,gBAAgB,EAAE,CAAC,EAC1D;YAAA,EAAE,iBAAM,CAAC,CACV,CAAC;gBACJ,CAAC;gBACD,OAAO,IAAI,CAAC;YACd;gBACE,OAAO,IAAI,CAAC;QAChB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,mBAAQ,CACP,EAAE,CAAC,CAAC;YACF,SAAS,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE;YACzC,MAAM,EAAE,SAAS;SAClB,CAAC,CACF,OAAO,CAAC,CAAC,UAAU,CAAC,CAEpB;MAAA,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CACvB,CAAC,oBAAS,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,oBAAS,CAAC,CAChE,EAFwB,CAExB,CAAC,CACJ;IAAA,EAAE,mBAAQ,CAAC,CACZ,CAAC;AACJ,CAAC,CAAC;AAlFW,QAAA,mBAAmB,uBAkF9B","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport DeleteIcon from '@mui/icons-material/DeleteOutlined';\nimport { Box, Button, TableCell, TableRow, Tooltip, Typography, useTheme } from '@mui/material';\nimport { ReactElement } from 'react';\nimport { formatDateForLabs, InHouseOrderListPageItemDTO } from 'utils';\nimport { InHouseLabsStatusChip } from '../InHouseLabsStatusChip';\nimport { InHouseLabsTableColumn } from './InHouseLabsTable';\n\ninterface InHouseLabsTableRowProps {\n  columns: InHouseLabsTableColumn[];\n  labOrderData: InHouseOrderListPageItemDTO;\n  onRowClick?: () => void;\n  allowDelete?: boolean;\n  onDeleteOrder?: () => void;\n}\n\nexport const InHouseLabsTableRow = ({\n  labOrderData,\n  columns,\n  onRowClick,\n  allowDelete,\n  onDeleteOrder,\n}: InHouseLabsTableRowProps): ReactElement => {\n  const theme = useTheme();\n\n  const renderCellContent = (column: InHouseLabsTableColumn): React.ReactNode => {\n    switch (column) {\n      case 'testType':\n        return (\n          <Box>\n            <Box sx={{ fontWeight: 'bold' }}>{labOrderData.testItemName}</Box>\n          </Box>\n        );\n      case 'visit':\n        return <Box>{formatDateForLabs(labOrderData.visitDate, labOrderData.timezone)}</Box>;\n      case 'orderAdded':\n        return <Box>{formatDateForLabs(labOrderData.orderAddedDate, labOrderData.timezone)}</Box>;\n      case 'provider':\n        return labOrderData.orderingPhysicianFullName || '';\n      case 'dx': {\n        const firstDx = labOrderData.diagnosesDTO[0]?.display || '';\n        const firstDxCode = labOrderData.diagnosesDTO[0]?.code || '';\n        const firstDxText = `${firstDxCode} ${firstDx}`;\n        const fullDxText = labOrderData.diagnosesDTO.map((dx) => `${dx.code} ${dx.display}`).join('; ');\n        const dxCount = labOrderData.diagnosesDTO.length;\n\n        if (dxCount > 1) {\n          return (\n            <Tooltip title={fullDxText} arrow placement=\"top\">\n              <Typography variant=\"body2\">\n                {firstDxText}; <span style={{ color: theme.palette.text.secondary }}>+ {dxCount - 1} more</span>\n              </Typography>\n            </Tooltip>\n          );\n        }\n        return <Typography variant=\"body2\">{firstDxText}</Typography>;\n      }\n      case 'resultsReceived':\n        return <Box>{formatDateForLabs(labOrderData.resultReceivedDate || '-', labOrderData.timezone)}</Box>;\n      case 'status':\n        return <InHouseLabsStatusChip status={labOrderData.status} />;\n      case 'actions':\n        if (allowDelete && labOrderData.status === 'ORDERED') {\n          return (\n            <Button\n              onClick={(e) => {\n                e.stopPropagation();\n                onDeleteOrder?.();\n              }}\n              sx={{\n                textTransform: 'none',\n                borderRadius: 28,\n                fontWeight: 'bold',\n              }}\n            >\n              <DeleteIcon sx={{ color: otherColors.priorityHighText }} />\n            </Button>\n          );\n        }\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <TableRow\n      sx={{\n        '&:hover': { backgroundColor: '#f5f5f5' },\n        cursor: 'pointer',\n      }}\n      onClick={onRowClick}\n    >\n      {columns.map((column) => (\n        <TableCell key={column}>{renderCellContent(column)}</TableCell>\n      ))}\n    </TableRow>\n  );\n};\n"]}