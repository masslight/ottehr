{"version":3,"file":"useInHouseLabOrders.js","sourceRoot":"","sources":["useInHouseLabOrders.ts"],"names":[],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport { ReactNode, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { FEATURE_FLAGS } from 'src/constants/feature-flags';\nimport { useDeleteCommonLabOrderDialog } from 'src/features/common/useDeleteCommonLabOrderDialog';\nimport { DEFAULT_IN_HOUSE_LABS_ITEMS_PER_PAGE, tryFormatDateToISO } from 'utils';\nimport {\n  DeleteInHouseLabOrderParameters,\n  GetInHouseOrdersParameters,\n  InHouseGetOrdersResponseDTO,\n  InHouseOrderListPageItemDTO,\n  InHouseOrdersSearchBy,\n} from 'utils/lib/types/data/in-house/in-house.types';\nimport { deleteInHouseLabOrder, getInHouseOrders } from '../../../../api/api';\nimport { useApiClients } from '../../../../hooks/useAppClients';\n\ninterface UseInHouseLabOrdersResult {\n  labOrders: InHouseOrderListPageItemDTO[];\n  loading: boolean;\n  error: Error | null;\n  totalPages: number;\n  page: number;\n  testTypeFilter: string;\n  visitDateFilter: DateTime | null;\n  setSearchParams: (searchParams: {\n    pageNumber?: number;\n    testTypeFilter?: string;\n    visitDateFilter?: DateTime | null;\n  }) => void;\n  showPagination: boolean;\n  hasData: boolean;\n  totalItems: number;\n  showDeleteLabOrderDialog: ({\n    serviceRequestId,\n    testItemName,\n  }: {\n    serviceRequestId: string;\n    testItemName: string;\n  }) => void;\n  DeleteOrderDialog: ReactNode | null;\n}\n\nexport const useInHouseLabOrders = <SearchBy extends InHouseOrdersSearchBy>(\n  _searchBy: SearchBy\n): UseInHouseLabOrdersResult => {\n  const { oystehrZambda } = useApiClients();\n  const [labOrders, setLabOrders] = useState<InHouseGetOrdersResponseDTO<SearchBy>['data']>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalItems, setTotalItems] = useState(0);\n\n  /**\n   * Search state management strategy:\n   *\n   * Page: object in useState to force useEffect re-runs even with same value\n   * Filters: refs to avoid re-renders when setting multiple filters and to get updated values synchronously\n   *\n   * Benefits:\n   * - Single useEffect handles all search logic (page + searchBy dependencies)\n   * - Filters can be set independently without triggering fetches\n   * - Page changes are the only fetch trigger (predictable data flow)\n   * - Simplified API: one setSearchParams method for everything\n   */\n  const [page, setPage] = useState({ pageNumber: 1 });\n  const testTypeFilterRef = useRef('');\n  const visitDateFilterRef = useRef<DateTime | null>(null);\n\n  const [showPagination, setShowPagination] = useState(false);\n\n  // calling without arguments will refetch the data with the current search params\n  const setSearchParams = useCallback(\n    (searchParams: { pageNumber?: number; testTypeFilter?: string; visitDateFilter?: DateTime | null }) => {\n      if (searchParams.testTypeFilter !== undefined) {\n        testTypeFilterRef.current = searchParams.testTypeFilter;\n      }\n      if (searchParams.visitDateFilter !== undefined) {\n        visitDateFilterRef.current = searchParams.visitDateFilter;\n      }\n      setPage((page) => ({ pageNumber: searchParams.pageNumber || page.pageNumber }));\n    },\n    []\n  );\n\n  // Memoize searchBy to prevent unnecessary re-renders\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedSearchBy = useMemo(() => _searchBy, [JSON.stringify(_searchBy)]);\n\n  const fetchLabOrders = useCallback(\n    async (searchParams: GetInHouseOrdersParameters): Promise<void> => {\n      if (FEATURE_FLAGS.IN_HOUSE_LABS_ENABLED !== true) {\n        return;\n      }\n\n      if (!oystehrZambda) {\n        console.error('oystehrZambda is not defined');\n        setError(new Error('API client not available'));\n        return;\n      }\n\n      if (\n        !searchParams.searchBy.value ||\n        (Array.isArray(searchParams.searchBy.value) && searchParams.searchBy.value.length === 0)\n      ) {\n        // search params are not ready yet, that's ok probably\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response = await getInHouseOrders(oystehrZambda, searchParams);\n\n        if (response?.data) {\n          setLabOrders(response.data);\n          setTotalItems(response.pagination?.totalItems || 0);\n\n          if (response.pagination) {\n            setTotalPages(response.pagination.totalPages || 1);\n            setShowPagination(response.pagination.totalPages > 1);\n          } else {\n            setTotalPages(1);\n            setShowPagination(false);\n          }\n        } else {\n          setLabOrders([]);\n          setTotalItems(0);\n          setTotalPages(1);\n          setShowPagination(false);\n        }\n      } catch (fetchError) {\n        const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown error occurred';\n        setError(new Error(`Failed to fetch in-house lab orders: ${errorMessage}`));\n\n        // Reset state on error\n        setLabOrders([]);\n        setTotalItems(0);\n        setTotalPages(1);\n        setShowPagination(false);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [oystehrZambda]\n  );\n\n  useEffect(() => {\n    if (page.pageNumber < 1) {\n      throw new Error('Page number must be greater than 0');\n    }\n\n    const params: GetInHouseOrdersParameters = {\n      itemsPerPage: DEFAULT_IN_HOUSE_LABS_ITEMS_PER_PAGE,\n      ...memoizedSearchBy,\n      ...(testTypeFilterRef.current && { orderableItemCode: testTypeFilterRef.current }),\n      ...(visitDateFilterRef.current &&\n        visitDateFilterRef.current.isValid && { visitDate: tryFormatDateToISO(visitDateFilterRef.current) }),\n    };\n\n    const searchParams = { ...params, pageIndex: page.pageNumber - 1 };\n\n    if (searchParams.searchBy.field && searchParams.searchBy.value) {\n      void fetchLabOrders(searchParams);\n    } else {\n      console.error('searchParams are not valid', searchParams);\n    }\n  }, [fetchLabOrders, page, memoizedSearchBy]);\n\n  const hasData = labOrders.length > 0;\n\n  const handleDeleteLabOrder = useCallback(\n    async ({ serviceRequestId }: DeleteInHouseLabOrderParameters): Promise<boolean> => {\n      if (!serviceRequestId) {\n        console.error('Cannot delete lab order: Missing service request ID');\n        setError(new Error('Missing service request ID'));\n        return false;\n      }\n\n      if (!oystehrZambda) {\n        console.error('Cannot delete lab order: API client is not available');\n        setError(new Error('API client is not available'));\n        return false;\n      }\n\n      setLoading(true);\n      setError(null);\n\n      try {\n        await deleteInHouseLabOrder(oystehrZambda, {\n          serviceRequestId,\n        });\n\n        setSearchParams({ pageNumber: 1 });\n\n        return true;\n      } catch (err) {\n        console.error('Error deleting In-house Lab Order:', err);\n\n        const errorObj =\n          err instanceof Error ? err : new Error(typeof err === 'string' ? err : 'Failed to delete lab order');\n\n        setError(errorObj);\n\n        return false;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [oystehrZambda, setSearchParams]\n  );\n\n  // handle delete dialog\n  const { showDeleteLabOrderDialog, DeleteOrderDialog } = useDeleteCommonLabOrderDialog({\n    deleteOrder: handleDeleteLabOrder,\n  });\n\n  return {\n    labOrders,\n    loading,\n    error,\n    totalPages,\n    totalItems,\n    page: page.pageNumber,\n    setSearchParams,\n    showPagination,\n    hasData,\n    showDeleteLabOrderDialog,\n    DeleteOrderDialog,\n    testTypeFilter: testTypeFilterRef.current,\n    visitDateFilter: visitDateFilterRef.current,\n  };\n};\n"]}