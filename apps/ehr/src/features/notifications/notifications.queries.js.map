{"version":3,"file":"notifications.queries.js","sourceRoot":"","sources":["notifications.queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,2CAAuE;AACvE,+BAQe;AACf,2DAA0D;AAC1D,2DAAsD;AAQtD,4EAA4E;AACrE,IAAM,2BAA2B,GAAG,UAAC,SAAkD;IACpF,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IAC7B,OAAO,IAAA,sBAAQ,EACb,CAAC,wBAAwB,CAAC,EAC1B;;;;;wBAEI,qBAAM,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,MAAM,CAAC;wBACzB,YAAY,EAAE,eAAe;wBAC7B,MAAM,EAAE;4BACN;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,yBAAyB;6BACjC;4BACD;gCACE,IAAI,EAAE,WAAW;gCACjB,KAAK,EAAE,IAAK,CAAC,OAAO;6BACrB;4BACD;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,UAAG,yCAAiC,cAAI;oCAC7C,4CAAoC,CAAC,eAAe;oCACpD,4CAAoC,CAAC,eAAe;iCACrD,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE;6BACd;4BACD;gCACE,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,IAAI;6BACZ;4BACD;gCACE,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,eAAe;6BACvB;yBACF;qBACF,CAAC,CAAA,EAAA;;oBA5BE,qBAAqB,GAAG,MAAA,CAC5B,SA2BE,CACH,0CAAE,QAAQ,EAAE;oBACP,sBAAsB,GAAG,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,MAAM,CAC1D,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,YAAY,KAAK,eAAe,EAA7C,CAA6C,CAC7C,CAAC;oBACf,kBAAkB,GAAG,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,MAAM,CACtD,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,YAAY,KAAK,WAAW,EAAzC,CAAyC,CAC7C,CAAC;oBAEjB,sBAAO,sBAAsB,CAAC,GAAG,CAAC,UAAC,qBAAqB;;4BACtD,IAAM,WAAW,GAAG,MAAA,MAAA,qBAAqB,CAAC,SAAS,0CAAE,SAAS,0CAAE,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;4BAC1F,IAAM,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAC,aAAa,IAAK,OAAA,WAAW,KAAK,aAAa,CAAC,EAAE,EAAhC,CAAgC,CAAC,CAAC;4BAC/F,IAAM,aAAa,GAAG,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,0CAAG,CAAC,EAAE,SAAS,0CAAE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;4BAEzF,IAAM,YAAY,GAAyB;gCACzC,aAAa,EAAE,aAAa,IAAI,EAAE;gCAClC,SAAS,WAAA;gCACT,aAAa,EAAE,qBAAqB;6BACrC,CAAC;4BACF,OAAO,YAAY,CAAC;wBACtB,CAAC,CAAC,EAAC;;;SACJ,EACD,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,OAAO,KAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,CAAA,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,SAAS,WAAA,EAAE,CAChH,CAAC;AACJ,CAAC,CAAC;AA1DW,QAAA,2BAA2B,+BA0DtC;AAOK,IAAM,6CAA6C,GAAG,UAC3D,SAA8D;IAM9D,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IACrB,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,yBAAW,EAChB,CAAC,wBAAwB,CAAC,EAC1B,iEAAO,EAAsD;;;YAApD,MAAM,YAAA,EAAE,OAAO,aAAA;;;;oBACtB,IAAI,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,CAAA;wBAAE,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;oBAE/E,qBAAqB,GAAG,MAAA,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,IAAI,EAAE,CAAC,0CAAE,SAAS,CAC7E,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,GAAG,KAAK,qDAA6C,EAAzD,CAAyD,CACnE,CAAC;oBAEI,gCAAgC,GAAgB;wBACpD;4BACE,GAAG,EAAE,qDAA6C;4BAClD,SAAS,EAAE;gCACT;oCACE,GAAG,EAAE,wCAAgC;oCACrC,WAAW,EAAE,MAAM;iCACpB;gCACD;oCACE,GAAG,EAAE,0CAAkC;oCACvC,YAAY,EAAE,OAAO;iCACtB;6BACF;yBACF;qBACF,CAAC;oBAIF,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;wBACpC,OAAO,GAAG;4BACR,EAAE,EAAE,KAAK;4BACT,IAAI,EAAE,YAAY;4BAClB,KAAK,EAAE,gCAAgC;yBACxC,CAAC;oBACJ,CAAC;yBAAM,CAAC;wBACN,OAAO,GAAG;4BACR,EAAE,EAAE,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK;4BAClD,IAAI,EAAE,qBAAc,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAE;4BAC9E,KAAK,EAAE,gCAAgC,CAAC,CAAC,CAAC;yBAC3C,CAAC;oBACJ,CAAC;oBAED,qBAAM,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC;4BACxB,EAAE,EAAE,MAAA,IAAI,CAAC,eAAe,CAAC,EAAE,mCAAI,EAAE;4BACjC,YAAY,EAAE,cAAc;4BAC5B,UAAU,EAAE,CAAC,OAAO,CAAC;yBACtB,CAAC,CAAA,EAAA;;oBAJF,SAIE,CAAC;oBACH,sBAAO,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,EAAC;;;SAC5B,EACD,EAAE,SAAS,WAAA,EAAE,CACd,CAAC;AACJ,CAAC,CAAC;AA3DW,QAAA,6CAA6C,iDA2DxD;AAEF,4EAA4E;AACrE,IAAM,sCAAsC,GAAG,UAAC,SAAsB;IACnE,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,yBAAW,EAChB,CAAC,wBAAwB,CAAC,EAC1B,UAAO,MAAoF;;;;;oBACjF,GAAG,GAAa,MAAM,IAAnB,EAAE,MAAM,GAAK,MAAM,OAAX,CAAY;oBACzB,OAAO,GAAc;wBACzB,EAAE,EAAE,SAAS;wBACb,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,MAAM;qBACd,CAAC;oBAEF,qBAAM,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,KAAK,CAAC;4BACxB,QAAQ,oBACH,GAAG,CAAC,GAAG,CAAC,UAAC,EAAE;gCACZ,OAAA,IAAA,sBAAc,EAAC,EAAE,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;4BAA7F,CAA6F,CAC9F,OACF;yBACF,CAAC,CAAA,EAAA;;oBANF,SAME,CAAC;;;;SACJ,EACD,EAAE,SAAS,WAAA,EAAE,CACd,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,sCAAsC,0CAsBjD","sourcesContent":["import { Operation } from 'fast-json-patch';\nimport { Communication, Encounter, Extension } from 'fhir/r4b';\nimport { useMutation, UseMutationResult, useQuery } from 'react-query';\nimport {\n  AppointmentProviderNotificationTypes,\n  getPatchBinary,\n  PROVIDER_NOTIFICATION_METHOD_URL,\n  PROVIDER_NOTIFICATION_TYPE_SYSTEM,\n  PROVIDER_NOTIFICATIONS_ENABLED_URL,\n  PROVIDER_NOTIFICATIONS_SETTINGS_EXTENSION_URL,\n  ProviderNotificationMethod,\n} from 'utils';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport useEvolveUser from '../../hooks/useEvolveUser';\n\nexport type ProviderNotification = {\n  appointmentID: string;\n  encounter?: Encounter;\n  communication: Communication;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetProviderNotifications = (onSuccess?: (data: ProviderNotification[]) => void) => {\n  const { oystehr } = useApiClients();\n  const user = useEvolveUser();\n  return useQuery(\n    ['provider-notifications'],\n    async () => {\n      const notificationResources = (\n        await oystehr?.fhir.search({\n          resourceType: 'Communication',\n          params: [\n            {\n              name: '_include',\n              value: 'Communication:encounter',\n            },\n            {\n              name: 'recipient',\n              value: user!.profile,\n            },\n            {\n              name: 'category',\n              value: `${PROVIDER_NOTIFICATION_TYPE_SYSTEM}|${[\n                AppointmentProviderNotificationTypes.patient_waiting,\n                AppointmentProviderNotificationTypes.unsigned_charts,\n              ].join(',')}`,\n            },\n            {\n              name: '_count',\n              value: '10',\n            },\n            {\n              name: '_sort',\n              value: '-_lastUpdated',\n            },\n          ],\n        })\n      )?.unbundle();\n      const communicationResources = notificationResources?.filter(\n        (resourceTemp) => resourceTemp.resourceType === 'Communication'\n      ) as Communication[];\n      const encounterResources = notificationResources?.filter(\n        (resourceTemp) => resourceTemp.resourceType === 'Encounter'\n      ) as Encounter[];\n\n      return communicationResources.map((communicationResource) => {\n        const encounterID = communicationResource.encounter?.reference?.replace('Encounter/', '');\n        const encounter = encounterResources.find((encounterTemp) => encounterID === encounterTemp.id);\n        const appointmentID = encounter?.appointment?.[0].reference?.replace('Appointment/', '');\n\n        const notification: ProviderNotification = {\n          appointmentID: appointmentID || '',\n          encounter,\n          communication: communicationResource,\n        };\n        return notification;\n      });\n    },\n    { enabled: !!(oystehr && user?.profile), refetchInterval: 10000, refetchIntervalInBackground: true, onSuccess }\n  );\n};\n\ninterface UpdateProviderNotificationsParams {\n  method: ProviderNotificationMethod;\n  enabled: boolean;\n}\n\nexport const useUpdateProviderNotificationSettingsMutation = (\n  onSuccess: (params: UpdateProviderNotificationsParams) => void\n): UseMutationResult<\n  { method: ProviderNotificationMethod; enabled: boolean },\n  unknown,\n  UpdateProviderNotificationsParams\n> => {\n  const user = useEvolveUser();\n  const { oystehr } = useApiClients();\n  return useMutation(\n    ['provider-notifications'],\n    async ({ method, enabled }: UpdateProviderNotificationsParams) => {\n      if (!user?.profileResource) throw new Error('User practitioner profile not defined');\n\n      const notificationsExtIndex = (user.profileResource.extension || [])?.findIndex(\n        (ext) => ext.url === PROVIDER_NOTIFICATIONS_SETTINGS_EXTENSION_URL\n      );\n\n      const newNotificationSettingsExtension: Extension[] = [\n        {\n          url: PROVIDER_NOTIFICATIONS_SETTINGS_EXTENSION_URL,\n          extension: [\n            {\n              url: PROVIDER_NOTIFICATION_METHOD_URL,\n              valueString: method,\n            },\n            {\n              url: PROVIDER_NOTIFICATIONS_ENABLED_URL,\n              valueBoolean: enabled,\n            },\n          ],\n        },\n      ];\n\n      let patchOp: Operation;\n\n      if (!user.profileResource.extension) {\n        patchOp = {\n          op: 'add',\n          path: `/extension`,\n          value: newNotificationSettingsExtension,\n        };\n      } else {\n        patchOp = {\n          op: notificationsExtIndex >= 0 ? 'replace' : 'add',\n          path: `/extension/${notificationsExtIndex >= 0 ? notificationsExtIndex : '-'}`,\n          value: newNotificationSettingsExtension[0],\n        };\n      }\n\n      await oystehr?.fhir.patch({\n        id: user.profileResource.id ?? '',\n        resourceType: 'Practitioner',\n        operations: [patchOp],\n      });\n      return { method, enabled };\n    },\n    { onSuccess }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useUpdateProviderNotificationsMutation = (onSuccess?: () => void) => {\n  const { oystehr } = useApiClients();\n  return useMutation(\n    ['provider-notifications'],\n    async (params: { ids: NonNullable<Communication['id']>[]; status: Communication['status'] }) => {\n      const { ids, status } = params;\n      const patchOp: Operation = {\n        op: 'replace',\n        path: '/status',\n        value: status,\n      };\n\n      await oystehr?.fhir.batch({\n        requests: [\n          ...ids.map((id) =>\n            getPatchBinary({ resourceId: id, resourceType: 'Communication', patchOperations: [patchOp] })\n          ),\n        ],\n      });\n    },\n    { onSuccess }\n  );\n};\n"]}