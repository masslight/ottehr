{"version":3,"file":"History.js","sourceRoot":"","sources":["History.tsx"],"names":[],"mappings":";;;AAAA,0CAAsD;AACtD,+BAAiC;AAGjC,sEAAqE;AAErE,IAAM,cAAc,GAAG,UAAC,UAAkB;IACxC,IAAI,CAAC;QACH,OAAO,gBAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACzE,CAAC;IAAC,WAAM,CAAC;QACP,OAAO,UAAU,CAAC;IACpB,CAAC;AACH,CAAC,CAAC;AAMK,IAAM,OAAO,GAAqB,UAAC,EAAgB;QAAd,YAAY,kBAAA;IACtD,OAAO,CACL,CAAC,cAAG,CACF;MAAA,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAC1B,CAAC,cAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CACpB;UAAA,CAAC,eAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CACrC;YAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;cAAA,CAAC,iDAAuB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAC/C;YAAA,EAAE,eAAI,CACN;YAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,qBAAU,CAC1D;YAAA,EAAE,eAAI,CACN;YAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;cAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,qBAAU,CACrE;YAAA,EAAE,eAAI,CACR;UAAA,EAAE,eAAI,CACR;QAAA,EAAE,cAAG,CAAC,CACP,EAd2B,CAc3B,CAAC,CACJ;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,OAAO,WAoBlB","sourcesContent":["import { Box, Grid, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { FC } from 'react';\nimport { NursingOrderHistoryRow } from 'utils';\nimport { NursingOrdersStatusChip } from '../NursingOrdersStatusChip';\n\nconst formatDateTime = (dateString: string): string => {\n  try {\n    return DateTime.fromISO(dateString).toFormat(\"MM/dd/yyyy 'at' h:mm a\");\n  } catch {\n    return dateString;\n  }\n};\n\ntype HistoryProps = {\n  orderHistory: NursingOrderHistoryRow[];\n};\n\nexport const History: FC<HistoryProps> = ({ orderHistory }) => {\n  return (\n    <Box>\n      {orderHistory.map((item) => (\n        <Box key={item.status}>\n          <Grid container sx={{ px: 2, py: 1.5 }}>\n            <Grid item xs={3}>\n              <NursingOrdersStatusChip status={item.status} />\n            </Grid>\n            <Grid item xs={4}>\n              <Typography variant=\"body2\">{item.performer}</Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography variant=\"body2\">{formatDateTime(item.date)}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n"]}