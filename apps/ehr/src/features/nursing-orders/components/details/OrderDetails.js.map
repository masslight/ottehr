{"version":3,"file":"OrderDetails.js","sourceRoot":"","sources":["OrderDetails.tsx"],"names":[],"mappings":";;;AAAA,0CAAgE;AAChE,kFAAiF;AACjF,+BAA0D;AAC1D,sEAAqE;AAO9D,IAAM,YAAY,GAAqC,UAAC,EAA0B;QAAxB,YAAY,kBAAA,EAAE,QAAQ,cAAA;IACrF,IAAM,qBAAqB,GAAG;QAC5B,QAAQ,CAAC;YACP,MAAM,EAAE,2BAAmB,CAAC,SAAS;SACtC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,cAAG,CACF;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACzF;QAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CACvE;;QACF,EAAE,qBAAU,CACZ;QAAA,CAAC,iDAAuB,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,EACvD;MAAA,EAAE,cAAG,CACL;MAAA,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACnB;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAClE;UAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAC7D;;UACF,EAAE,qBAAU,CACZ;UAAA,CAAC,cAAG,CACF;YAAA,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,qBAAU,CAChF;UAAA,EAAE,cAAG,CACP;QAAA,EAAE,cAAG,CACL;QAAA,CAAC,YAAY,CAAC,MAAM,KAAK,2BAAmB,CAAC,OAAO,IAAI,CACtD,EACE;YAAA,CAAC,kBAAO,CAAC,AAAD,EACR;YAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAC7D;cAAA,CAAC,6BAAa,CACZ,OAAO,CAAC,WAAW,CACnB,KAAK,CAAC,SAAS,CACf,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAC/B,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAEpC;;cACF,EAAE,6BAAa,CACjB;YAAA,EAAE,cAAG,CACP;UAAA,GAAG,CACJ,CACH;MAAA,EAAE,gBAAK,CACT;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA1CW,QAAA,YAAY,gBA0CvB","sourcesContent":["import { Box, Divider, Paper, Typography } from '@mui/material';\nimport { ButtonRounded } from 'src/features/css-module/components/RoundedButton';\nimport { NursingOrder, NursingOrdersStatus } from 'utils';\nimport { NursingOrdersStatusChip } from '../NursingOrdersStatusChip';\n\ninterface CollectSampleViewProps {\n  orderDetails: NursingOrder;\n  onSubmit: (data: any) => void;\n}\n\nexport const OrderDetails: React.FC<CollectSampleViewProps> = ({ orderDetails, onSubmit }) => {\n  const handleMarkAsCollected = (): void => {\n    onSubmit({\n      status: NursingOrdersStatus.completed,\n    });\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h4\" color=\"primary.dark\" sx={{ fontWeight: 'bold' }}>\n          Nursing Order\n        </Typography>\n        <NursingOrdersStatusChip status={orderDetails.status} />\n      </Box>\n      <Paper sx={{ mb: 2 }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', p: 3, gap: 3 }}>\n          <Typography variant=\"h6\" fontWeight=\"bold\" color=\"primary.dark\">\n            Order Note\n          </Typography>\n          <Box>\n            <Typography style={{ whiteSpace: 'pre-line' }}>{orderDetails.note}</Typography>\n          </Box>\n        </Box>\n        {orderDetails.status === NursingOrdersStatus.pending && (\n          <>\n            <Divider />\n            <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 3 }}>\n              <ButtonRounded\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleMarkAsCollected}\n                sx={{ borderRadius: '50px', px: 4 }}\n              >\n                Mark as Completed\n              </ButtonRounded>\n            </Box>\n          </>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n"]}