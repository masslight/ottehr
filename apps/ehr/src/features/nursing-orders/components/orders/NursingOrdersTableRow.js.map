{"version":3,"file":"NursingOrdersTableRow.js","sourceRoot":"","sources":["NursingOrdersTableRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, IconButton, TableCell, TableRow } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { ReactElement } from 'react';\nimport { NursingOrder } from 'utils';\nimport { deleteIcon } from '../../../../themes/ottehr';\nimport { NursingOrdersStatusChip } from '../NursingOrdersStatusChip';\nimport { NursingOrdersTableColumn } from './NursingOrdersTable';\nimport { useUpdateNursingOrder } from './useNursingOrders';\ninterface NursingOrdersTableRowProps {\n  columns: NursingOrdersTableColumn[];\n  nursingOrderData: NursingOrder;\n  refetchOrders: () => void;\n  onRowClick?: () => void;\n}\n\nexport const NursingOrdersTableRow = ({\n  nursingOrderData,\n  columns,\n  refetchOrders,\n  onRowClick,\n}: NursingOrdersTableRowProps): ReactElement => {\n  const { updateNursingOrder } = useUpdateNursingOrder({\n    serviceRequestId: nursingOrderData.serviceRequestId,\n    action: 'CANCEL ORDER',\n  });\n\n  const handleCancel = async (): Promise<void> => {\n    try {\n      await updateNursingOrder();\n    } catch (error) {\n      console.error('Error cancelling nursing order:', error);\n    }\n  };\n\n  const formatDate = (datetime: string): string => {\n    if (!datetime || !DateTime.fromISO(datetime).isValid) return '';\n    return DateTime.fromISO(datetime).setZone(nursingOrderData.encounterTimezone).toFormat('MM/dd/yyyy hh:mm a');\n  };\n\n  const renderCellContent = (column: NursingOrdersTableColumn): React.ReactNode => {\n    switch (column) {\n      case 'order':\n        return (\n          <Box>\n            <Box style={{ whiteSpace: 'pre-line' }}>{nursingOrderData.note}</Box>\n          </Box>\n        );\n      case 'orderAdded':\n        return (\n          <Box>\n            <Box>{formatDate(nursingOrderData.orderAddedDate)}</Box>\n            <Box sx={{ opacity: '60%' }}>{nursingOrderData.orderingPhysician}</Box>\n          </Box>\n        );\n      case 'status':\n        return (\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            {nursingOrderData.status && <NursingOrdersStatusChip status={nursingOrderData.status} />}\n            {nursingOrderData.status === 'pending' && (\n              <IconButton\n                onClick={async (event) => {\n                  event.stopPropagation();\n                  await handleCancel();\n                  refetchOrders();\n                }}\n              >\n                <img alt=\"delete icon\" src={deleteIcon} width={18} />\n              </IconButton>\n            )}\n          </Box>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <TableRow\n      sx={{\n        '&:hover': { backgroundColor: '#f5f5f5' },\n        cursor: 'pointer',\n      }}\n      onClick={onRowClick}\n    >\n      {columns.map((column) => (\n        <TableCell key={column}>{renderCellContent(column)}</TableCell>\n      ))}\n    </TableRow>\n  );\n};\n"]}