{"version":3,"file":"useNursingOrders.js","sourceRoot":"","sources":["useNursingOrders.ts"],"names":[],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { getNursingOrders, updateNursingOrder as updateNursingOrderApi } from 'src/api/api';\nimport { GetNursingOrdersInput } from 'utils';\nimport { useApiClients } from '../../../../hooks/useAppClients';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetNursingOrders = ({ searchBy }: GetNursingOrdersInput) => {\n  const { oystehrZambda } = useApiClients();\n  const [nursingOrders, setNursingOrders] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  // Memoize searchBy to prevent unnecessary re-renders\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoizedSearchBy = useMemo(() => searchBy, [JSON.stringify(searchBy)]);\n\n  const fetchNursingOrders = useCallback(async (): Promise<void> => {\n    if (!oystehrZambda) {\n      console.error('oystehrZambda is not defined');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      let response;\n      try {\n        response = await getNursingOrders(oystehrZambda, { searchBy: memoizedSearchBy });\n      } catch (err) {\n        console.error('Error fetching nursing orders:', err);\n        setError(err instanceof Error ? err : new Error('Unknown error occurred'));\n      }\n\n      if (response?.data) {\n        setNursingOrders(response.data as any[]);\n      } else {\n        setNursingOrders([]);\n      }\n    } catch (error) {\n      console.error('error with setting nursing orders:', error);\n      setError(error instanceof Error ? error : new Error('Unknown error occurred'));\n      setNursingOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [oystehrZambda, memoizedSearchBy]);\n\n  // Initial fetch of nursing orders\n  useEffect(() => {\n    if (!memoizedSearchBy?.value || (Array.isArray(memoizedSearchBy.value) && memoizedSearchBy.value.length === 0)) {\n      console.log('search values loading');\n      return;\n    } else {\n      void fetchNursingOrders();\n    }\n  }, [fetchNursingOrders, memoizedSearchBy]);\n\n  return {\n    nursingOrders,\n    loading,\n    error,\n    fetchNursingOrders,\n  };\n};\n\nexport const useUpdateNursingOrder = ({\n  serviceRequestId,\n  action,\n}: {\n  serviceRequestId?: string;\n  action: 'CANCEL ORDER' | 'COMPLETE ORDER';\n}): { loading: boolean; error: Error | null; updateNursingOrder: () => Promise<void> } => {\n  const { oystehrZambda } = useApiClients();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  const updateNursingOrder = useCallback(async (): Promise<void> => {\n    if (!oystehrZambda) {\n      console.error('oystehrZambda is not defined');\n      return;\n    }\n\n    if (!serviceRequestId) {\n      console.warn('ServiceRequestId is undefined â€” skipping update.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      try {\n        await updateNursingOrderApi(oystehrZambda, { serviceRequestId, action });\n      } catch (err) {\n        console.error('Error updating nursing order:', err);\n        setError(err instanceof Error ? err : new Error('Unknown error occurred'));\n      }\n    } catch (error) {\n      console.error('error with setting nursing order:', error);\n      setError(error instanceof Error ? error : new Error('Unknown error occurred'));\n    } finally {\n      setLoading(false);\n    }\n  }, [oystehrZambda, serviceRequestId, action]);\n\n  return {\n    loading,\n    error,\n    updateNursingOrder,\n  };\n};\n"]}