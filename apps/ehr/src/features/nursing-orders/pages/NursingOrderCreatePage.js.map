{"version":3,"file":"NursingOrderCreatePage.js","sourceRoot":"","sources":["NursingOrderCreatePage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, CircularProgress, Divider, Paper, Stack, TextField, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createNursingOrder } from 'src/api/api';\nimport { ButtonRounded } from 'src/features/css-module/components/RoundedButton';\nimport { useApiClients } from 'src/hooks/useAppClients';\nimport { CreateNursingOrderInput } from 'utils';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed/state/appointment/appointment.store';\nimport { BreadCrumbs } from '../components/BreadCrumbs';\n\nexport const NursingOrderCreatePage: React.FC = () => {\n  const { oystehrZambda } = useApiClients();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [orderNote, setOrderNote] = useState<string>('');\n  const { patient, encounter } = getSelectors(useAppointmentStore, ['patient', 'encounter']);\n\n  const handleBack = (): void => {\n    navigate(-1);\n  };\n\n  const handleSubmit = async (event: React.FormEvent): Promise<void> => {\n    event.preventDefault();\n    setLoading(true);\n\n    try {\n      if (!oystehrZambda) throw new Error('Zambda client not found');\n      console.log('Order submitted:', {\n        notes: orderNote,\n        patientId: patient?.id,\n        encounterId: encounter?.id,\n      });\n\n      if (!encounter?.id) {\n        throw new Error('Missing encounter ID');\n      }\n\n      const zambdaParams: CreateNursingOrderInput = {\n        encounterId: encounter?.id,\n        notes: orderNote,\n      };\n\n      await createNursingOrder(oystehrZambda, zambdaParams);\n\n      handleBack();\n    } catch (error) {\n      console.error('Error submitting order:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, flex: 1, maxWidth: '680px' }}>\n        <BreadCrumbs />\n\n        <Typography variant=\"h4\" color=\"primary.dark\">\n          Nursing Order\n        </Typography>\n\n        <Paper>\n          {loading ? (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n              <CircularProgress />\n            </Box>\n          ) : (\n            <form onSubmit={handleSubmit}>\n              <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n                <Box sx={{ p: 3 }}>\n                  <TextField\n                    fullWidth\n                    id=\"notes\"\n                    label=\"Order note\"\n                    multiline\n                    rows={4}\n                    value={orderNote}\n                    onChange={(e) => setOrderNote(e.target.value)}\n                    required\n                    inputProps={{ maxLength: 150 }}\n                  />\n                </Box>\n                <Divider />\n                <Box sx={{ px: 3, py: 2 }}>\n                  <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n                    <ButtonRounded\n                      variant=\"outlined\"\n                      onClick={handleBack}\n                      sx={{\n                        borderRadius: '50px',\n                        px: 4,\n                        py: 1,\n                      }}\n                    >\n                      Cancel\n                    </ButtonRounded>\n                    <Box>\n                      <ButtonRounded\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={orderNote.length === 0 || loading}\n                        sx={{\n                          borderRadius: '50px',\n                          px: 4,\n                          py: 1,\n                        }}\n                      >\n                        Order\n                      </ButtonRounded>\n                    </Box>\n                  </Stack>\n                </Box>\n              </Box>\n            </form>\n          )}\n        </Paper>\n      </Box>\n    </Box>\n  );\n};\n"]}