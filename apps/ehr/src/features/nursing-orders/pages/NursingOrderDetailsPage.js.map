{"version":3,"file":"NursingOrderDetailsPage.js","sourceRoot":"","sources":["NursingOrderDetailsPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import ArrowDropDownCircleOutlinedIcon from '@mui/icons-material/ArrowDropDownCircleOutlined';\nimport { Box, Button, CircularProgress, Collapse, Divider, IconButton, Paper, Typography } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ButtonRounded } from 'src/features/css-module/components/RoundedButton';\nimport { BreadCrumbs } from '../components/BreadCrumbs';\nimport { History } from '../components/details/History';\nimport { OrderDetails } from '../components/details/OrderDetails';\nimport { useGetNursingOrders, useUpdateNursingOrder } from '../components/orders/useNursingOrders';\n\nexport const NursingOrderDetailsPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { serviceRequestID } = useParams<{ serviceRequestID: string }>();\n\n  const [showHistory, setShowHistory] = useState(true);\n\n  const { nursingOrders, loading, error } = useGetNursingOrders({\n    searchBy: { field: 'serviceRequestId', value: serviceRequestID || '' },\n  });\n\n  const order = nursingOrders.find((order) => order.serviceRequestId === serviceRequestID);\n\n  const handleBack = (): void => {\n    navigate(-1);\n  };\n\n  const handleToggleDetails = (): void => {\n    setShowHistory(!showHistory);\n  };\n\n  const { updateNursingOrder } = useUpdateNursingOrder({\n    serviceRequestId: serviceRequestID,\n    action: 'COMPLETE ORDER',\n  });\n\n  const handleSubmit = async (): Promise<void> => {\n    try {\n      await updateNursingOrder();\n\n      // Navigate back to the list view\n      navigate(-1);\n    } catch (error) {\n      console.error('Error completing nursing order:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"300px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Paper sx={{ mb: 2 }}>\n        <Typography color=\"error\" variant=\"body1\" gutterBottom>\n          {'Failed to fetch nursing order details. Please try again later.'}\n        </Typography>\n      </Paper>\n    );\n  }\n\n  if (!order) {\n    return (\n      <Box>\n        <Button variant=\"outlined\" onClick={handleBack} sx={{ mb: 2, borderRadius: '50px', px: 4 }}>\n          Back\n        </Button>\n        <Paper sx={{ p: 3, textAlign: 'center' }}>\n          <Typography variant=\"h6\" color=\"error\">\n            Test details not found\n          </Typography>\n        </Paper>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, maxWidth: '680px', width: '100%' }}>\n        <BreadCrumbs />\n\n        <OrderDetails orderDetails={order} onSubmit={handleSubmit} />\n\n        <Paper>\n          <Box sx={{ display: 'flex', alignItems: 'center', px: 2, py: 1, backgroundColor: '#F4F6F8' }}>\n            <IconButton onClick={handleToggleDetails} sx={{ mr: 0.75, p: 0 }}>\n              <ArrowDropDownCircleOutlinedIcon\n                color=\"primary\"\n                sx={{\n                  rotate: showHistory ? '' : '180deg',\n                }}\n              ></ArrowDropDownCircleOutlinedIcon>\n            </IconButton>\n            <Typography variant=\"subtitle2\" color=\"primary.dark\" sx={{ fontSize: '14px' }}>\n              Order History\n            </Typography>\n          </Box>\n          <Divider />\n          <Collapse in={showHistory}>\n            <History orderHistory={order.history} />\n          </Collapse>\n        </Paper>\n\n        <ButtonRounded\n          variant=\"outlined\"\n          onClick={handleBack}\n          sx={{ borderRadius: '50px', px: 4, alignSelf: 'flex-start' }}\n        >\n          Back\n        </ButtonRounded>\n      </Box>\n    </Box>\n  );\n};\n"]}