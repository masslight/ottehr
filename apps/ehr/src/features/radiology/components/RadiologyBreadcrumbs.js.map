{"version":3,"file":"RadiologyBreadcrumbs.js","sourceRoot":"","sources":["RadiologyBreadcrumbs.tsx"],"names":[],"mappings":";;;AAAA,0CAAiE;AACjE,+CAA8C;AAE9C,qDAAwC;AACxC,mEAA0E;AAC1E,mEAAkE;AAClE,4CAAuD;AAQvD,IAAM,WAAW,GAAG,IAAA,eAAM,EAAC,cAAG,CAAC,CAAC;IAC9B,OAAO,EAAE,OAAO;IAChB,OAAO,EAAE,MAAM;IACf,aAAa,EAAE,QAAQ;IACvB,UAAU,EAAE,QAAQ;IACpB,GAAG,EAAE,KAAK;CACX,CAAC,CAAC;AAEH,IAAM,oBAAoB,GAAG,IAAA,eAAM,EAAC,cAAG,CAAC,CAAC;IACvC,OAAO,EAAE,MAAM;IACf,GAAG,EAAE,KAAK;IACV,SAAS,EAAE,YAAY;IACvB,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC;AAEH,IAAM,SAAS,GAAG,IAAA,eAAM,EAAC,qBAAU,CAAC,CAAC;IACnC,KAAK,EAAE,MAAM;CACd,CAAC,CAAC;AAEI,IAAM,wBAAwB,GAAkC,UAAC,EAIvE;QAHC,WAAW,iBAAA,EACX,uBAAuB,EAAvB,eAAe,mBAAG,KAAK,KAAA,EACvB,QAAQ,cAAA;IAEA,IAAA,WAAW,GAAK,IAAA,2BAAY,EAAC,6BAAmB,EAAE,CAAC,aAAa,CAAC,CAAC,YAAvD,CAAwD;IAE3E,OAAO,CACL,CAAC,WAAW,CACV;MAAA,CAAC,oBAAoB,CACnB;QAAA,CAAC,CAAC,eAAe,KAAI,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,EAAE,CAAA,CAAC,CAAC,CAAC,CACrC,CAAC,eAAO,CAAC,SAAS,CAAC,CAAC,uBAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAA,yBAAe,EAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,cAAc,CACjF;;UACF,EAAE,eAAO,CAAC,CACX,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,qBAAU,CAAC,CACxD,CACD;QAAA,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CACvB;QAAA,CAAC,qBAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,EAAE,qBAAU,CAC5D;MAAA,EAAE,oBAAoB,CAEtB;;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,WAAW,CAAC,CACf,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,wBAAwB,4BAwBnC","sourcesContent":["import { Box, Link as MuiLink, Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getRadiologyUrl } from 'src/features/css-module/routing/helpers';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../telemed';\n\ninterface RadiologyBreadcrumbsProps {\n  sectionName: string;\n  disableLabsLink?: boolean;\n  children: React.ReactNode;\n}\n\nconst PageWrapper = styled(Box)({\n  padding: '0px 0',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: '8px',\n});\n\nconst BreadcrumbsContainer = styled(Box)({\n  display: 'flex',\n  gap: '8px',\n  alignSelf: 'flex-start',\n  marginLeft: '0px',\n});\n\nconst Separator = styled(Typography)({\n  color: '#666',\n});\n\nexport const WithRadiologyBreadcrumbs: FC<RadiologyBreadcrumbsProps> = ({\n  sectionName,\n  disableLabsLink = false,\n  children,\n}) => {\n  const { appointment } = getSelectors(useAppointmentStore, ['appointment']);\n\n  return (\n    <PageWrapper>\n      <BreadcrumbsContainer>\n        {!disableLabsLink && appointment?.id ? (\n          <MuiLink component={Link} to={getRadiologyUrl(appointment.id)} color=\"text.primary\">\n            Radiology\n          </MuiLink>\n        ) : (\n          <Typography color=\"text.primary\">Radiology</Typography>\n        )}\n        <Separator>/</Separator>\n        <Typography color=\"text.primary\">{sectionName}</Typography>\n      </BreadcrumbsContainer>\n\n      {children}\n    </PageWrapper>\n  );\n};\n"]}