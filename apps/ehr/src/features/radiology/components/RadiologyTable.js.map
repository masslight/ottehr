{"version":3,"file":"RadiologyTable.js","sourceRoot":"","sources":["RadiologyTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Pagination,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material';\nimport { ReactElement } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GetRadiologyOrderListZambdaOrder } from 'utils';\nimport { getRadiologyOrderEditUrl } from '../../css-module/routing/helpers';\nimport { RadiologyOrderLoading } from './RadiologyOrderLoading';\nimport { RadiologyTableRow } from './RadiologyTableRow';\nimport { usePatientRadiologyOrders } from './usePatientRadiologyOrders';\n\nexport type RadiologyTableColumn = 'studyType' | 'dx' | 'ordered' | 'stat' | 'status' | 'actions';\n\ntype RadiologyTableProps = {\n  patientId?: string;\n  encounterId?: string;\n  columns: RadiologyTableColumn[];\n  showFilters?: boolean;\n  allowDelete?: boolean;\n  titleText?: string;\n  onCreateOrder?: () => void;\n};\n\nexport const RadiologyTable = ({\n  patientId,\n  encounterId,\n  columns,\n  allowDelete = false,\n  titleText,\n  onCreateOrder,\n}: RadiologyTableProps): ReactElement => {\n  const navigateTo = useNavigate();\n\n  const {\n    orders,\n    loading,\n    totalPages,\n    page,\n    setPage,\n    showPagination,\n    error,\n    showDeleteRadiologyOrderDialog,\n    DeleteOrderDialog,\n  } = usePatientRadiologyOrders({\n    patientId,\n    encounterIds: encounterId,\n  });\n\n  const onRowClick = (order: GetRadiologyOrderListZambdaOrder): void => {\n    navigateTo(getRadiologyOrderEditUrl(order.appointmentId, order.serviceRequestId));\n  };\n\n  const handlePageChange = (event: React.ChangeEvent<unknown>, value: number): void => {\n    setPage(value);\n  };\n\n  if (loading && orders.length === 0) {\n    return <RadiologyOrderLoading />;\n  }\n\n  if (error) {\n    return (\n      <Paper sx={{ p: 4, textAlign: 'center' }}>\n        <Typography color=\"error\" variant=\"body1\" gutterBottom>\n          {error.message || 'Failed to fetch lab orders. Please try again later.'}\n        </Typography>\n        {onCreateOrder && (\n          <Button variant=\"contained\" onClick={onCreateOrder} sx={{ mt: 2 }}>\n            Create New Radiology Order\n          </Button>\n        )}\n      </Paper>\n    );\n  }\n\n  const getColumnWidth = (column: RadiologyTableColumn): string => {\n    switch (column) {\n      case 'studyType':\n        return '25%';\n      case 'dx':\n        return '25%';\n      case 'ordered':\n        return '25%';\n      case 'stat':\n        return '10%';\n      case 'status':\n        return '10%';\n      case 'actions':\n        return '5%';\n      default:\n        return '10%';\n    }\n  };\n\n  const getColumnHeader = (column: RadiologyTableColumn): string => {\n    switch (column) {\n      case 'studyType':\n        return 'Study type';\n      case 'dx':\n        return 'Dx';\n      case 'ordered':\n        return 'Ordered';\n      case 'stat':\n        return 'Stat';\n      case 'status':\n        return 'Status';\n      case 'actions':\n        return '';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <Paper\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 3,\n        mt: 2,\n        p: 3,\n        position: 'relative',\n      }}\n    >\n      {loading && <RadiologyOrderLoading />}\n\n      {titleText && (\n        <Typography\n          variant=\"h3\"\n          color=\"primary.dark\"\n          sx={{ mb: -2, mt: 2, width: '100%', display: 'flex', justifyContent: 'flex-start' }}\n        >\n          Radiology\n        </Typography>\n      )}\n\n      <Box sx={{ width: '100%' }}>\n        {!Array.isArray(orders) || orders.length === 0 ? (\n          <Box sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"body1\" gutterBottom>\n              No radiology orders to display\n            </Typography>\n            {onCreateOrder && (\n              <Button variant=\"contained\" onClick={onCreateOrder} sx={{ mt: 2 }}>\n                Create New Radiology Order\n              </Button>\n            )}\n          </Box>\n        ) : (\n          <TableContainer sx={{ border: '1px solid #e0e0e0' }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column}\n                      align=\"left\"\n                      sx={{\n                        fontWeight: 'bold',\n                        width: getColumnWidth(column),\n                        padding: column === 'studyType' ? '16px 16px' : '8px 16px',\n                      }}\n                    >\n                      {getColumnHeader(column)}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map((order) => (\n                  <RadiologyTableRow\n                    key={order.serviceRequestId}\n                    order={order}\n                    onDeleteOrder={() =>\n                      showDeleteRadiologyOrderDialog({\n                        serviceRequestId: order.serviceRequestId,\n                        studyType: order.studyType,\n                      })\n                    }\n                    onRowClick={() => onRowClick(order)}\n                    columns={columns}\n                    allowDelete={allowDelete}\n                  />\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n\n        {showPagination && totalPages > 1 && (\n          <Box sx={{ display: 'flex', justifyContent: 'flex-start', mt: 2, width: '100%' }}>\n            <Pagination\n              count={totalPages}\n              page={page}\n              onChange={handlePageChange}\n              sx={{\n                '& .MuiPaginationItem-root.Mui-selected': {\n                  backgroundColor: 'grey.300',\n                  '&:hover': {\n                    backgroundColor: 'grey.400',\n                  },\n                },\n              }}\n            />\n          </Box>\n        )}\n      </Box>\n\n      {DeleteOrderDialog}\n    </Paper>\n  );\n};\n"]}