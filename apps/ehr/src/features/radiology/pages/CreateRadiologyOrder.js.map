{"version":3,"file":"CreateRadiologyOrder.js","sourceRoot":"","sources":["CreateRadiologyOrder.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { Coding } from 'fhir/r4b';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getRadiologyUrl } from 'src/features/css-module/routing/helpers';\nimport { CPTCodeDTO, DiagnosisDTO } from 'utils';\nimport { createRadiologyOrder } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useAppointmentStore, useDebounce, useGetIcd10Search, useSaveChartData } from '../../../telemed';\nimport { WithRadiologyBreadcrumbs } from '../components/RadiologyBreadcrumbs';\n\ninterface CreateRadiologyOrdersProps {\n  appointmentID?: string;\n}\n\nconst defaultStudies: Pick<Coding, 'code' | 'display'>[] = [\n  { code: '71045', display: 'X-ray of chest, 1 view' },\n  { code: '71046', display: 'X-ray of chest, 2 views' },\n  { code: '74018', display: 'X-ray of abdomen, 1 view' },\n  { code: '74019', display: 'X-ray of abdomen, 2 views' },\n  { code: '76010', display: 'X-ray from nose to rectum' },\n  { code: '73000', display: 'X-ray of collar bone' },\n  { code: '73010', display: 'X-ray of shoulder blade' },\n  { code: '73020', display: 'X-ray of shoulder, 1 view' },\n  { code: '73060', display: 'X-ray of upper arm, minimum of 2 views' },\n  { code: '73070', display: 'X-ray of elbow, 2 views' },\n  { code: '73090', display: 'X-ray of forearm, 2 views' },\n  { code: '73100', display: 'X-ray of wrist, 2 views' },\n  { code: '73120', display: 'X-ray of hand, 2 views' },\n  { code: '73140', display: 'X-ray of finger, minimum of 2 views' },\n  { code: '72170', display: 'X-ray of pelvis, 1-2 views' },\n  { code: '73552', display: 'X-ray of thigh bone, minimum 2 views' },\n  { code: '73560', display: 'X-ray of knee, 1-2 views' },\n  { code: '73590', display: 'X-ray of lower leg, 2 views' },\n  { code: '73600', display: 'X-ray of ankle, 2 views' },\n  { code: '73610', display: 'X-ray of ankle, minimum of 3 views' },\n  { code: '73620', display: 'X-ray of foot, 2 views' },\n  { code: '73630', display: 'X-ray of foot, minimum of 3 views' },\n  { code: '73660', display: 'X-ray of toe, minimum of 2 views' },\n];\n\nexport const CreateRadiologyOrder: React.FC<CreateRadiologyOrdersProps> = () => {\n  const theme = useTheme();\n  const { oystehrZambda } = useApiClients();\n  const navigate = useNavigate();\n  const [error, setError] = useState<string[] | undefined>(undefined);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n\n  const { mutate: saveChartData } = useSaveChartData();\n  const { chartData, encounter, appointment, setPartialChartData } = getSelectors(useAppointmentStore, [\n    'chartData',\n    'encounter',\n    'appointment',\n    'setPartialChartData',\n  ]);\n\n  const { diagnosis } = chartData || {};\n  const primaryDiagnosis = diagnosis?.find((d) => d.isPrimary);\n\n  const [orderDx, setOrderDx] = useState<DiagnosisDTO | undefined>(primaryDiagnosis ? primaryDiagnosis : undefined);\n  const [orderCpt, setOrderCpt] = useState<CPTCodeDTO | undefined>();\n  const [stat, setStat] = useState<boolean>(false);\n  const [clinicalHistory, setClinicalHistory] = useState<string | undefined>();\n\n  // used to fetch dx icd10 codes\n  const [dxDebouncedSearchTerm, setDxDebouncedSearchTerm] = useState('');\n  const { isFetching: isSearchingDx, data: dxData } = useGetIcd10Search({\n    search: dxDebouncedSearchTerm,\n    sabs: 'ICD10CM',\n  });\n  const icdSearchOptions = dxDebouncedSearchTerm === '' && diagnosis ? diagnosis : dxData?.codes || [];\n  const { debounce: debounceDx } = useDebounce(800);\n  const debouncedDxHandleInputChange = (data: string): void => {\n    debounceDx(() => {\n      setDxDebouncedSearchTerm(data);\n    });\n  };\n\n  // used to fetch cpt codes\n  const [cptDebouncedSearchTerm, setCptDebouncedSearchTerm] = useState('');\n  const { isFetching: isSearchingCpt, data: cptData } = useGetIcd10Search({\n    search: cptDebouncedSearchTerm,\n    sabs: 'CPT',\n    radiologyOnly: true, // Only fetch CPT codes related to radiology\n  });\n  const cptSearchOptions = cptData?.codes || defaultStudies;\n  const { debounce } = useDebounce(800);\n  const debouncedCptHandleInputChange = (data: string): void => {\n    debounce(() => {\n      setCptDebouncedSearchTerm(data);\n    });\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setSubmitting(true);\n    const paramsSatisfied = orderDx && orderCpt && encounter.id && clinicalHistory && clinicalHistory.length <= 255;\n    if (oystehrZambda && paramsSatisfied && encounter.id) {\n      try {\n        await addAdditionalDxToEncounter();\n        await createRadiologyOrder(oystehrZambda, {\n          diagnosisCode: orderDx.code,\n          cptCode: orderCpt.code,\n          encounterId: encounter.id,\n          stat: stat,\n          clinicalHistory: clinicalHistory,\n        });\n        navigate(getRadiologyUrl(appointment?.id || ''));\n      } catch (e) {\n        const error = e as any;\n        console.log('error', JSON.stringify(error));\n        const errorMessage = ['There was an error completing the order'];\n        setError(errorMessage);\n      }\n    } else if (!paramsSatisfied) {\n      const errorMessage = [];\n      if (!orderDx) errorMessage.push('Please enter a diagnosis to continue');\n      if (!orderCpt) errorMessage.push('Please select a study type (CPT code) to continue');\n      if (!clinicalHistory) errorMessage.push('Please enter clinical history to continue');\n      if (clinicalHistory && clinicalHistory.length > 255)\n        errorMessage.push('Clinical history must be 255 characters or less');\n      if (errorMessage.length === 0) errorMessage.push('There was an error completing the order');\n      setError(errorMessage);\n    }\n    setSubmitting(false);\n  };\n\n  const addAdditionalDxToEncounter = async (): Promise<void> => {\n    if (orderDx === undefined) return;\n\n    const alreadyExistsOnEncounter = diagnosis?.find((d) => d.code === orderDx.code);\n    if (alreadyExistsOnEncounter) {\n      return;\n    }\n\n    await new Promise<void>((resolve, reject) => {\n      saveChartData(\n        {\n          diagnosis: [orderDx],\n        },\n        {\n          onSuccess: (data) => {\n            const returnedDiagnosis = data.chartData.diagnosis || [];\n            const allDx = [...returnedDiagnosis, ...(diagnosis || [])];\n            if (allDx) {\n              setPartialChartData({\n                diagnosis: [...allDx],\n              });\n            }\n            resolve();\n          },\n          onError: (error) => {\n            reject(error);\n          },\n        }\n      );\n    });\n  };\n\n  return (\n    <WithRadiologyBreadcrumbs sectionName=\"Order Radiology\">\n      <Stack spacing={1}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h4\" sx={{ fontWeight: '600px', color: theme.palette.primary.dark }}>\n            Order Radiology\n          </Typography>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Paper sx={{ p: 3 }}>\n            <Grid container sx={{ width: '100%' }} spacing={1} rowSpacing={2}>\n              <Grid item xs={12}>\n                <Autocomplete\n                  blurOnSelect\n                  id=\"select-dx\"\n                  size=\"small\"\n                  fullWidth\n                  filterOptions={(x) => x}\n                  noOptionsText={\n                    dxDebouncedSearchTerm && icdSearchOptions.length === 0\n                      ? 'Nothing found for this search criteria'\n                      : 'Start typing to load results'\n                  }\n                  value={orderDx || null}\n                  isOptionEqualToValue={(option, value) => value.code === option.code}\n                  onChange={(_event: any, selectedDx: any) => {\n                    setOrderDx(selectedDx);\n                  }}\n                  loading={isSearchingDx}\n                  options={icdSearchOptions}\n                  getOptionLabel={(option) =>\n                    typeof option === 'string' ? option : `${option.code} ${option.display}`\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      onChange={(e) => debouncedDxHandleInputChange(e.target.value)}\n                      label=\"Diagnosis\"\n                      placeholder=\"Select diagnosis from list or search\"\n                      multiline\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Autocomplete\n                  blurOnSelect\n                  id=\"select-cpt\"\n                  size=\"small\"\n                  fullWidth\n                  filterOptions={(x) => x}\n                  noOptionsText={\n                    cptDebouncedSearchTerm && cptSearchOptions.length === 0\n                      ? 'Nothing found for this search criteria'\n                      : 'Start typing to load results'\n                  }\n                  value={orderCpt || null}\n                  isOptionEqualToValue={(option, value) => value.code === option.code}\n                  onChange={(_event: any, selectedCpt: any) => {\n                    setOrderCpt(selectedCpt);\n                  }}\n                  loading={isSearchingCpt}\n                  options={cptSearchOptions}\n                  getOptionLabel={(option) =>\n                    typeof option === 'string' ? option : `${option.code} ${option.display}`\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      onChange={(e) => debouncedCptHandleInputChange(e.target.value)}\n                      label=\"Study Type\"\n                      placeholder=\"Search for CPT Code\"\n                      multiline\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"clinical-history\"\n                  label=\"Clinical History\"\n                  placeholder=\"Enter clinical history for the radiology order\"\n                  fullWidth\n                  multiline\n                  size=\"small\"\n                  value={clinicalHistory}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    if (value.length <= 255) {\n                      setClinicalHistory(value);\n                    }\n                  }}\n                  error={clinicalHistory !== undefined && clinicalHistory.length > 255}\n                  helperText={\n                    clinicalHistory !== undefined && clinicalHistory.length > 255\n                      ? 'Clinical history must be 255 characters or less'\n                      : `${clinicalHistory?.length || 0}/255 characters`\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  sx={{ fontSize: '14px' }}\n                  control={<Switch checked={stat} onChange={() => setStat(!stat)} />}\n                  label={<Typography variant=\"body2\">STAT</Typography>}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  variant=\"outlined\"\n                  sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n                  onClick={() => {\n                    navigate(`/in-person/${appointment?.id}/radiology`);\n                  }}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item xs={6} display=\"flex\" justifyContent=\"flex-end\">\n                <LoadingButton\n                  loading={submitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                  sx={{ borderRadius: '50px', textTransform: 'none', fontWeight: 600 }}\n                >\n                  Order\n                </LoadingButton>\n              </Grid>\n              {error &&\n                error.length > 0 &&\n                error.map((msg, idx) => (\n                  <Grid item xs={12} sx={{ textAlign: 'right', paddingTop: 1 }} key={idx}>\n                    <Typography sx={{ color: theme.palette.error.main }}>\n                      {typeof msg === 'string' ? msg : JSON.stringify(msg, null, 2)}\n                    </Typography>\n                  </Grid>\n                ))}\n            </Grid>\n          </Paper>\n        </form>\n      </Stack>\n    </WithRadiologyBreadcrumbs>\n  );\n};\n"]}