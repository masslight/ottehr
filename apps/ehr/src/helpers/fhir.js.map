{"version":3,"file":"fhir.js","sourceRoot":"","sources":["fhir.ts"],"names":[],"mappings":";;AAUA,wCAWC;AAXD,SAAgB,cAAc,CAAyB,KAA0B;IACvE,IAAA,UAAU,GAAoC,KAAK,WAAzC,EAAE,YAAY,GAAsB,KAAK,aAA3B,EAAE,eAAe,GAAK,KAAK,gBAAV,CAAW;IAC5D,OAAO;QACL,MAAM,EAAE,OAAO;QACf,GAAG,EAAE,WAAI,YAAY,cAAI,UAAU,CAAE;QACrC,QAAQ,EAAE;YACR,YAAY,EAAE,QAAQ;YACtB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACzE,WAAW,EAAE,6BAA6B;SAC3C;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { BatchInputRequest } from '@oystehr/sdk';\nimport { Operation } from 'fast-json-patch';\nimport { FhirResource } from 'fhir/r4b';\n\nexport interface GetPatchBinaryInput {\n  resourceId: string;\n  resourceType: string;\n  patchOperations: Operation[];\n}\n\nexport function getPatchBinary<F extends FhirResource>(input: GetPatchBinaryInput): BatchInputRequest<F> {\n  const { resourceId, resourceType, patchOperations } = input;\n  return {\n    method: 'PATCH',\n    url: `/${resourceType}/${resourceId}`,\n    resource: {\n      resourceType: 'Binary',\n      data: btoa(unescape(encodeURIComponent(JSON.stringify(patchOperations)))),\n      contentType: 'application/json-patch+json',\n    },\n  };\n}\n"]}