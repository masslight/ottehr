{"version":3,"file":"inPersonVisitStatusUtils.js","sourceRoot":"","sources":["inPersonVisitStatusUtils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,kCAAuD;AAEhD,IAAM,+BAA+B,GAAG,UAC7C,WAA2C,EAC3C,OAAiB;;;;;gBAET,WAAW,GAA0B,WAAW,YAArC,EAAE,IAAI,GAAoB,WAAW,KAA/B,EAAE,aAAa,GAAK,WAAW,cAAhB,CAAiB;gBACzD,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;gBACzE,CAAC;gBACD,IAAI,CAAC,OAAO,EAAE,CAAC;oBACb,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;gBAC3F,CAAC;gBACD,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;gBACjE,CAAC;;;;gBAEC,qBAAM,IAAA,+BAAyB,EAAC,OAAO,EAAE;wBACvC,WAAW,aAAA;wBACX,IAAI,MAAA;wBACJ,aAAa,eAAA;qBACd,CAAC,EAAA;;gBAJF,SAIE,CAAC;;;;gBAEH,MAAM,IAAI,KAAK,CAAC,OAAK,CAAC,OAAO,CAAC,CAAC;;;;KAElC,CAAC;AAvBW,QAAA,+BAA+B,mCAuB1C","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { ChangeInPersonVisitStatusInput } from 'utils';\nimport { changeInPersonVisitStatus } from '../api/api';\n\nexport const handleChangeInPersonVisitStatus = async (\n  zambdaInput: ChangeInPersonVisitStatusInput,\n  oystehr?: Oystehr\n): Promise<void> => {\n  const { encounterId, user, updatedStatus } = zambdaInput;\n  if (!encounterId) {\n    throw new Error('Encounter ID is required to change the visit status');\n  }\n  if (!oystehr) {\n    throw new Error('Oystehr Zambda client is not available when changing the visit status');\n  }\n  if (!user) {\n    throw new Error('User is required to change the visit status');\n  }\n  try {\n    await changeInPersonVisitStatus(oystehr, {\n      encounterId,\n      user,\n      updatedStatus,\n    });\n  } catch (error: any) {\n    throw new Error(error.message);\n  }\n};\n"]}