{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { Message } from '@twilio/conversations';\nimport { Operation } from 'fast-json-patch';\nimport { Appointment, Encounter, Location, Resource } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { ApptTab } from 'src/components/AppointmentTabs';\nimport {\n  getAppointmentMetaTagOpForStatusUpdate,\n  getEncounterStatusHistoryUpdateOp,\n  getPatchBinary,\n  InPersonAppointmentInformation,\n  OrdersForTrackingBoardRow,\n  PROJECT_NAME,\n} from 'utils';\nimport { EvolveUser } from '../hooks/useEvolveUser';\nimport { getCriticalUpdateTagOp } from './activityLogsUtils';\nimport { formatDateUsingSlashes, getTimezone } from './formatDateTime';\n\nexport const classifyAppointments = (appointments: InPersonAppointmentInformation[]): Map<any, any> => {\n  const statusCounts = new Map();\n\n  appointments.forEach((appointment) => {\n    const { status } = appointment;\n    statusCounts.set(status, (statusCounts.get(status) || 0) + 1);\n  });\n\n  return statusCounts;\n};\n\nexport const messageIsFromPatient = (message: Message): boolean => {\n  return message.author?.startsWith('+') ?? false;\n};\n\nexport const checkInPatient = async (\n  oystehr: Oystehr,\n  appointmentId: string,\n  encounterId: string,\n  user: EvolveUser | undefined\n): Promise<void> => {\n  const appointmentToUpdate = await oystehr.fhir.get<Appointment>({\n    resourceType: 'Appointment',\n    id: appointmentId,\n  });\n  const encounterToUpdate = await oystehr.fhir.get<Encounter>({\n    resourceType: 'Encounter',\n    id: encounterId,\n  });\n  const checkedInBy = `Staff ${user?.email ? user.email : `(${user?.id})`}`;\n  const metaPatchOperations = getAppointmentMetaTagOpForStatusUpdate(appointmentToUpdate, 'arrived', {\n    updatedByOverride: checkedInBy,\n  });\n\n  const encounterStatusHistoryUpdate: Operation = getEncounterStatusHistoryUpdateOp(encounterToUpdate, 'arrived');\n\n  const patchOp: Operation = {\n    op: 'replace',\n    path: '/status',\n    value: 'arrived',\n  };\n\n  await oystehr.fhir.batch({\n    requests: [\n      getPatchBinary({\n        resourceId: appointmentId,\n        resourceType: 'Appointment',\n        patchOperations: [patchOp, ...metaPatchOperations],\n      }),\n      getPatchBinary({\n        resourceId: encounterId,\n        resourceType: 'Encounter',\n        patchOperations: [patchOp, encounterStatusHistoryUpdate],\n      }),\n    ],\n  });\n};\n\nexport interface LocationOptionConfig {\n  label: string;\n  value: string;\n}\n\nexport const sortLocationsByLabel = (locations: LocationOptionConfig[]): { label: string; value: string }[] => {\n  function compare(a: { label: string; value: string }, b: { label: string; value: string }): number {\n    const labelA = a.label.toUpperCase();\n    const labelB = b.label.toUpperCase();\n\n    if (labelA < labelB) {\n      return -1;\n    }\n    if (labelA > labelB) {\n      return 1;\n    }\n    return 0;\n  }\n\n  locations.sort(compare);\n\n  return locations;\n};\n\nexport const formatLastModifiedTag = (\n  field: string,\n  resource: Resource | undefined,\n  location: Location\n): string | undefined => {\n  if (!resource) return;\n  const codeString = resource?.meta?.tag?.find((tag) => tag.system === `staff-update-history-${field}`)?.code;\n  if (codeString) {\n    const locationTimeZone = getTimezone(location);\n    const codeJson = JSON.parse(codeString) as any;\n    const date = DateTime.fromISO(codeJson.lastModifiedDate).setZone(locationTimeZone);\n    const timeFormatted = date.toLocaleString(DateTime.TIME_SIMPLE);\n    const dateFormatted = formatDateUsingSlashes(date.toISO() || '');\n    const timezone = date.offsetNameShort;\n    return `${dateFormatted} ${timeFormatted} ${timezone ?? ''} By ${codeJson.lastModifiedBy}`;\n  }\n  return;\n};\n\nexport const patchAppointmentComment = async (\n  appointment: InPersonAppointmentInformation | Appointment,\n  comment: string,\n  user: EvolveUser | undefined,\n  oystehr: Oystehr\n): Promise<Appointment | undefined> => {\n  if (!appointment || !appointment.id) {\n    return;\n  }\n\n  let patchOp: 'replace' | 'add' | 'remove';\n  const patchOperations = [];\n  if (comment !== '') {\n    patchOp = appointment.comment ? 'replace' : 'add';\n    patchOperations.push({ op: patchOp, path: '/comment', value: comment });\n  } else {\n    patchOp = 'remove';\n    patchOperations.push({ op: patchOp, path: '/comment' });\n  }\n  const fhirAppointment = await oystehr.fhir.get<Appointment>({\n    resourceType: 'Appointment',\n    id: appointment.id,\n  });\n  const updateTag = getCriticalUpdateTagOp(fhirAppointment, user?.name || `${PROJECT_NAME} Team Member (${user?.id})`);\n  patchOperations.push(updateTag);\n  console.log('patchOperations', patchOperations);\n  const updatedAppointment = await oystehr.fhir.patch<Appointment>({\n    resourceType: 'Appointment',\n    id: appointment.id,\n    operations: patchOperations,\n  });\n  return updatedAppointment;\n};\n\n// there are two different tooltips that are show on the tracking board depending which tab/section you are on\n// 1. visit components on prebooked, in-office/waiting and cancelled\n// 2. orders on in-office/in-exam and completed\nexport const displayOrdersToolTip = (appointment: InPersonAppointmentInformation, tab: ApptTab): boolean => {\n  let display = false;\n  if (tab === ApptTab.completed) {\n    display = true;\n  } else if (tab === ApptTab['in-office'] && appointment.status !== 'arrived' && appointment.status !== 'ready') {\n    // in exam\n    display = true;\n  }\n  return display;\n};\n\nexport const hasAtLeastOneOrder = (orders: OrdersForTrackingBoardRow): boolean => {\n  return Object.values(orders).some((orderList) => Array.isArray(orderList) && orderList.length > 0);\n};\n"]}