{"version":3,"file":"useAuthToken.js","sourceRoot":"","sources":["useAuthToken.tsx"],"names":[],"mappings":";;AAKA,oCAgBC;AArBD,kDAA8C;AAC9C,+BAA4C;AAE5C,IAAI,MAAM,GAAuB,SAAS,CAAC;AAE3C,SAAgB,YAAY;IACpB,IAAA,KAA8C,IAAA,sBAAQ,GAAE,EAAtD,eAAe,qBAAA,EAAE,sBAAsB,4BAAe,CAAC;IACzD,IAAA,KAAoB,IAAA,gBAAQ,EAAqB,MAAM,CAAC,EAAvD,KAAK,QAAA,EAAE,QAAQ,QAAwC,CAAC;IAE/D,IAAA,iBAAS,EAAC;QACR,IAAI,eAAe,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/B,sBAAsB,EAAE;iBACrB,IAAI,CAAC,UAAC,QAAQ;gBACb,MAAM,GAAG,QAAQ,CAAC;gBAClB,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrB,CAAC,CAAC;iBACD,KAAK,CAAC,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAA1C,CAA0C,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC,EAAE,CAAC,eAAe,EAAE,sBAAsB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAExD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport { useEffect, useState } from 'react';\n\nlet _token: string | undefined = undefined;\n\nexport function useAuthToken(): string | undefined {\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [token, setToken] = useState<string | undefined>(_token);\n\n  useEffect(() => {\n    if (isAuthenticated && !_token) {\n      getAccessTokenSilently()\n        .then((newToken) => {\n          _token = newToken;\n          setToken(newToken);\n        })\n        .catch(() => console.error('Unable to get auth0 token'));\n    }\n  }, [isAuthenticated, getAccessTokenSilently, setToken]);\n\n  return token;\n}\n"]}