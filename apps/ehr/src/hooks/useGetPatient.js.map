{"version":3,"file":"useGetPatient.js","sourceRoot":"","sources":["useGetPatient.ts"],"names":[],"mappings":"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","sourcesContent":["import { BundleEntry } from '@oystehr/sdk';\nimport {\n  Appointment,\n  Bundle,\n  Encounter,\n  EncounterStatusHistory,\n  FhirResource,\n  Location,\n  Organization,\n  Patient,\n  Questionnaire,\n  QuestionnaireResponse,\n  RelatedPerson,\n} from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { useEffect, useState } from 'react';\nimport { useMutation, useQuery, UseQueryResult } from 'react-query';\nimport { getVisitTypeLabelForAppointment } from 'src/types/types';\nimport {\n  getFirstName,\n  getLastName,\n  getVisitStatusHistory,\n  getVisitTotalTime,\n  isAppointmentVirtual,\n  ORG_TYPE_CODE_SYSTEM,\n  ORG_TYPE_PAYER_CODE,\n  OTTEHR_MODULE,\n  PromiseReturnType,\n  RemoveCoverageZambdaInput,\n  ServiceMode,\n} from 'utils';\nimport { getTimezone } from '../helpers/formatDateTime';\nimport { getPatientNameSearchParams } from '../helpers/patientSearch';\nimport { OystehrTelemedAPIClient } from '../telemed/data';\nimport { useOystehrAPIClient } from '../telemed/hooks/useOystehrAPIClient';\nimport { useApiClients } from './useAppClients';\n\nconst updateQRUrl = import.meta.env.VITE_APP_EHR_ACCOUNT_UPDATE_FORM;\n\nconst getTelemedLength = (history?: EncounterStatusHistory[]): number => {\n  const value = history?.find((item) => item.status === 'in-progress');\n  if (!value || !value.period.start) {\n    return 0;\n  }\n\n  const { start, end } = value.period;\n  const duration = DateTime.fromISO(start).diff(end ? DateTime.fromISO(end) : DateTime.now(), ['minute']);\n\n  return Math.abs(duration.minutes);\n};\n\nexport type AppointmentHistoryRow = {\n  id: string | undefined;\n  typeLabel: string;\n  serviceMode: ServiceMode;\n  office: string | undefined;\n  officeTimeZone: string | undefined;\n  dateTime: string | undefined;\n  length: number;\n  appointment: Appointment;\n  encounter?: Encounter;\n};\n\nexport const useGetPatient = (\n  id?: string\n): {\n  loading: boolean;\n  otherPatientsWithSameName: boolean;\n  setOtherPatientsWithSameName: (value: boolean) => void;\n  patient?: Patient;\n  setPatient: (patient: Patient) => void;\n  appointments?: AppointmentHistoryRow[];\n  relatedPerson?: RelatedPerson;\n} => {\n  const { oystehr } = useApiClients();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [otherPatientsWithSameName, setOtherPatientsWithSameName] = useState<boolean>(false);\n  const [patient, setPatient] = useState<Patient>();\n  const [appointments, setAppointments] = useState<AppointmentHistoryRow[]>();\n  const [relatedPerson, setRelatedPerson] = useState<RelatedPerson>();\n\n  const { data: patientResources } = useQuery({\n    queryKey: ['useGetPatientPatientResources', id],\n    queryFn: () =>\n      oystehr && id\n        ? oystehr.fhir\n            .search<FhirResource>({\n              resourceType: 'Patient',\n              params: [\n                { name: '_id', value: id },\n                {\n                  name: '_revinclude',\n                  value: 'Appointment:patient',\n                },\n                {\n                  name: '_include:iterate',\n                  value: 'Appointment:location',\n                },\n                {\n                  name: '_revinclude:iterate',\n                  value: 'RelatedPerson:patient',\n                },\n                {\n                  name: '_revinclude:iterate',\n                  value: 'Encounter:appointment',\n                },\n              ],\n            })\n            .then((bundle) => bundle.unbundle())\n        : undefined,\n    cacheTime: 10000,\n    enabled: oystehr != null && id != null,\n  });\n\n  const patientResource: Patient | undefined = patientResources?.find(\n    (resource) => resource.resourceType === 'Patient'\n  ) as Patient;\n\n  const { data: otherPatientsWithSameNameResources } = useQuery({\n    queryKey: ['otherPatientsWithSameNameResources', id],\n    queryFn: () =>\n      oystehr && patientResource\n        ? oystehr.fhir\n            .search<FhirResource>({\n              resourceType: 'Patient',\n              params: getPatientNameSearchParams({\n                firstLast: { first: getFirstName(patientResource), last: getLastName(patientResource) },\n                narrowByRelatedPersonAndAppointment: false,\n                maxResultOverride: 2,\n              }),\n            })\n            .then((bundle) => bundle.unbundle())\n        : undefined,\n    cacheTime: 10000,\n    enabled: oystehr != null && patientResource != null,\n  });\n\n  useEffect(() => {\n    async function getPatient(): Promise<void> {\n      if (!oystehr) {\n        throw new Error('oystehr is not defined');\n      }\n\n      setLoading(true);\n\n      if (!patientResources || !otherPatientsWithSameNameResources) {\n        return;\n      }\n\n      const patientTemp: Patient = patientResources.find((resource) => resource.resourceType === 'Patient') as Patient;\n      const appointmentsTemp: Appointment[] = patientResources.filter(\n        (resource) =>\n          resource.resourceType === 'Appointment' &&\n          resource.meta?.tag?.find((tag) => tag.code === OTTEHR_MODULE.IP || tag.code === OTTEHR_MODULE.TM) // this is unnecessary now; there are no BH patients to worry about\n      ) as Appointment[];\n      const locations: Location[] = patientResources.filter(\n        (resource) => resource.resourceType === 'Location'\n      ) as Location[];\n      const relatedPersonTemp: RelatedPerson = patientResources.find(\n        (resource) => resource.resourceType === 'RelatedPerson'\n      ) as RelatedPerson;\n      const encounters: Encounter[] = patientResources.filter(\n        (resource) => resource.resourceType === 'Encounter'\n      ) as Encounter[];\n\n      appointmentsTemp.sort((a, b) => {\n        const createdA = DateTime.fromISO(a.start ?? '');\n        const createdB = DateTime.fromISO(b.start ?? '');\n        return createdB.diff(createdA).milliseconds;\n      });\n\n      if (otherPatientsWithSameNameResources.length > 1) {\n        setOtherPatientsWithSameName(true);\n      } else {\n        setOtherPatientsWithSameName(false);\n      }\n\n      const appointmentRows: AppointmentHistoryRow[] = appointmentsTemp.map((appointment: Appointment) => {\n        const appointmentLocationID = appointment.participant\n          .find((participant) => participant.actor?.reference?.startsWith('Location/'))\n          ?.actor?.reference?.replace('Location/', '');\n        const location = locations.find((location) => location.id === appointmentLocationID);\n        const encounter = appointment.id\n          ? encounters.find((encounter) => encounter.appointment?.[0]?.reference?.endsWith(appointment.id!))\n          : undefined;\n        const typeLabel = getVisitTypeLabelForAppointment(appointment);\n\n        const serviceMode = isAppointmentVirtual(appointment) ? ServiceMode.virtual : ServiceMode['in-person'];\n\n        return {\n          id: appointment.id,\n          typeLabel,\n          office:\n            location?.address?.state &&\n            location?.name &&\n            `${location?.address?.state?.toUpperCase()} - ${location?.name}`,\n          officeTimeZone: getTimezone(location),\n          dateTime: appointment.start,\n          serviceMode,\n          length:\n            serviceMode === ServiceMode.virtual\n              ? getTelemedLength(encounter?.statusHistory)\n              : (encounter && getVisitTotalTime(appointment, getVisitStatusHistory(encounter), DateTime.now())) || 0,\n          appointment,\n          encounter,\n        };\n      });\n\n      setAppointments(appointmentRows);\n      setPatient(patientTemp);\n      setRelatedPerson(relatedPersonTemp);\n      setLoading(false);\n    }\n\n    getPatient().catch((error) => console.log(error));\n  }, [oystehr, patientResources, otherPatientsWithSameNameResources]);\n\n  return {\n    loading,\n    appointments,\n    otherPatientsWithSameName,\n    setOtherPatientsWithSameName,\n    patient,\n    relatedPerson,\n    setPatient,\n  };\n};\n\nexport const useGetPatientAccount = (\n  {\n    apiClient,\n    patientId,\n  }: {\n    apiClient: OystehrTelemedAPIClient | null;\n    patientId: string | null;\n  },\n  onSuccess?: (data: PromiseReturnType<ReturnType<OystehrTelemedAPIClient['getPatientAccount']>>) => void\n): UseQueryResult<PromiseReturnType<ReturnType<OystehrTelemedAPIClient['getPatientAccount']>>, unknown> => {\n  return useQuery(\n    ['patient-account-get', { apiClient, patientId }],\n    () => {\n      return apiClient!.getPatientAccount({\n        patientId: patientId!,\n      });\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error fetching patient account: ', err);\n      },\n      enabled: apiClient != null && patientId != null,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useRemovePatientCoverage = () => {\n  const apiClient = useOystehrAPIClient();\n\n  return useMutation(['remove-patient-coverage'], async (input: RemoveCoverageZambdaInput): Promise<void> => {\n    try {\n      if (!apiClient || !input) return;\n      await apiClient.removePatientCoverage(input);\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  });\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useUpdatePatientAccount = (onSuccess?: () => void) => {\n  const apiClient = useOystehrAPIClient();\n\n  return useMutation(\n    ['update-patient-account'],\n    async (questionnaireResponse: QuestionnaireResponse): Promise<void> => {\n      try {\n        if (!apiClient || !questionnaireResponse) return;\n        await apiClient.updatePatientAccount({\n          questionnaireResponse,\n        });\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    },\n    {\n      onSuccess: () => {\n        enqueueSnackbar('Patient information updated successfully', {\n          variant: 'success',\n        });\n        if (onSuccess) {\n          onSuccess();\n        }\n      },\n      onError: () => {\n        enqueueSnackbar('Save operation failed. The server encountered an error while processing your request.', {\n          variant: 'error',\n        });\n      },\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetInsurancePlans = (onSuccess: (data: Bundle<Organization>) => void) => {\n  const { oystehr } = useApiClients();\n\n  const fetchAllInsurancePlans = async (): Promise<Bundle<Organization>> => {\n    if (!oystehr) {\n      throw new Error('FHIR client not defined');\n    }\n\n    const searchParams = [\n      { name: 'type', value: `${ORG_TYPE_CODE_SYSTEM}|${ORG_TYPE_PAYER_CODE}` },\n      { name: 'active:not', value: 'false' },\n      { name: '_count', value: '1000' },\n    ];\n\n    let offset = 0;\n    let allEntries: BundleEntry<Organization>[] = [];\n\n    let bundle = await oystehr.fhir.search<Organization>({\n      resourceType: 'Organization',\n      params: [...searchParams, { name: '_offset', value: offset }],\n    });\n\n    allEntries = allEntries.concat(bundle.entry || []);\n    const serverTotal = bundle.total;\n\n    while (bundle.link?.find((link) => link.relation === 'next')) {\n      offset += 1000;\n\n      bundle = await oystehr.fhir.search<Organization>({\n        resourceType: 'Organization',\n        params: [...searchParams.filter((param) => param.name !== '_offset'), { name: '_offset', value: offset }],\n      });\n\n      allEntries = allEntries.concat(bundle.entry || []);\n    }\n\n    return {\n      ...bundle,\n      entry: allEntries,\n      total: serverTotal !== undefined ? serverTotal : allEntries.length,\n    };\n  };\n\n  return useQuery(['insurance-plans'], fetchAllInsurancePlans, {\n    onSuccess,\n    onError: (err) => {\n      console.error('Error during fetching insurance plans: ', err);\n    },\n  });\n};\n\nexport const useGetPatientDetailsUpdateForm = (\n  onSuccess?: (data: Questionnaire) => void\n): UseQueryResult<Questionnaire, unknown> => {\n  const { oystehr } = useApiClients();\n\n  const [url, version] = updateQRUrl.split('|');\n\n  return useQuery(\n    ['patient-update-form'],\n    async () => {\n      if (oystehr) {\n        const searchResults = (\n          await oystehr.fhir.search<Questionnaire>({\n            resourceType: 'Questionnaire',\n            params: [\n              {\n                name: 'url',\n                value: url,\n              },\n              {\n                name: 'version',\n                value: version,\n              },\n            ],\n          })\n        ).unbundle();\n        const form = searchResults[0];\n        if (!form) {\n          throw new Error('Form not found');\n        }\n        return form;\n      } else {\n        throw new Error('FHIR client not defined');\n      }\n    },\n    {\n      enabled: Boolean(oystehr) && Boolean(updateQRUrl),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during patient update form: ', err);\n      },\n    }\n  );\n};\n"]}