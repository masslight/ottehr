{"version":3,"file":"useGetPaymentMethods.js","sourceRoot":"","sources":["useGetPaymentMethods.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAuC;AAGvC,iDAAgD;AAOhD,4EAA4E;AACrE,IAAM,oBAAoB,GAAG,UAAC,KAA8B;IACzD,IAAA,aAAa,GAAK,IAAA,6BAAa,GAAE,cAApB,CAAqB;IAClC,IAAA,oBAAoB,GAAgC,KAAK,qBAArC,EAAE,cAAc,GAAgB,KAAK,eAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAW;IAElE,OAAO,IAAA,sBAAQ,EACb,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,EACzC;;;;;yBACM,CAAA,aAAa,IAAI,oBAAoB,CAAA,EAArC,wBAAqC;oBACxB,qBAAM,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;4BAChD,EAAE,EAAE,sBAAsB;4BAC1B,oBAAoB,sBAAA;yBACrB,CAAC,EAAA;;oBAHI,MAAM,GAAG,SAGb;oBACF,sBAAO,MAAM,CAAC,MAAM,EAAC;wBAGvB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;;;SACzE,EACD;QACE,OAAO,EAAE,OAAO,CAAC,oBAAoB,CAAC,IAAI,cAAc,IAAI,OAAO,CAAC,aAAa,CAAC;QAClF,SAAS,WAAA;QACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC;QACpE,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC;AAzBW,QAAA,oBAAoB,wBAyB/B","sourcesContent":["import { useQuery } from 'react-query';\nimport { OystehrAPIClient } from 'ui-components';\nimport { PromiseReturnType } from 'utils';\nimport { useApiClients } from './useAppClients';\n\ninterface GetPaymentMethodsParams {\n  setupCompleted: boolean;\n  beneficiaryPatientId: string | undefined;\n  onSuccess?: (data: PromiseReturnType<ReturnType<OystehrAPIClient['getPaymentMethods']>>) => void;\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetPaymentMethods = (input: GetPaymentMethodsParams) => {\n  const { oystehrZambda } = useApiClients();\n  const { beneficiaryPatientId, setupCompleted, onSuccess } = input;\n\n  return useQuery(\n    ['payment-methods', beneficiaryPatientId],\n    async () => {\n      if (oystehrZambda && beneficiaryPatientId) {\n        const result = await oystehrZambda.zambda.execute({\n          id: 'payment-methods-list',\n          beneficiaryPatientId,\n        });\n        return result.output;\n      }\n\n      throw new Error('api client not defined or patient id is not provided');\n    },\n    {\n      enabled: Boolean(beneficiaryPatientId) && setupCompleted && Boolean(oystehrZambda),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get payment methods: ', err);\n      },\n    }\n  );\n};\n"]}