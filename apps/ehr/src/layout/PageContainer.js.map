{"version":3,"file":"PageContainer.js","sourceRoot":"","sources":["PageContainer.tsx"],"names":[],"mappings":";;AAiBA,gCAiCC;AAlDD,0CAAsD;AACtD,+BAA+C;AAC/C,0DAA+E;AAC/E,4DAAwE;AAEhE,IAAiC,sBAAsB,GAAK,MAAM,CAAC,IAAI,CAAC,GAAG,gCAApB,CAAqB;AACpF,IAAI,sBAAsB,IAAI,IAAI,EAAE,CAAC;IACnC,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;AACjD,CAAC;AASD,SAAwB,aAAa,CAAC,EAA+D;QAA7D,YAAY,kBAAA,EAAE,QAAQ,cAAA,EAAE,KAAK,WAAA,EAAE,QAAQ,cAAA;IACvE,IAAA,KAAgC,IAAA,gBAAQ,EAAC,IAAI,CAAC,EAA7C,WAAW,QAAA,EAAE,cAAc,QAAkB,CAAC;IAErD,IAAI,KAAK,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACtC,QAAQ,CAAC,KAAK,GAAG,UAAG,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,gBAAM,sBAAsB,SAAM,CAAC;IAC5F,CAAC;IAED,IAAM,SAAS,GAAG,CAChB,CAAC,oBAAS,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE,CAAC,CACtD;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC3E;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,qBAAU,CAAC,CACd,CACD;MAAA,CAAC,QAAQ,CACT;MAAA,CAAC,EAAE,CAAC,AAAD,EACH;MAAA,CAAC,4BAAc,CAAC,YAAY,CAAC,CAAC,+BAAiB,CAAC,CAC9C;qBAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CACzF;MAAA,EAAE,4BAAc,CAClB;IAAA,EAAE,oBAAS,CAAC,CACb,CAAC;IAEF,OAAO,CACL,EACE;MAAA,CAAC,YAAY,CAAC,CAAC,CAAC,CACd,CAAC,iBAAO,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAC5F;UAAA,CAAC,SAAS,CACZ;QAAA,EAAE,iBAAO,CAAC,CACX,CAAC,CAAC,CAAC,CACF,SAAS,CACV,CACH;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC","sourcesContent":["import { Container, Typography } from '@mui/material';\nimport { ReactElement, useState } from 'react';\nimport { CPT_TOOLTIP_PROPS, TooltipWrapper } from 'src/components/WithTooltip';\nimport { Sidebar, SidebarItem } from '../components/navigation/Sidebar';\n\nconst { VITE_APP_ORGANIZATION_NAME_LONG: ORGANIZATION_NAME_LONG } = import.meta.env;\nif (ORGANIZATION_NAME_LONG == null) {\n  throw new Error('Could not load env variable');\n}\n\ninterface PageContainerProps {\n  sidebarItems?: SidebarItem[][];\n  tabTitle?: string;\n  title?: string;\n  children: ReactElement;\n}\n\nexport default function PageContainer({ sidebarItems, tabTitle, title, children }: PageContainerProps): ReactElement {\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  if (title != null || tabTitle != null) {\n    document.title = `${tabTitle != null ? tabTitle : title} | ${ORGANIZATION_NAME_LONG} EHR`;\n  }\n\n  const container = (\n    <Container sx={{ my: 5, maxWidth: '1600px !important' }}>\n      {title && (\n        <Typography variant=\"h3\" color=\"primary.dark\" sx={{ fontWeight: 600, mb: 4 }}>\n          {title}\n        </Typography>\n      )}\n      {children}\n      <br />\n      <TooltipWrapper tooltipProps={CPT_TOOLTIP_PROPS}>\n        Environment: {import.meta.env.VITE_APP_ENV}, Version: {import.meta.env.VITE_APP_VERSION}\n      </TooltipWrapper>\n    </Container>\n  );\n\n  return (\n    <>\n      {sidebarItems ? (\n        <Sidebar sidebarItems={sidebarItems} sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen}>\n          {container}\n        </Sidebar>\n      ) : (\n        container\n      )}\n    </>\n  );\n}\n"]}