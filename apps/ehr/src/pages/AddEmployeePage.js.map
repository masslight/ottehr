{"version":3,"file":"AddEmployeePage.js","sourceRoot":"","sources":["AddEmployeePage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { Box, Paper, TextField, Typography } from '@mui/material';\nimport { ReactElement, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createUser } from '../api/api';\nimport CustomBreadcrumbs from '../components/CustomBreadcrumbs';\nimport { useApiClients } from '../hooks/useAppClients';\nimport PageContainer from '../layout/PageContainer';\n\nexport default function AddEmployeePage(): ReactElement {\n  const { oystehrZambda } = useApiClients();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [firstName, setFirstName] = useState<string | undefined>(undefined);\n  const [lastName, setLastName] = useState<string | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n  const applicationID = import.meta.env.VITE_APP_OYSTEHR_APPLICATION_ID;\n\n  async function createEmployee(event: any): Promise<void> {\n    event.preventDefault();\n    if (!oystehrZambda || !email || !firstName || !lastName) {\n      throw new Error('oystehrZambda, email, firstName, or lastName is not set');\n    }\n    setLoading(true);\n    try {\n      const createUserResponse = await createUser(oystehrZambda, {\n        email,\n        firstName,\n        lastName,\n        applicationID,\n      });\n      setLoading(false);\n      navigate(`/employee/${createUserResponse.userID}`);\n    } catch (error) {\n      setLoading(false);\n      console.error('error creating employee', error);\n      throw error;\n    }\n  }\n\n  return (\n    <PageContainer>\n      <>\n        <Box marginX={12}>\n          {/* Breadcrumbs */}\n          <CustomBreadcrumbs\n            chain={[\n              { link: '/employees', children: 'Employees' },\n              { link: '#', children: 'Add user' },\n            ]}\n          />\n          <Paper sx={{ padding: 2 }}>\n            {/* Page title */}\n            <Typography variant=\"h3\" color=\"primary.dark\" marginBottom={1}>\n              Add user\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: 2 }}>\n              This will immediately give the user the Staff role.\n            </Typography>\n            <form onSubmit={createEmployee}>\n              <TextField\n                label=\"Email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n                sx={{\n                  marginBottom: 3,\n                  width: 300,\n                }}\n              />\n              <br />\n              <TextField\n                label=\"First name\"\n                required\n                value={firstName}\n                onChange={(event) => setFirstName(event.target.value)}\n                sx={{\n                  marginBottom: 3,\n                  width: 300,\n                }}\n              />\n              <br />\n              <TextField\n                label=\"Last name\"\n                required\n                value={lastName}\n                onChange={(event) => setLastName(event.target.value)}\n                sx={{\n                  marginBottom: 3,\n                  width: 300,\n                }}\n              />\n              <br />\n              <LoadingButton type=\"submit\" loading={loading} variant=\"contained\" sx={{ marginTop: 2 }}>\n                Save\n              </LoadingButton>\n            </form>\n          </Paper>\n        </Box>\n      </>\n    </PageContainer>\n  );\n}\n"]}