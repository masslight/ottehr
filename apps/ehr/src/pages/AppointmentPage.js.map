{"version":3,"file":"AppointmentPage.js","sourceRoot":"","sources":["AppointmentPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport { otherColors } from '@ehrTheme/colors';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport ContentPasteOffIcon from '@mui/icons-material/ContentPasteOff';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Button,\n  capitalize,\n  CircularProgress,\n  FormControl,\n  Grid,\n  Link as MUILink,\n  Paper,\n  Skeleton,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport Alert, { AlertColor } from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport Oystehr from '@oystehr/sdk';\nimport { Operation } from 'fast-json-patch';\nimport {\n  Appointment,\n  Bundle,\n  BundleEntry,\n  DocumentReference,\n  Encounter,\n  FhirResource,\n  Flag,\n  Location,\n  Patient,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  RelatedPerson,\n} from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { ReactElement, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { generatePaperworkPdf } from 'src/api/api';\nimport { useGetPatientDocs } from 'src/hooks/useGetPatientDocs';\nimport {\n  CONSENT_CODE,\n  FhirAppointmentType,\n  flattenItems,\n  formatPhoneNumber,\n  getFullName,\n  getPatchOperationForNewMetaTag,\n  getUnconfirmedDOBForAppointment,\n  getUnconfirmedDOBIdx,\n  getVisitStatus,\n  INSURANCE_CARD_CODE,\n  isNonPaperworkQuestionnaireResponse,\n  PAPERWORK_PDF_ATTACHMENT_TITLE,\n  PHOTO_ID_CARD_CODE,\n  PRIVACY_POLICY_CODE,\n  VisitStatusLabel,\n} from 'utils';\nimport AppointmentNotesHistory from '../components/AppointmentNotesHistory';\nimport { getAppointmentStatusChip } from '../components/AppointmentTableRow';\nimport CardGridItem from '../components/CardGridItem';\nimport CustomBreadcrumbs from '../components/CustomBreadcrumbs';\nimport DateSearch from '../components/DateSearch';\nimport {\n  ActivityLogDialog,\n  CancellationReasonDialog,\n  CustomDialog,\n  EditPatientInfoDialog,\n  ReportIssueDialog,\n} from '../components/dialogs';\nimport ImageCarousel, { ImageCarouselObject } from '../components/ImageCarousel';\nimport PaperworkFlagIndicator from '../components/PaperworkFlagIndicator';\nimport PatientInformation, { IconProps } from '../components/PatientInformation';\nimport PatientPaymentList from '../components/PatientPaymentsList';\nimport { PriorityIconWithBorder } from '../components/PriorityIconWithBorder';\nimport { HOP_QUEUE_URI } from '../constants';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport { ChangeStatusDropdown } from '../features/css-module/components/ChangeStatusDropdown';\nimport { formatLastModifiedTag } from '../helpers';\nimport {\n  ActivityLogData,\n  ActivityName,\n  cleanUpStaffHistoryTag,\n  formatActivityLogs,\n  formatNotesHistory,\n  formatPaperworkStartedLog,\n  getAppointmentAndPatientHistory,\n  getCriticalUpdateTagOp,\n  NoteHistory,\n  sortLogs,\n} from '../helpers/activityLogsUtils';\nimport { getPatchBinary } from '../helpers/fhir';\nimport { getPresignedFileUrl } from '../helpers/files.helper';\nimport { formatDateUsingSlashes, getTimezone } from '../helpers/formatDateTime';\nimport { useApiClients } from '../hooks/useAppClients';\nimport useEvolveUser from '../hooks/useEvolveUser';\nimport PageContainer from '../layout/PageContainer';\nimport { PencilIconButton } from '../telemed';\nimport { appointmentTypeLabels, DocumentInfo, DocumentType } from '../types/types';\n\ninterface Documents {\n  photoIdCards: DocumentInfo[];\n  insuranceCards: DocumentInfo[];\n  insuranceCardsSecondary: DocumentInfo[];\n  fullCardPdfs: DocumentInfo[];\n  consentPdfUrl: string | undefined;\n  consentPdfUrlOld: string | undefined;\n  hipaaPdfUrl: string | undefined;\n}\n\nfunction getMinutesSinceLastActive(lastActive: string): number {\n  return DateTime.now().toUTC().diff(DateTime.fromISO(lastActive).toUTC()).as('minutes');\n}\n\nfunction compareCards(\n  cardBackType: DocumentType.PhotoIdBack | DocumentType.InsuranceBack | DocumentType.InsuranceBackSecondary\n) {\n  return (a: DocumentInfo, b: DocumentInfo) => {\n    if (a && b) {\n      return a.type === cardBackType ? 1 : -1;\n    }\n    return 0;\n  };\n}\n\nconst getAnswerStringFor = (\n  linkId: string,\n  flattenedItems: QuestionnaireResponseItem[] | undefined\n): string | undefined => {\n  const answer = flattenedItems?.find((response: QuestionnaireResponseItem) => response.linkId === linkId)?.answer?.[0]\n    ?.valueString;\n\n  return answer;\n};\n\nconst getValueReferenceDisplay = (\n  linkId: string,\n  flattenedItems: QuestionnaireResponseItem[] | undefined\n): string | undefined => {\n  const answer = flattenedItems?.find((response: QuestionnaireResponseItem) => response.linkId === linkId)?.answer?.[0]\n    ?.valueReference?.display;\n\n  return answer;\n};\n\nconst getAnswerBooleanFor = (\n  linkId: string,\n  flattenedItems: QuestionnaireResponseItem[] | undefined\n): boolean | undefined => {\n  const answer = flattenedItems?.find((response: QuestionnaireResponseItem) => response.linkId === linkId)?.answer?.[0]\n    ?.valueBoolean;\n\n  return answer;\n};\n\nconst LAST_ACTIVE_THRESHOLD = 2; // minutes\n\nconst patientPronounsNotListedValues = ['My pronounces are not listed', 'My pronouns are not listed'];\nconst hipaaPatientDetailsKey = 'I have reviewed and accept HIPAA Acknowledgement';\nconst consentToTreatPatientDetailsKey =\n  'I have reviewed and accept Consent to Treat, Guarantee of Payment & Card on File Agreement';\nconst consentToTreatPatientDetailsKeyOld = 'I have reviewed and accept Consent to Treat and Guarantee of Payment';\n\ntype AppointmentBundleTypes =\n  | Appointment\n  | Patient\n  | Location\n  | Encounter\n  | QuestionnaireResponse\n  | Flag\n  | RelatedPerson;\n\nexport default function AppointmentPage(): ReactElement {\n  // variables\n  const { id: appointmentID } = useParams();\n  const { oystehr } = useApiClients();\n  const { getAccessTokenSilently } = useAuth0();\n  const theme = useTheme();\n\n  // state variables\n  const [resourceBundle, setResourceBundle] = useState<AppointmentBundleTypes[] | undefined>(undefined);\n  const [patient, setPatient] = useState<Patient | undefined>(undefined);\n  const [appointment, setAppointment] = useState<Appointment | undefined>(undefined);\n  const [paperworkModifiedFlag, setPaperworkModifiedFlag] = useState<Flag | undefined>(undefined);\n  const [paperworkInProgressFlag, setPaperworkInProgressFlag] = useState<Flag | undefined>(undefined);\n  const [paperworkStartedFlag, setPaperworkStartedFlag] = useState<Flag | undefined>(undefined);\n  const [status, setStatus] = useState<VisitStatusLabel | undefined>(undefined);\n  const [errors, setErrors] = useState<{ editName?: boolean; editDOB?: boolean; hopError?: string }>({\n    editName: false,\n    editDOB: false,\n  });\n  const [toastMessage, setToastMessage] = React.useState<string | undefined>(undefined);\n  const [toastType, setToastType] = React.useState<AlertColor | undefined>(undefined);\n  const [snackbarOpen, setSnackbarOpen] = React.useState<boolean>(false);\n  const [paperworkPdfLoading, setPaperworkPdfLoading] = React.useState<boolean>(false);\n\n  // Update date of birth modal variables\n  const [confirmDOBModalOpen, setConfirmDOBModalOpen] = useState<boolean>(false);\n  const [DOBConfirmed, setDOBConfirmed] = useState<DateTime | null>(null);\n  const [updatingDOB, setUpdatingDOB] = useState<boolean>(false);\n  const [validDate, setValidDate] = useState<boolean>(true);\n\n  // Update patient name modal variables\n  const [updateNameModalOpen, setUpdateNameModalOpen] = useState<boolean>(false);\n  const [updatingName, setUpdatingName] = useState<boolean>(false);\n  const [patientFirstName, setPatientFirstName] = useState<string | undefined>(undefined);\n  const [patientMiddleName, setPatientMiddleName] = useState<string | undefined>(undefined);\n  const [patientLastName, setPatientLastName] = useState<string | undefined>(undefined);\n  const [patientSuffix, setPatientSuffix] = useState<string | undefined>(undefined);\n\n  // File variables\n  const [z3Documents, setZ3Documents] = useState<DocumentInfo[]>();\n  const [imagesLoading, setImagesLoading] = useState<boolean>(true);\n\n  const [cancelDialogOpen, setCancelDialogOpen] = useState<boolean>(false);\n  const [hopQueueDialogOpen, setHopQueueDialogOpen] = useState<boolean>(false);\n  const [hopLoading, setHopLoading] = useState<boolean>(false);\n  const [photoZoom, setPhotoZoom] = useState<boolean>(false);\n  const [zoomedIdx, setZoomedIdx] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [issueDialogOpen, setIssueDialogOpen] = useState<boolean>(false);\n  const [activityLogDialogOpen, setActivityLogDialogOpen] = useState<boolean>(false);\n  const [activityLogsLoading, setActivityLogsLoading] = useState<boolean>(true);\n  const [activityLogs, setActivityLogs] = useState<ActivityLogData[] | undefined>(undefined);\n  const [notesHistory, setNotesHistory] = useState<NoteHistory[] | undefined>(undefined);\n  const user = useEvolveUser();\n\n  const { documents, isLoadingDocuments, downloadDocument } = useGetPatientDocs(patient?.id ?? '');\n\n  const { location, encounter, questionnaireResponse, relatedPerson } = useMemo(() => {\n    const location = resourceBundle?.find(\n      (resource: FhirResource) => resource.resourceType === 'Location'\n    ) as unknown as Location;\n\n    const encounter = resourceBundle?.find(\n      (resource: FhirResource) => resource.resourceType === 'Encounter'\n    ) as unknown as Encounter;\n\n    const questionnaireResponse = resourceBundle?.find(\n      (resource: FhirResource) => resource.resourceType === 'QuestionnaireResponse'\n    ) as unknown as QuestionnaireResponse;\n\n    let relatedPerson: RelatedPerson | undefined;\n    const fhirRelatedPerson = resourceBundle?.find(\n      (resource: FhirResource) => resource.resourceType === 'RelatedPerson'\n    ) as unknown as RelatedPerson;\n    if (fhirRelatedPerson) {\n      const isUserRelatedPerson = fhirRelatedPerson.relationship?.find(\n        (relationship) => relationship.coding?.find((code) => code.code === 'user-relatedperson')\n      );\n      if (isUserRelatedPerson) {\n        relatedPerson = fhirRelatedPerson;\n      }\n    }\n\n    return { location, encounter, questionnaireResponse, relatedPerson };\n  }, [resourceBundle]);\n\n  const appointmentMadeBy = useMemo(() => {\n    if (!relatedPerson) return;\n    const { telecom } = relatedPerson;\n    return (telecom ?? [])\n      .find((cp) => {\n        // format starts with +1; this is some lazy but probably good enough validation\n        return cp.system === 'sms' && cp.value?.startsWith('+');\n      })\n      ?.value?.replace('+1', '');\n  }, [relatedPerson]);\n\n  const fullName = useMemo(() => {\n    if (patient) {\n      return getFullName(patient);\n    }\n    return '';\n  }, [patient]);\n\n  const { flattenedItems, selfPay, secondaryInsurance } = useMemo(() => {\n    const items = questionnaireResponse?.item ?? [];\n    const flattenedItems: QuestionnaireResponseItem[] = flattenItems(items);\n\n    const paymentOption = flattenedItems.find(\n      (response: QuestionnaireResponseItem) => response.linkId === 'payment-option'\n    )?.answer?.[0]?.valueString;\n    const selfPay = paymentOption === 'I will pay without insurance';\n\n    const secondaryInsurance = !!flattenedItems.find(\n      (response: QuestionnaireResponseItem) => response.linkId === 'insurance-carrier-2'\n    );\n\n    return { flattenedItems, selfPay, secondaryInsurance };\n  }, [questionnaireResponse?.item]);\n\n  const getResourceBundle = useCallback(async () => {\n    if (!appointmentID || !oystehr) {\n      return;\n    }\n    // query the fhir database\n    const searchResults = (\n      await oystehr.fhir.search<AppointmentBundleTypes>({\n        resourceType: 'Appointment',\n        params: [\n          { name: '_id', value: appointmentID },\n          {\n            name: '_include',\n            value: 'Appointment:patient',\n          },\n          {\n            name: '_include',\n            value: 'Appointment:location',\n          },\n          {\n            name: '_revinclude:iterate',\n            value: 'Encounter:appointment',\n          },\n          {\n            name: '_revinclude:iterate',\n            value: 'QuestionnaireResponse:encounter',\n          },\n          { name: '_revinclude:iterate', value: 'Flag:encounter' },\n          {\n            name: '_revinclude:iterate',\n            value: 'RelatedPerson:patient',\n          },\n        ],\n      })\n    )\n      .unbundle()\n      .filter((resource) => isNonPaperworkQuestionnaireResponse(resource) === false);\n\n    if (!searchResults) {\n      throw new Error('Could not get appointment, patient, location, and encounter resources from Zap DB');\n    }\n    setResourceBundle(searchResults || undefined);\n\n    setLoading(false);\n  }, [appointmentID, oystehr]);\n\n  useEffect(() => {\n    // Update fields in edit patient name dialog\n    if (patient) {\n      setPatientFirstName(patient?.name?.[0]?.given?.[0]);\n      setPatientMiddleName(patient?.name?.[0]?.given?.[1]);\n      setPatientLastName(patient?.name?.[0]?.family);\n      setPatientSuffix(patient?.name?.[0]?.suffix?.[0]);\n    }\n  }, [patient]);\n\n  async function handleUpdatePatientName(e: React.FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n    setUpdatingName(true);\n\n    try {\n      if (!patient?.id) {\n        throw new Error('Patient ID not found.');\n      }\n      if (!oystehr) {\n        throw new Error('Oystehr client not found.');\n      }\n\n      // Update the FHIR Patient resource\n      const patientPatchOps: Operation[] = [\n        {\n          op: 'replace',\n          path: '/name/0/given/0',\n          value: patientFirstName?.trim(),\n        },\n        {\n          op: 'replace',\n          path: '/name/0/family',\n          value: patientLastName?.trim(),\n        },\n      ];\n\n      const storedMiddleName = patient?.name?.[0]?.given?.[1];\n      if (patientMiddleName && !storedMiddleName) {\n        patientPatchOps.push({\n          op: 'add',\n          path: '/name/0/given/1',\n          value: patientMiddleName?.trim(),\n        });\n      } else if (!patientMiddleName && storedMiddleName) {\n        patientPatchOps.push({\n          op: 'remove',\n          path: '/name/0/given/1',\n        });\n      } else if (patientMiddleName && storedMiddleName) {\n        patientPatchOps.push({\n          op: 'replace',\n          path: '/name/0/given/1',\n          value: patientMiddleName?.trim(),\n        });\n      }\n\n      const updateTag = getCriticalUpdateTagOp(patient, `Staff ${user?.email ? user.email : `(${user?.id})`}`);\n      patientPatchOps.push(updateTag);\n\n      const storedSuffix = patient?.name?.[0]?.suffix?.[0];\n      if (patientSuffix && !storedSuffix) {\n        patientPatchOps.push({\n          op: 'add',\n          path: '/name/0/suffix',\n          value: [patientSuffix],\n        });\n      } else if (!patientSuffix && storedSuffix) {\n        patientPatchOps.push({\n          op: 'remove',\n          path: '/name/0/suffix',\n        });\n      } else if (patientSuffix && storedSuffix) {\n        patientPatchOps.push({\n          op: 'replace',\n          path: '/name/0/suffix',\n          value: [patientSuffix],\n        });\n      }\n\n      const removeStaffUpdateTagOp = cleanUpStaffHistoryTag(patient, 'name');\n      if (removeStaffUpdateTagOp) patientPatchOps.push(removeStaffUpdateTagOp);\n\n      const updatedPatient = await oystehr.fhir.patch<Patient>({\n        resourceType: 'Patient',\n        id: patient.id,\n        operations: patientPatchOps,\n      });\n\n      setPatient(updatedPatient);\n      getAndSetHistoricResources({ logs: true }).catch((error) => {\n        console.log('error getting activity logs after name update', error);\n      });\n      setUpdateNameModalOpen(false);\n    } catch (error) {\n      setErrors({ editName: true });\n      console.log('Failed to update patient name: ', error);\n    }\n\n    setUpdatingName(false);\n  }\n\n  async function handleUpdateDOB(e: React.FormEvent<HTMLFormElement>): Promise<void> {\n    e.preventDefault();\n    setUpdatingDOB(true);\n    try {\n      if (!validDate) {\n        throw new Error('Invalid date.');\n      }\n      if (!appointment?.id || !patient?.id) {\n        throw new Error('Appointment ID or patient ID not found.');\n      }\n      if (!oystehr) {\n        throw new Error('Oystehr client not found.');\n      }\n\n      const patchRequests = [];\n\n      // Update the FHIR Patient resource\n      const patientPatchOps: Operation[] = [\n        {\n          op: 'replace',\n          path: '/birthDate',\n          value: DOBConfirmed?.toISODate(),\n        },\n      ];\n\n      const updateTag = getCriticalUpdateTagOp(patient, `Staff ${user?.email ? user.email : `(${user?.id})`}`);\n      patientPatchOps.push(updateTag);\n\n      const removeStaffUpdateTagOp = cleanUpStaffHistoryTag(patient, 'dob');\n      if (removeStaffUpdateTagOp) patientPatchOps.push(removeStaffUpdateTagOp);\n\n      const patientPatch = getPatchBinary({\n        resourceType: 'Patient',\n        resourceId: patient?.id,\n        patchOperations: patientPatchOps,\n      });\n\n      patchRequests.push(patientPatch);\n\n      // Remove dobNotConfirmed extension from Appointment\n      const appointmentExt = appointment?.extension;\n      const dobNotConfirmedIdx = getUnconfirmedDOBIdx(appointment);\n\n      if (dobNotConfirmedIdx && dobNotConfirmedIdx >= 0) {\n        appointmentExt?.splice(dobNotConfirmedIdx, 1);\n\n        const appointmentPatch = getPatchBinary({\n          resourceType: 'Appointment',\n          resourceId: appointment?.id,\n          patchOperations: [\n            {\n              op: 'replace',\n              path: '/extension',\n              value: appointmentExt,\n            },\n          ],\n        });\n\n        patchRequests.push(appointmentPatch);\n      }\n\n      // Batch Appointment and Patient updates\n      const bundle = await oystehr.fhir.transaction({\n        requests: patchRequests,\n      });\n      setPatient(\n        bundle?.entry?.find((entry: any) => entry.resource.resourceType === 'Patient')?.resource as any as Patient\n      );\n      getAndSetHistoricResources({ logs: true }).catch((error) => {\n        console.log('error getting activity logs after dob update', error);\n      });\n      setConfirmDOBModalOpen(false);\n      setDOBConfirmed(null);\n    } catch (error) {\n      setErrors({ editDOB: true });\n      console.log('Failed to update patient DOB: ', error);\n    }\n\n    setUpdatingDOB(false);\n  }\n\n  async function dismissPaperworkModifiedFlag(): Promise<void> {\n    if (!oystehr) {\n      throw new Error('Oystehr client not found.');\n    }\n    await oystehr.fhir.patch({\n      resourceType: 'Flag',\n      id: paperworkModifiedFlag?.id || '',\n      operations: [\n        {\n          op: 'replace',\n          path: '/status',\n          value: 'inactive',\n        },\n      ],\n    });\n    setPaperworkModifiedFlag(undefined);\n  }\n\n  const hopInQueue = async (): Promise<void> => {\n    setHopLoading(true);\n    const now = DateTime.now().toISO();\n    if (appointment?.id && now) {\n      const operation = getPatchOperationForNewMetaTag(appointment, {\n        system: HOP_QUEUE_URI,\n        code: now,\n      });\n      const updateTag = getCriticalUpdateTagOp(appointment, `Staff ${user?.email ? user.email : `(${user?.id})`}`);\n      try {\n        const updatedAppt = await oystehr?.fhir.patch<Appointment>({\n          resourceType: 'Appointment',\n          id: appointment.id,\n          operations: [operation, updateTag],\n        });\n        setAppointment(updatedAppt);\n        const errorsCopy = errors;\n        delete errorsCopy.hopError;\n        setErrors(errorsCopy);\n        setHopQueueDialogOpen(false);\n      } catch (e) {\n        console.log('error hopping queue', e);\n        setErrors({ ...errors, hopError: 'There was an error moving this appointment to next' });\n      }\n      setHopLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // set appointment, patient, and flags\n    async function setPrimaryResources(): Promise<void> {\n      setPatient(\n        resourceBundle?.find((resource: FhirResource) => resource.resourceType === 'Patient') as Patient | undefined\n      );\n      setAppointment(\n        resourceBundle?.find((resource: FhirResource) => resource.resourceType === 'Appointment') as\n          | Appointment\n          | undefined\n      );\n      setPaperworkModifiedFlag(\n        resourceBundle?.find(\n          (resource: FhirResource) =>\n            resource.resourceType === 'Flag' &&\n            resource.status === 'active' &&\n            resource.meta?.tag?.find((tag) => tag.code === 'paperwork-edit')\n        ) as Flag | undefined\n      );\n      setPaperworkInProgressFlag(\n        resourceBundle?.find(\n          (resource: FhirResource) =>\n            resource.resourceType === 'Flag' &&\n            resource.status === 'active' &&\n            resource.meta?.tag?.find((tag) => tag.code === 'paperwork-in-progress') &&\n            resource.period?.start &&\n            getMinutesSinceLastActive(resource.period.start) <= LAST_ACTIVE_THRESHOLD\n        ) as Flag | undefined\n      );\n      setPaperworkStartedFlag(\n        resourceBundle?.find(\n          (resource: FhirResource) =>\n            resource.resourceType === 'Flag' &&\n            resource.status === 'active' &&\n            resource.meta?.tag?.find((tag) => tag.code === 'paperwork-in-progress')\n        ) as Flag | undefined\n      );\n    }\n\n    // call the functions\n    // add checks to make sure functions only run if values are not set\n    if (!resourceBundle && appointmentID && oystehr) {\n      getResourceBundle().catch((error) => {\n        console.log(error);\n      });\n    }\n\n    if (resourceBundle) {\n      setPrimaryResources().catch((error) => {\n        console.log(error);\n      });\n    }\n  }, [appointmentID, oystehr, getResourceBundle, resourceBundle]);\n\n  useEffect(() => {\n    async function checkInProgressFlag(\n      encounterID: string,\n      oystehr: Oystehr\n    ): Promise<{ inProgressFlag: Flag | undefined; startedFlag: Flag | undefined }> {\n      const flags = (\n        await oystehr.fhir.search<Flag>({\n          resourceType: 'Flag',\n          params: [\n            {\n              name: 'encounter',\n              value: `Encounter/${encounterID}`,\n            },\n            {\n              name: '_tag',\n              value: 'paperwork-in-progress',\n            },\n            {\n              name: '_sort',\n              value: '-date',\n            },\n          ],\n        })\n      ).unbundle();\n      const inProgressFlag = flags?.find(\n        (flag) => flag.period?.start && getMinutesSinceLastActive(flag.period.start) <= LAST_ACTIVE_THRESHOLD\n      );\n      const startedFlag = flags[0];\n      return { startedFlag, inProgressFlag };\n    }\n\n    let interval: NodeJS.Timeout;\n    try {\n      interval = setInterval(async () => {\n        if (encounter?.id && oystehr) {\n          const { startedFlag, inProgressFlag } = await checkInProgressFlag(encounter?.id, oystehr);\n          setPaperworkInProgressFlag(inProgressFlag);\n          if (!paperworkStartedFlag) setPaperworkStartedFlag(startedFlag);\n        }\n      }, 120000);\n    } catch (err) {\n      console.error(err);\n    }\n\n    return () => clearInterval(interval);\n  }, [encounter?.id, oystehr, paperworkStartedFlag]);\n\n  useEffect(() => {\n    async function getFileResources(patientID: string, appointmentID: string): Promise<void> {\n      if (!oystehr) {\n        return;\n      }\n\n      // Search for DocumentReferences\n      try {\n        setImagesLoading(true);\n        const documentReferenceResources: DocumentReference[] = [];\n        const authToken = await getAccessTokenSilently();\n        const docRefBundle = await oystehr.fhir.batch<DocumentReference>({\n          requests: [\n            {\n              // Consent\n              method: 'GET',\n              url: `/DocumentReference?_sort=-_lastUpdated&subject=Patient/${patientID}&related=Appointment/${appointmentID}`,\n            },\n            {\n              // Photo ID & Insurance Cards\n              method: 'GET',\n              url: `/DocumentReference?status=current&related=Patient/${patientID}`,\n            },\n          ],\n        });\n\n        const bundleEntries = docRefBundle?.entry;\n        bundleEntries?.forEach((bundleEntry: BundleEntry) => {\n          const bundleResource = bundleEntry.resource as Bundle;\n          bundleResource.entry?.forEach((entry) => {\n            const docRefResource = entry.resource as DocumentReference;\n            if (docRefResource) {\n              documentReferenceResources.push(docRefResource);\n            }\n          });\n        });\n\n        // Get document info\n        const allZ3Documents: DocumentInfo[] = [];\n\n        for (const docRef of documentReferenceResources) {\n          const docRefCode = docRef.type?.coding?.[0].code;\n\n          if (\n            docRefCode &&\n            ([PHOTO_ID_CARD_CODE, CONSENT_CODE, PRIVACY_POLICY_CODE].includes(docRefCode) ||\n              (docRefCode === INSURANCE_CARD_CODE && !selfPay))\n          ) {\n            for (const content of docRef.content) {\n              const title = content.attachment.title;\n              const z3Url = content.attachment.url;\n\n              if (z3Url && title && Object.values<string>(DocumentType).includes(title)) {\n                const presignedUrl = await getPresignedFileUrl(z3Url, authToken);\n                if (presignedUrl) {\n                  allZ3Documents.push({\n                    z3Url: z3Url,\n                    presignedUrl: presignedUrl,\n                    type: title as DocumentType,\n                  });\n                }\n              }\n            }\n          }\n        }\n\n        setZ3Documents(allZ3Documents);\n      } catch (error) {\n        throw new Error(\n          `Failed to get DocumentReferences resources: ${error}. Stringified error: ${JSON.stringify(error)} `\n        );\n      } finally {\n        setImagesLoading(false);\n      }\n    }\n\n    if (patient?.id && appointmentID && oystehr) {\n      getFileResources(patient.id, appointmentID).catch((error) => console.log(error));\n    }\n  }, [appointmentID, oystehr, getAccessTokenSilently, patient?.id, selfPay]);\n\n  const {\n    photoIdCards,\n    insuranceCards,\n    insuranceCardsSecondary,\n    fullCardPdfs,\n    consentPdfUrl,\n    consentPdfUrlOld,\n    hipaaPdfUrl,\n  } = useMemo((): Documents => {\n    const documents: Documents = {\n      photoIdCards: [],\n      insuranceCards: [],\n      insuranceCardsSecondary: [],\n      fullCardPdfs: [],\n      consentPdfUrl: undefined,\n      consentPdfUrlOld: undefined,\n      hipaaPdfUrl: undefined,\n    };\n\n    if (!z3Documents) {\n      return documents;\n    }\n\n    if (z3Documents.length) {\n      documents.photoIdCards = z3Documents\n        .filter((doc) => [DocumentType.PhotoIdFront, DocumentType.PhotoIdBack].includes(doc.type))\n        .sort(compareCards(DocumentType.PhotoIdBack));\n      documents.insuranceCards = z3Documents\n        .filter((doc) => [DocumentType.InsuranceFront, DocumentType.InsuranceBack].includes(doc.type))\n        .sort(compareCards(DocumentType.InsuranceBack));\n      documents.insuranceCardsSecondary = z3Documents\n        .filter((doc) => [DocumentType.InsuranceFrontSecondary, DocumentType.InsuranceBackSecondary].includes(doc.type))\n        .sort(compareCards(DocumentType.InsuranceBackSecondary));\n      documents.fullCardPdfs = z3Documents.filter((doc) =>\n        [DocumentType.FullInsurance, DocumentType.FullInsuranceSecondary, DocumentType.FullPhotoId].includes(doc.type)\n      );\n      documents.consentPdfUrl = z3Documents.find((doc) => doc.type === DocumentType.CttConsent)?.presignedUrl;\n      if (!documents.consentPdfUrl) {\n        documents.consentPdfUrlOld = z3Documents.find((doc) => doc.type === DocumentType.CttConsentOld)?.presignedUrl;\n      }\n      documents.hipaaPdfUrl = z3Documents.find((doc) => doc.type === DocumentType.HipaaConsent)?.presignedUrl;\n    }\n\n    return documents;\n  }, [z3Documents]);\n\n  // variables for displaying the page\n  const appointmentType = (appointment?.appointmentType?.text as FhirAppointmentType) || '';\n  const locationTimeZone = getTimezone(location || '');\n  const appointmentStartTime = DateTime.fromISO(appointment?.start ?? '').setZone(locationTimeZone);\n  const appointmentTime = appointmentStartTime.toLocaleString(DateTime.TIME_SIMPLE);\n  const appointmentDate = formatDateUsingSlashes(appointmentStartTime.toISO() || '', locationTimeZone);\n  const cityStateZipString = getAnswerStringFor('patient-city', flattenedItems)\n    ? `${getAnswerStringFor('patient-city', flattenedItems) || ''}, ${\n        getAnswerStringFor('patient-state', flattenedItems) || ''\n      }, ${getAnswerStringFor('patient-zip', flattenedItems) || ''}`\n    : '';\n  const policyHolderCityStateZipString = getAnswerStringFor('patient-city', flattenedItems)\n    ? `${getAnswerStringFor('policy-holder-city', flattenedItems) || ''}, ${\n        getAnswerStringFor('policy-holder-state', flattenedItems) || ''\n      }, ${getAnswerStringFor('policy-holder-zip', flattenedItems) || ''}`\n    : '';\n  const secondaryPolicyHolderCityStateZipString = getAnswerStringFor('patient-city', flattenedItems)\n    ? `${getAnswerStringFor('policy-holder-city-2', flattenedItems) || ''}, ${\n        getAnswerStringFor('policy-holder-state-2', flattenedItems) || ''\n      }, ${getAnswerStringFor('policy-holder-zip-2', flattenedItems) || ''}`\n    : '';\n  const nameLastModifiedOld = formatLastModifiedTag('name', patient, location);\n  const dobLastModifiedOld = formatLastModifiedTag('dob', patient, location);\n\n  const getFullNameString = (\n    firstNameFieldName: string,\n    lastNameFieldName: string,\n    middleNameFieldName?: string\n    // suffixFieldName?: string\n  ): string | undefined => {\n    const firstName = getAnswerStringFor(firstNameFieldName, flattenedItems);\n    const lastName = getAnswerStringFor(lastNameFieldName, flattenedItems);\n    const middleName = middleNameFieldName ? getAnswerStringFor(middleNameFieldName, flattenedItems) : undefined;\n    // const suffix = suffixFieldName ? getAnswerStringFor(suffixFieldName, flattenedItems) : undefined;\n\n    if (firstName && lastName) {\n      return `${lastName}, ${firstName}${middleName ? `, ${middleName}` : ''}`;\n      // return `${lastName}${suffix ? `, ${suffix}` : ''}, ${firstName}${middleName ? `, ${middleName}` : ''}`;\n    } else {\n      return undefined;\n    }\n  };\n  const fullNameResponsiblePartyString = getFullNameString(\n    'responsible-party-first-name',\n    'responsible-party-last-name'\n  );\n\n  const policyHolderFullName = getFullNameString(\n    'policy-holder-first-name',\n    'policy-holder-last-name',\n    'policy-holder-middle-name'\n  );\n  const secondaryPolicyHolderFullName = getFullNameString(\n    'policy-holder-first-name-2',\n    'policy-holder-last-name-2',\n    'policy-holder-middle-name-2'\n  );\n  const pcpNameString =\n    getAnswerStringFor('pcp-first', flattenedItems) && getAnswerStringFor('pcp-last', flattenedItems)\n      ? `${getAnswerStringFor('pcp-first', flattenedItems)} ${getAnswerStringFor('pcp-last', flattenedItems)}`\n      : undefined;\n  const unconfirmedDOB = appointment && getUnconfirmedDOBForAppointment(appointment);\n  const getAppointmentType = (appointmentType: FhirAppointmentType | undefined): string => {\n    return (appointmentType && appointmentTypeLabels[appointmentType]) || '';\n  };\n\n  const { nameLastModified, dobLastModified } = useMemo(() => {\n    let nameLastModified: string | undefined;\n    let dobLastModified: string | undefined;\n    if (activityLogs) {\n      const nameChangelog = activityLogs.find((log) => log.activityName === ActivityName.nameChange);\n      if (nameChangelog) nameLastModified = `${nameChangelog.activityDateTime} by ${nameChangelog.activityBy}`;\n      const dobChangeLog = activityLogs.find((log) => log.activityName === ActivityName.dobChange);\n      if (dobChangeLog) dobLastModified = `${dobChangeLog.activityDateTime} by ${dobChangeLog.activityBy}`;\n    }\n    return { nameLastModified, dobLastModified };\n  }, [activityLogs]);\n\n  const getAndSetHistoricResources = useCallback(\n    async ({ logs, notes }: { logs?: boolean; notes?: boolean }) => {\n      if (appointment) {\n        const history = await getAppointmentAndPatientHistory(appointment, oystehr);\n        if (history) {\n          if (logs) {\n            const activityLogs = formatActivityLogs(\n              appointment,\n              history.appointmentHistory,\n              history.patientHistory,\n              paperworkStartedFlag,\n              locationTimeZone\n            );\n            setActivityLogs(activityLogs);\n          }\n          if (notes) {\n            const formattedNotes = formatNotesHistory(locationTimeZone, history.appointmentHistory);\n            setNotesHistory(formattedNotes);\n          }\n        }\n        setActivityLogsLoading(false);\n      }\n    },\n    [appointment, oystehr, locationTimeZone, paperworkStartedFlag]\n  );\n\n  useEffect(() => {\n    if (paperworkStartedFlag) {\n      const paperworkStartedActivityLog = formatPaperworkStartedLog(paperworkStartedFlag, locationTimeZone);\n      setActivityLogs((prevLogs) => {\n        const logsContainPaperworkStarted = prevLogs?.find((log) => log.activityName === ActivityName.paperworkStarted);\n        if (logsContainPaperworkStarted) {\n          return prevLogs;\n        } else {\n          const activityLogCopy = prevLogs ? [...prevLogs] : [];\n          const updatedActivityLogs = [paperworkStartedActivityLog, ...activityLogCopy];\n          return sortLogs(updatedActivityLogs);\n        }\n      });\n    }\n  }, [locationTimeZone, paperworkStartedFlag]);\n\n  useEffect(() => {\n    if (!activityLogs && appointment && locationTimeZone && oystehr) {\n      getAndSetHistoricResources({ logs: true, notes: true }).catch((error) => {\n        console.log('error getting activity logs', error);\n        setActivityLogsLoading(false);\n      });\n    }\n  }, [activityLogs, setActivityLogs, appointment, locationTimeZone, oystehr, getAndSetHistoricResources]);\n\n  useEffect(() => {\n    if (appointment) {\n      const encounterStatus = getVisitStatus(appointment, encounter);\n      setStatus(encounterStatus);\n    } else {\n      setStatus(undefined);\n    }\n  }, [appointment, encounter]);\n\n  // page HTML\n  const handleCancelDialogOpen = (): void => {\n    setCancelDialogOpen(true);\n  };\n\n  const handleCancelDialogClose = (): void => {\n    setCancelDialogOpen(false);\n  };\n\n  function pdfButton(pdfUrl: string): ReactElement {\n    return (\n      <MUILink href={pdfUrl} target=\"_blank\" style={{ marginRight: '10px' }}>\n        <Button\n          variant=\"outlined\"\n          sx={{\n            borderColor: otherColors.consentBorder,\n            borderRadius: 100,\n            textTransform: 'none',\n            fontWeight: 500,\n            fontSize: 14,\n          }}\n        >\n          Get PDF\n        </Button>\n      </MUILink>\n    );\n  }\n\n  const consentEditProp = (): IconProps => {\n    const ret: IconProps = {};\n\n    if (getAnswerBooleanFor('hipaa-acknowledgement', flattenedItems) && hipaaPdfUrl) {\n      ret[hipaaPatientDetailsKey] = pdfButton(hipaaPdfUrl);\n    }\n\n    if (getAnswerBooleanFor('consent-to-treat', flattenedItems) && consentPdfUrl) {\n      ret[consentToTreatPatientDetailsKey] = pdfButton(consentPdfUrl);\n    }\n\n    // don't show the old consent pdf if the new one is present\n    if (getAnswerBooleanFor('consent-to-treat', flattenedItems) && !consentPdfUrl && consentPdfUrlOld) {\n      ret[consentToTreatPatientDetailsKeyOld] = pdfButton(consentPdfUrlOld);\n    }\n\n    return ret;\n  };\n\n  const signedConsentForm: {\n    [consentToTreatPatientDetailsKey]?: 'Signed' | 'Not signed' | 'Loading...';\n    [consentToTreatPatientDetailsKeyOld]?: 'Signed' | 'Not signed' | 'Loading...';\n  } = {};\n\n  if (consentPdfUrl) {\n    signedConsentForm[consentToTreatPatientDetailsKey] = imagesLoading ? 'Loading...' : 'Signed';\n  } else if (consentPdfUrlOld) {\n    signedConsentForm[consentToTreatPatientDetailsKeyOld] = imagesLoading ? 'Loading...' : 'Signed';\n  } else {\n    signedConsentForm[consentToTreatPatientDetailsKey] = imagesLoading ? 'Loading...' : 'Not signed';\n  }\n\n  // const suffixOptions = ['II', 'III', 'IV', 'Jr', 'Sr'];\n\n  const imageCarouselObjs = useMemo(\n    () => [\n      ...insuranceCards.map<ImageCarouselObject>((card) => ({ alt: card.type, url: card.presignedUrl || '' })),\n      ...insuranceCardsSecondary.map<ImageCarouselObject>((card) => ({ alt: card.type, url: card.presignedUrl || '' })),\n      ...photoIdCards.map<ImageCarouselObject>((card) => ({ alt: card.type, url: card.presignedUrl || '' })),\n    ],\n    [insuranceCards, insuranceCardsSecondary, photoIdCards]\n  );\n\n  const policyHolderDetails = useMemo(() => {\n    return {\n      'Insurance Carrier': getValueReferenceDisplay('insurance-carrier', flattenedItems),\n      'Member ID': getAnswerStringFor('insurance-member-id', flattenedItems),\n      \"Policy holder's name\": policyHolderFullName,\n      \"Policy holder's date of birth\": formatDateUsingSlashes(\n        getAnswerStringFor('policy-holder-date-of-birth', flattenedItems)\n      ),\n      \"Policy holder's sex\": getAnswerStringFor('policy-holder-birth-sex', flattenedItems),\n      'Street address': getAnswerStringFor('policy-holder-address', flattenedItems),\n      'Address line 2': getAnswerStringFor('policy-holder-address-additional-line', flattenedItems),\n      'City, State, ZIP': policyHolderCityStateZipString,\n      \"Patient's relationship to the insured\": getAnswerStringFor('patient-relationship-to-insured', flattenedItems),\n    };\n  }, [policyHolderFullName, flattenedItems, policyHolderCityStateZipString]);\n\n  const secondaryPolicyHolderDetails = useMemo(() => {\n    return {\n      'Insurance Carrier': getValueReferenceDisplay('insurance-carrier-2', flattenedItems),\n      'Member ID': getAnswerStringFor('insurance-member-id-2', flattenedItems),\n      \"Policy holder's name\": secondaryPolicyHolderFullName,\n      \"Policy holder's date of birth\": formatDateUsingSlashes(\n        getAnswerStringFor('policy-holder-date-of-birth-2', flattenedItems)\n      ),\n      \"Policy holder's sex\": getAnswerStringFor('policy-holder-birth-sex-2', flattenedItems),\n      'Street address': getAnswerStringFor('policy-holder-address-2', flattenedItems),\n      'Address line 2': getAnswerStringFor('policy-holder-address-additional-line-2', flattenedItems),\n      'City, State, ZIP': secondaryPolicyHolderCityStateZipString,\n      \"Patient's relationship to the insured\": getAnswerStringFor('patient-relationship-to-insured-2', flattenedItems),\n    };\n  }, [flattenedItems, secondaryPolicyHolderFullName, secondaryPolicyHolderCityStateZipString]);\n  const reasonForVisit = useMemo(() => {\n    const complaints = (appointment?.description ?? '').split(',');\n    return complaints.map((complaint) => complaint.trim()).join(', ');\n  }, [appointment?.description]);\n\n  const downloadPaperworkPdf = async (): Promise<void> => {\n    setPaperworkPdfLoading(true);\n    const existingPaperworkPdf = documents?.find(\n      (doc) =>\n        doc.encounterId === encounter.id &&\n        doc.docName.toLowerCase().includes(PAPERWORK_PDF_ATTACHMENT_TITLE.toLowerCase())\n    );\n    if (existingPaperworkPdf) {\n      await downloadDocument(existingPaperworkPdf.id);\n      setPaperworkPdfLoading(false);\n      return;\n    }\n    if (!oystehr || !questionnaireResponse.id) {\n      enqueueSnackbar('An error occurred. Please try again.', { variant: 'error' });\n      setPaperworkPdfLoading(false);\n      return;\n    }\n    const response = await generatePaperworkPdf(oystehr, {\n      questionnaireResponseId: questionnaireResponse.id,\n      documentReference: {\n        resourceType: 'DocumentReference',\n        status: 'current',\n      } as DocumentReference,\n    });\n    await downloadDocument(response.documentReference.split('/')[1]);\n    setPaperworkPdfLoading(false);\n  };\n\n  return (\n    <PageContainer>\n      <>\n        {/* Card image zoom dialog */}\n        <ImageCarousel\n          imagesObj={imageCarouselObjs}\n          imageIndex={zoomedIdx}\n          setImageIndex={setZoomedIdx}\n          open={photoZoom}\n          setOpen={setPhotoZoom}\n        />\n\n        {/* page */}\n        <Grid container direction=\"row\">\n          <Grid item xs={0.25}></Grid>\n          <Grid item xs={11.5}>\n            <Grid container direction=\"row\">\n              <Grid item xs={6}>\n                <CustomBreadcrumbs\n                  chain={[\n                    { link: `/patient/${patient?.id}`, children: 'Visit Details' },\n                    { link: '#', children: appointment?.id || <Skeleton width={150} /> },\n                  ]}\n                />\n              </Grid>\n              <Grid container xs={6} justifyContent=\"flex-end\">\n                <LoadingButton\n                  variant=\"outlined\"\n                  sx={{\n                    borderRadius: '20px',\n                    textTransform: 'none',\n                  }}\n                  loading={paperworkPdfLoading}\n                  color=\"primary\"\n                  disabled={isLoadingDocuments || !patient?.id}\n                  onClick={downloadPaperworkPdf}\n                >\n                  Paperwork PDF\n                </LoadingButton>\n              </Grid>\n            </Grid>\n            {/* page title row */}\n            <Grid container direction=\"row\" marginTop={1}>\n              {loading || activityLogsLoading || !patient ? (\n                <Skeleton aria-busy=\"true\" width={200} height=\"\" />\n              ) : (\n                <>\n                  <PencilIconButton\n                    onClick={() => setUpdateNameModalOpen(true)}\n                    size=\"25px\"\n                    sx={{ mr: '7px', padding: 0, alignSelf: 'center' }}\n                  />\n                  <Typography\n                    variant=\"h2\"\n                    color=\"primary.dark\"\n                    data-testid={dataTestIds.appointmentPage.patientFullName}\n                  >\n                    {fullName}\n                  </Typography>\n                </>\n              )}\n\n              <CircleIcon\n                sx={{ color: 'primary.main', width: '10px', height: '10px', marginLeft: 2, alignSelf: 'center' }}\n              />\n              {/* appointment start time as AM/PM and then date */}\n              {loading || !appointment ? (\n                <Skeleton sx={{ marginLeft: 2 }} aria-busy=\"true\" width={200} />\n              ) : (\n                <>\n                  <Typography variant=\"body1\" sx={{ alignSelf: 'center', marginLeft: 1 }}>\n                    {getAppointmentType(appointmentType ?? '')}\n                  </Typography>\n                  <Typography sx={{ alignSelf: 'center', marginLeft: 1 }} fontWeight=\"bold\">\n                    {appointmentTime}\n                  </Typography>\n                  <Typography sx={{ alignSelf: 'center', marginLeft: 2 }}>{appointmentDate}</Typography>\n                </>\n              )}\n\n              {loading || !status ? (\n                <Skeleton sx={{ marginLeft: 2 }} aria-busy=\"true\" width={200} />\n              ) : (\n                <>\n                  <Typography sx={{ alignSelf: 'center', marginLeft: 2 }}>{location?.name}</Typography>\n                  <span\n                    style={{\n                      marginLeft: 20,\n                      alignSelf: 'center',\n                    }}\n                  >\n                    {getAppointmentStatusChip(status)}\n                  </span>\n                  {appointment && appointment.status === 'cancelled' && (\n                    <Typography sx={{ alignSelf: 'center', marginLeft: 2 }}>\n                      {appointment?.cancelationReason?.coding?.[0]?.display}\n                    </Typography>\n                  )}\n                </>\n              )}\n              {appointment && appointment?.status !== 'cancelled' ? (\n                <>\n                  <Button\n                    data-testid={dataTestIds.visitDetailsPage.cancelVisitButton}\n                    variant=\"outlined\"\n                    sx={{\n                      alignSelf: 'center',\n                      marginLeft: 'auto',\n                      // marginRight: 2,\n                      borderRadius: '20px',\n                      textTransform: 'none',\n                    }}\n                    color=\"error\"\n                    onClick={handleCancelDialogOpen}\n                  >\n                    Cancel visit\n                  </Button>\n                  <CancellationReasonDialog\n                    handleClose={handleCancelDialogClose}\n                    getResourceBundle={getResourceBundle}\n                    appointment={appointment}\n                    encounter={encounter}\n                    open={cancelDialogOpen}\n                    getAndSetResources={getAndSetHistoricResources}\n                  />\n                </>\n              ) : null}\n              {status === 'arrived' ? (\n                <>\n                  <Button\n                    variant=\"outlined\"\n                    sx={{\n                      alignSelf: 'center',\n                      marginLeft: 1,\n                      borderRadius: '20px',\n                      textTransform: 'none',\n                    }}\n                    disabled={!!appointment?.meta?.tag?.find((tag) => tag.system === 'hop-queue')?.code}\n                    onClick={() => setHopQueueDialogOpen(true)}\n                  >\n                    Move to next\n                  </Button>\n                  <CustomDialog\n                    open={hopQueueDialogOpen}\n                    handleClose={() => {\n                      const errorsCopy = errors;\n                      delete errorsCopy.hopError;\n                      setErrors(errorsCopy);\n                      setHopQueueDialogOpen(false);\n                    }}\n                    closeButton={false}\n                    title=\"Move to next\"\n                    description={`Are you sure you want to move ${patient?.name?.[0]?.family}, ${patient?.name?.[0]?.given?.[0]} to next?`}\n                    closeButtonText=\"Cancel\"\n                    handleConfirm={async () => await hopInQueue()}\n                    confirmText=\"Move to next\"\n                    confirmLoading={hopLoading}\n                    error={errors?.hopError}\n                  />\n                </>\n              ) : null}\n            </Grid>\n\n            {(nameLastModifiedOld || nameLastModified) && (\n              <Grid container direction=\"row\">\n                <Typography sx={{ alignSelf: 'center', marginLeft: 4, fontSize: '14px' }}>\n                  Name Last Modified {nameLastModifiedOld || nameLastModified}\n                </Typography>\n              </Grid>\n            )}\n\n            {paperworkInProgressFlag && (\n              <Grid container direction=\"row\" marginTop={2}>\n                <PaperworkFlagIndicator\n                  title=\"Paperwork in progress\"\n                  color={otherColors.infoText}\n                  backgroundColor={otherColors.infoBackground}\n                  icon={<InfoOutlinedIcon sx={{ color: otherColors.infoIcon }} />}\n                />\n              </Grid>\n            )}\n\n            {paperworkModifiedFlag && (\n              <Grid container direction=\"row\" marginTop={2}>\n                <PaperworkFlagIndicator\n                  title=\"Paperwork was updated:\"\n                  dateTime={paperworkModifiedFlag.period?.start}\n                  timezone={locationTimeZone}\n                  onDismiss={dismissPaperworkModifiedFlag}\n                  color={otherColors.warningText}\n                  backgroundColor={otherColors.warningBackground}\n                  icon={<WarningAmberIcon sx={{ color: otherColors.warningIcon }} />}\n                />\n              </Grid>\n            )}\n\n            {/* new insurance card and photo id */}\n            <Grid container direction=\"row\" marginTop={2}>\n              <Paper sx={{ width: '100%' }}>\n                <Box padding={3}>\n                  {imagesLoading ? (\n                    <Grid container direction=\"row\" maxHeight=\"210px\" height=\"210px\" spacing={2}>\n                      <Grid item xs={12} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                        <CircularProgress sx={{ justifySelf: 'center' }} />\n                      </Grid>\n                    </Grid>\n                  ) : (\n                    <Grid\n                      container\n                      direction=\"row\"\n                      rowGap={2}\n                      columnSpacing={2}\n                      sx={{ display: 'flex' }}\n                      minHeight=\"210px\"\n                    >\n                      <>\n                        {!selfPay && insuranceCards.length > 0 && (\n                          <Grid item xs={12} sm={6}>\n                            <Grid item>\n                              <Typography color=\"primary.dark\" variant=\"body2\">\n                                Primary Insurance Card\n                              </Typography>\n                            </Grid>\n                            <Grid container direction=\"row\" spacing={2}>\n                              {insuranceCards.map((card, index) => (\n                                <CardGridItem\n                                  key={card.type}\n                                  card={card}\n                                  index={index}\n                                  appointmentID={appointmentID}\n                                  cards={insuranceCards}\n                                  fullCardPdf={fullCardPdfs.find((pdf) => pdf.type === DocumentType.FullInsurance)}\n                                  setZoomedIdx={setZoomedIdx}\n                                  setPhotoZoom={setPhotoZoom}\n                                  title=\"Download Insurance Card\"\n                                />\n                              ))}\n                            </Grid>\n                          </Grid>\n                        )}\n                        {!selfPay && secondaryInsurance && insuranceCardsSecondary.length > 0 && (\n                          <Grid item xs={12} sm={6}>\n                            <Grid item>\n                              <Typography color=\"primary.dark\" variant=\"body2\">\n                                Secondary Insurance Card\n                              </Typography>\n                            </Grid>\n                            <Grid container direction=\"row\" spacing={2}>\n                              {insuranceCardsSecondary.map((card, index) => {\n                                const offset = insuranceCards.length;\n                                return (\n                                  <CardGridItem\n                                    key={card.type}\n                                    card={card}\n                                    index={index}\n                                    offset={offset}\n                                    appointmentID={appointmentID}\n                                    cards={insuranceCardsSecondary}\n                                    fullCardPdf={fullCardPdfs.find(\n                                      (pdf) => pdf.type === DocumentType.FullInsuranceSecondary\n                                    )}\n                                    setZoomedIdx={setZoomedIdx}\n                                    setPhotoZoom={setPhotoZoom}\n                                    title=\"Download Insurance Card\"\n                                  />\n                                );\n                              })}\n                            </Grid>\n                          </Grid>\n                        )}\n                        {photoIdCards.length > 0 && (\n                          <Grid item xs={12} sm={6}>\n                            <Grid item>\n                              <Typography\n                                style={{\n                                  marginLeft: !selfPay && insuranceCards.length ? 10 : 0,\n                                }}\n                                color=\"primary.dark\"\n                                variant=\"body2\"\n                              >\n                                Photo ID\n                              </Typography>\n                            </Grid>\n                            <Grid container direction=\"row\" spacing={2}>\n                              {photoIdCards.map((card, index) => {\n                                const offset = insuranceCards.length + insuranceCardsSecondary.length;\n                                return (\n                                  <CardGridItem\n                                    key={card.type}\n                                    card={card}\n                                    index={index}\n                                    offset={offset}\n                                    appointmentID={appointmentID}\n                                    cards={photoIdCards}\n                                    fullCardPdf={fullCardPdfs.find((pdf) => pdf.type === DocumentType.FullPhotoId)}\n                                    setZoomedIdx={setZoomedIdx}\n                                    setPhotoZoom={setPhotoZoom}\n                                    title=\"Download Photo ID\"\n                                  />\n                                );\n                              })}\n                            </Grid>\n                          </Grid>\n                        )}\n                        {!insuranceCards.length && !photoIdCards.length && !insuranceCardsSecondary.length && (\n                          <Grid item xs={12} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                            <Typography variant=\"h3\" color=\"primary.dark\">\n                              No images have been uploaded <ContentPasteOffIcon />\n                            </Typography>\n                          </Grid>\n                        )}\n                      </>\n                    </Grid>\n                  )}\n                </Box>\n              </Paper>\n            </Grid>\n\n            {/* information sections */}\n            <Grid container direction=\"row\">\n              <Grid item xs={12} sm={6} paddingRight={{ xs: 0, sm: 2 }}>\n                {/* About the patient */}\n                <PatientInformation\n                  title=\"About the patient\"\n                  loading={loading}\n                  patientDetails={{\n                    ...(unconfirmedDOB\n                      ? {\n                          \"Patient's date of birth (Original)\": formatDateUsingSlashes(patient?.birthDate),\n                          \"Patient's date of birth (Unmatched)\": formatDateUsingSlashes(unconfirmedDOB),\n                        }\n                      : {\n                          \"Patient's date of birth\": formatDateUsingSlashes(patient?.birthDate),\n                        }),\n                    \"Patient's sex\": patient?.gender ? capitalize(patient?.gender) : '',\n                    'Reason for visit': reasonForVisit,\n                  }}\n                  icon={{\n                    \"Patient's date of birth (Unmatched)\": <PriorityIconWithBorder fill={theme.palette.warning.main} />,\n                  }}\n                  editValue={{\n                    \"Patient's date of birth (Original)\": (\n                      <PencilIconButton\n                        onClick={() => setConfirmDOBModalOpen(true)}\n                        size=\"16px\"\n                        sx={{ mr: '5px', padding: '10px' }}\n                      />\n                    ),\n                    \"Patient's date of birth\": (\n                      <PencilIconButton\n                        onClick={() => setConfirmDOBModalOpen(true)}\n                        size=\"16px\"\n                        sx={{ mr: '5px', padding: '10px' }}\n                      />\n                    ),\n                  }}\n                  lastModifiedBy={{ \"Patient's date of birth\": dobLastModifiedOld || dobLastModified }}\n                />\n                {/* Contact information */}\n                <PatientInformation\n                  title=\"Contact information\"\n                  loading={loading}\n                  patientDetails={{\n                    'Street address': getAnswerStringFor('patient-street-address', flattenedItems),\n                    'Address line 2': getAnswerStringFor('patient-street-address-2', flattenedItems),\n                    'City, State, ZIP': cityStateZipString,\n                    'Patient email': getAnswerStringFor('patient-email', flattenedItems),\n                    'Patient mobile': formatPhoneNumber(getAnswerStringFor('patient-number', flattenedItems) || ''),\n                    'Visit created with phone number': formatPhoneNumber(appointmentMadeBy || ''),\n                  }}\n                />\n                {/* Patient details */}\n                <PatientInformation\n                  title=\"Patient details\"\n                  loading={loading}\n                  patientDetails={{\n                    \"Patient's ethnicity\": getAnswerStringFor('patient-ethnicity', flattenedItems),\n                    \"Patient's race\": getAnswerStringFor('patient-race', flattenedItems),\n                    \"Patient's pronouns\": patientPronounsNotListedValues.includes(\n                      getAnswerStringFor('patient-pronouns', flattenedItems) || ''\n                    )\n                      ? getAnswerStringFor('patient-pronouns-custom', flattenedItems)\n                      : getAnswerStringFor('patient-pronouns', flattenedItems),\n                    'PCP name': pcpNameString,\n                    'PCP phone number': formatPhoneNumber(getAnswerStringFor('pcp-number', flattenedItems) || ''),\n                    'PCP practice name': getAnswerStringFor('pcp-practice', flattenedItems),\n                    'PCP practice address': getAnswerStringFor('pcp-address', flattenedItems),\n                    'Pharmacy name': getAnswerStringFor('pharmacy-name', flattenedItems),\n                    'Pharmacy address': getAnswerStringFor('pharmacy-address', flattenedItems),\n                    'Pharmacy phone number': formatPhoneNumber(\n                      getAnswerStringFor('pharmacy-phone', flattenedItems) || ''\n                    ),\n                    'How did you hear about us?': patient?.extension?.find(\n                      (e) => e.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/point-of-discovery'\n                    )?.valueString,\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} paddingLeft={{ xs: 0, sm: 2 }}>\n                {/* credit cards and copay */}\n                {appointmentID && patient && (\n                  <PatientPaymentList patient={patient} loading={loading} encounterId={encounter.id ?? ''} />\n                )}\n                {/* Insurance information */}\n                {!selfPay && (\n                  <PatientInformation\n                    title=\"Insurance information\"\n                    loading={loading}\n                    patientDetails={policyHolderDetails}\n                  />\n                )}\n                {/* Secondary Insurance information */}\n                {secondaryInsurance && (\n                  <PatientInformation\n                    title=\"Secondary Insurance information\"\n                    loading={loading}\n                    patientDetails={secondaryPolicyHolderDetails}\n                  />\n                )}\n                {/* Responsible party information */}\n                <PatientInformation\n                  title=\"Responsible party information\"\n                  loading={loading}\n                  patientDetails={{\n                    Relationship: getAnswerStringFor('responsible-party-relationship', flattenedItems),\n                    'Full name': fullNameResponsiblePartyString,\n                    'Date of birth': formatDateUsingSlashes(\n                      getAnswerStringFor('responsible-party-date-of-birth', flattenedItems)\n                    ),\n                    'Birth sex': getAnswerStringFor('responsible-party-birth-sex', flattenedItems),\n                    Phone: formatPhoneNumber(getAnswerStringFor('responsible-party-number', flattenedItems) || ''),\n                  }}\n                />\n\n                {/* Completed pre-visit forms */}\n                <PatientInformation\n                  title=\"Completed consent forms\"\n                  loading={loading}\n                  editValue={consentEditProp()}\n                  patientDetails={{\n                    [hipaaPatientDetailsKey]: imagesLoading\n                      ? 'Loading...'\n                      : getAnswerBooleanFor('hipaa-acknowledgement', flattenedItems)\n                      ? 'Signed'\n                      : 'Not signed',\n                    ...signedConsentForm,\n                    Signature: getAnswerStringFor('signature', flattenedItems),\n                    'Full name': getAnswerStringFor('full-name', flattenedItems),\n                    'Relationship to patient': getAnswerStringFor('consent-form-signer-relationship', flattenedItems),\n                    Date: formatDateUsingSlashes(questionnaireResponse?.authored),\n                    IP: questionnaireResponse?.extension?.find(\n                      (e) => e.url === 'https://fhir.zapehr.com/r4/StructureDefinitions/ip-address'\n                    )?.valueString,\n                  }}\n                />\n                {(appointment?.comment || (notesHistory && notesHistory.length > 0)) && (\n                  <AppointmentNotesHistory\n                    appointment={appointment}\n                    location={location}\n                    curNoteAndHistory={notesHistory}\n                    user={user}\n                    oystehr={oystehr}\n                    setAppointment={setAppointment}\n                    getAndSetHistoricResources={getAndSetHistoricResources}\n                  ></AppointmentNotesHistory>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\" justifyContent=\"space-between\">\n          <Grid item>\n            {loading || !status ? (\n              <Skeleton sx={{ marginLeft: { xs: 0, sm: 2 } }} aria-busy=\"true\" width={200} />\n            ) : (\n              <div id=\"user-set-appointment-status\">\n                <FormControl size=\"small\" sx={{ marginTop: 2, marginLeft: { xs: 0, sm: 8 } }}>\n                  <ChangeStatusDropdown\n                    appointmentID={appointmentID}\n                    onStatusChange={setStatus}\n                    getAndSetResources={getAndSetHistoricResources}\n                  />\n                </FormControl>\n                {loading && <CircularProgress size=\"20px\" sx={{ marginTop: 2.8, marginLeft: 1 }} />}\n              </div>\n            )}\n          </Grid>\n          <Grid item sx={{ paddingTop: 2, paddingRight: 3.5 }}>\n            <>\n              <Button\n                variant=\"outlined\"\n                sx={{\n                  alignSelf: 'center',\n                  marginLeft: { xs: 0, sm: 1 },\n                  borderRadius: '20px',\n                  textTransform: 'none',\n                }}\n                color=\"error\"\n                onClick={() => setIssueDialogOpen(true)}\n              >\n                Report Issue\n              </Button>\n              <ReportIssueDialog\n                open={issueDialogOpen}\n                handleClose={() => setIssueDialogOpen(false)}\n                oystehr={oystehr}\n                patient={patient}\n                appointment={appointment}\n                encounter={encounter}\n                location={location}\n                setSnackbarOpen={setSnackbarOpen}\n                setToastType={setToastType}\n                setToastMessage={setToastMessage}\n              ></ReportIssueDialog>\n            </>\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\">\n          <Grid item sx={{ marginLeft: { xs: 0, sm: 8 }, marginTop: 2, marginBottom: 50 }}>\n            <>\n              <LoadingButton\n                loading={activityLogsLoading}\n                variant=\"outlined\"\n                sx={{\n                  alignSelf: 'center',\n                  marginLeft: 'auto',\n                  borderRadius: '20px',\n                  textTransform: 'none',\n                }}\n                size=\"medium\"\n                color=\"primary\"\n                onClick={() => setActivityLogDialogOpen(true)}\n              >\n                View activity logs\n              </LoadingButton>\n              <ActivityLogDialog\n                open={activityLogDialogOpen}\n                handleClose={() => setActivityLogDialogOpen(false)}\n                logs={activityLogs || []}\n              />\n            </>\n          </Grid>\n        </Grid>\n        {/* Update patient name modal */}\n        <EditPatientInfoDialog\n          title=\"Please enter patient's name\"\n          modalOpen={updateNameModalOpen}\n          onClose={() => {\n            setUpdateNameModalOpen(false);\n\n            // reset errors and patient name\n            setPatientFirstName(patient?.name?.[0]?.given?.[0]);\n            setPatientMiddleName(patient?.name?.[0]?.given?.[1]);\n            setPatientLastName(patient?.name?.[0]?.family);\n            setPatientSuffix(patient?.name?.[0]?.suffix?.[0]);\n            setErrors({ editName: false });\n          }}\n          input={\n            <>\n              <TextField\n                label=\"Last\"\n                required\n                fullWidth\n                value={patientLastName}\n                onChange={(e) => setPatientLastName(e.target.value.trimStart())}\n              />\n              <TextField\n                label=\"First\"\n                required\n                fullWidth\n                value={patientFirstName}\n                onChange={(e) => setPatientFirstName(e.target.value.trimStart())}\n                sx={{ mt: 2 }}\n              />\n              <TextField\n                label=\"Middle\"\n                fullWidth\n                value={patientMiddleName}\n                onChange={(e) => setPatientMiddleName(e.target.value.trimStart())}\n                sx={{ mt: 2 }}\n              />\n              {/* <Select\n                label=\"Suffix\"\n                fullWidth\n                value={patientSuffix}\n                onChange={(e) => setPatientSuffix(e.target.value)}\n                sx={{ mt: 2 }}\n                defaultValue=\"Suffix\"\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {suffixOptions.map((suffix, index) => (\n                  <MenuItem key={index} value={suffix}>\n                    {suffix}\n                  </MenuItem>\n                ))}\n              </Select> */}\n            </>\n          }\n          onSubmit={handleUpdatePatientName}\n          submitButtonName=\"Update Patient Name\"\n          loading={updatingName}\n          error={errors.editName}\n          errorMessage=\"Failed to update patient name\"\n        />\n        {/* Update DOB modal */}\n        <EditPatientInfoDialog\n          title=\"Please enter patient's confirmed date of birth\"\n          modalOpen={confirmDOBModalOpen}\n          onClose={() => {\n            setConfirmDOBModalOpen(false);\n            setDOBConfirmed(null);\n            setErrors({ editDOB: false });\n          }}\n          input={\n            <DateSearch\n              date={DOBConfirmed}\n              setDate={setDOBConfirmed}\n              setIsValidDate={setValidDate}\n              defaultValue={null}\n              label=\"Date of birth\"\n              required\n            ></DateSearch>\n          }\n          onSubmit={handleUpdateDOB}\n          submitButtonName=\"Update Date of Birth\"\n          loading={updatingDOB}\n          error={errors.editDOB}\n          errorMessage=\"Failed to update patient date of birth\"\n          modalDetails={\n            <Grid container spacing={2} sx={{ mt: '24px' }}>\n              <Grid container item>\n                <Grid item width=\"35%\">\n                  Original DOB:\n                </Grid>\n                <Grid item>{formatDateUsingSlashes(patient?.birthDate)}</Grid>\n              </Grid>\n\n              {unconfirmedDOB && (\n                <Grid container item>\n                  <Grid item width=\"35%\">\n                    Unmatched DOB:\n                  </Grid>\n                  <Grid item>{formatDateUsingSlashes(unconfirmedDOB)}</Grid>\n                </Grid>\n              )}\n            </Grid>\n          }\n        />\n        <Snackbar\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={() => setSnackbarOpen(false)}\n          message={toastMessage}\n        >\n          <Alert onClose={() => setSnackbarOpen(false)} severity={toastType} sx={{ width: '100%' }}>\n            {toastMessage}\n          </Alert>\n        </Snackbar>\n      </>\n    </PageContainer>\n  );\n}\n"]}