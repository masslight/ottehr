{"version":3,"file":"Appointments.js","sourceRoot":"","sources":["Appointments.tsx"],"names":[],"mappings":"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","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Autocomplete, Box, Button, Grid, IconButton, Paper, TextField, Typography, useTheme } from '@mui/material';\nimport Oystehr from '@oystehr/sdk';\nimport { HealthcareService, Practitioner } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport React, { ReactElement, useEffect, useMemo, useState } from 'react';\nimport { usePageVisibility } from 'react-page-visibility';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { usePatientLabOrders } from 'src/features/external-labs/components/labs-orders/usePatientLabOrders';\nimport { useInHouseLabOrders } from 'src/features/in-house-labs/components/orders/useInHouseLabOrders';\nimport { useGetNursingOrders } from 'src/features/nursing-orders/components/orders/useNursingOrders';\nimport { usePatientRadiologyOrders } from 'src/features/radiology/components/usePatientRadiologyOrders';\nimport { useGetMedicationOrders } from 'src/telemed';\nimport {\n  ExtendedMedicationDataForResponse,\n  GetRadiologyOrderListZambdaOrder,\n  InHouseOrderListPageItemDTO,\n  InPersonAppointmentInformation,\n  LabOrderListPageDTO,\n  NursingOrder,\n  OrdersForTrackingBoardTable,\n} from 'utils';\nimport { getAppointments } from '../api/api';\nimport AppointmentTabs from '../components/AppointmentTabs';\nimport CreateDemoVisits from '../components/CreateDemoVisits';\nimport DateSearch from '../components/DateSearch';\nimport GroupSelect from '../components/GroupSelect';\nimport LocationSelect from '../components/LocationSelect';\nimport ProvidersSelect from '../components/ProvidersSelect';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport { adjustTopForBannerHeight } from '../helpers/misc.helper';\nimport { useApiClients } from '../hooks/useAppClients';\nimport PageContainer from '../layout/PageContainer';\nimport { useDebounce } from '../telemed/hooks';\nimport { VisitType, VisitTypeToLabel } from '../types/types';\nimport { LocationWithWalkinSchedule } from './AddPatient';\n\ntype LoadingState = { status: 'loading' | 'initial'; id?: string | undefined } | { status: 'loaded'; id: string };\n\ninterface AppointmentSearchResultData {\n  preBooked: InPersonAppointmentInformation[] | undefined;\n  completed: InPersonAppointmentInformation[] | undefined;\n  cancelled: InPersonAppointmentInformation[] | undefined;\n  inOffice: InPersonAppointmentInformation[] | undefined;\n}\n\ntype CustomFormEventHandler = (event: React.FormEvent<HTMLFormElement>, value: any, field: string) => void;\n\nexport default function Appointments(): ReactElement {\n  const { oystehrZambda } = useApiClients();\n  const [locationSelected, setLocationSelected] = useState<LocationWithWalkinSchedule | undefined>(undefined);\n  const [loadingState, setLoadingState] = useState<LoadingState>({ status: 'initial' });\n  const [practitioners, setPractitioners] = useState<Practitioner[] | undefined>(undefined);\n  const [healthcareServices, setHealthcareServices] = useState<HealthcareService[] | undefined>(undefined);\n  const [appointmentDate, setAppointmentDate] = useState<DateTime | null>(DateTime.local());\n  const [editingComment, setEditingComment] = useState<boolean>(false);\n  const [searchResults, setSearchResults] = useState<AppointmentSearchResultData | null>(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const pageIsVisible = usePageVisibility(); // goes to false if tab loses focus and gives the fhir api a break\n  const { debounce } = useDebounce(300);\n\n  const handleSubmit: CustomFormEventHandler = (event: any, value: any, field: string): void => {\n    if (field === 'date') {\n      queryParams?.set('searchDate', value?.toISODate() ?? appointmentDate?.toISODate() ?? '');\n    } else if (field === 'location') {\n      queryParams?.set('locationID', value?.id ?? '');\n    } else if (field === 'visitTypes') {\n      const appointmentTypesString = value.join(',');\n      queryParams.set('visitType', appointmentTypesString);\n    } else if (field === 'providers') {\n      const providersString = value.join(',');\n      queryParams.set('providers', providersString);\n    } else if (field === 'groups') {\n      const groupsString = value.join(',');\n      queryParams.set('groups', groupsString);\n    }\n\n    setEditingComment(false);\n    navigate(`?${queryParams?.toString()}`);\n  };\n\n  const queryParams = useMemo(() => {\n    return new URLSearchParams(location.search);\n  }, [location.search]);\n\n  const { locationID, searchDate, visitType, providers, groups, queryId } = (() => {\n    const locationID = queryParams.get('locationID') || '';\n    const searchDate = queryParams.get('searchDate') || '';\n    const appointmentTypesString = queryParams.get('visitType') || '';\n    let providers = queryParams.get('providers')?.split(',') || [];\n    if (providers.length === 1 && providers[0] === '') {\n      providers = [];\n    }\n    let groups = queryParams.get('groups')?.split(',') || [];\n    if (groups.length === 1 && groups[0] === '') {\n      groups = [];\n    }\n    const queryId = `${locationID}:${locationSelected?.id}:${providers}:${groups}:${searchDate}:${appointmentTypesString}`;\n    const visitType = appointmentTypesString ? appointmentTypesString.split(',') : [];\n    return { locationID, searchDate, visitType, providers, groups, queryId };\n  })();\n\n  const {\n    preBooked: preBookedAppointments = [],\n    completed: completedAppointments = [],\n    cancelled: cancelledAppointments = [],\n    inOffice: inOfficeAppointments = [],\n  } = searchResults || {};\n\n  const inOfficeEncounterIds = inOfficeAppointments.map((appointment) => appointment.encounterId);\n  const completedEncounterIds = completedAppointments.map((appointment) => appointment.encounterId);\n  const encountersIdsEligibleForOrders = [...inOfficeEncounterIds, ...completedEncounterIds];\n\n  const externalLabOrders = usePatientLabOrders({\n    searchBy: { field: 'encounterIds', value: encountersIdsEligibleForOrders },\n  });\n  const externalLabOrdersByAppointmentId = useMemo(() => {\n    return externalLabOrders?.labOrders?.reduce(\n      (acc, order) => {\n        acc[order.appointmentId] = [...(acc[order.appointmentId] || []), order];\n        return acc;\n      },\n      {} as Record<string, LabOrderListPageDTO[]>\n    );\n  }, [externalLabOrders?.labOrders]);\n\n  const inHouseOrders = useInHouseLabOrders({\n    searchBy: { field: 'encounterIds', value: encountersIdsEligibleForOrders },\n  });\n  const inHouseLabOrdersByAppointmentId = useMemo(() => {\n    return inHouseOrders?.labOrders?.reduce(\n      (acc, order) => {\n        acc[order.appointmentId] = [...(acc[order.appointmentId] || []), order];\n        return acc;\n      },\n      {} as Record<string, InHouseOrderListPageItemDTO[]>\n    );\n  }, [inHouseOrders?.labOrders]);\n\n  const { nursingOrders } = useGetNursingOrders({\n    searchBy: { field: 'encounterIds', value: encountersIdsEligibleForOrders },\n  });\n  const nursingOrdersByAppointmentId: Record<string, NursingOrder[]> = useMemo(() => {\n    return nursingOrders?.reduce(\n      (acc, order) => {\n        acc[order.appointmentId] = [...(acc[order.appointmentId] || []), order];\n        return acc;\n      },\n      {} as Record<string, NursingOrder[]>\n    );\n  }, [nursingOrders]);\n\n  const { data: inHouseMedications } = useGetMedicationOrders({\n    field: 'encounterIds',\n    value: encountersIdsEligibleForOrders,\n  });\n  const inHouseMedicationsByEncounterId = useMemo(() => {\n    if (!inHouseMedications?.orders) return {};\n\n    return inHouseMedications?.orders?.reduce(\n      (acc, med) => {\n        acc[med.encounterId] = [...(acc[med.encounterId] || []), med];\n        return acc;\n      },\n      {} as Record<string, ExtendedMedicationDataForResponse[]>\n    );\n  }, [inHouseMedications?.orders]);\n\n  const { orders: radiologyOrders } = usePatientRadiologyOrders({ encounterIds: encountersIdsEligibleForOrders });\n  const radiologyOrdersByAppointmentId: Record<string, GetRadiologyOrderListZambdaOrder[]> = useMemo(() => {\n    return radiologyOrders?.reduce(\n      (acc, order) => {\n        acc[order.appointmentId] = [...(acc[order.appointmentId] || []), order];\n        return acc;\n      },\n      {} as Record<string, GetRadiologyOrderListZambdaOrder[]>\n    );\n  }, [radiologyOrders]);\n\n  const orders: OrdersForTrackingBoardTable = {\n    externalLabOrdersByAppointmentId,\n    inHouseLabOrdersByAppointmentId,\n    nursingOrdersByAppointmentId,\n    inHouseMedicationsByEncounterId,\n    radiologyOrdersByAppointmentId,\n  };\n\n  useEffect(() => {\n    const selectedVisitTypes = localStorage.getItem('selectedVisitTypes');\n    if (selectedVisitTypes) {\n      queryParams?.set('visitType', JSON.parse(selectedVisitTypes) ?? '');\n      navigate(`?${queryParams?.toString()}`);\n    } else {\n      queryParams?.set('visitType', Object.keys(VisitTypeToLabel).join(','));\n    }\n  }, [navigate, queryParams]);\n\n  useEffect(() => {\n    if (localStorage.getItem('selectedProviders')) {\n      queryParams?.set('providers', JSON.parse(localStorage.getItem('selectedProviders') ?? '') ?? '');\n      navigate(`?${queryParams?.toString()}`);\n    }\n  }, [navigate, queryParams]);\n\n  useEffect(() => {\n    if (localStorage.getItem('selectedGroups')) {\n      queryParams?.set('groups', JSON.parse(localStorage.getItem('selectedGroups') ?? '') ?? '');\n      navigate(`?${queryParams?.toString()}`);\n    }\n  }, [navigate, queryParams]);\n\n  useEffect(() => {\n    const locationStore = localStorage?.getItem('selectedLocation');\n    if (locationStore && !locationSelected) {\n      setLocationSelected(JSON.parse(locationStore));\n    }\n    const dateStore = localStorage?.getItem('selectedDate');\n    if (dateStore && !appointmentDate) {\n      setAppointmentDate?.(JSON.parse(localStorage.getItem('selectedDate') ?? '') ?? null);\n    }\n  }, [appointmentDate, locationSelected, queryParams]);\n\n  useEffect(() => {\n    async function getPractitioners(oystehrClient: Oystehr): Promise<void> {\n      if (!oystehrClient) {\n        return;\n      }\n\n      try {\n        const practitionersTemp: Practitioner[] = (\n          await oystehrClient.fhir.search<Practitioner>({\n            resourceType: 'Practitioner',\n            params: [\n              { name: '_count', value: '1000' },\n              // { name: 'name:missing', value: 'false' },\n            ],\n          })\n        ).unbundle();\n        setPractitioners(practitionersTemp);\n      } catch (e) {\n        console.error('error loading practitioners', e);\n      }\n    }\n\n    async function getHealthcareServices(oystehrClient: Oystehr): Promise<void> {\n      if (!oystehrZambda) {\n        return;\n      }\n\n      try {\n        const healthcareServicesTemp: HealthcareService[] = (\n          await oystehrClient.fhir.search<HealthcareService>({\n            resourceType: 'HealthcareService',\n            params: [\n              { name: '_count', value: '1000' },\n              // { name: 'name:missing', value: 'false' },\n            ],\n          })\n        ).unbundle();\n        setHealthcareServices(healthcareServicesTemp);\n      } catch (e) {\n        console.error('error loading HealthcareServices', e);\n      }\n    }\n\n    if (oystehrZambda) {\n      void getPractitioners(oystehrZambda);\n      void getHealthcareServices(oystehrZambda);\n    }\n  }, [oystehrZambda]);\n\n  useEffect(() => {\n    const fetchStuff = async (client: Oystehr, searchDate: string | undefined): Promise<void> => {\n      setLoadingState({ status: 'loading' });\n\n      if (\n        (locationID || locationSelected?.id || providers.length > 0 || groups.length > 0) &&\n        searchDate &&\n        Array.isArray(visitType)\n      ) {\n        const searchResults = await getAppointments(client, {\n          locationID: locationID || locationSelected?.id || undefined,\n          searchDate,\n          visitType: visitType,\n          providerIDs: providers,\n          groupIDs: groups,\n        });\n\n        debounce(() => {\n          setSearchResults(searchResults || []);\n          setLoadingState({ status: 'loaded', id: queryId });\n        });\n      }\n    };\n    if (\n      (locationSelected || providers.length > 0 || groups.length > 0) &&\n      oystehrZambda &&\n      !editingComment &&\n      loadingState.id !== queryId &&\n      loadingState.status !== 'loading' &&\n      pageIsVisible\n    ) {\n      // send searchDate without timezone, in get-appointments zambda we apply appointment timezone to it to find appointments for that day\n      // looks like searchDate is always exists, and we can remove rest options\n      const searchDateToUse = searchDate || appointmentDate?.toISO?.() || '';\n      void fetchStuff(oystehrZambda, searchDateToUse);\n    }\n  }, [\n    locationSelected,\n    oystehrZambda,\n    editingComment,\n    loadingState,\n    queryId,\n    locationID,\n    searchDate,\n    appointmentDate,\n    visitType,\n    providers,\n    groups,\n    queryParams,\n    pageIsVisible,\n    debounce,\n  ]);\n\n  useEffect(() => {\n    const appointmentInterval = setInterval(() => setLoadingState({ status: 'initial' }), 30000);\n    // Call updateAppointments so we don't need to wait for it to be called\n    // getConversations().catch((error) => console.log(error));\n    return () => clearInterval(appointmentInterval);\n  }, []);\n\n  return (\n    <AppointmentsBody\n      loadingState={loadingState}\n      queryParams={queryParams}\n      handleSubmit={handleSubmit}\n      visitType={visitType}\n      providers={providers}\n      groups={groups}\n      preBookedAppointments={preBookedAppointments}\n      completedAppointments={completedAppointments}\n      cancelledAppointments={cancelledAppointments}\n      inOfficeAppointments={inOfficeAppointments}\n      orders={orders}\n      locationSelected={locationSelected}\n      setLocationSelected={setLocationSelected}\n      practitioners={practitioners}\n      healthcareServices={healthcareServices}\n      appointmentDate={appointmentDate}\n      setAppointmentDate={setAppointmentDate}\n      updateAppointments={() => setLoadingState({ status: 'initial' })}\n      setEditingComment={setEditingComment}\n    />\n  );\n}\n\ninterface AppointmentsBodyProps {\n  loadingState: LoadingState;\n  preBookedAppointments: InPersonAppointmentInformation[];\n  completedAppointments: InPersonAppointmentInformation[];\n  cancelledAppointments: InPersonAppointmentInformation[];\n  inOfficeAppointments: InPersonAppointmentInformation[];\n  appointmentDate: DateTime | null;\n  locationSelected: LocationWithWalkinSchedule | undefined;\n  handleSubmit: CustomFormEventHandler;\n  queryParams?: URLSearchParams;\n  visitType: string[];\n  providers: string[];\n  groups: string[];\n  setLocationSelected: (location: LocationWithWalkinSchedule | undefined) => void;\n  practitioners: Practitioner[] | undefined;\n  healthcareServices: HealthcareService[] | undefined;\n  setAppointmentDate: (date: DateTime | null) => void;\n  updateAppointments: () => void;\n  setEditingComment: (editingComment: boolean) => void;\n  orders: OrdersForTrackingBoardTable;\n}\nfunction AppointmentsBody(props: AppointmentsBodyProps): ReactElement {\n  const {\n    loadingState,\n    preBookedAppointments,\n    completedAppointments,\n    cancelledAppointments,\n    inOfficeAppointments,\n    locationSelected,\n    setLocationSelected,\n    appointmentDate,\n    visitType,\n    providers,\n    groups,\n    practitioners,\n    healthcareServices,\n    setAppointmentDate,\n    queryParams,\n    handleSubmit,\n    updateAppointments,\n    setEditingComment,\n    orders,\n  } = props;\n\n  const [displayFilters, setDisplayFilters] = useState<boolean>(true);\n  const theme = useTheme();\n\n  return (\n    <form>\n      <PageContainer>\n        <>\n          <Box\n            sx={{\n              position: { xs: 'static', sm: 'sticky' },\n              top: adjustTopForBannerHeight(80),\n              zIndex: 1,\n              backgroundColor: '#F9FAFB',\n              alignItems: 'center',\n              width: '100%',\n            }}\n          >\n            <Paper sx={{ padding: 2 }}>\n              <Grid container sx={{ justifyContent: 'center' }} spacing={2}>\n                <Grid\n                  item\n                  alignItems=\"center\"\n                  sx={{\n                    display: { xs: 'flex', sm: 'flex', md: 'none' },\n                    width: '100%',\n                    color: theme.palette.primary.main,\n                  }}\n                >\n                  <IconButton\n                    onClick={() => setDisplayFilters(!displayFilters)}\n                    sx={{ color: theme.palette.primary.main }}\n                  >\n                    {displayFilters ? (\n                      <KeyboardArrowUpIcon fontSize=\"small\"></KeyboardArrowUpIcon>\n                    ) : (\n                      <KeyboardArrowDownIcon fontSize=\"small\"></KeyboardArrowDownIcon>\n                    )}\n                  </IconButton>\n                  <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                    Filters\n                  </Typography>\n                </Grid>\n                {displayFilters && (\n                  <>\n                    <Grid item md={2.8} xs={12}>\n                      <LocationSelect\n                        queryParams={queryParams}\n                        handleSubmit={handleSubmit}\n                        location={locationSelected}\n                        updateURL={true}\n                        storeLocationInLocalStorage={true}\n                        setLocation={setLocationSelected}\n                      ></LocationSelect>\n                    </Grid>\n                    <Grid item md={4.7} xs={12}>\n                      <Autocomplete\n                        id=\"visitTypes\"\n                        sx={{\n                          '.MuiButtonBase-root.MuiChip-root': {\n                            width: { xs: '100%', sm: '120px' },\n                            textAlign: 'start',\n                          },\n                        }}\n                        value={visitType}\n                        options={Object.keys(VisitTypeToLabel)}\n                        getOptionLabel={(option) => {\n                          return VisitTypeToLabel[option as VisitType];\n                        }}\n                        onChange={(event, value) => {\n                          if (value) {\n                            localStorage.setItem('selectedVisitTypes', JSON.stringify(value));\n                          } else {\n                            localStorage.removeItem('selectedVisitTypes');\n                          }\n\n                          if (handleSubmit) {\n                            handleSubmit(event as any, value, 'visitTypes');\n                          }\n                        }}\n                        multiple\n                        renderInput={(params) => (\n                          <TextField name=\"visitTypes\" {...params} label=\"Visit type\" required={false} />\n                        )}\n                      />\n                    </Grid>\n                    <Grid item md={2.8} xs={12}>\n                      <DateSearch\n                        label=\"Select Date\"\n                        queryParams={queryParams}\n                        handleSubmit={handleSubmit}\n                        date={appointmentDate}\n                        setDate={setAppointmentDate}\n                        updateURL={true}\n                        storeDateInLocalStorage={true}\n                        defaultValue={DateTime.now()}\n                        closeOnSelect={true}\n                      ></DateSearch>\n                    </Grid>\n                    <Grid item md={2.8} xs={12}>\n                      <ProvidersSelect\n                        providers={providers}\n                        practitioners={practitioners}\n                        handleSubmit={handleSubmit}\n                      ></ProvidersSelect>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <GroupSelect\n                        groups={groups}\n                        healthcareServices={healthcareServices}\n                        handleSubmit={handleSubmit}\n                      ></GroupSelect>\n                    </Grid>\n                    <Grid item md={1.4} sm={12} sx={{ alignSelf: 'center', display: { xs: 'none', sm: 'block' } }}>\n                      <Link to=\"/visits/add\">\n                        <Button\n                          data-testid={dataTestIds.dashboard.addPatientButton}\n                          sx={{\n                            borderRadius: 100,\n                            textTransform: 'none',\n                            fontWeight: 600,\n                            marginBottom: '20px',\n                          }}\n                          color=\"primary\"\n                          variant=\"contained\"\n                        >\n                          <AddIcon />\n                          <Typography fontWeight=\"bold\">Add patient</Typography>\n                        </Button>\n                      </Link>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Paper>\n            {/* only displayed on mobile */}\n            <Box sx={{ display: { xs: 'block', sm: 'none' }, mt: 2 }}>\n              <Link to=\"/visits/add\">\n                <Button\n                  sx={{\n                    borderRadius: 100,\n                    textTransform: 'none',\n                    fontWeight: 600,\n                    width: '100%',\n                  }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  <AddIcon />\n                  <Typography fontWeight=\"bold\">Add patient</Typography>\n                </Button>\n              </Link>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              marginTop: '24px',\n              width: '100%',\n            }}\n          >\n            <AppointmentTabs\n              location={locationSelected}\n              providers={providers}\n              groups={groups}\n              preBookedAppointments={preBookedAppointments}\n              cancelledAppointments={cancelledAppointments}\n              completedAppointments={completedAppointments}\n              inOfficeAppointments={inOfficeAppointments}\n              orders={orders}\n              loading={loadingState.status === 'loading'}\n              updateAppointments={updateAppointments}\n              setEditingComment={setEditingComment}\n            />\n          </Box>\n          <CreateDemoVisits />\n        </>\n      </PageContainer>\n    </form>\n  );\n}\n"]}