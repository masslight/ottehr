{"version":3,"file":"Data.js","sourceRoot":"","sources":["Data.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  CircularProgress,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  ToggleButton,\n  ToggleButtonGroup,\n  Typography,\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers';\nimport { AdapterLuxon } from '@mui/x-date-pickers/AdapterLuxon';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport {\n  BarElement,\n  CategoryScale,\n  Chart as ChartJS,\n  Colors,\n  Legend,\n  LinearScale,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n} from 'chart.js';\nimport { Appointment, Encounter } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  FhirAppointmentType,\n  getVisitStatus,\n  getVisitStatusHistory,\n  OTTEHR_MODULE,\n  VisitStatusHistoryEntry,\n  VisitStatusHistoryLabel,\n  VisitStatusLabel,\n} from 'utils';\nimport { CHIP_STATUS_MAP } from '../components/AppointmentTableRow';\nimport LocationSelect from '../components/LocationSelect';\nimport { getTimezone } from '../helpers/formatDateTime';\nimport { useApiClients } from '../hooks/useAppClients';\nimport PageContainer from '../layout/PageContainer';\nimport { LocationWithWalkinSchedule } from './AddPatient';\n\ninterface AppointmentCount {\n  date: DateTime;\n  appointments: number;\n}\n\ninterface VisitStatusMetrics {\n  numAppointments: number;\n  averageTime: number;\n}\n\ninterface FormattedAppointment {\n  id: string;\n  visitStatus: VisitStatusLabel;\n  visitStatusHistory: VisitStatusHistoryEntry[];\n}\n\nexport enum ChartType {\n  table = 'table',\n  chart = 'chart',\n}\n\nenum VisitTypeAll {\n  All = 'all',\n}\n\nenum TimeRange {\n  Today = 'Today',\n  Yesterday = 'Yesterday',\n  ThisWeek = 'This Week',\n  ThisMonth = 'This Month',\n  LastWeek = 'Last Week',\n  LastMonth = 'Last Month',\n  PastSeven = 'Past Seven Days',\n  PastThirty = 'Past Thirty Days',\n  Custom = 'Custom',\n}\n\nexport default function Data(): React.ReactElement {\n  const [appointmentCountByDate, setAppointmentCountByDate] = React.useState<AppointmentCount[] | undefined>(undefined);\n  const [appointmentStatuses, setAppointmentStatuses] = React.useState<\n    { [status in VisitStatusHistoryLabel]: VisitStatusMetrics } | undefined\n  >(undefined);\n  const [appointmentsSeenIn45Ratio, setAppointmentsSeenIn45Ratio] = React.useState<number | undefined>(undefined);\n  const [avgMinutesToProvider, setAvgMinutesToProvider] = React.useState<number | undefined>(undefined);\n  const [totalVisits, setTotalVisits] = React.useState<number | undefined>(undefined);\n  const [timeRange, setTimeRange] = React.useState<TimeRange>(TimeRange.Today);\n  const [locationSelected, setLocationSelected] = React.useState<LocationWithWalkinSchedule | undefined>(undefined);\n  const [visitType, setVisitType] = React.useState<FhirAppointmentType | VisitTypeAll>(VisitTypeAll.All);\n  const [filterStartDate, setStartFilterDate] = React.useState<DateTime | null>(DateTime.now());\n  const [filterEndDate, setEndFilterDate] = React.useState<DateTime | null>(DateTime.now());\n  const [customFilterStartDate, setCustomStartFilterDate] = React.useState<DateTime | null>(null);\n  const [customFilterEndDate, setCustomEndFilterDate] = React.useState<DateTime | null>(null);\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const [now] = React.useState<DateTime>(DateTime.now());\n  const [type, setType] = React.useState<ChartType>(ChartType.chart);\n  const { oystehr } = useApiClients();\n  ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Legend, Title, Tooltip, Colors);\n\n  // todo clean up\n  // passing in an empty query params obj to location select because its required atm\n  // not touching any code outside the data page at this point in dev\n  const queryParams = new URLSearchParams({});\n\n  React.useEffect(() => {\n    const locationStore = localStorage?.getItem('selectedLocation');\n    if (locationStore && !locationSelected) {\n      setLocationSelected(JSON.parse(locationStore));\n    }\n  }, [locationSelected]);\n\n  React.useEffect(() => {\n    async function updateAppointments(): Promise<void> {\n      setLoading(true);\n      setError(null);\n      if (\n        locationSelected &&\n        filterStartDate &&\n        filterEndDate &&\n        filterEndDate.startOf('day') >= filterStartDate.startOf('day')\n      ) {\n        const timezone = getTimezone(locationSelected);\n\n        let totalVisits = 0;\n        const visitCountByDay: Record<string, number> = {};\n        const daysDiff = Math.floor(filterEndDate.startOf('day').diff(filterStartDate.startOf('day')).as('days'));\n        let temp = filterStartDate;\n        for (let i = 0; i <= daysDiff; i++) {\n          const formattedDay = temp.toFormat('y-MM-dd');\n          if (formattedDay) visitCountByDay[formattedDay] = 0;\n          temp = temp.plus({ day: 1 });\n        }\n\n        if (!oystehr) return;\n\n        const searchParams = [\n          { name: 'date', value: `ge${filterStartDate.setZone(timezone).startOf('day')}` },\n          { name: 'date', value: `le${filterEndDate.setZone(timezone).endOf('day')}` },\n          {\n            name: 'location',\n            value: `Location/${locationSelected?.id}`,\n          },\n          {\n            name: '_revinclude:iterate',\n            value: 'Encounter:appointment',\n          },\n          {\n            name: '_tag',\n            value: OTTEHR_MODULE.IP,\n          },\n        ];\n        if (visitType !== VisitTypeAll.All) searchParams.push({ name: 'appointment-type', value: visitType });\n        const appointmentEncounterSearch = (\n          await oystehr.fhir.search<Appointment | Encounter>({\n            resourceType: 'Appointment',\n            params: searchParams,\n          })\n        ).unbundle();\n        console.log('appointmentEncounterSearch', appointmentEncounterSearch);\n        const appointmentEncounterMap: Record<string, Encounter | undefined> = {};\n        const formattedAppointments: FormattedAppointment[] = [];\n        appointmentEncounterSearch.forEach((resource) => {\n          if (resource.resourceType === 'Appointment') {\n            const fhirAppointment = resource as Appointment;\n            if (fhirAppointment.status === 'fulfilled' && fhirAppointment.id) {\n              const appointmentDate =\n                fhirAppointment.start && DateTime.fromISO(fhirAppointment.start).toFormat('y-MM-dd');\n              if (appointmentDate) {\n                totalVisits++;\n                visitCountByDay[appointmentDate]++;\n              }\n              const encounter = appointmentEncounterSearch.find(\n                (r) =>\n                  r.resourceType === 'Encounter' && r.appointment?.[0].reference === `Appointment/${fhirAppointment.id}`\n              );\n              if (encounter) {\n                const fhirEncounter = encounter as Encounter;\n                appointmentEncounterMap[fhirAppointment.id] = fhirEncounter;\n                const visitStatus = getVisitStatus(fhirAppointment, fhirEncounter);\n                const visitStatusHistory = getVisitStatusHistory(fhirEncounter);\n                formattedAppointments.push({ id: fhirAppointment.id, visitStatus, visitStatusHistory });\n              }\n            }\n          }\n        });\n        const appointmentCountByDateTemp = Object.keys(visitCountByDay).map((day) => {\n          return { date: DateTime.fromISO(day), appointments: visitCountByDay[day] };\n        });\n        console.log('visitCountByDay', visitCountByDay);\n\n        const statusesCount: { [status in VisitStatusHistoryLabel]: VisitStatusMetrics } = {\n          pending: { numAppointments: 0, averageTime: 0 },\n          arrived: { numAppointments: 0, averageTime: 0 },\n          intake: { numAppointments: 0, averageTime: 0 },\n          'ready for provider': { numAppointments: 0, averageTime: 0 },\n          provider: { numAppointments: 0, averageTime: 0 },\n          discharged: { numAppointments: 0, averageTime: 0 },\n          cancelled: { numAppointments: 0, averageTime: 0 },\n          'no show': { numAppointments: 0, averageTime: 0 },\n          completed: { numAppointments: 0, averageTime: 0 },\n        };\n\n        let patientToProviderIn45Count = 0; // count of appointments where the patient was seen by provider within 45 minutes of arriving\n        const minutesToProvider: number[] = []; // list wait times for patients to reach providers from arrival for each appointment where the patient saw a provider\n        formattedAppointments.forEach((appointment) => {\n          let timeArrived, timeSeenByProvider;\n          appointment.visitStatusHistory?.forEach((statusTemp) => {\n            const statusName = statusTemp.status as VisitStatusHistoryLabel;\n            const statusPeriod = statusTemp.period;\n            if (statusName !== 'no show' && statusName !== 'completed' && statusName !== 'cancelled') {\n              if (statusPeriod.end && statusPeriod.start) {\n                const statusTime = DateTime.fromISO(statusPeriod.end)\n                  .diff(DateTime.fromISO(statusPeriod.start), 'minutes')\n                  .toObject().minutes;\n                if (statusTime) {\n                  statusesCount[statusName].averageTime =\n                    (statusesCount[statusName].numAppointments * statusesCount[statusName].averageTime + statusTime) /\n                    (statusesCount[statusName].numAppointments + 1);\n                  statusesCount[statusName].numAppointments = statusesCount[statusName].numAppointments + 1;\n                }\n              }\n              if (statusName === 'arrived') {\n                timeArrived = statusPeriod.start;\n              }\n              if (statusName === 'provider') {\n                timeSeenByProvider = statusPeriod.start;\n              }\n            }\n          });\n          if (timeArrived && timeSeenByProvider) {\n            const minutesToProviderTemp = DateTime.fromISO(timeSeenByProvider).diff(\n              DateTime.fromISO(timeArrived),\n              'minutes'\n            ).minutes;\n            if (minutesToProviderTemp <= 45) patientToProviderIn45Count += 1;\n            minutesToProvider.push(minutesToProviderTemp);\n          }\n          setAppointmentStatuses(statusesCount);\n        });\n\n        if (formattedAppointments.length) {\n          if (totalVisits > 0) {\n            const percentSeen = Math.round((patientToProviderIn45Count / totalVisits) * 1000) / 10;\n            setAppointmentsSeenIn45Ratio(percentSeen);\n          }\n          if (minutesToProvider.length > 0) {\n            const avgMinutesToProviderTemp =\n              minutesToProvider.reduce((acc, minutes) => acc + minutes, 0) / minutesToProvider.length;\n            setAvgMinutesToProvider(Math.round(avgMinutesToProviderTemp * 10) / 10);\n          }\n        } else {\n          setAppointmentStatuses(statusesCount);\n        }\n\n        setLoading(false);\n        setTotalVisits(totalVisits);\n        setAppointmentCountByDate(appointmentCountByDateTemp);\n        if (formattedAppointments?.length === 0) {\n          setError('No completed (checked out) appointments for this time range');\n        }\n      } else {\n        if (locationSelected) setLoading(false);\n        if (filterStartDate && filterEndDate && filterStartDate.startOf('day') > filterEndDate.startOf('day')) {\n          setError('Please make sure start date is before end date');\n        } else {\n          console.log('filterStartDate', filterStartDate?.toISO());\n          console.log('filterEndDate', filterEndDate?.toISO());\n          setError('Please make sure there is a start and end date for the filter');\n        }\n      }\n    }\n\n    updateAppointments().catch((error) => console.log('error getting appointment update', error));\n  }, [oystehr, now, visitType, filterStartDate, filterEndDate, locationSelected]);\n\n  const handleCustomTimeRange = (): void => {\n    if (customFilterEndDate && customFilterStartDate) {\n      setStartFilterDate(customFilterStartDate);\n      setEndFilterDate(customFilterEndDate);\n    }\n  };\n\n  const setFilterDates = (range: TimeRange): void => {\n    let startDate, endDate;\n    if (range !== TimeRange.Custom && (customFilterEndDate || customFilterStartDate)) {\n      setCustomStartFilterDate(null);\n      setCustomEndFilterDate(null);\n    }\n    if (range === TimeRange.Today) {\n      startDate = DateTime.now();\n      endDate = DateTime.now();\n    }\n    if (range === TimeRange.Yesterday) {\n      startDate = DateTime.now().minus({ day: 1 });\n      endDate = DateTime.now().minus({ day: 1 });\n    }\n    if (range === TimeRange.ThisWeek) {\n      startDate = DateTime.now().startOf('week');\n      endDate = startDate.plus({ day: 6 });\n    }\n    if (range === TimeRange.ThisMonth) {\n      startDate = DateTime.now().startOf('month');\n      endDate = DateTime.now().minus({ days: 1 });\n    }\n    if (range === TimeRange.LastWeek) {\n      const lastWeekNum = DateTime.now().startOf('week').minus({ day: 1 });\n      startDate = lastWeekNum.startOf('week');\n      endDate = startDate.plus({ day: 6 });\n    }\n    if (range === TimeRange.LastMonth) {\n      const lastMonthNum = DateTime.now().startOf('month').minus({ day: 1 }).month;\n      const lastYearNum = DateTime.now().startOf('month').minus({ day: 1 }).year;\n      startDate = DateTime.local(lastYearNum, lastMonthNum, 1);\n      endDate = startDate.endOf('month');\n    }\n    if (range === TimeRange.PastSeven) {\n      startDate = DateTime.now().minus({ days: 7 });\n      endDate = DateTime.now().minus({ days: 1 });\n    }\n    if (range === TimeRange.PastThirty) {\n      startDate = DateTime.now().minus({ days: 30 });\n      endDate = DateTime.now().minus({ days: 1 });\n    }\n    setStartFilterDate(startDate || null);\n    setEndFilterDate(endDate || null);\n  };\n\n  const handleLocationChange = (value: any): void => {\n    console.log('changing selected location to ', value?.id);\n  };\n\n  const singleNumberMetrics = [\n    {\n      text: '% Time-to-Provider < 45 min',\n      metric: `${appointmentsSeenIn45Ratio !== undefined ? `${appointmentsSeenIn45Ratio}%` : 'no data'}`,\n    },\n    {\n      text: 'Avg. Time-to-Provider',\n      metric: `${avgMinutesToProvider ? `${avgMinutesToProvider} minutes` : 'no data'}`,\n    },\n    { text: 'Visits (completed)', metric: totalVisits },\n  ];\n\n  return (\n    <PageContainer>\n      <Grid container spacing={6}>\n        <Grid item md={12} xs={12}>\n          <Grid container spacing={4}>\n            <Grid item md={2.25} xs={8}>\n              <FormControl sx={{ width: '100%' }}>\n                <LocationSelect\n                  queryParams={queryParams}\n                  handleSubmit={handleLocationChange}\n                  location={locationSelected}\n                  updateURL={false}\n                  storeLocationInLocalStorage={false}\n                  setLocation={setLocationSelected}\n                ></LocationSelect>\n              </FormControl>\n            </Grid>\n            <Grid item md={2} xs={8}>\n              <FormControl sx={{ width: '100%' }}>\n                <InputLabel id=\"visit-type\">Visit Type</InputLabel>\n                <Select\n                  labelId=\"visit-type\"\n                  id=\"visit-type-select-input\"\n                  value={visitType}\n                  onChange={(event) => setVisitType(event.target.value as FhirAppointmentType)}\n                  label=\"Visit Type\"\n                >\n                  <MenuItem value={FhirAppointmentType.prebook}>Booked</MenuItem>\n                  <MenuItem value={FhirAppointmentType.walkin}>Walk-in</MenuItem>\n                  <MenuItem value={VisitTypeAll.All}>All</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item md={2} xs={8}>\n              <FormControl sx={{ width: '100%' }}>\n                <InputLabel id=\"time-range\">Time range</InputLabel>\n                <Select\n                  labelId=\"time-range\"\n                  id=\"time-range-select-input\"\n                  value={timeRange}\n                  onChange={(event) => {\n                    setTimeRange(event.target.value as TimeRange);\n                    setFilterDates(event.target.value as TimeRange);\n                  }}\n                  label=\"Time range\"\n                >\n                  {Object.values(TimeRange).map((range, idx) => (\n                    <MenuItem key={idx} value={range}>\n                      {range}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            {timeRange === TimeRange.Custom ? (\n              <>\n                <Grid item md={2} xs={8}>\n                  <LocalizationProvider dateAdapter={AdapterLuxon}>\n                    <DatePicker\n                      label=\"Start Date\"\n                      format=\"MM/dd/yyyy\"\n                      onChange={setCustomStartFilterDate}\n                      slotProps={{\n                        textField: {\n                          style: { width: '100%' },\n                          name: 'start-date',\n                          id: 'start-date',\n                          label: 'Start Date',\n                        },\n                      }}\n                      value={customFilterStartDate}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n                <Grid item md={2} xs={8}>\n                  <LocalizationProvider dateAdapter={AdapterLuxon}>\n                    <DatePicker\n                      label=\"End Date\"\n                      format=\"MM/dd/yyyy\"\n                      onChange={setCustomEndFilterDate}\n                      slotProps={{\n                        textField: {\n                          style: { width: '100%' },\n                          name: 'end-date',\n                          id: 'end-date',\n                          label: 'End Date',\n                        },\n                      }}\n                      value={customFilterEndDate}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n                <Grid item md={1.5} xs={8} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                  <LoadingButton\n                    sx={{\n                      borderRadius: 100,\n                      textTransform: 'none',\n                      fontWeight: 600,\n                      width: '100%',\n                    }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    loading={loading}\n                    onClick={handleCustomTimeRange}\n                  >\n                    <Typography fontWeight=\"bold\" marginLeft={0.5} sx={{ fontSize: '14px' }}>\n                      Confirm Range\n                    </Typography>\n                  </LoadingButton>\n                </Grid>\n              </>\n            ) : (\n              <></>\n            )}\n            <Grid item md={2} xs={8}>\n              <ToggleButtonGroup\n                aria-label=\"Type, chart or table\"\n                exclusive\n                value={type}\n                onChange={(event, updatedValue) => setType(updatedValue as ChartType)}\n                sx={{ width: '100%' }}\n              >\n                <ToggleButton value=\"chart\">chart</ToggleButton>\n                <ToggleButton value=\"table\">table</ToggleButton>\n              </ToggleButtonGroup>\n            </Grid>\n          </Grid>\n        </Grid>\n        {loading && (\n          <Grid item md={12} xs={12} sx={{ textAlign: 'center' }}>\n            <CircularProgress />\n          </Grid>\n        )}\n        {error && (\n          <Grid item md={12} xs={12} sx={{ textAlign: 'center' }}>\n            <Typography\n              sx={{\n                fontSize: '22px',\n              }}\n            >\n              {error}\n            </Typography>\n          </Grid>\n        )}\n        {!loading && !error && appointmentStatuses && (\n          <>\n            {singleNumberMetrics.map((metric, index) => (\n              <Grid key={index} item md={4} xs={12} sx={{ width: '33%' }}>\n                <Box\n                  sx={{\n                    backgroundColor: '#0A2143',\n                    color: '#FFFFFF',\n                    padding: '20px',\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    justifyContent: 'space-between',\n                    borderRadius: '15px',\n                  }}\n                >\n                  <Typography\n                    sx={{\n                      fontSize: '20px',\n                    }}\n                  >\n                    {metric.text}\n                  </Typography>\n                  <Typography\n                    sx={{\n                      textAlign: 'center',\n                      fontSize: '35px',\n                      paddingTop: '10px',\n                    }}\n                  >\n                    {metric.metric}\n                  </Typography>\n                </Box>\n              </Grid>\n            ))}\n            <Grid item md={12} xs={12}>\n              {type === ChartType.chart ? (\n                <Line\n                  aria-label={`Number of visits from ${filterStartDate?.toLocaleString(\n                    DateTime.DATE_SHORT\n                  )} - ${filterEndDate?.toLocaleString(\n                    DateTime.DATE_SHORT\n                  )}, select \"table\" in the button group above for a table version`}\n                  role=\"img\"\n                  data={{\n                    labels: appointmentCountByDate?.map((countByDay) =>\n                      countByDay.date.toLocaleString(DateTime.DATE_SHORT)\n                    ),\n                    datasets: [\n                      {\n                        label: 'Appointments',\n                        data: appointmentCountByDate?.map((countByDay) => countByDay.appointments),\n                      },\n                    ],\n                  }}\n                  options={{\n                    scales: {\n                      y: {\n                        beginAtZero: true,\n                      },\n                    },\n                    plugins: {\n                      title: {\n                        text: `Number of visits from ${filterStartDate?.toLocaleString(\n                          DateTime.DATE_SHORT\n                        )} - ${filterEndDate?.toLocaleString(DateTime.DATE_SHORT)}`,\n                        display: true,\n                        font: {\n                          size: 20,\n                        },\n                      },\n                      legend: {\n                        display: false,\n                      },\n                    },\n                  }}\n                ></Line>\n              ) : (\n                <TableContainer component={Paper}>\n                  <Table\n                    aria-label={`Number of visits from ${filterStartDate?.toLocaleString(\n                      DateTime.DATE_SHORT\n                    )} - ${filterEndDate?.toLocaleString(DateTime.DATE_SHORT)}`}\n                  >\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ width: '40%' }}>Date</TableCell>\n                        <TableCell># visits</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {appointmentCountByDate?.map((countByDay) => (\n                        <TableRow>\n                          <TableCell>{countByDay.date.toLocaleString(DateTime.DATE_SHORT)}</TableCell>\n                          <TableCell>{countByDay.appointments}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )}\n            </Grid>\n            <br />\n            <Grid item md={12} xs={12}>\n              {type === ChartType.chart ? (\n                <Bar\n                  aria-label={`Minutes in each status ${filterStartDate?.toLocaleString(\n                    DateTime.DATE_SHORT\n                  )} - ${filterEndDate?.toLocaleString(\n                    DateTime.DATE_SHORT\n                  )}, select \"table\" in the button group above for a table version`}\n                  role=\"img\"\n                  data={{\n                    labels: Object.keys(appointmentStatuses).filter(\n                      (keyTemp) =>\n                        keyTemp !== 'no show' &&\n                        keyTemp !== 'canceled' &&\n                        keyTemp !== 'checked out' &&\n                        keyTemp !== 'pending'\n                    ),\n                    datasets: [\n                      {\n                        label: 'Status',\n                        data: Object.keys(appointmentStatuses)\n                          .filter(\n                            (keyTemp) =>\n                              keyTemp !== 'no show' &&\n                              keyTemp !== 'canceled' &&\n                              keyTemp !== 'checked out' &&\n                              keyTemp !== 'pending'\n                          )\n                          .map((keyTemp) =>\n                            Math.round(appointmentStatuses[keyTemp as VisitStatusHistoryLabel].averageTime)\n                          ),\n                        backgroundColor: Object.keys(appointmentStatuses).map(\n                          (statusTemp) => CHIP_STATUS_MAP[statusTemp as VisitStatusLabel].color.primary\n                        ),\n                      },\n                    ],\n                  }}\n                  options={{\n                    plugins: {\n                      title: {\n                        text: `Minutes in each status ${filterStartDate?.toLocaleString(\n                          DateTime.DATE_SHORT\n                        )} - ${filterEndDate?.toLocaleString(DateTime.DATE_SHORT)}`,\n                        display: true,\n                        font: {\n                          size: 20,\n                        },\n                      },\n                      legend: {\n                        display: false,\n                      },\n                    },\n                  }}\n                ></Bar>\n              ) : (\n                <TableContainer component={Paper}>\n                  <Table\n                    aria-label={`Minutes in each status ${filterStartDate?.toLocaleString(\n                      DateTime.DATE_SHORT\n                    )} - ${filterEndDate?.toLocaleString(DateTime.DATE_SHORT)}`}\n                  >\n                    <TableHead>\n                      <TableRow>\n                        <TableCell sx={{ width: '40%' }}>Status</TableCell>\n                        <TableCell>Average # of Minutes</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {Object.entries(appointmentStatuses).map(([statusTemp, averageTimeTemp]) => (\n                        <TableRow>\n                          <TableCell>{statusTemp}</TableCell>\n                          <TableCell>{Math.floor(averageTimeTemp.averageTime)}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )}\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </PageContainer>\n  );\n}\n"]}