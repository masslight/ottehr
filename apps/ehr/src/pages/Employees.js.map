{"version":3,"file":"Employees.js","sourceRoot":"","sources":["Employees.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Add } from '@mui/icons-material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  Chip,\n  FormControlLabel,\n  Grid,\n  Paper,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Tooltip,\n  useTheme,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { default as React, ReactElement, useCallback, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { AllStates, EmployeeDetails, RoleType, State } from 'utils';\nimport { getEmployees } from '../api/api';\nimport Loading from '../components/Loading';\nimport { EMPLOYEE_ROWS_PER_PAGE, PROVIDER_ROWS_PER_PAGE } from '../constants';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport { formatDateUsingSlashes } from '../helpers/formatDateTime';\nimport { useApiClients } from '../hooks/useAppClients';\nimport useEvolveUser, { EvolveUser } from '../hooks/useEvolveUser';\nimport PageContainer from '../layout/PageContainer';\n\nenum PageTab {\n  employees = 'employees',\n  providers = 'providers',\n}\n\nexport default function EmployeesPage(): ReactElement {\n  const { oystehrZambda } = useApiClients();\n  const currentUser = useEvolveUser();\n  const [pageTab, setPageTab] = useState<PageTab>(PageTab.employees);\n  const [employees, setEmployees] = useState<EmployeeDetails[]>([]);\n\n  const [pageStates, setPageStates] = useState<{\n    [key in PageTab]: {\n      pageNumber: number;\n      rowsPerPage: number;\n      searchText: string;\n      lastLoginFilterChecked: boolean;\n      selectedState?: State | null;\n    };\n  }>({\n    [PageTab.employees]: {\n      pageNumber: 0,\n      rowsPerPage: EMPLOYEE_ROWS_PER_PAGE,\n      searchText: '',\n      lastLoginFilterChecked: false,\n    },\n    [PageTab.providers]: {\n      pageNumber: 0,\n      rowsPerPage: PROVIDER_ROWS_PER_PAGE,\n      searchText: '',\n      lastLoginFilterChecked: false,\n      selectedState: null,\n    },\n  });\n\n  const handleTabChange = useCallback((_: any, newValue: PageTab) => {\n    setPageTab(newValue);\n  }, []);\n\n  const handlePageStateChange = useCallback(\n    (tab: PageTab, newPageState: Partial<(typeof pageStates)[PageTab.providers]>) => {\n      setPageStates((prev) => ({\n        ...prev,\n        [tab]: {\n          ...prev[tab],\n          ...newPageState,\n        },\n      }));\n    },\n    []\n  );\n\n  const { isFetching } = useQuery(\n    ['get-employees', { oystehrZambda }],\n    () => (oystehrZambda ? getEmployees(oystehrZambda) : null),\n    {\n      onSuccess: (response) => {\n        setEmployees(response?.employees ?? []);\n      },\n      enabled: !!oystehrZambda,\n    }\n  );\n\n  return (\n    <PageContainer>\n      <Box sx={{ width: '100%', marginTop: 3 }}>\n        <TabContext value={pageTab}>\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n            <TabList onChange={handleTabChange} aria-label=\"employees tabs\">\n              <Tab label=\"Employees\" value={PageTab.employees} sx={{ textTransform: 'none', fontWeight: 500 }} />\n              <Tab\n                label=\"Providers\"\n                value={PageTab.providers}\n                sx={{ textTransform: 'none', fontWeight: 500 }}\n                data-testid={dataTestIds.employeesPage.providersTabButton}\n              />\n              {isFetching && <Loading />}\n            </TabList>\n          </Box>\n          <Paper sx={{ marginTop: 5 }}>\n            <TabPanel value={pageTab} sx={{ padding: 0 }}>\n              <EmployeesTable\n                employees={employees}\n                currentUser={currentUser}\n                currentTab={pageTab}\n                pageNumber={pageStates[pageTab].pageNumber}\n                rowsPerPage={pageStates[pageTab].rowsPerPage}\n                searchText={pageStates[pageTab].searchText}\n                lastLoginFilterChecked={pageStates[pageTab].lastLoginFilterChecked}\n                selectedState={pageStates[pageTab].selectedState}\n                onPageStateChange={(newPageState) => handlePageStateChange(pageTab, newPageState)}\n              />\n            </TabPanel>\n          </Paper>\n        </TabContext>\n      </Box>\n    </PageContainer>\n  );\n}\n\ninterface EmployeesTableProps {\n  employees: EmployeeDetails[];\n  currentUser: EvolveUser | undefined;\n  currentTab: PageTab;\n  pageNumber: number;\n  rowsPerPage: number;\n  searchText: string;\n  lastLoginFilterChecked: boolean;\n  selectedState?: State | null;\n  onPageStateChange: (newPageState: {\n    pageNumber?: number;\n    rowsPerPage?: number;\n    searchText?: string;\n    lastLoginFilterChecked?: boolean;\n    selectedState?: State | null;\n  }) => void;\n}\n\nfunction EmployeesTable({\n  employees,\n  currentUser,\n  currentTab,\n  pageNumber,\n  rowsPerPage,\n  searchText,\n  lastLoginFilterChecked,\n  selectedState,\n  onPageStateChange,\n}: EmployeesTableProps): ReactElement {\n  const theme = useTheme();\n\n  // Filter the employees based on the search text\n  const filteredEmployees: EmployeeDetails[] = useMemo(\n    () =>\n      employees.filter((employee: EmployeeDetails) => {\n        const name = (function () {\n          if (employee.firstName && employee.lastName) return [employee.lastName, employee.firstName].join(', ');\n          else if (employee.name) return employee.name;\n          else return '';\n        })();\n\n        const lastLoginFilter = (function () {\n          if (!lastLoginFilterChecked) return true;\n          if (employee.lastLogin) return DateTime.fromISO(employee.lastLogin) > DateTime.now().minus({ days: 90 });\n          else return false;\n        })();\n\n        return (\n          name.toLowerCase().includes(searchText.toLowerCase()) &&\n          (currentTab === PageTab.providers ? employee.isProvider : true) &&\n          (currentTab === PageTab.providers && selectedState && selectedState.value !== ''\n            ? employee.licenses.some((license) => license.state === selectedState.value)\n            : true) &&\n          lastLoginFilter\n        );\n      }),\n    [employees, searchText, currentTab, selectedState, lastLoginFilterChecked]\n  );\n\n  // For pagination, only include the rows that are on the current page\n  const pageEmployees: EmployeeDetails[] = React.useMemo(\n    () =>\n      filteredEmployees.slice(\n        pageNumber * rowsPerPage, // skip over the rows from previous pages\n        (pageNumber + 1) * rowsPerPage // only show the rows from the current page\n      ),\n    [filteredEmployees, pageNumber, rowsPerPage]\n  );\n\n  // Handle pagination\n  const handleChangePage = useCallback(\n    (event: unknown, newPageNumber: number): void => {\n      onPageStateChange({ pageNumber: newPageNumber });\n    },\n    [onPageStateChange]\n  );\n\n  // Handle changing the number of rows per page\n  const handleChangeRowsPerPage = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      onPageStateChange({ rowsPerPage: parseInt(event.target.value), pageNumber: 0 });\n    },\n    [onPageStateChange]\n  );\n\n  // Handle changing the search text\n  const handleChangeSearchText = useCallback(\n    (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\n      onPageStateChange({ searchText: event.target.value, pageNumber: 0 });\n    },\n    [onPageStateChange]\n  );\n\n  const handleChangeStateSelect = useCallback(\n    (_event: any, value: State | null): void => {\n      onPageStateChange({ selectedState: value });\n    },\n    [onPageStateChange]\n  );\n\n  const handleChangeLastLoginFilter = useCallback(\n    (_event: any, value: boolean): void => {\n      onPageStateChange({ lastLoginFilterChecked: value, pageNumber: 0 });\n    },\n    [onPageStateChange]\n  );\n\n  return (\n    <>\n      <Paper sx={{ padding: 2 }}>\n        <TableContainer>\n          <Grid container direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n            {/* Employee Name Search Box */}\n            <Box sx={{ display: 'flex', flex: 2, margin: '10px 0' }}>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Search by name\"\n                variant=\"outlined\"\n                onChange={handleChangeSearchText}\n                value={searchText}\n                data-testid={dataTestIds.employeesPage.searchByName}\n                InputProps={{ endAdornment: <SearchIcon /> }}\n                sx={{ width: '100%', paddingRight: 2 }}\n              />\n            </Box>\n            {/* States drop-down */}\n            {currentTab === PageTab.providers && (\n              <Box sx={{ display: 'flex', flex: 2, paddingRight: 3 }}>\n                <StateSelect onChange={handleChangeStateSelect} selectedState={selectedState} />\n              </Box>\n            )}\n            <Box sx={{ display: 'flex', flex: 1, maxWidth: '260px' }}>\n              <FormControlLabel\n                name=\"last_login_filter\"\n                control={<Checkbox checked={lastLoginFilterChecked} onChange={handleChangeLastLoginFilter} />}\n                label=\"Hide last logins that occurred more than 90 days ago\"\n                sx={{ '.MuiFormControlLabel-asterisk': { display: 'none' } }}\n              />\n            </Box>\n            {/* todo reduce code duplicate */}\n            {currentUser?.hasRole([RoleType.Administrator]) ? (\n              <Link to={`/employees/add`}>\n                <Button variant=\"contained\" sx={{ marginLeft: 1 }} startIcon={<Add />}>\n                  Add user\n                </Button>\n              </Link>\n            ) : (\n              <Tooltip title=\"You must be an administrator to add new users\" placement=\"top\">\n                <span>\n                  {/* https://mui.com/material-ui/react-tooltip/#disabled-elements */}\n                  <Button variant=\"contained\" sx={{ marginLeft: 1 }} startIcon={<Add />} disabled>\n                    Add user\n                  </Button>\n                </span>\n              </Tooltip>\n            )}\n          </Grid>\n\n          {/* Employees Table */}\n          <Table sx={{ minWidth: 650 }} aria-label=\"locationsTable\" data-testid={dataTestIds.employeesPage.table}>\n            <TableHead>\n              <TableRow sx={{ '& .MuiTableCell-head': { fontWeight: 'bold', textAlign: 'left' } }}>\n                <TableCell sx={{ width: '25%' }}>Name (Last, First)</TableCell>\n                <TableCell>Phone</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Last Login</TableCell>\n                <TableCell>Status</TableCell>\n                {currentTab === PageTab.providers && (\n                  <>\n                    <TableCell sx={{ maxWidth: '150px' }}>Getting alerts</TableCell>\n                    <TableCell sx={{ maxWidth: '150px' }}>Seen patient last 30 mins</TableCell>\n                  </>\n                )}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {pageEmployees.map((employee) => {\n                const name = (function () {\n                  if (employee.firstName && employee.lastName)\n                    return [employee.lastName, employee.firstName].join(', ');\n                  else if (employee.name) return employee.name;\n                  else return '-';\n                })();\n\n                return (\n                  <TableRow key={employee.id} sx={{ '& .MuiTableCell-body': { textAlign: 'left' } }}>\n                    <TableCell>\n                      <Link\n                        to={`/employee/${employee.id}`}\n                        style={{\n                          display: 'contents',\n                          color: theme.palette.primary.main,\n                        }}\n                      >\n                        {name}\n                      </Link>\n                    </TableCell>\n                    <TableCell\n                      sx={{\n                        color: otherColors.tableRow,\n                      }}\n                    >\n                      {employee.phoneNumber || '-'}\n                    </TableCell>\n                    <TableCell\n                      sx={{\n                        color: otherColors.tableRow,\n                      }}\n                    >\n                      {employee.email || '-'}\n                    </TableCell>\n                    <TableCell\n                      sx={{\n                        color: otherColors.tableRow,\n                      }}\n                    >\n                      {employee.lastLogin ? formatDateUsingSlashes(employee.lastLogin) : 'Never'}\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        label={employee.status.toUpperCase()}\n                        data-testid={dataTestIds.employeesPage.statusChip}\n                        sx={{\n                          backgroundColor:\n                            employee.status === 'Active'\n                              ? otherColors.employeeActiveChip\n                              : otherColors.employeeDeactivatedChip,\n                          color:\n                            employee.status === 'Active'\n                              ? otherColors.employeeActiveText\n                              : otherColors.employeeDeactivatedText,\n                          borderRadius: '4px',\n                          height: '17px',\n                          '& .MuiChip-label': {\n                            padding: '2px 8px 0px 8px',\n                          },\n                          ...theme.typography.subtitle2,\n                        }}\n                      />\n                    </TableCell>\n                    {currentTab === PageTab.providers && (\n                      <>\n                        <TableCell\n                          sx={{\n                            color: otherColors.tableRow,\n                          }}\n                        >\n                          {employee.gettingAlerts && (\n                            <Chip\n                              label=\"GETTING ALERTS\"\n                              color={'info'}\n                              sx={{\n                                borderRadius: '4px',\n                                bgcolor: 'info.light',\n                                color: 'info.dark',\n                                height: '17px',\n                                '& .MuiChip-label': {\n                                  padding: '2px 8px 0px 8px',\n                                },\n                                ...theme.typography.subtitle2,\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell\n                          sx={{\n                            color: otherColors.tableRow,\n                          }}\n                        >\n                          {employee.seenPatientRecently && (\n                            <Chip\n                              label=\"BEEN SEEN\"\n                              sx={{\n                                backgroundColor: otherColors.employeeBeenSeenChip,\n                                color: otherColors.employeeBeenSeenText,\n                                borderRadius: '4px',\n                                height: '17px',\n                                '& .MuiChip-label': {\n                                  padding: '2px 8px 0px 8px',\n                                },\n                                ...theme.typography.subtitle2,\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                      </>\n                    )}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={filteredEmployees.length}\n            rowsPerPage={rowsPerPage}\n            page={pageNumber}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            data-testid={dataTestIds.pagination.paginationContainer}\n          />\n        </TableContainer>\n      </Paper>\n    </>\n  );\n}\n\n/*\n * A general purpose US states select. Might be a good candidate for moving to a\n * separate file.\n */\ninterface StateSelectProps {\n  onChange: (event: React.SyntheticEvent<Element, Event>, value: State | null) => void;\n  selectedState?: State | null;\n}\n\nfunction StateSelect({ onChange, selectedState }: StateSelectProps): ReactElement {\n  const EMPTY_STATE = { label: 'All states', value: '' };\n  const options = [EMPTY_STATE, ...AllStates];\n\n  return (\n    <Autocomplete\n      value={selectedState || EMPTY_STATE}\n      onChange={onChange}\n      data-testid={dataTestIds.employeesPage.providersStateFilter}\n      getOptionLabel={(state) => state.label || 'Unknown'}\n      isOptionEqualToValue={(option, tempValue) => option.value === tempValue.value}\n      options={options}\n      renderOption={(props, option) => {\n        return (\n          <li {...props} key={option.value}>\n            {option.label}\n          </li>\n        );\n      }}\n      fullWidth\n      renderInput={(params) => <TextField name=\"state\" {...params} label=\"State\" />}\n    />\n  );\n}\n"]}