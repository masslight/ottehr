{"version":3,"file":"GroupPage.js","sourceRoot":"","sources":["GroupPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import ContentCopyRoundedIcon from '@mui/icons-material/ContentCopyRounded';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Button, CircularProgress, Grid, Skeleton, TextField, Tooltip, Typography } from '@mui/material';\nimport { BatchInputPostRequest, BatchInputRequest } from '@oystehr/sdk';\nimport { Operation } from 'fast-json-patch';\nimport { HealthcareService, Location, Practitioner, PractitionerRole, Resource } from 'fhir/r4b';\nimport { enqueueSnackbar } from 'notistack';\nimport { ReactElement, useCallback, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport { getPatchBinary, getSlugForBookableResource, SLUG_SYSTEM } from 'utils';\nimport GroupMembers from '../components/schedule/GroupMembers';\nimport { useApiClients } from '../hooks/useAppClients';\nimport PageContainer from '../layout/PageContainer';\n\nconst INTAKE_URL = import.meta.env.VITE_APP_INTAKE_URL;\n\nexport default function GroupPage(): ReactElement {\n  return (\n    <PageContainer>\n      <GroupPageContent />\n    </PageContainer>\n  );\n}\n\nfunction GroupPageContent(): ReactElement {\n  const { oystehr } = useApiClients();\n\n  const groupID = useParams()['group-id'] as string;\n\n  const [group, setGroup] = useState<HealthcareService | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [locations, setLocations] = useState<Location[] | undefined>(undefined);\n  const [practitioners, setPractitioners] = useState<Practitioner[] | undefined>(undefined);\n  const [practitionerRoles, setPractitionerRoles] = useState<PractitionerRole[] | undefined>(undefined);\n  const [selectedLocations, setSelectedLocations] = useState<string[] | undefined>(undefined);\n  const [selectedPractitioners, setSelectedPractitioners] = useState<string[] | undefined>(undefined);\n  const [slug, setSlug] = useState<string>('');\n  const [linkIsCopied, setLinkIsCopied] = useState(false);\n\n  const defaultIntakeUrl = (() => {\n    if (slug) {\n      return `${INTAKE_URL}/prebook/in-person?bookingOn=${slug}&scheduleType=group`;\n    }\n    return '';\n  })();\n\n  const getOptions = useCallback(async () => {\n    if (!oystehr) {\n      console.log('oystehr client is not defined');\n      return;\n    }\n    const request = await oystehr.fhir.batch({\n      requests: [\n        {\n          method: 'GET',\n          url: `/HealthcareService?_id=${groupID}`,\n        },\n        {\n          method: 'GET',\n          url: '/Location',\n        },\n        {\n          method: 'GET',\n          url: '/Practitioner?_revinclude=PractitionerRole:practitioner',\n        },\n      ],\n    });\n    const groupTemp: HealthcareService = (request?.entry?.[0]?.resource as any).entry.map(\n      (resourceTemp: any) => resourceTemp.resource\n    )[0];\n    const locationsTemp: Location[] = (request?.entry?.[1]?.resource as any).entry.map(\n      (resourceTemp: any) => resourceTemp.resource\n    );\n    const practitionerResources: Resource[] = (request?.entry?.[2]?.resource as any).entry.map(\n      (resourceTemp: any) => resourceTemp.resource\n    );\n    const practitionersTemp: Practitioner[] = practitionerResources.filter(\n      (resourceTemp) => resourceTemp.resourceType === 'Practitioner'\n    ) as Practitioner[];\n    const practitionerRolesTemp: PractitionerRole[] = practitionerResources.filter(\n      (resourceTemp) => resourceTemp.resourceType === 'PractitionerRole'\n    ) as PractitionerRole[];\n    console.log(request);\n    setGroup(groupTemp);\n    setSlug(getSlugForBookableResource(groupTemp) ?? '');\n    setLocations(locationsTemp);\n    setPractitioners(practitionersTemp);\n    setPractitionerRoles(practitionerRolesTemp);\n\n    const selectedLocationsTemp = groupTemp.location?.map((location) => {\n      if (!location.reference) {\n        console.log('HealthcareService location does not have reference', location);\n        throw new Error('HealthcareService location does not have reference');\n      }\n      return location.reference?.replace('Location/', '');\n    });\n    setSelectedLocations(selectedLocationsTemp);\n\n    const selectedPractitionerRolesTemp = practitionerRolesTemp?.filter(\n      (practitionerRoleTemp) =>\n        practitionerRoleTemp.healthcareService?.some(\n          (healthcareServiceTemp) => healthcareServiceTemp.reference === `HealthcareService/${groupTemp.id}`\n        )\n    );\n    const selectedPractitionersTemp = practitionersTemp.filter((practitionerTemp) =>\n      selectedPractitionerRolesTemp.some(\n        (selectedPractitionerRoleTemp) =>\n          selectedPractitionerRoleTemp.practitioner?.reference === `Practitioner/${practitionerTemp.id}`\n      )\n    );\n    setSelectedPractitioners(selectedPractitionersTemp.map((practitionerTemp) => practitionerTemp.id || ''));\n  }, [oystehr, groupID]);\n\n  useEffect(() => {\n    void getOptions();\n  }, [getOptions]);\n\n  async function onSubmit(event: any): Promise<void> {\n    try {\n      event.preventDefault();\n      if (!oystehr) {\n        console.log('oystehr client is not defined');\n        return;\n      }\n      if (!selectedPractitioners || !practitionerRoles) {\n        return;\n      }\n      setLoading(true);\n      const practitionerRolePractitionerIDs = practitionerRoles?.map(\n        (practitionerRoleTemp) => practitionerRoleTemp.practitioner?.reference\n      );\n      const practitionerIDToCreatePractitionerRoles = selectedPractitioners.filter(\n        (selectedPractitionerTemp) =>\n          !practitionerRolePractitionerIDs?.includes(`Practitioner/${selectedPractitionerTemp}`)\n      );\n      const practitionerIDToAddHealthcareServicePractitionerRoles = practitionerRoles.filter(\n        (practitionerRoleTemp) =>\n          selectedPractitioners.includes(\n            practitionerRoleTemp.practitioner?.reference?.replace('Practitioner/', '') || ''\n          ) &&\n          !practitionerRoleTemp.healthcareService?.some(\n            (healthcareServiceTemp) => healthcareServiceTemp.reference === `HealthcareService/${groupID}`\n          )\n      );\n      const practitionerIDToRemoveHealthcareServicePractitionerRoles = practitionerRoles.filter(\n        (practitionerRoleTemp) =>\n          !selectedPractitioners.includes(\n            practitionerRoleTemp.practitioner?.reference?.replace('Practitioner/', '') || ''\n          ) &&\n          practitionerRoleTemp.healthcareService?.some(\n            (healthcareServiceTemp) => healthcareServiceTemp.reference === `HealthcareService/${groupID}`\n          )\n      );\n\n      const practitionerRolesResourcesToCreate: PractitionerRole[] = practitionerIDToCreatePractitionerRoles?.map(\n        (practitionerID) => ({\n          resourceType: 'PractitionerRole',\n          practitioner: {\n            reference: `Practitioner/${practitionerID}`,\n          },\n          healthcareService: [\n            {\n              reference: `HealthcareService/${groupID}`,\n            },\n          ],\n        })\n      );\n\n      const patchOperations: Operation[] = [];\n\n      patchOperations.push({\n        op: group?.location ? 'replace' : 'add',\n        path: '/location',\n        value:\n          selectedLocations?.map((selectedLocationTemp) => ({\n            reference: `Location/${selectedLocationTemp}`,\n          })) ?? [],\n      });\n\n      const currentSlug = group ? getSlugForBookableResource(group) ?? '' : '';\n      if (group && slug !== currentSlug) {\n        const newIdentifierList = group.identifier?.filter((identifier) => identifier.system !== SLUG_SYSTEM) || [];\n        if (slug) {\n          newIdentifierList.push({\n            system: SLUG_SYSTEM,\n            value: slug,\n          });\n        }\n        patchOperations.push({\n          op: group.identifier === undefined ? 'add' : 'replace',\n          path: '/identifier',\n          value: newIdentifierList,\n        });\n      }\n\n      const healthcareServicePatchRequest = getPatchBinary({\n        resourceType: 'HealthcareService',\n        resourceId: groupID,\n        patchOperations,\n      });\n\n      const practitionerRolesResourceCreateRequests: BatchInputPostRequest<PractitionerRole>[] =\n        practitionerRolesResourcesToCreate.map((practitionerRoleResourceToCreateTemp) => ({\n          method: 'POST',\n          url: '/PractitionerRole',\n          resource: practitionerRoleResourceToCreateTemp,\n        }));\n      const practitionerRolesResourcePatchRequests: BatchInputRequest<PractitionerRole>[] =\n        practitionerIDToAddHealthcareServicePractitionerRoles.map(\n          (practitionerIDToAddHealthcareServicePractitionerRoleTemp) => {\n            const practitionerRole = practitionerRoles?.find(\n              (practitionerRoleTemp) =>\n                practitionerRoleTemp === practitionerIDToAddHealthcareServicePractitionerRoleTemp\n            );\n            let value: any = {\n              reference: `HealthcareService/${groupID}`,\n            };\n            if (!practitionerRole?.healthcareService) {\n              value = [value];\n            }\n\n            return getPatchBinary({\n              resourceType: 'PractitionerRole',\n              resourceId: practitionerIDToAddHealthcareServicePractitionerRoleTemp.id || '',\n              patchOperations: [\n                {\n                  op: 'add',\n                  path: practitionerRole?.healthcareService ? '/healthcareService/-' : '/healthcareService',\n                  value: value,\n                },\n              ],\n            });\n          }\n        );\n      practitionerRolesResourcePatchRequests.push(\n        ...practitionerIDToRemoveHealthcareServicePractitionerRoles.map(\n          (practitionerIDToRemoveHealthcareServicePractitionerRoleTemp) =>\n            getPatchBinary({\n              resourceType: 'PractitionerRole',\n              resourceId: practitionerIDToRemoveHealthcareServicePractitionerRoleTemp.id || '',\n              patchOperations: [\n                {\n                  op: 'replace',\n                  path: '/healthcareService',\n                  value: practitionerRoles\n                    ?.find(\n                      (practitionerRoleTemp) =>\n                        practitionerRoleTemp === practitionerIDToRemoveHealthcareServicePractitionerRoleTemp\n                    )\n                    ?.healthcareService?.filter(\n                      (locationTemp) => locationTemp.reference !== `HealthcareService/${groupID}`\n                    ),\n                },\n              ],\n            })\n        )\n      );\n\n      await oystehr.fhir.transaction<PractitionerRole | HealthcareService>({\n        requests: [\n          ...practitionerRolesResourceCreateRequests,\n          ...practitionerRolesResourcePatchRequests,\n          healthcareServicePatchRequest,\n        ],\n      });\n\n      enqueueSnackbar('Group schedule saved successfully!', { variant: 'success' });\n      await getOptions();\n    } catch (error) {\n      enqueueSnackbar('Failed to save group schedule.', { variant: 'error' });\n      console.error('Error saving group schedule:', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  if (!group) {\n    return (\n      <div style={{ width: '100%', height: '250px' }}>\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <CustomBreadcrumbs\n        chain={[\n          { link: '/schedules', state: { defaultTab: 'group' }, children: 'Schedules' },\n          { link: '#', children: group.name || <Skeleton width={150} /> },\n        ]}\n      />\n\n      <Typography variant=\"h4\">Manage the schedule for {group?.name}</Typography>\n      <Typography variant=\"body1\">\n        This is a group schedule. Its availability is made up of the schedules of the locations and providers selected.\n      </Typography>\n      <form onSubmit={onSubmit}>\n        <Grid container direction=\"column\" spacing={4} sx={{ marginTop: 0 }}>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Slug\"\n              value={slug}\n              onChange={(event) => {\n                setSlug(event.target.value);\n              }}\n              sx={{ width: '250px' }}\n            />\n            <Typography variant=\"body2\" sx={{ pt: 1, pb: 0.5, fontWeight: 600, display: slug ? 'block' : 'none' }}>\n              Share booking link to this schedule:\n            </Typography>\n            <Box sx={{ display: defaultIntakeUrl ? 'flex' : 'none', alignItems: 'center', gap: 0.5, mb: 3 }}>\n              <Tooltip\n                title={linkIsCopied ? 'Link copied!' : 'Copy link'}\n                placement=\"top\"\n                arrow\n                onClose={() => {\n                  setTimeout(() => {\n                    setLinkIsCopied(false);\n                  }, 200);\n                }}\n              >\n                <Button\n                  onClick={() => {\n                    void navigator.clipboard.writeText(defaultIntakeUrl);\n                    setLinkIsCopied(true);\n                  }}\n                  sx={{ p: 0, minWidth: 0 }}\n                >\n                  <ContentCopyRoundedIcon fontSize=\"small\" />\n                </Button>\n              </Tooltip>\n              <Link to={defaultIntakeUrl} target=\"_blank\">\n                <Typography variant=\"body2\">{defaultIntakeUrl}</Typography>\n              </Link>\n            </Box>\n          </Grid>\n          <Grid container item xs={6} gap={2}>\n            <Grid item xs={3}>\n              <GroupMembers\n                option=\"locations\"\n                options={\n                  locations\n                    ? locations.map((locationTemp) => ({\n                        value: locationTemp.id || 'Undefined name',\n                        label: locationTemp.name || 'Undefined name',\n                      }))\n                    : []\n                }\n                values={\n                  selectedLocations\n                    ? selectedLocations?.map((locationTemp) => {\n                        const locationName = locations?.find((location) => location.id === locationTemp)?.name;\n                        return {\n                          value: locationTemp,\n                          label: locationName || 'Undefined name',\n                        };\n                      })\n                    : []\n                }\n                onChange={(event, value) => {\n                  setSelectedLocations(value.map((valueTemp: any) => valueTemp.value));\n                }}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <GroupMembers\n                option=\"providers\"\n                options={\n                  practitioners\n                    ? practitioners.map((practitionerTemp) => ({\n                        value: practitionerTemp.id || 'Undefined name',\n                        label: practitionerTemp.name\n                          ? oystehr?.fhir.formatHumanName(practitionerTemp.name[0]) || 'Undefined name'\n                          : 'Undefined name',\n                      }))\n                    : []\n                }\n                values={\n                  selectedPractitioners\n                    ? selectedPractitioners.map((practitionerTemp) => {\n                        const practitionerName = practitioners?.find(\n                          (practitioner) => practitioner.id === practitionerTemp\n                        )?.name?.[0];\n                        return {\n                          value: practitionerTemp,\n                          label: practitionerName\n                            ? oystehr?.fhir.formatHumanName(practitionerName) || 'Undefined name'\n                            : 'Undefined name',\n                        };\n                      })\n                    : []\n                }\n                onChange={(event, value) => setSelectedPractitioners(value.map((valueTemp: any) => valueTemp.value))}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={2}>\n            <LoadingButton loading={loading} type=\"submit\" variant=\"contained\">\n              Save\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  );\n}\n"]}