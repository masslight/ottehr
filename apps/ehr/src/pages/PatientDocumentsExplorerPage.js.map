{"version":3,"file":"PatientDocumentsExplorerPage.js","sourceRoot":"","sources":["PatientDocumentsExplorerPage.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAA8C;AAC9C,qEAAoE;AACpE,0CAA+G;AAC/G,0CAAuC;AACvC,+BAAiC;AACjC,uCAA4C;AAC5C,+BAAmF;AACnF,qDAA0D;AAC1D,+BAAoC;AACpC,qEAAgE;AAChE,uDAA8E;AAC9E,6DAA4D;AAC5D,iDAA+C;AAC/C,wGAGiE;AACjE,0GAGkE;AAClE,6DAA4D;AAC5D,wDAAuD;AACvD,gEAAgH;AAChH,wDAAyD;AAEzD,IAAM,yBAAyB,GAAG,IAAA,iBAAM,EAAC,OAAO,CAAC,CAAC;IAChD,IAAI,EAAE,eAAe;IACrB,QAAQ,EAAE,YAAY;IACtB,MAAM,EAAE,CAAC;IACT,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,CAAC;IACP,UAAU,EAAE,QAAQ;IACpB,KAAK,EAAE,CAAC;CACT,CAAC,CAAC;AAEH,IAAM,4BAA4B,GAAO;;IACvC,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEjB,IAAI,SAAS,GAAK,IAAA,4BAAS,GAAE,GAAhB,CAAiB;IACtC,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAEzB,IAAA,KAA6C,IAAA,6BAAa,EAAC,SAAS,CAAC,EAAnE,OAAO,aAAA,EAAW,oBAAoB,aAA6B,CAAC;IAC5E,IAAA,iBAAS,EAAC;QACR,IAAI,CAAC,OAAO;YAAE,OAAO;QACrB,+BAAe,CAAC,QAAQ,CAAC;YACvB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAER,IAAA,KAQF,IAAA,qCAAiB,EAAC,SAAU,CAAC,EAP/B,SAAS,eAAA,EACT,kBAAkB,wBAAA,EAClB,gBAAgB,sBAAA,EAChB,gBAAgB,sBAAA,EAChB,eAAe,qBAAA,EACf,gBAAgB,sBAAA,EAChB,eAAe,qBACgB,CAAC;IAE5B,IAAA,KAAwD,IAAA,gBAAQ,EAAS,EAAE,CAAC,EAA3E,uBAAuB,QAAA,EAAE,0BAA0B,QAAwB,CAAC;IAC7E,IAAA,KAAkD,IAAA,gBAAQ,EAAS,EAAE,CAAC,EAArE,oBAAoB,QAAA,EAAE,uBAAuB,QAAwB,CAAC;IACvE,IAAA,KAA8C,IAAA,gBAAQ,EAAkB,IAAI,CAAC,EAA5E,kBAAkB,QAAA,EAAE,qBAAqB,QAAmC,CAAC;IAC9E,IAAA,KAAsC,IAAA,gBAAQ,EAAqC,SAAS,CAAC,EAA5F,cAAc,QAAA,EAAE,iBAAiB,QAA2D,CAAC;IAEpG,IAAM,sBAAsB,GAAG,uBAAuB,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,kBAAkB,IAAI,cAAc,CAAC;IAEjH,IAAM,+BAA+B,GAAG;QACtC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC;IAEF,IAAA,iBAAS,EAAC;QACR,IAAM,mBAAmB,GAAG,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC;QAChF,IAAM,OAAO,GAA4B;YACvC,YAAY,EAAE,oBAAoB;YAClC,eAAe,EAAE,cAAc;YAC/B,SAAS,EAAE,mBAAmB;SAC/B,CAAC;QAEF,eAAe,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC,CAAC;IAEhF,IAAM,iBAAiB,GAAG,IAAA,eAAO,EAC/B;QACE,OAAA,IAAA,mBAAQ,EAAC,UAAC,KAAa,EAAE,WAAgC;YACvD,WAAW,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC;IAFR,CAEQ,EACV,EAAE,CACH,CAAC;IAEF,IAAM,8BAA8B,GAA2B,IAAA,mBAAW,EACxE,UAAC,KAAU,EAAE,KAAU,EAAE,KAAa;QACpC,IAAI,KAAK,KAAK,MAAM,EAAE,CAAC;YACrB,IAAM,YAAY,GAAG,gBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7C,qBAAqB,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC;IACH,CAAC,EACD,EAAE,CACH,CAAC;IAEF,IAAM,uBAAuB,GAAG,IAAA,mBAAW,EAAC;QAC1C,IAAM,mBAAmB,GAAG,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,CAAC;QAChF,IAAM,OAAO,GAA4B;YACvC,YAAY,EAAE,oBAAoB;YAClC,eAAe,EAAE,cAAc;YAC/B,SAAS,EAAE,mBAAmB;SAC/B,CAAC;QAEF,eAAe,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,oBAAoB,EAAE,kBAAkB,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC,CAAC;IAEhF,IAAM,uBAAuB,GAAG,IAAA,mBAAW,EACzC,UAAC,CAAsD;QACrD,IAAM,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,0BAA0B,CAAC,SAAS,CAAC,CAAC;QACtC,iBAAiB,CAAC,SAAS,EAAE;YAC3B,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC,EACD,CAAC,iBAAiB,CAAC,CACpB,CAAC;IAEF,IAAM,oBAAoB,GAAG,IAAA,mBAAW,EACtC,UAAC,MAA8B;QAC7B,IAAM,cAAc,GAAuC,MAAM,CAAC,EAAE,MAAK,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,EAAE,CAAA,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;QAEjH,iBAAiB,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC,EACD,CAAC,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,EAAE,CAAC,CACrB,CAAC;IAEF,IAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAC;QACrC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC5B,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC7B,uBAAuB,CAAC,EAAE,CAAC,CAAC;QAC5B,0BAA0B,CAAC,EAAE,CAAC,CAAC;QAC/B,eAAe,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;IAEtB,IAAM,+BAA+B,GAAG,IAAA,mBAAW,EACjD,UAAO,KAAoC;;;;;;oBACjC,KAAK,GAAK,KAAK,CAAC,MAAM,MAAjB,CAAkB;oBAEzB,QAAQ,GAAG,MAAA,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,mCAAI,EAAE,CAAC;oBAC9C,YAAY,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;wBAC3D,sBAAO;oBACT,CAAC;oBAEK,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC;oBAE7B,oBAAoB,GAAG,6BAA6B,CAAC;oBAC3D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;wBACzC,IAAA,2BAAe,EACb,yHAAyH,EACzH;4BACE,OAAO,EAAE,OAAO;yBACjB,CACF,CAAC;wBACF,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;wBACxB,sBAAO;oBACT,CAAC;oBAEK,QAAQ,GAAG,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,EAAE,CAAC;oBACpC,IAAI,CAAC,QAAQ,EAAE,CAAC;wBACd,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;wBACnD,sBAAO;oBACT,CAAC;oBAED,qBAAM,eAAe,CAAC,oBAAoB,CAAC;4BACzC,OAAO,EAAE,YAAY;4BACrB,QAAQ,EAAE,QAAQ;4BAClB,YAAY,EAAE,QAAQ;yBACvB,CAAC,EAAA;;oBAJF,SAIE,CAAC;oBAEH,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;;;;SACzB,EACD,CAAC,eAAe,EAAE,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,EAAE,CAAC,CACtC,CAAC;IAEF,IAAM,oBAAoB,GAAyB,IAAA,eAAO,EAAC;QACzD,OAAO;YACL,eAAe,EAAE;gBACf,OAAO,IAAI,CAAC;YACd,CAAC;YACD,kBAAkB,EAAE,gBAAgB;SACrC,CAAC;IACJ,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAEvB,IAAI,oBAAoB;QAAE,OAAO,CAAC,6BAAa,CAAC,AAAD,EAAG,CAAC;IAEnD,OAAO,CACL,CAAC,cAAG,CACF;MAAA,CAAC,gBAAM,CAAC,aAAa,CAAC,CAAC,+BAA+B,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,EACtE;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAC/E;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAC5D;UAAA,CAAC,2BAAiB,CAChB,KAAK,CAAC,CAAC;YACL,EAAE,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE;YAC3C;gBACE,IAAI,EAAE,mBAAY,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,EAAE,CAAE;gBAC/B,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,IAAA,mBAAW,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;aAC9C;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,QAAQ,EAAE,qBAAqB;aAChC;SACF,CAAC,EAEJ;UAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,CAClD;;UACF,EAAE,qBAAU,CAEZ;;UAAA,CAAC,gBAAK,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,gBAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACtD;YAAA,CAAC,eAAI,CACH,SAAS,CACT,EAAE,CAAC,CAAC;YACF,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,KAAK;YACZ,eAAe,EAAE,aAAa;SAC/B,CAAC,CAEF;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,oBAAS,CACR,QAAQ,CAAC,CAAC,KAAK,CAAC,CAChB,KAAK,CAAC,CAAC,uBAAuB,CAAC,CAC/B,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAClC,SAAS,CACT,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,UAAU,CAChB,WAAW,CAAC,QAAQ,CACpB,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAClC,UAAU,CAAC,CAAC;YACV,YAAY,EAAE,CACZ,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,CAC3E;wBAAA,CAAC,qBAAU,CACT,UAAU,CAAC,sBAAsB,CACjC,OAAO,CAAC,CAAC,uBAAuB,CAAC,CACjC,WAAW,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,cAAc,EAAE,EAAtB,CAAsB,CAAC,CAC/C,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAEb;0BAAA,CAAC,wBAAkB,CAAC,AAAD,EACrB;wBAAA,EAAE,qBAAU,CACd;sBAAA,EAAE,cAAG,CAAC,CACP;SACF,CAAC,EAEN;cAAA,EAAE,eAAI,CAEN;;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CACvC;kBAAA,CAAC,oBAAU,CACT,KAAK,CAAC,YAAY,CAClB,IAAI,CAAC,CAAC,kBAAkB,CAAC,CACzB,OAAO,CAAC,CAAC,qBAAqB,CAAC,CAC/B,SAAS,CAAC,CAAC,KAAK,CAAC,CACjB,uBAAuB,CAAC,CAAC,KAAK,CAAC,CAC/B,aAAa,CAAC,CAAC,IAAI,CAAC,CACpB,KAAK,CAAC,CAAC,IAAI,CAAC,CACZ,YAAY,CAAC,CAAC,8BAA8B,CAAC,EAEjD;gBAAA,EAAE,cAAG,CACP;cAAA,EAAE,eAAI,CAEN;;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC,CACvC;kBAAA,CAAC,sBAAsB,IAAI,CACzB,CAAC,6BAAa,CACZ,MAAM,CAAC,QAAQ,CACf,OAAO,CAAC,MAAM,CACd,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CACxC,OAAO,CAAC,CAAC,kBAAkB,CAAC,CAE5B;;oBACF,EAAE,6BAAa,CAAC,CACjB,CACH;gBAAA,EAAE,cAAG,CACP;cAAA,EAAE,eAAI,CACR;YAAA,EAAE,eAAI,CAEN;;YAAA,CAAC,eAAI,CACH,SAAS,CACT,EAAE,CAAC,CAAC;YACF,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,MAAM;SACd,CAAC,CAEF;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;gBAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,eAAe,EAAE,SAAS;YAC1B,YAAY,EAAE,CAAC;SAChB,CAAC,CAEF;kBAAA,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAClB,CAAC,mEAAoC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAG,CACxD,CAAC,CAAC,CAAC,CACF,CAAC,2DAA4B,CAC3B,gBAAgB,CAAC,CAAC,gBAAgB,CAAC,CACnC,cAAc,CAAC,CAAC,cAAc,CAAC,CAC/B,gBAAgB,CAAC,CAAC,oBAAoB,CAAC,EACvC,CACH,CACH;gBAAA,EAAE,cAAG,CACP;cAAA,EAAE,eAAI,CAEN;;cAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC9B;gBAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACzD;kBAAA,CAAC,cAAc,CAAC,CAAC,CAAC,CAChB,CAAC,qBAAU,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,CACtF;sBAAA,CAAC,cAAc,CAAC,UAAU,CAAE,CAAA,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAK,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,mCAAI,CAAC,CAAE,CACtF;oBAAA,EAAE,qBAAU,CAAC,CACd,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,CACtF;;oBACF,EAAE,qBAAU,CAAC,CACd,CAED;;kBAAA,CAAC,6BAAa,CACZ,QAAQ,CAAC,CAAC,CAAC,cAAc,IAAI,eAAe,CAAC,WAAW,CAAC,CACzD,OAAO,CAAC,CAAC,eAAe,CAAC,WAAW,CAAC,CACrC,SAAS,CAAC,OAAO,CACjB,MAAM,CAAC,QAAQ,CACf,OAAO,CAAC,UAAU,CAClB,SAAS,CAAC,CAAC,CAAC,aAAO,CAAC,QAAQ,CAAC,OAAO,EAAG,CAAC,CAExC;;oBACA,CAAC,yBAAyB,CACxB,QAAQ,CAAC,CAAC,+BAA+B,CAAC,CAC1C,IAAI,CAAC,MAAM,CACX,OAAO,CAAC,aAAa,EAEzB;kBAAA,EAAE,6BAAa,CACjB;gBAAA,EAAE,cAAG,CAEL;;gBAAA,CAAC,6DAA6B,CAC5B,aAAa,CAAC,CAAC,kBAAkB,CAAC,CAClC,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,EAE/C;cAAA,EAAE,eAAI,CACR;YAAA,EAAE,eAAI,CACR;UAAA,EAAE,gBAAK,CACT;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,4BAA4B,CAAC","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport { Box, debounce, Grid, IconButton, Paper, Stack, TextField, Typography, useTheme } from '@mui/material';\nimport { styled } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { ChangeEvent, FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getFullName } from 'utils';\nimport CustomBreadcrumbs from '../components/CustomBreadcrumbs';\nimport DateSearch, { CustomFormEventHandler } from '../components/DateSearch';\nimport { LoadingScreen } from '../components/LoadingScreen';\nimport { Header } from '../components/patient';\nimport {\n  PatientDocumentFoldersColumn,\n  PatientDocumentFoldersColumnSkeleton,\n} from '../components/patient/docs/PatientDocumentFoldersColumn';\nimport {\n  DocumentTableActions,\n  PatientDocumentsExplorerTable,\n} from '../components/patient/docs/PatientDocumentsExplorerTable';\nimport { RoundedButton } from '../components/RoundedButton';\nimport { useGetPatient } from '../hooks/useGetPatient';\nimport { PatientDocumentsFilters, PatientDocumentsFolder, useGetPatientDocs } from '../hooks/useGetPatientDocs';\nimport { usePatientStore } from '../state/patient.store';\n\nconst FileAttachmentHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1,\n});\n\nconst PatientDocumentsExplorerPage: FC = () => {\n  const theme = useTheme();\n\n  const { id: patientId } = useParams();\n  const navigate = useNavigate();\n\n  const { patient, loading: isLoadingPatientData } = useGetPatient(patientId);\n  useEffect(() => {\n    if (!patient) return;\n    usePatientStore.setState({\n      patient: patient,\n    });\n  }, [patient]);\n\n  const {\n    documents,\n    isLoadingDocuments,\n    documentsFolders,\n    isLoadingFolders,\n    searchDocuments,\n    downloadDocument,\n    documentActions,\n  } = useGetPatientDocs(patientId!);\n\n  const [searchDocNameFieldValue, setSearchDocNameFieldValue] = useState<string>('');\n  const [docNameTextDebounced, setDocNameTextDebounced] = useState<string>('');\n  const [searchDocAddedDate, setSearchDocAddedDate] = useState<DateTime | null>(null);\n  const [selectedFolder, setSelectedFolder] = useState<PatientDocumentsFolder | undefined>(undefined);\n\n  const shouldShowClearFilters = searchDocNameFieldValue.trim().length > 0 || searchDocAddedDate || selectedFolder;\n\n  const handleBackClickWithConfirmation = (): void => {\n    navigate(-1);\n  };\n\n  useEffect(() => {\n    const searchDateFromState = searchDocAddedDate ? searchDocAddedDate : undefined;\n    const filters: PatientDocumentsFilters = {\n      documentName: docNameTextDebounced,\n      documentsFolder: selectedFolder,\n      dateAdded: searchDateFromState,\n    };\n\n    searchDocuments(filters);\n  }, [docNameTextDebounced, searchDocAddedDate, selectedFolder, searchDocuments]);\n\n  const debounceTextInput = useMemo(\n    () =>\n      debounce((value: string, onDebounced: (v: string) => void) => {\n        onDebounced(value);\n      }, 2000),\n    []\n  );\n\n  const handleSearchDocAddedDateChange: CustomFormEventHandler = useCallback(\n    (event: any, value: any, field: string): void => {\n      if (field === 'date') {\n        const selectedDate = DateTime.fromISO(value);\n        setSearchDocAddedDate(selectedDate);\n      }\n    },\n    []\n  );\n\n  const handleSearchButtonClick = useCallback(() => {\n    const searchDateFromState = searchDocAddedDate ? searchDocAddedDate : undefined;\n    const filters: PatientDocumentsFilters = {\n      documentName: docNameTextDebounced,\n      documentsFolder: selectedFolder,\n      dateAdded: searchDateFromState,\n    };\n\n    searchDocuments(filters);\n  }, [docNameTextDebounced, searchDocAddedDate, searchDocuments, selectedFolder]);\n\n  const handleSearchInputChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n      const textValue = e.target.value;\n      setSearchDocNameFieldValue(textValue);\n      debounceTextInput(textValue, () => {\n        setDocNameTextDebounced(textValue);\n      });\n    },\n    [debounceTextInput]\n  );\n\n  const handleFolderSelected = useCallback(\n    (folder: PatientDocumentsFolder) => {\n      const folderToSelect: PatientDocumentsFolder | undefined = folder.id !== selectedFolder?.id ? folder : undefined;\n\n      setSelectedFolder(folderToSelect);\n    },\n    [selectedFolder?.id]\n  );\n\n  const handleClearFilters = useCallback(() => {\n    setSearchDocAddedDate(null);\n    setSelectedFolder(undefined);\n    setDocNameTextDebounced('');\n    setSearchDocNameFieldValue('');\n    searchDocuments({});\n  }, [searchDocuments]);\n\n  const handleDocumentUploadInputChange = useCallback(\n    async (event: ChangeEvent<HTMLInputElement>): Promise<void> => {\n      const { files } = event.target;\n\n      const allFiles = (files && Array.from(files)) ?? [];\n      const selectedFile = allFiles.at(0);\n\n      if (!selectedFile) {\n        console.warn('No file selected/available - earlier skip!');\n        return;\n      }\n\n      const fileName = selectedFile.name;\n\n      const validFileNamePattern = /^[a-zA-Z0-9+!\\-_'()\\\\.@$]+$/;\n      if (!validFileNamePattern.test(fileName)) {\n        enqueueSnackbar(\n          \"Invalid file name. Spaces are not allowed. Only letters, numbers, and these characters are allowed: + ! - _ ' ( ) . @ $\",\n          {\n            variant: 'error',\n          }\n        );\n        event.target.value = '';\n        return;\n      }\n\n      const folderId = selectedFolder?.id;\n      if (!folderId) {\n        console.warn('No folder selected - earlier skip!');\n        return;\n      }\n\n      await documentActions.uploadDocumentAction({\n        docFile: selectedFile,\n        fileName: fileName,\n        fileFolderId: folderId,\n      });\n\n      event.target.value = '';\n    },\n    [documentActions, selectedFolder?.id]\n  );\n\n  const documentTableActions: DocumentTableActions = useMemo(() => {\n    return {\n      isActionAllowed: (): boolean => {\n        return true;\n      },\n      onDocumentDownload: downloadDocument,\n    };\n  }, [downloadDocument]);\n\n  if (isLoadingPatientData) return <LoadingScreen />;\n\n  return (\n    <Box>\n      <Header handleDiscard={handleBackClickWithConfirmation} id={patientId} />\n      <Box sx={{ display: 'flex', flexDirection: 'column', padding: theme.spacing(3) }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <CustomBreadcrumbs\n            chain={[\n              { link: '/patients', children: 'Patients' },\n              {\n                link: `/patient/${patient?.id}`,\n                children: patient ? getFullName(patient) : '',\n              },\n              {\n                link: '#',\n                children: `Patient Information`,\n              },\n            ]}\n          />\n          <Typography variant=\"subtitle1\" color=\"primary.main\">\n            Docs\n          </Typography>\n\n          <Paper sx={{ padding: 3 }} component={Stack} spacing={2}>\n            <Grid\n              container\n              sx={{\n                height: 'auto',\n                width: '50%',\n                backgroundColor: 'transparent',\n              }}\n            >\n              <Grid item xs={7}>\n                <TextField\n                  disabled={false}\n                  value={searchDocNameFieldValue}\n                  onChange={handleSearchInputChange}\n                  fullWidth\n                  size=\"small\"\n                  label=\"Document\"\n                  placeholder=\"Search\"\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    endAdornment: (\n                      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                        <IconButton\n                          aria-label=\"clear patient search\"\n                          onClick={handleSearchButtonClick}\n                          onMouseDown={(event) => event.preventDefault()}\n                          sx={{ p: 0 }}\n                        >\n                          <SearchOutlinedIcon />\n                        </IconButton>\n                      </Box>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={4}>\n                <Box sx={{ ml: 2, flexDirection: 'row' }}>\n                  <DateSearch\n                    label=\"Added Date\"\n                    date={searchDocAddedDate}\n                    setDate={setSearchDocAddedDate}\n                    updateURL={false}\n                    storeDateInLocalStorage={false}\n                    closeOnSelect={true}\n                    small={true}\n                    handleSubmit={handleSearchDocAddedDateChange}\n                  />\n                </Box>\n              </Grid>\n\n              <Grid item xs={1}>\n                <Box sx={{ ml: 2, flexDirection: 'row' }}>\n                  {shouldShowClearFilters && (\n                    <RoundedButton\n                      target=\"_blank\"\n                      variant=\"text\"\n                      sx={{ color: theme.palette.error.main }}\n                      onClick={handleClearFilters}\n                    >\n                      Clear filters\n                    </RoundedButton>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n\n            <Grid\n              container\n              sx={{\n                height: 'auto',\n                width: '100%',\n              }}\n            >\n              <Grid item xs={3}>\n                <Box\n                  sx={{\n                    backgroundColor: '#F9FAFB',\n                    borderRadius: 2,\n                  }}\n                >\n                  {isLoadingFolders ? (\n                    <PatientDocumentFoldersColumnSkeleton stubsCount={4} />\n                  ) : (\n                    <PatientDocumentFoldersColumn\n                      documentsFolders={documentsFolders}\n                      selectedFolder={selectedFolder}\n                      onFolderSelected={handleFolderSelected}\n                    />\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs={9} sx={{ pl: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  {selectedFolder ? (\n                    <Typography color=\"primary.main\" sx={{ flexGrow: 1, fontSize: '24px', fontWeight: 800 }}>\n                      {selectedFolder.folderName} {isLoadingDocuments ? '' : `- ${documents?.length ?? 0}`}\n                    </Typography>\n                  ) : (\n                    <Typography color=\"primary.main\" sx={{ flexGrow: 1, fontSize: '24px', fontWeight: 800 }}>\n                      All documents\n                    </Typography>\n                  )}\n\n                  <RoundedButton\n                    disabled={!selectedFolder || documentActions.isUploading}\n                    loading={documentActions.isUploading}\n                    component=\"label\"\n                    target=\"_blank\"\n                    variant=\"outlined\"\n                    startIcon={<AddIcon fontSize=\"small\" />}\n                  >\n                    Upload New Doc\n                    <FileAttachmentHiddenInput\n                      onChange={handleDocumentUploadInputChange}\n                      type=\"file\"\n                      capture=\"environment\"\n                    />\n                  </RoundedButton>\n                </Box>\n\n                <PatientDocumentsExplorerTable\n                  isLoadingDocs={isLoadingDocuments}\n                  documents={documents}\n                  documentTableActions={documentTableActions}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PatientDocumentsExplorerPage;\n"]}