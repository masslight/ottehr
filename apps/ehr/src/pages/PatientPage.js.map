{"version":3,"file":"PatientPage.js","sourceRoot":"","sources":["PatientPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { TabContext, TabList, TabPanel } from '@mui/lab';\nimport { Box, Paper, Skeleton, Stack, Tab, Typography } from '@mui/material';\nimport { useMemo, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { PatientInHouseLabsTab } from 'src/components/PatientInHouseLabsTab';\nimport { PatientRadiologyTab } from 'src/components/PatientRadiologyTab';\nimport { getFirstName, getLastName, ServiceMode } from 'utils';\nimport CustomBreadcrumbs from '../components/CustomBreadcrumbs';\nimport { Contacts, FullNameDisplay, IdentifiersRow, PatientAvatar, Summary } from '../components/patient';\nimport { PatientFollowupEncountersGrid } from '../components/patient/PatientFollowupEncountersGrid';\nimport { PatientEncountersGrid } from '../components/PatientEncountersGrid';\nimport { PatientLabsTab } from '../components/PatientLabsTab';\nimport { RoundedButton } from '../components/RoundedButton';\nimport { dataTestIds } from '../constants/data-test-ids';\nimport { FEATURE_FLAGS } from '../constants/feature-flags';\nimport { useGetPatient } from '../hooks/useGetPatient';\nimport PageContainer from '../layout/PageContainer';\n\nexport default function PatientPage(): JSX.Element {\n  const { id } = useParams();\n  const location = useLocation();\n  const [tab, setTab] = useState(location.state?.defaultTab || 'encounters');\n\n  const { appointments, loading, patient } = useGetPatient(id);\n\n  const { firstName, lastName } = useMemo(() => {\n    if (!patient) return {};\n    return {\n      firstName: getFirstName(patient),\n      lastName: getLastName(patient),\n    };\n  }, [patient]);\n\n  const latestAppointment = appointments?.[0];\n\n  return (\n    <>\n      <PageContainer tabTitle=\"Patient Information\">\n        <Stack spacing={2}>\n          <CustomBreadcrumbs\n            chain={[\n              { link: '/patients', children: 'Patients' },\n              {\n                link: '#',\n                children: loading ? (\n                  <Skeleton width={150} />\n                ) : (\n                  <>\n                    <Typography component=\"span\" sx={{ fontWeight: 500 }}>{`${lastName}, `}</Typography>\n                    <Typography component=\"span\">{`${firstName}`}</Typography>\n                  </>\n                ),\n              },\n            ]}\n          />\n          <Typography variant=\"subtitle1\" color=\"primary.main\">\n            Patient Record\n          </Typography>\n\n          <Paper\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: 3,\n              mt: 2,\n              p: 3,\n            }}\n          >\n            <PatientAvatar id={id} />\n\n            <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', gap: 1 }}>\n              <IdentifiersRow id={id} />\n              <FullNameDisplay patient={patient} loading={loading} />\n              <Summary patient={patient} loading={loading} />\n              <Contacts patient={patient} loading={loading} />\n\n              <Box sx={{ display: 'flex', gap: 1 }}>\n                <RoundedButton\n                  to={`/patient/${id}/info`}\n                  data-testid={dataTestIds.patientRecordPage.seeAllPatientInfoButton}\n                >\n                  See All Patient Info\n                </RoundedButton>\n              </Box>\n            </Box>\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n              {latestAppointment && (\n                <RoundedButton\n                  target=\"_blank\"\n                  sx={{ width: '100%' }}\n                  to={\n                    latestAppointment.serviceMode === ServiceMode.virtual\n                      ? `/telemed/appointments/${latestAppointment.id}?tab=sign`\n                      : `/in-person/${latestAppointment.id}/progress-note`\n                  }\n                >\n                  Recent Progress Note\n                </RoundedButton>\n              )}\n              <RoundedButton sx={{ width: '100%' }} to={`/patient/${id}/docs`}>\n                Review Docs\n              </RoundedButton>\n            </Box>\n          </Paper>\n\n          <TabContext value={tab}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <TabList onChange={(_, newTab) => setTab(newTab)}>\n                <Tab\n                  value=\"encounters\"\n                  label={\n                    <Typography sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}>\n                      Visits - {appointments?.length || 0}\n                    </Typography>\n                  }\n                />\n                <Tab\n                  value=\"followups\"\n                  label={\n                    <Typography sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}>\n                      Patient Follow-ups\n                    </Typography>\n                  }\n                />\n                {FEATURE_FLAGS.LAB_ORDERS_ENABLED && (\n                  <Tab\n                    value=\"labs\"\n                    label={\n                      <Typography sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}>Labs</Typography>\n                    }\n                  />\n                )}\n                {FEATURE_FLAGS.IN_HOUSE_LABS_ENABLED && (\n                  <Tab\n                    value=\"in-house-labs\"\n                    label={\n                      <Typography sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}>\n                        In-House Labs\n                      </Typography>\n                    }\n                  />\n                )}\n                {FEATURE_FLAGS.RADIOLOGY_ENABLED && (\n                  <Tab\n                    value=\"radiology\"\n                    label={\n                      <Typography sx={{ textTransform: 'none', fontWeight: 500, fontSize: '14px' }}>\n                        Radiology\n                      </Typography>\n                    }\n                  />\n                )}\n              </TabList>\n            </Box>\n\n            <TabPanel value=\"encounters\" sx={{ p: 0 }}>\n              <PatientEncountersGrid appointments={appointments} loading={loading} />\n            </TabPanel>\n            <TabPanel value=\"followups\" sx={{ p: 0 }}>\n              <PatientFollowupEncountersGrid patient={patient} loading={loading}></PatientFollowupEncountersGrid>\n            </TabPanel>\n            {FEATURE_FLAGS.LAB_ORDERS_ENABLED && (\n              <TabPanel value=\"labs\" sx={{ p: 0 }}>\n                <PatientLabsTab patientId={id || ''} />\n              </TabPanel>\n            )}\n            {FEATURE_FLAGS.IN_HOUSE_LABS_ENABLED && (\n              <TabPanel value=\"in-house-labs\" sx={{ p: 0 }}>\n                <PatientInHouseLabsTab titleText=\"In-House Labs\" patientId={id || ''} />\n              </TabPanel>\n            )}\n            {FEATURE_FLAGS.RADIOLOGY_ENABLED && (\n              <TabPanel value=\"radiology\" sx={{ p: 0 }}>\n                <PatientRadiologyTab patientId={id || ''} />\n              </TabPanel>\n            )}\n          </TabContext>\n        </Stack>\n      </PageContainer>\n    </>\n  );\n}\n"]}