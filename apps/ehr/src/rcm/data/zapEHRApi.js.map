{"version":3,"file":"zapEHRApi.js","sourceRoot":"","sources":["zapEHRApi.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+BAA4F;AAG5F,IAAK,WAEJ;AAFD,WAAK,WAAW;IACd,wCAA2B,CAAA;AAC7B,CAAC,EAFI,WAAW,KAAX,WAAW,QAEf;AAED,IAAM,mBAAmB,GAA8C;IACrE,YAAY,EAAE,KAAK;CACpB,CAAC;AAIK,IAAM,kBAAkB,GAAG,UAChC,MAAkC,EAClC,OAAgB;IAIR,IAAA,iBAAiB,GAAK,MAAM,kBAAX,CAAY;IAErC,IAAM,eAAe,GAAyD;QAC5E,YAAY,EAAE,iBAAiB;KAChC,CAAC;IACF,IAAM,kBAAkB,GAAG,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC;IAE7C,IAAA,cAAc,GAAK,IAAA,4BAAoB,EAC7C,OAAO,EACP,WAAW,EACX,eAAe,EACf,mBAAmB,EACnB,kBAAkB,CACnB,eANqB,CAMpB;IAEF,IAAM,SAAS,GAAG,UAAO,UAAiC;;;wBACjD,qBAAM,cAAc,CAAC,YAAY,EAAE,UAAU,CAAC,EAAA;wBAArD,sBAAO,SAA8C,EAAC;;;SACvD,CAAC;IAEF,OAAO;QACL,SAAS,WAAA;KACV,CAAC;AACJ,CAAC,CAAC;AA5BW,QAAA,kBAAkB,sBA4B7B","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport { ClaimsQueueGetRequest, ClaimsQueueGetResponse, getOystehrApiHelpers } from 'utils';\nimport { Get_Oystehr_RCM_API_Params } from './types';\n\nenum ZambdaNames {\n  'get claims' = 'get claims',\n}\n\nconst zambdasPublicityMap: Record<keyof typeof ZambdaNames, boolean> = {\n  'get claims': false,\n};\n\nexport type Oystehr_RCM_APIClient = ReturnType<typeof getOystehr_RCM_API>;\n\nexport const getOystehr_RCM_API = (\n  params: Get_Oystehr_RCM_API_Params,\n  oystehr: Oystehr\n): {\n  getClaims: typeof getClaims;\n} => {\n  const { getClaimsZambdaID } = params;\n\n  const zambdasToIdsMap: Record<keyof typeof ZambdaNames, string | undefined> = {\n    'get claims': getClaimsZambdaID,\n  };\n  const isAppLocalProvided = params.isAppLocal != null;\n\n  const { makeZapRequest } = getOystehrApiHelpers(\n    oystehr,\n    ZambdaNames,\n    zambdasToIdsMap,\n    zambdasPublicityMap,\n    isAppLocalProvided\n  );\n\n  const getClaims = async (parameters: ClaimsQueueGetRequest): Promise<ClaimsQueueGetResponse> => {\n    return await makeZapRequest('get claims', parameters);\n  };\n\n  return {\n    getClaims,\n  };\n};\n"]}