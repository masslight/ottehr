{"version":3,"file":"SLBProviderCard.js","sourceRoot":"","sources":["SLBProviderCard.tsx"],"names":[],"mappings":";;;AAAA,+BAA2C;AAC3C,mEAAkE;AAClE,qCAA4C;AAC5C,iDAAgD;AAChD,mCAA4C;AAErC,IAAM,eAAe,GAAO;;IAC3B,IAAA,KAAyD,IAAA,2BAAY,EAAC,qBAAa,EAAE;QACzF,eAAe;QACf,YAAY;QACZ,WAAW;QACX,cAAc;KACf,CAAC,EALM,aAAa,mBAAA,EAAE,UAAU,gBAAA,EAAE,SAAS,eAAA,EAAE,YAAY,kBAKxD,CAAC;IAEH,IAAM,QAAQ,GAAG,IAAA,eAAO,EACtB,cAAM,OAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,EAAE,MAAK,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,CAAA,EAArC,CAAqC,CAAC,EAArE,CAAqE,EAC3E,CAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,EAAE,UAAU,CAAC,CACpC,CAAC;IAEF,IAAM,YAAY,GAAG,IAAA,eAAO,EAC1B;QACE,OAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,IAAI,CACjB,UAAC,YAAY;;YACX,OAAA,YAAY,CAAC,EAAE;iBACf,MAAA,MAAA,MAAA,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CACN,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,EAAE,MAAK,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,CAAA,EAArC,CAAqC,CAAC,0CACzD,oBAAoB,0CAAE,SAAS,0CAAE,KAAK,CAAC,GAAG,CAAC,0CAAG,CAAC,CAAC,CAAA,CAAA;SAAA,CACvD;IAND,CAMC,EACH,CAAC,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,EAAE,UAAU,EAAE,aAAa,CAAC,CACnD,CAAC;IAEF,OAAO,CACL,CAAC,6BAAa,CACZ,KAAK,CAAC,0CAA0C,CAChD,KAAK,CAAC,CAAC;YACL;gBACE,KAAK,EAAE,uCAAuC;gBAC9C,KAAK,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,IAAI,CAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,EAAE,MAAK,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,cAAc,CAAA,EAAhD,CAAgD,CAAC,0CAAE,IAAI;aACrG;YACD;gBACE,KAAK,EAAE,8BAA8B;gBACrC,KAAK,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI;aACtB;YACD;gBACE,KAAK,EAAE,qBAAqB;gBAC5B,KAAK,EAAE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI;aAC1B;YACD,IAAI;YACJ,qBAAqB;YACrB,mBAAmB;YACnB,KAAK;SACN,CAAC,CACF,UAAU,CAAC,CAAC,CAAC,yBAAgB,CAAC,AAAD,EAAG,CAAC,EACjC,CACH,CAAC;AACJ,CAAC,CAAC;AAjDW,QAAA,eAAe,mBAiD1B","sourcesContent":["import React, { FC, useMemo } from 'react';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useClaimStore } from '../../state';\nimport { ClaimListCard } from './ClaimListCard';\nimport { SLBProviderModal } from './modals';\n\nexport const SLBProviderCard: FC = () => {\n  const { organizations, facilities, claimData, coverageData } = getSelectors(useClaimStore, [\n    'organizations',\n    'facilities',\n    'claimData',\n    'coverageData',\n  ]);\n\n  const facility = useMemo(\n    () => facilities?.find((facility) => facility.id === claimData?.facilityId),\n    [claimData?.facilityId, facilities]\n  );\n\n  const organization = useMemo(\n    () =>\n      organizations?.find(\n        (organization) =>\n          organization.id ===\n          facilities\n            ?.find((facility) => facility.id === claimData?.facilityId)\n            ?.managingOrganization?.reference?.split('/')?.[1]\n      ),\n    [claimData?.facilityId, facilities, organizations]\n  );\n\n  return (\n    <ClaimListCard\n      title=\"Signature, Location and Billing Provider\"\n      items={[\n        {\n          label: '31.Signature of Physician or Supplier',\n          value: organizations?.find((organization) => organization.id === coverageData?.organizationId)?.name,\n        },\n        {\n          label: '32.Service Facility Location',\n          value: facility?.name,\n        },\n        {\n          label: '33.Billing Provider',\n          value: organization?.name,\n        },\n        // {\n        //   label: 'Pay-to',\n        //   value: 'TODO',\n        // },\n      ]}\n      editButton={<SLBProviderModal />}\n    />\n  );\n};\n"]}