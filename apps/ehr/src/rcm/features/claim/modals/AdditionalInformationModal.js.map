{"version":3,"file":"AdditionalInformationModal.js","sourceRoot":"","sources":["AdditionalInformationModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Box,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  MenuItem,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { FC } from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport { AllStates } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { ClaimState, useClaimStore, useEditClaimInformationMutation } from '../../../state';\nimport { AdditionalInformationFormValues, mapAdditionalInformationToClaimResource } from '../../../utils';\nimport {\n  CheckboxController,\n  DatePickerController,\n  DateRangePickerController,\n  EditModal,\n  TextFieldController,\n} from './components';\n\nconst getDefaultValues = (claimData: ClaimState['claimData']): AdditionalInformationFormValues => ({\n  relatedToEmployment: !!claimData?.conditionRelatedToEmployment,\n  relatedToAutoAccident: claimData?.autoAccidentState || '',\n  relatedToOtherAccident: !!claimData?.conditionRelatedToOtherAccident,\n  claimCodes: [claimData?.claimCode1, claimData?.claimCode2, claimData?.claimCode3].filter((c) => c).join('   '),\n  illness: claimData?.dateOfIllness || null,\n  unableToWork: [claimData?.unableToWork.start || null, claimData?.unableToWork.end || null],\n  hospitalization: [claimData?.hospitalizationDates.start || null, claimData?.hospitalizationDates.end || null],\n  resubmissionCode: claimData?.resubmissionCode || '',\n  authorizationNumber: claimData?.priorAuthNumber || '',\n});\n\nexport const AdditionalInformationModal: FC = () => {\n  const { claimData, claim, setClaimData } = getSelectors(useClaimStore, ['claimData', 'claim', 'setClaimData']);\n\n  const editClaim = useEditClaimInformationMutation();\n\n  const methods = useForm<AdditionalInformationFormValues>({\n    defaultValues: getDefaultValues(claimData),\n  });\n  const { control, handleSubmit, reset } = methods;\n\n  const onSave = (values: AdditionalInformationFormValues, hideDialog: () => void): void => {\n    if (!claim) {\n      throw Error('Claim not provided');\n    }\n\n    const updatedClaim = mapAdditionalInformationToClaimResource(claim, values);\n\n    const editClaimPromise = editClaim.mutateAsync({\n      claimData: updatedClaim,\n      previousClaimData: claim,\n    });\n\n    Promise.resolve(editClaimPromise)\n      .then((responseClaim) => {\n        setClaimData(responseClaim);\n      })\n      .catch((e) => {\n        console.error(e);\n      })\n      .finally(() => {\n        hideDialog();\n      });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <EditModal\n        title=\"Additional Information\"\n        onSave={(hideDialog) => handleSubmit((values) => onSave(values, hideDialog))()}\n        isSaveLoading={editClaim.isLoading}\n        onShow={() => reset(getDefaultValues(claimData))}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <FormControl fullWidth>\n              <FormLabel sx={{ fontSize: '12px' }}>10.Is patient condition related to:</FormLabel>\n              <FormGroup>\n                <CheckboxController name=\"relatedToEmployment\" label=\"a. Employment (Current or Previous)\" />\n                <Controller\n                  name=\"relatedToAutoAccident\"\n                  control={control}\n                  render={({ field: { onChange, value }, fieldState: { error } }) => (\n                    <Box sx={{ display: 'flex', flex: 1 }}>\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            checked={!!value}\n                            onChange={(e) => (e.target.checked ? onChange(AllStates[0].value) : onChange(''))}\n                          />\n                        }\n                        label={<Typography noWrap>b. Auto accident</Typography>}\n                      />\n                      <TextField\n                        helperText={error ? error.message : null}\n                        error={!!error}\n                        size=\"small\"\n                        label=\"State *\"\n                        value={value}\n                        onChange={onChange}\n                        fullWidth\n                        select\n                      >\n                        {AllStates.map((state) => (\n                          <MenuItem key={state.value} value={state.value}>\n                            {state.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Box>\n                  )}\n                />\n                <CheckboxController name=\"relatedToOtherAccident\" label=\"c. Other accident\" />\n              </FormGroup>\n            </FormControl>\n          </Grid>\n          <Grid item xs={8} />\n\n          <Grid item xs={4} sx={{ alignSelf: 'flex-end' }}>\n            <TextFieldController name=\"claimCodes\" label=\"10d.Claim codes (Designated to NUCC) *\" />\n          </Grid>\n          <Grid item xs={4} sx={{ alignSelf: 'flex-end' }}>\n            <DatePickerController\n              name=\"illness\"\n              label=\"14.Date of current illness, injury, or pregnancy (LMP)\"\n              format=\"MM.dd.yyyy\"\n              placeholder=\"MM.DD.YYYY\"\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <DateRangePickerController\n              name=\"unableToWork\"\n              label=\"16.Dates patient is unable to work in current occupation\"\n            />\n          </Grid>\n\n          <Grid item xs={4}>\n            <DateRangePickerController\n              name=\"hospitalization\"\n              label=\"18.Hospitalization dates related to current services\"\n            />\n          </Grid>\n          <Grid item xs={4} sx={{ alignSelf: 'flex-end' }}>\n            <TextFieldController name=\"resubmissionCode\" label=\"22.Resubmission code\" select>\n              {['1', '7', '8'].map((code) => (\n                <MenuItem key={code} value={code}>\n                  {code}\n                </MenuItem>\n              ))}\n            </TextFieldController>\n          </Grid>\n          <Grid item xs={4} sx={{ alignSelf: 'flex-end' }}>\n            <TextFieldController name=\"authorizationNumber\" label=\"23.Prior authorization number\" />\n          </Grid>\n        </Grid>\n      </EditModal>\n    </FormProvider>\n  );\n};\n"]}