{"version":3,"file":"BillingModal.js","sourceRoot":"","sources":["BillingModal.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  FormControlLabel,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { FC } from 'react';\nimport { Controller, FormProvider, useFieldArray, useForm } from 'react-hook-form';\nimport { RoundedButton } from '../../../../components/RoundedButton';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { DeleteIconButton } from '../../../../telemed';\nimport { ClaimState, useClaimStore, useEditClaimInformationMutation } from '../../../state';\nimport { BillingFormValues, mapBillingToClaimResource } from '../../../utils';\nimport { CheckboxController, DateRangePickerController, EditModal, TextFieldController } from './components';\nconst getDefaultValues = (claimData: ClaimState['claimData']): BillingFormValues => ({\n  items: claimData?.billingItems || [],\n  payment: claimData?.patientPaid || NaN,\n});\n\nexport const BillingModal: FC = () => {\n  const { organizations, facilities, claimData, coverageData, claim, setClaimData } = getSelectors(useClaimStore, [\n    'organizations',\n    'facilities',\n    'claimData',\n    'coverageData',\n    'claim',\n    'setClaimData',\n  ]);\n\n  const editClaim = useEditClaimInformationMutation();\n\n  const methods = useForm<BillingFormValues>({\n    defaultValues: getDefaultValues(claimData),\n  });\n  const { control, handleSubmit, watch, reset } = methods;\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'items',\n  });\n\n  const onSave = (values: BillingFormValues, hideDialog: () => void): void => {\n    if (!claim) {\n      throw Error('Claim not provided');\n    }\n\n    const updatedClaim = mapBillingToClaimResource(claim, values);\n\n    const editClaimPromise = editClaim.mutateAsync({\n      claimData: updatedClaim,\n      previousClaimData: claim,\n      fieldsToUpdate: ['item', 'extension', 'total'],\n    });\n\n    Promise.resolve(editClaimPromise)\n      .then((responseClaim) => {\n        setClaimData(responseClaim);\n      })\n      .catch((e) => {\n        console.error(e);\n      })\n      .finally(() => {\n        hideDialog();\n      });\n  };\n\n  // TS2589: Type instantiation is excessively deep and possibly infinite.\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const currentItems = watch('items') as BillingFormValues['items'];\n\n  const currencyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n  const provider = organizations?.find((organization) => organization.id === coverageData?.organizationId)?.name || '';\n  const facility = facilities?.find((facility) => facility.id === claimData?.facilityId)?.name || '';\n\n  return (\n    <FormProvider {...methods}>\n      <EditModal\n        maxWidth=\"xl\"\n        title=\"24. Billing\"\n        onShow={() => reset(getDefaultValues(claimData))}\n        onSave={(hideDialog) => handleSubmit((values) => onSave(values, hideDialog))()}\n        isSaveLoading={editClaim.isLoading}\n      >\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n          {fields.length > 0 && (\n            <Table>\n              <TableHead>\n                <TableRow sx={{ '& .MuiTableCell-head': { fontWeight: 'bold' } }}>\n                  <TableCell>A. Date</TableCell>\n                  <TableCell>B. Place</TableCell>\n                  {/* cSpell:disable-next Emerg.(ency) */}\n                  <TableCell>C. Emerg.</TableCell>\n                  <TableCell>D. Code & Modifiers</TableCell>\n                  {/* cSpell:disable-next Diagn.(ostic) */}\n                  <TableCell>E. Diagn. pointers</TableCell>\n                  <TableCell>F. Charges, $</TableCell>\n                  <TableCell>G. Units / Days</TableCell>\n                  <TableCell>H. EPSDT</TableCell>\n                  <TableCell>J. Rendering Provider NPI</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {fields.map((field, index) => (\n                  <TableRow key={field.id}>\n                    <TableCell>\n                      <DateRangePickerController\n                        name={`items.${index}.date`}\n                        separator=\"-\"\n                        variant=\"standard\"\n                        sx={{ display: 'block' }}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <TextField variant=\"standard\" size=\"small\" value={facility} disabled />\n                    </TableCell>\n                    <TableCell>\n                      <CheckboxController name={`items.${index}.emergency`} />\n                    </TableCell>\n                    <TableCell>\n                      <TextFieldController name={`items.${index}.code`} variant=\"standard\" rules={{ required: true }} />\n                      <TextFieldController name={`items.${index}.modifiers`} variant=\"standard\" />\n                    </TableCell>\n                    <TableCell>\n                      {/*<CheckboxController name={`items.${index}.pointerA`} label=\"A\" />*/}\n                      {/*<CheckboxController name={`items.${index}.pointerB`} label=\"B\" />*/}\n                    </TableCell>\n                    <TableCell>\n                      <TextFieldController name={`items.${index}.charges`} variant=\"standard\" type=\"number\" />\n                    </TableCell>\n                    <TableCell>\n                      <TextFieldController name={`items.${index}.units`} variant=\"standard\" type=\"number\" />\n                    </TableCell>\n                    <TableCell>{/*<CheckboxController name={`items.${index}.epsdt`} />*/}</TableCell>\n                    <TableCell>\n                      <TextField variant=\"standard\" size=\"small\" value={provider} disabled />\n                    </TableCell>\n                    <TableCell>\n                      <DeleteIconButton fontSize=\"medium\" onClick={() => remove(index)} />\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          )}\n\n          <RoundedButton\n            startIcon={<AddIcon />}\n            variant=\"text\"\n            onClick={() =>\n              append({\n                date: [DateTime.now(), DateTime.now()],\n                // place: '',\n                emergency: false,\n                code: '',\n                modifiers: '',\n                // pointerA: false,\n                // pointerB: false,\n                charges: 0,\n                units: 0,\n                // epsdt: false,\n                // provider: '',\n              })\n            }\n          >\n            Add billing item\n          </RoundedButton>\n\n          <Box sx={{ display: 'flex', flexDirection: 'column', maxWidth: '500px', gap: 3 }}>\n            <Card\n              elevation={0}\n              sx={{\n                backgroundColor: otherColors.lightIconButton,\n                px: 2,\n                py: '10px',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Typography variant=\"h5\" color=\"primary.dark\">\n                28. Total charge:\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary.main\">\n                {currencyFormatter.format(\n                  currentItems.reduce((prev, curr) => {\n                    prev += +curr.charges;\n                    return prev;\n                  }, 0)\n                )}\n              </Typography>\n            </Card>\n\n            <Controller\n              name=\"payment\"\n              control={control}\n              render={({ field: { onChange, value }, fieldState: { error } }) => (\n                <Box sx={{ display: 'flex', flex: 1 }}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={!isNaN(value)}\n                        onChange={(e) => (e.target.checked ? onChange(0) : onChange(NaN))}\n                      />\n                    }\n                    label={<Typography noWrap>29.Patient Payment</Typography>}\n                  />\n                  <TextField\n                    helperText={error ? error.message : null}\n                    error={!!error}\n                    size=\"small\"\n                    label=\"Paid, $\"\n                    type=\"number\"\n                    value={isNaN(value) ? '' : value}\n                    disabled={isNaN(value)}\n                    onChange={onChange}\n                    fullWidth\n                  />\n                </Box>\n              )}\n            />\n          </Box>\n        </Box>\n      </EditModal>\n    </FormProvider>\n  );\n};\n"]}