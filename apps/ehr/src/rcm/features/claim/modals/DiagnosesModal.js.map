{"version":3,"file":"DiagnosesModal.js","sourceRoot":"","sources":["DiagnosesModal.tsx"],"names":[],"mappings":";;;AAAA,+CAA8C;AAC9C,0CAAyD;AACzD,+BAAqC;AACrC,mDAAuE;AACvE,sEAAqE;AACrE,sEAAqE;AACrE,+CAAuD;AACvD,wCAA4F;AAC5F,wCAA6G;AAC7G,2CAAmF;AAEnF,IAAM,gBAAgB,GAAG,UAAC,SAAkC,IAA0B,OAAA,CAAC;IACrF,KAAK,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,SAAS,KAAI,EAAE;IACjC,OAAO,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,gBAAgB,KAAI,EAAE;CAC3C,CAAC,EAHoF,CAGpF,CAAC;AAEI,IAAM,cAAc,GAAO;IAC1B,IAAA,KAAqC,IAAA,2BAAY,EAAC,qBAAa,EAAE,CAAC,WAAW,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC,EAAtG,SAAS,eAAA,EAAE,KAAK,WAAA,EAAE,YAAY,kBAAwE,CAAC;IAE/G,IAAM,SAAS,GAAG,IAAA,uCAA+B,GAAE,CAAC;IAEpD,IAAM,OAAO,GAAG,IAAA,yBAAO,EAAsB;QAC3C,aAAa,EAAE,gBAAgB,CAAC,SAAS,CAAC;KAC3C,CAAC,CAAC;IACK,IAAA,OAAO,GAA0B,OAAO,QAAjC,EAAE,YAAY,GAAY,OAAO,aAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IAE3C,IAAA,KAA6B,IAAA,+BAAa,EAAC;QAC/C,OAAO,SAAA;QACP,IAAI,EAAE,OAAO;KACd,CAAC,EAHM,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,MAAM,YAG5B,CAAC;IAEH,IAAM,MAAM,GAAG,UAAC,MAA2B,EAAE,UAAsB;QACjE,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAC;QACpC,CAAC;QAED,IAAM,YAAY,GAAG,IAAA,mCAA2B,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEhE,IAAM,gBAAgB,GAAG,SAAS,CAAC,WAAW,CAAC;YAC7C,SAAS,EAAE,YAAY;YACvB,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;SAC3C,CAAC,CAAC;QAEH,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC;aAC9B,IAAI,CAAC,UAAC,aAAa;YAClB,YAAY,CAAC,aAAa,CAAC,CAAC;QAC9B,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC;aACD,OAAO,CAAC;YACP,UAAU,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,8BAAY,CAAC,IAAI,OAAO,CAAC,CACxB;MAAA,CAAC,sBAAS,CACR,KAAK,CAAC,eAAe,CACrB,MAAM,CAAC,CAAC,UAAC,UAAU,IAAK,OAAA,YAAY,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,EAA1B,CAA0B,CAAC,EAAE,EAAtD,CAAsD,CAAC,CAC/E,aAAa,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CACnC,MAAM,CAAC,CAAC,cAAM,OAAA,KAAK,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,EAAlC,CAAkC,CAAC,CAEjD;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAC5D;UAAA,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,CAC5B,CAAC,gBAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CACtB;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACzD;gBAAA,CAAC,qBAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,iCAAyB,CAAC,KAAK,CAAC,CAAC,EAAE,qBAAU,CACjF;gBAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,CAAC,gBAAS,KAAK,CAAE,CAAC,EAC5C;gBAAA,CAAC,0BAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,EACnE;cAAA,EAAE,cAAG,CACL;cAAA,CAAC,kBAAO,CAAC,QAAQ,EACnB;YAAA,EAAE,gBAAQ,CAAC,CACZ,EAT6B,CAS7B,CAAC,CACF;UAAA,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,IAAI,CACrB,CAAC,6BAAa,CAAC,SAAS,CAAC,CAAC,CAAC,aAAO,CAAC,AAAD,EAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,MAAM,CAAC,IAAI,CAAC,EAAZ,CAAY,CAAC,CAChF;;YACF,EAAE,6BAAa,CAAC,CACjB,CACD;UAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,gCAAgC,CAAC,SAAS,EACtF;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,sBAAS,CACb;IAAA,EAAE,8BAAY,CAAC,CAChB,CAAC;AACJ,CAAC,CAAC;AArEW,QAAA,cAAc,kBAqEzB","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport { Box, Divider, Typography } from '@mui/material';\nimport { FC, Fragment } from 'react';\nimport { FormProvider, useFieldArray, useForm } from 'react-hook-form';\nimport { RoundedButton } from '../../../../components/RoundedButton';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { DeleteIconButton } from '../../../../telemed';\nimport { ClaimState, useClaimStore, useEditClaimInformationMutation } from '../../../state';\nimport { DIAGNOSES_SEQUENCE_LETTER, DiagnosesFormValues, mapDiagnosesToClaimResource } from '../../../utils';\nimport { DiagnosisController, EditModal, TextFieldController } from './components';\n\nconst getDefaultValues = (claimData: ClaimState['claimData']): DiagnosesFormValues => ({\n  items: claimData?.diagnoses || [],\n  comment: claimData?.diagnosesComment || '',\n});\n\nexport const DiagnosesModal: FC = () => {\n  const { claimData, claim, setClaimData } = getSelectors(useClaimStore, ['claimData', 'claim', 'setClaimData']);\n\n  const editClaim = useEditClaimInformationMutation();\n\n  const methods = useForm<DiagnosesFormValues>({\n    defaultValues: getDefaultValues(claimData),\n  });\n  const { control, handleSubmit, reset } = methods;\n\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'items',\n  });\n\n  const onSave = (values: DiagnosesFormValues, hideDialog: () => void): void => {\n    if (!claim) {\n      throw Error('Claim not provided');\n    }\n\n    const updatedClaim = mapDiagnosesToClaimResource(claim, values);\n\n    const editClaimPromise = editClaim.mutateAsync({\n      claimData: updatedClaim,\n      previousClaimData: claim,\n      fieldsToUpdate: ['diagnosis', 'extension'],\n    });\n\n    Promise.resolve(editClaimPromise)\n      .then((responseClaim) => {\n        setClaimData(responseClaim);\n      })\n      .catch((e) => {\n        console.error(e);\n      })\n      .finally(() => {\n        hideDialog();\n      });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <EditModal\n        title=\"21. Diagnoses\"\n        onSave={(hideDialog) => handleSubmit((values) => onSave(values, hideDialog))()}\n        isSaveLoading={editClaim.isLoading}\n        onShow={() => reset(getDefaultValues(claimData))}\n      >\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n          {fields.map((field, index) => (\n            <Fragment key={field.id}>\n              <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n                <Typography sx={{ width: '1rem' }}>{DIAGNOSES_SEQUENCE_LETTER[index]}</Typography>\n                <DiagnosisController name={`items.${index}`} />\n                <DeleteIconButton fontSize=\"medium\" onClick={() => remove(index)} />\n              </Box>\n              <Divider flexItem />\n            </Fragment>\n          ))}\n          {fields.length < 12 && (\n            <RoundedButton startIcon={<AddIcon />} variant=\"text\" onClick={() => append(null)}>\n              Add diagnosis\n            </RoundedButton>\n          )}\n          <TextFieldController name=\"comment\" label=\"Comment about diagnosis change\" multiline />\n        </Box>\n      </EditModal>\n    </FormProvider>\n  );\n};\n"]}