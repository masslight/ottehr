{"version":3,"file":"InsuredInformationModal.js","sourceRoot":"","sources":["InsuredInformationModal.tsx"],"names":[],"mappings":";;;AAAA,0CAA+C;AAC/C,+BAAoC;AACpC,mDAAwD;AACxD,+BAAkC;AAClC,+BAAuC;AACvC,sEAAqE;AACrE,wCAKwB;AACxB,wCAOwB;AACxB,2CAMsB;AAEtB,IAAM,gBAAgB,GAAG,UACvB,YAAwC,EACxC,IAAkB,IACoB,OAAA,CAAC;IACvC,YAAY,EAAE,IAAI;IAClB,SAAS,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,YAAY,KAAI,EAAE;IAC3C,SAAS,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,SAAS,KAAI,EAAE;IACxC,UAAU,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,KAAI,EAAE;IAC1C,QAAQ,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,KAAI,EAAE;IACtC,KAAK,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,KAAI,EAAE;IAChC,OAAO,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,KAAI,EAAE;IACxC,IAAI,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,KAAI,EAAE;IAC9B,KAAK,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,KAAI,EAAE;IAChC,GAAG,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,KAAI,EAAE;IACnC,WAAW,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,KAAI,EAAE;IAC5C,GAAG,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,GAAG,KAAI,IAAI;IAC9B,GAAG,EAAE,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,KAAI,EAAE;CAChC,CAAC,EAdsC,CActC,CAAC;AAEI,IAAM,uBAAuB,GAAO;IACnC,IAAA,KAAwE,IAAA,2BAAY,EAAC,qBAAa,EAAE;QACxG,cAAc;QACd,cAAc;QACd,UAAU;QACV,YAAY;QACZ,iBAAiB;KAClB,CAAC,EANM,YAAY,kBAAA,EAAE,YAAY,kBAAA,EAAE,QAAQ,cAAA,EAAE,UAAU,gBAAA,EAAE,eAAe,qBAMvE,CAAC;IAEH,IAAM,IAAI,GAAG,IAAA,eAAO,EAAC;QACnB,IAAI,CAAC,YAAY,IAAI,CAAC,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,cAAc,CAAA,IAAI,CAAC,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,CAAA,EAAE,CAAC;YAC9E,OAAO;QACT,CAAC;QAED,OAAO,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,CACvB,UAAC,IAAI,YAAK,OAAA,CAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,EAAE,MAAK,YAAY,CAAC,cAAc,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,QAAQ,CAAA,EAAA,CAClG,CAAC;IACJ,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,QAAQ,EAAE,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,cAAc,CAAC,CAAC,CAAC;IAEzE,IAAM,YAAY,GAAG,IAAA,0CAAkC,GAAE,CAAC;IAC1D,IAAM,iBAAiB,GAAG,IAAA,+CAAuC,GAAE,CAAC;IAEpE,IAAM,OAAO,GAAG,IAAA,yBAAO,EAAoC;QACzD,aAAa,EAAE,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC;KACpD,CAAC,CAAC;IACK,IAAA,YAAY,GAAY,OAAO,aAAnB,EAAE,KAAK,GAAK,OAAO,MAAZ,CAAa;IAExC,IAAM,MAAM,GAAG,UAAC,MAAyC,EAAE,UAAsB;QAC/E,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,MAAM,KAAK,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC;QAED,IAAM,eAAe,GAAG,IAAA,+CAAuC,EAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAClF,IAAM,iBAAiB,GAAG,IAAA,oDAA4C,EAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QAE3F,IAAM,mBAAmB,GAAG,YAAY,CAAC,WAAW,CAAC;YACnD,YAAY,EAAE,eAAe;YAC7B,oBAAoB,EAAE,QAAQ;YAC9B,cAAc,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC;SACnD,CAAC,CAAC;QACH,IAAM,wBAAwB,GAAG,iBAAiB,CAAC,WAAW,CAAC;YAC7D,iBAAiB,EAAE,iBAAiB;YACpC,yBAAyB,EAAE,UAAU;SACtC,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,CAAC,mBAAmB,EAAE,wBAAwB,CAAC,CAAC;aACzD,IAAI,CAAC;YACJ,eAAe,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;QACtD,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC;aACD,OAAO,CAAC;YACP,UAAU,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,8BAAY,CAAC,IAAI,OAAO,CAAC,CACxB;MAAA,CAAC,sBAAS,CACR,KAAK,CAAC,qBAAqB,CAC3B,MAAM,CAAC,CAAC,UAAC,UAAU,IAAK,OAAA,YAAY,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,EAA1B,CAA0B,CAAC,EAAE,EAAtD,CAAsD,CAAC,CAC/E,MAAM,CAAC,CAAC,cAAM,OAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,EAA3C,CAA2C,CAAC,CAC1D,aAAa,CAAC,CAAC,YAAY,CAAC,SAAS,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAErE;QAAA,CAAC,eAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACzB;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,8CAAiC,CAChC,IAAI,CAAC,cAAc,CACnB,KAAK,CAAC,0BAA0B,CAChC,KAAK,CAAC,CAAC,uBAAe,CAAC,YAAY,CAAC,CACpC,OAAO,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAC5B,SAAS,CAAC,CAAC,UAAC,IAAI;;YACd,IAAM,OAAO,GAAG,MAAA,MAAA,MAAA,IAAI,CAAC,OAAO,0CAAE,UAAU,0CAAE,IAAI,CAC5C,UAAC,UAAU;;gBACT,OAAA,CAAC,CAAC,CAAA,MAAA,MAAA,UAAU,CAAC,IAAI,0CAAE,MAAM,0CAAE,IAAI,CAC7B,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,sBAAc,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAjF,CAAiF,CAC9F,CAAA,CAAA;aAAA,CACJ,0CAAE,KAAK,CAAC;YAET,OAAO,UAAG,IAAI,CAAC,IAAI,cAAI,OAAO,CAAE,CAAC;QACnC,CAAC,CAAC,EAEN;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,uBAAe,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,0BAA0B,EAC1G;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAEjB;;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,cAAc,EAC5D;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EAC9D;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,EAC1D;UAAA,EAAE,eAAI,CAEN;;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAClB,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,SAAS,CACf,WAAW,CAAC,gBAAgB,CAC5B,UAAU,CAAC,CAAC,EAAE,cAAc,EAAE,6BAAuB,EAAE,CAAC,EAE5D;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,EACjF;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EACjD;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CACtD;cAAA,CAAC,iBAAS,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,CACxB,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAC7C;kBAAA,CAAC,KAAK,CAAC,KAAK,CACd;gBAAA,EAAE,mBAAQ,CAAC,CACZ,EAJyB,CAIzB,CAAC,CACJ;YAAA,EAAE,gCAAmB,CACvB;UAAA,EAAE,eAAI,CAEN;;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAC/C;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,0CAA0C,EAC1F;UAAA,EAAE,eAAI,CAEN;;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,iCAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,YAAY,EACzG;UAAA,EAAE,eAAI,CACN;UAAA,CAAC,eAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACf;YAAA,CAAC,gCAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAC1D;cAAA,CAAC,qBAAa,CAAC,GAAG,CAAC,UAAC,MAAM,IAAK,OAAA,CAC7B,CAAC,mBAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAC/C;kBAAA,CAAC,MAAM,CAAC,KAAK,CACf;gBAAA,EAAE,mBAAQ,CAAC,CACZ,EAJ8B,CAI9B,CAAC,CACJ;YAAA,EAAE,gCAAmB,CACvB;UAAA,EAAE,eAAI,CACR;QAAA,EAAE,eAAI,CACR;MAAA,EAAE,sBAAS,CACb;IAAA,EAAE,8BAAY,CAAC,CAChB,CAAC;AACJ,CAAC,CAAC;AArJW,QAAA,uBAAuB,2BAqJlC","sourcesContent":["import { Grid, MenuItem } from '@mui/material';\nimport { FC, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { AllStates } from 'utils';\nimport { FHIR_EXTENSION } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport {\n  ClaimState,\n  useClaimStore,\n  useEditCoverageInformationMutation,\n  useEditRelatedPersonInformationMutation,\n} from '../../../state';\nimport {\n  genderOptions,\n  InsuredInformationModalFormValues,\n  mapFieldToRules,\n  mapInsuredInformationToCoverageResource,\n  mapInsuredInformationToRelatedPersonResource,\n  PlanOwnedBy,\n} from '../../../utils';\nimport {\n  DatePickerController,\n  EditModal,\n  NumberMaskCustom,\n  TextFieldController,\n  VirtualizedAutocompleteController,\n} from './components';\n\nconst getDefaultValues = (\n  coverageData: ClaimState['coverageData'],\n  plan?: PlanOwnedBy\n): InsuredInformationModalFormValues => ({\n  planAndPayor: plan,\n  insuredID: coverageData?.subscriberId || '',\n  firstName: coverageData?.firstName || '',\n  middleName: coverageData?.middleName || '',\n  lastName: coverageData?.lastName || '',\n  phone: coverageData?.phone || '',\n  address: coverageData?.addressLine || '',\n  city: coverageData?.city || '',\n  state: coverageData?.state || '',\n  zip: coverageData?.postalCode || '',\n  policyGroup: coverageData?.policyGroup || '',\n  dob: coverageData?.dob || null,\n  sex: coverageData?.gender || '',\n});\n\nexport const InsuredInformationModal: FC = () => {\n  const { coverageData, plansOwnedBy, coverage, subscriber, setCoverageData } = getSelectors(useClaimStore, [\n    'coverageData',\n    'plansOwnedBy',\n    'coverage',\n    'subscriber',\n    'setCoverageData',\n  ]);\n\n  const plan = useMemo(() => {\n    if (!plansOwnedBy || !coverageData?.organizationId || !coverageData?.planName) {\n      return;\n    }\n\n    return plansOwnedBy?.find(\n      (item) => item.ownedBy?.id === coverageData.organizationId && item.name === coverageData.planName\n    );\n  }, [plansOwnedBy, coverageData?.planName, coverageData?.organizationId]);\n\n  const editCoverage = useEditCoverageInformationMutation();\n  const editRelatedPerson = useEditRelatedPersonInformationMutation();\n\n  const methods = useForm<InsuredInformationModalFormValues>({\n    defaultValues: getDefaultValues(coverageData, plan),\n  });\n  const { handleSubmit, reset } = methods;\n\n  const onSave = (values: InsuredInformationModalFormValues, hideDialog: () => void): void => {\n    if (!coverage) {\n      throw Error('Coverage not provided');\n    }\n    if (!subscriber) {\n      throw Error('Subscriber not provided');\n    }\n\n    const updatedCoverage = mapInsuredInformationToCoverageResource(coverage, values);\n    const updatedSubscriber = mapInsuredInformationToRelatedPersonResource(subscriber, values);\n\n    const editCoveragePromise = editCoverage.mutateAsync({\n      coverageData: updatedCoverage,\n      previousCoverageData: coverage,\n      fieldsToUpdate: ['class', 'payor', 'subscriberId'],\n    });\n    const editRelatedPersonPromise = editRelatedPerson.mutateAsync({\n      relatedPersonData: updatedSubscriber,\n      previousRelatedPersonData: subscriber,\n    });\n\n    Promise.all([editCoveragePromise, editRelatedPersonPromise])\n      .then(() => {\n        setCoverageData(updatedCoverage, updatedSubscriber);\n      })\n      .catch((e) => {\n        console.error(e);\n      })\n      .finally(() => {\n        hideDialog();\n      });\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <EditModal\n        title=\"Insured Information\"\n        onSave={(hideDialog) => handleSubmit((values) => onSave(values, hideDialog))()}\n        onShow={() => reset(getDefaultValues(coverageData, plan))}\n        isSaveLoading={editCoverage.isLoading || editRelatedPerson.isLoading}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <VirtualizedAutocompleteController\n              name=\"planAndPayor\"\n              label=\"Plan Name and Payer ID *\"\n              rules={mapFieldToRules.planAndPayor}\n              options={plansOwnedBy || []}\n              renderRow={(plan) => {\n                const payerId = plan.ownedBy?.identifier?.find(\n                  (identifier) =>\n                    !!identifier.type?.coding?.find(\n                      (coding) => coding.code === 'XX' && coding.system === FHIR_EXTENSION.Organization.v2_0203.url\n                    )\n                )?.value;\n\n                return `${plan.name} ${payerId}`;\n              }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"insuredID\" rules={mapFieldToRules.insuredID} label=\"1a.Insured’s ID number *\" />\n          </Grid>\n          <Grid item xs={4} />\n\n          <Grid item xs={4}>\n            <TextFieldController name=\"firstName\" label=\"4.First name\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"middleName\" label=\"4.Middle name\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"lastName\" label=\"4.Last name\" />\n          </Grid>\n\n          <Grid item xs={4}>\n            <TextFieldController\n              name=\"phone\"\n              label=\"7.Phone\"\n              placeholder=\"(XXX) XXX-XXXX\"\n              InputProps={{ inputComponent: NumberMaskCustom as any }}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"address\" label=\"7.Address\" placeholder=\"No., Street\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"city\" label=\"7.City\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"state\" label=\"7.State\" select>\n              {AllStates.map((state) => (\n                <MenuItem key={state.value} value={state.value}>\n                  {state.label}\n                </MenuItem>\n              ))}\n            </TextFieldController>\n          </Grid>\n\n          <Grid item xs={4}>\n            <TextFieldController name=\"zip\" label=\"7.ZIP\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"policyGroup\" label=\"11.Insured’s policy group or FECA number\" />\n          </Grid>\n\n          <Grid item xs={4}>\n            <DatePickerController name=\"dob\" label=\"11a.Date of birth\" format=\"MM.dd.yyyy\" placeholder=\"MM.DD.YYYY\" />\n          </Grid>\n          <Grid item xs={4}>\n            <TextFieldController name=\"sex\" label=\"11a.Birth sex\" select>\n              {genderOptions.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextFieldController>\n          </Grid>\n        </Grid>\n      </EditModal>\n    </FormProvider>\n  );\n};\n"]}