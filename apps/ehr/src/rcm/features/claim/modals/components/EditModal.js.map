{"version":3,"file":"EditModal.js","sourceRoot":"","sources":["EditModal.tsx"],"names":[],"mappings":";;;AAAA,iEAAgE;AAChE,gCAAyC;AACzC,0CAAsF;AACtF,+BAA6C;AAC7C,yEAAwE;AAExE,kDAA0D;AAWnD,IAAM,SAAS,GAAuB,UAAC,KAAK;IACzC,IAAA,QAAQ,GAAyE,KAAK,SAA9E,EAAE,MAAM,GAAiE,KAAK,OAAtE,EAAE,KAAK,GAA0D,KAAK,MAA/D,EAAE,kBAAkB,GAAsC,KAAK,mBAA3C,EAAE,aAAa,GAAuB,KAAK,cAA5B,EAAE,MAAM,GAAe,KAAK,OAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAE/F,OAAO,CACL,CAAC,0BAAgB,CACf,eAAe,CACf,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,QAAQ,IAAI,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CACjF,KAAK,CAAC,CACJ,CAAC,sBAAW,CAAC,SAAS,CAAC,CAAC,qBAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAClF;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,sBAAW,CACf,CAAC,CACD,OAAO,CAAC,CAAC,UAAC,UAAU,IAAK,OAAA,CACvB,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAClD;UAAA,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,cAAM,OAAA,MAAM,CAAC,UAAU,CAAC,EAAlB,CAAkB,CAAC,CAClC,OAAO,CAAC,CAAC,aAAa,CAAC,CACvB,OAAO,CAAC,WAAW,CACnB,EAAE,CAAC,CAAC;gBACF,UAAU,EAAE,GAAG;gBACf,YAAY,EAAE,OAAO;gBACrB,EAAE,EAAE,KAAK;gBACT,aAAa,EAAE,MAAM;aACtB,CAAC,CAEF;;UACF,EAAE,mBAAa,CACf;UAAA,CAAC,6BAAa,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAChD;;UACF,EAAE,6BAAa,CACjB;QAAA,EAAE,cAAG,CAAC,CACP,EAnBwB,CAmBxB,CAAC,CACF,OAAO,CAAC,CAAC,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,cAAG,CAAC,CAAC,CAE9C;MAAA,CAAC,UAAC,UAAU;YACV,OAAA,kBAAkB,CAAC,CAAC,CAAC,CACnB,kBAAkB,CAAC,UAAU,CAAC,CAC/B,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CACT,KAAK,CAAC,SAAS,CACf,IAAI,CAAC,OAAO,CACZ,OAAO,CAAC,CAAC;oBACP,MAAM,aAAN,MAAM,uBAAN,MAAM,EAAI,CAAC;oBACX,UAAU,EAAE,CAAC;gBACf,CAAC,CAAC,CAEF;YAAA,CAAC,sBAAgB,CAAC,AAAD,EACnB;UAAA,EAAE,qBAAU,CAAC,CACd;QAbD,CAcF,CACF;IAAA,EAAE,0BAAgB,CAAC,CACpB,CAAC;AACJ,CAAC,CAAC;AApDW,QAAA,SAAS,aAoDpB","sourcesContent":["import EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, DialogProps, DialogTitle, IconButton, Typography } from '@mui/material';\nimport React, { FC, ReactNode } from 'react';\nimport { RoundedButton } from '../../../../../components/RoundedButton';\nimport { PropsWithChildren } from '../../../../../shared/types';\nimport { InnerStateDialog } from '../../../../../telemed';\n\ntype EditModalProps = PropsWithChildren<{\n  onSave: (hideDialog: () => void) => void;\n  title: string;\n  customDialogButton?: (showDialog: () => void) => ReactNode;\n  isSaveLoading?: boolean;\n  onShow?: () => void;\n  maxWidth?: DialogProps['maxWidth'];\n}>;\n\nexport const EditModal: FC<EditModalProps> = (props) => {\n  const { children, onSave, title, customDialogButton, isSaveLoading, onShow, maxWidth } = props;\n\n  return (\n    <InnerStateDialog\n      showCloseButton\n      DialogProps={{ maxWidth: maxWidth || 'lg', PaperProps: { sx: { p: 2, pt: 3 } } }}\n      title={\n        <DialogTitle component={Typography} variant=\"h4\" color=\"primary.dark\" sx={{ pb: 0 }}>\n          {title}\n        </DialogTitle>\n      }\n      actions={(hideDialog) => (\n        <Box sx={{ display: 'flex', gap: 2, width: '100%' }}>\n          <LoadingButton\n            onClick={() => onSave(hideDialog)}\n            loading={isSaveLoading}\n            variant=\"contained\"\n            sx={{\n              fontWeight: 500,\n              borderRadius: '100px',\n              mr: '8px',\n              textTransform: 'none',\n            }}\n          >\n            Save changes\n          </LoadingButton>\n          <RoundedButton variant=\"text\" onClick={hideDialog}>\n            Cancel\n          </RoundedButton>\n        </Box>\n      )}\n      content={<Box sx={{ pt: 3 }}>{children}</Box>}\n    >\n      {(showDialog) =>\n        customDialogButton ? (\n          customDialogButton(showDialog)\n        ) : (\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              onShow?.();\n              showDialog();\n            }}\n          >\n            <EditOutlinedIcon />\n          </IconButton>\n        )\n      }\n    </InnerStateDialog>\n  );\n};\n"]}