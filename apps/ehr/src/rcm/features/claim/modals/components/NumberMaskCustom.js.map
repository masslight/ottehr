{"version":3,"file":"NumberMaskCustom.js","sourceRoot":"","sources":["NumberMaskCustom.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+BAAmC;AACnC,2CAAyC;AAQ5B,QAAA,gBAAgB,GAAG,IAAA,kBAAU,EAAgC,SAAS,cAAc,CAAC,KAAK,EAAE,GAAG;IAClG,IAAA,QAAQ,GAAe,KAAK,SAApB,EAAK,KAAK,UAAK,KAAK,EAA9B,YAAsB,CAAF,CAAW;IAErC,OAAO,CACL,CAAC,wBAAU,CACT,IAAI,KAAK,CAAC,CACV,IAAI,CAAC,gBAAgB,CACrB,QAAQ,CAAC,CAAC,GAAG,CAAC,CACd,QAAQ,CAAC,CAAC,UAAC,KAAU,IAAK,OAAA,QAAQ,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,OAAA,EAAE,EAAE,CAAC,EAAjD,CAAiD,CAAC,CAC5E,SAAS,EACT,CACH,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { forwardRef } from 'react';\nimport { IMaskInput } from 'react-imask';\n\ntype CustomProps = {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n  mask: string;\n};\n\nexport const NumberMaskCustom = forwardRef<HTMLInputElement, CustomProps>(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(000) 000-0000\"\n      inputRef={ref}\n      onAccept={(value: any) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n"]}