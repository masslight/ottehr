{"version":3,"file":"VirtualizedAutocomplete.js","sourceRoot":"","sources":["VirtualizedAutocomplete.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Autocomplete,\n  autocompleteClasses,\n  Popper,\n  styled,\n  TextField,\n  TextFieldProps,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@mui/material';\nimport {\n  createContext,\n  FC,\n  forwardRef,\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n} from 'react';\nimport { ListChildComponentProps, VariableSizeList } from 'react-window';\nimport { useWindowResize } from '../../../../hooks';\n\nconst LISTBOX_PADDING = 8;\n\ntype RowProps = {\n  setSize: (index: number, size: number) => void;\n  windowWidth: number;\n} & ListChildComponentProps;\n\nconst Row: FC<RowProps> = (props) => {\n  const { data, index, style, setSize, windowWidth } = props;\n  const dataSet = data[index];\n\n  const rowRef = useRef<HTMLLIElement>();\n\n  useEffect(() => {\n    if (rowRef.current) {\n      setSize(index, rowRef.current.getBoundingClientRect().height);\n    }\n  }, [setSize, index, windowWidth]);\n\n  const { renderRow } = useContext(RowContext);\n\n  const inlineStyle = {\n    ...style,\n    top: (style.top as number) + LISTBOX_PADDING,\n    height: 'auto',\n    minHeight: '36px',\n  };\n\n  return (\n    <Typography component=\"li\" {...dataSet[0]} style={inlineStyle} ref={rowRef}>\n      {renderRow(dataSet[1])}\n    </Typography>\n  );\n};\n\nconst OuterElementContext = createContext({});\n\nconst OuterElementType = forwardRef<HTMLDivElement>((props, ref) => {\n  const outerProps = useContext(OuterElementContext);\n  return <div ref={ref} {...props} {...outerProps} />;\n});\n\nfunction useResetCache(data: any): RefObject<VariableSizeList> {\n  const ref = useRef<VariableSizeList>(null);\n  useEffect(() => {\n    if (ref.current != null) {\n      ref.current.resetAfterIndex(0, true);\n    }\n  }, [data]);\n  return ref;\n}\n\n// Adapter for react-window\nconst ListboxComponent = forwardRef<HTMLDivElement, HTMLAttributes<HTMLElement>>(function ListboxComponent(props, ref) {\n  const { children, ...other } = props;\n  const itemData: ReactElement[] = [];\n  (children as ReactElement[]).forEach((item: ReactElement & { children?: ReactElement[] }) => {\n    itemData.push(item);\n    itemData.push(...(item.children || []));\n  });\n\n  const theme = useTheme();\n  const smUp = useMediaQuery(theme.breakpoints.up('sm'), {\n    noSsr: true,\n  });\n  const itemCount = itemData.length;\n  const itemSize = smUp ? 36 : 48;\n\n  const getHeight = (): number => {\n    if (itemCount > 8) {\n      return 8 * itemSize;\n    }\n    return itemData.length * itemSize;\n  };\n\n  const gridRef = useResetCache(itemCount);\n\n  const sizeMap = useRef<Record<number, number>>({});\n  const setSize = useCallback(\n    (index: number, size: number): void => {\n      sizeMap.current = { ...sizeMap.current, [index]: size };\n      gridRef.current?.resetAfterIndex(index);\n    },\n    [gridRef]\n  );\n\n  const getSize = (index: number): number => sizeMap.current[index] || itemSize;\n\n  const [windowWidth] = useWindowResize();\n\n  return (\n    <div ref={ref}>\n      <OuterElementContext.Provider value={other}>\n        <VariableSizeList\n          itemData={itemData}\n          height={getHeight() + 2 * LISTBOX_PADDING}\n          width=\"100%\"\n          ref={gridRef}\n          outerElementType={OuterElementType}\n          innerElementType=\"ul\"\n          itemSize={getSize}\n          overscanCount={5}\n          itemCount={itemCount}\n        >\n          {({ data, style, index }) => (\n            <Row style={style} data={data} index={index} setSize={setSize} windowWidth={windowWidth} />\n          )}\n        </VariableSizeList>\n      </OuterElementContext.Provider>\n    </div>\n  );\n});\n\nconst StyledPopper = styled(Popper)({\n  [`& .${autocompleteClasses.listbox}`]: {\n    boxSizing: 'border-box',\n    '& ul': {\n      padding: 0,\n      margin: 0,\n    },\n  },\n});\n\nconst RowContext = createContext<{ renderRow: (item: any) => string }>({\n  renderRow: () => '',\n});\n\nexport type VirtualizedAutocompleteProps<T> = {\n  options: T[];\n  renderRow: (item: T) => string;\n  value?: NonNullable<T>;\n  onChange: (newValue?: NonNullable<T>) => void;\n  clearable?: boolean;\n  disabled?: boolean;\n} & Pick<TextFieldProps, 'helperText' | 'error' | 'label'>;\n\nexport const VirtualizedAutocomplete = <T,>(props: VirtualizedAutocompleteProps<T>): ReactElement => {\n  const { options, renderRow, label, value, onChange, error, helperText, clearable, disabled } = props;\n\n  return (\n    <RowContext.Provider value={{ renderRow }}>\n      <Autocomplete\n        fullWidth\n        disabled={disabled}\n        value={value || (null as unknown as NonNullable<T>)}\n        onChange={(_, newValue) => onChange(newValue || undefined)}\n        size=\"small\"\n        disableListWrap\n        disableClearable={!clearable}\n        PopperComponent={StyledPopper}\n        ListboxComponent={ListboxComponent}\n        options={options}\n        isOptionEqualToValue={(option, value) => renderRow(option) === renderRow(value)}\n        getOptionLabel={(option) => renderRow(option)}\n        renderInput={(params) => <TextField {...params} label={label} error={error} helperText={helperText} />}\n        renderOption={(props, option, state) => [props, option, state.index] as ReactNode}\n      />\n    </RowContext.Provider>\n  );\n};\n"]}