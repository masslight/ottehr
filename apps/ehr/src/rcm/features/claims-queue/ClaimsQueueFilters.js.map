{"version":3,"file":"ClaimsQueueFilters.js","sourceRoot":"","sources":["ClaimsQueueFilters.tsx"],"names":[],"mappings":"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","sourcesContent":["import SearchIcon from '@mui/icons-material/Search';\nimport { Box, InputAdornment, TextField } from '@mui/material';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { FHIR_EXTENSION } from 'utils';\nimport { getEmployees } from '../../../api/api';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useDebounce } from '../../../telemed';\nimport { useClaimsQueueStore, useGetFacilities, useGetInsurancePlans, useGetOrganizations } from '../../state';\nimport { VirtualizedAutocomplete } from '../claim/modals/components';\n\nexport const ClaimsQueueFilters: FC = () => {\n  const {\n    employees,\n    teamMember,\n    facilities,\n    facility,\n    facilityGroup,\n    organizations,\n    patient,\n    visitId,\n    insurance,\n    insurancePlans,\n  } = getSelectors(useClaimsQueueStore, [\n    'employees',\n    'teamMember',\n    'facilities',\n    'facility',\n    'facilityGroup',\n    'organizations',\n    'patient',\n    'visitId',\n    'insurance',\n    'insurancePlans',\n  ]);\n\n  const [patientValue, setPatientValue] = useState(patient || '');\n  const [visitIdValue, setVisitIdValue] = useState(visitId || '');\n  const { debounce: patientDebounce } = useDebounce();\n  const { debounce: visitIdDebounce } = useDebounce();\n  const { oystehrZambda } = useApiClients();\n\n  useEffect(() => {\n    if (!patient) {\n      setPatientValue('');\n    }\n  }, [patient, setPatientValue]);\n\n  useEffect(() => {\n    if (!visitId) {\n      setVisitIdValue('');\n    }\n  }, [visitId, setVisitIdValue]);\n\n  useQuery(['rcm-get-employees', { oystehrZambda }], () => (oystehrZambda ? getEmployees(oystehrZambda) : null), {\n    onSuccess: (response) => {\n      console.log('Employees', response?.employees);\n      useClaimsQueueStore.setState({ employees: response?.employees || [] });\n    },\n    enabled: !!oystehrZambda,\n  });\n\n  useGetOrganizations((data) => {\n    console.log('Organizations', data);\n    useClaimsQueueStore.setState({ organizations: data });\n  });\n\n  useGetFacilities((data) => {\n    console.log('Facilities', data);\n    useClaimsQueueStore.setState({ facilities: data });\n  });\n\n  useGetInsurancePlans((data) => {\n    console.log('Insurance plans', data);\n    useClaimsQueueStore.setState({ insurancePlans: data });\n  });\n\n  const currentTeamMember = useMemo(\n    () => employees.find((employee) => employee.profile === teamMember),\n    [employees, teamMember]\n  );\n\n  const currentFacility = useMemo(() => facilities.find((f) => f.id === facility), [facilities, facility]);\n\n  const allFacilities = useMemo(\n    () =>\n      facilities.filter(\n        (facility) =>\n          facility.managingOrganization &&\n          facility.extension?.find(\n            (extension) =>\n              extension.url === FHIR_EXTENSION.Location.locationFormPreRelease.url &&\n              extension.valueCoding?.code === 'vi'\n          )\n      ),\n    [facilities]\n  );\n\n  const currentGroup = useMemo(() => organizations.find((o) => o.id === facilityGroup), [organizations, facilityGroup]);\n\n  const allFacilityGroups = useMemo(\n    () =>\n      organizations.filter(\n        (organization) =>\n          organization.type?.find(\n            (type) =>\n              type.coding?.find(\n                (coding) => coding.system === FHIR_EXTENSION.Organization.organizationType.url && coding.code === 'prov'\n              )\n          )\n      ),\n    [organizations]\n  );\n\n  const currentInsurancePlan = useMemo(\n    () => insurancePlans.find((i) => i.name === insurance),\n    [insurancePlans, insurance]\n  );\n\n  return (\n    <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 1 }}>\n      <Box sx={{ display: 'flex', gap: 1 }}>\n        {/*<TextField*/}\n        {/*  size=\"small\"*/}\n        {/*  fullWidth*/}\n        {/*  label=\"Patient Name\"*/}\n        {/*  placeholder=\"Name\"*/}\n        {/*  InputProps={{*/}\n        {/*    endAdornment: (*/}\n        {/*      <InputAdornment position=\"end\">*/}\n        {/*        <SearchIcon fontSize=\"small\" />*/}\n        {/*      </InputAdornment>*/}\n        {/*    ),*/}\n        {/*  }}*/}\n        {/*/>*/}\n\n        <TextField\n          value={patientValue}\n          onChange={(e) => {\n            setPatientValue(e.target.value);\n            patientDebounce(() => useClaimsQueueStore.setState({ patient: e.target.value.trim() }));\n          }}\n          size=\"small\"\n          fullWidth\n          label=\"Patient ID\"\n          placeholder=\"PID\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon fontSize=\"small\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <TextField\n          value={visitIdValue}\n          onChange={(e) => {\n            setVisitIdValue(e.target.value);\n            visitIdDebounce(() => useClaimsQueueStore.setState({ visitId: e.target.value.trim() }));\n          }}\n          size=\"small\"\n          fullWidth\n          label=\"Visit ID\"\n          placeholder=\"VID\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon fontSize=\"small\" />\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        {/*<TextField*/}\n        {/*  onChange={(e) => claimIdDebounce(() => useClaimsQueueStore.setState({ claimId: e.target.value.trim() }))}*/}\n        {/*  size=\"small\"*/}\n        {/*  fullWidth*/}\n        {/*  label=\"Claim ID\"*/}\n        {/*  placeholder=\"CID\"*/}\n        {/*  InputProps={{*/}\n        {/*    endAdornment: (*/}\n        {/*      <InputAdornment position=\"end\">*/}\n        {/*        <SearchIcon fontSize=\"small\" />*/}\n        {/*      </InputAdornment>*/}\n        {/*    ),*/}\n        {/*  }}*/}\n        {/*/>*/}\n\n        <VirtualizedAutocomplete\n          value={currentTeamMember}\n          onChange={(employee) => useClaimsQueueStore.setState({ teamMember: employee?.profile })}\n          options={employees}\n          clearable\n          label=\"Team member\"\n          renderRow={(employee) => {\n            if (employee.firstName && employee.lastName) return [employee.lastName, employee.firstName].join(', ');\n            else if (employee.name) return employee.name;\n            else return '-';\n          }}\n        />\n\n        {/*<FormControl size=\"small\" fullWidth>*/}\n        {/*  <InputLabel>Queue</InputLabel>*/}\n        {/*  <Select value={10} label=\"Queue\">*/}\n        {/*    <MenuItem value={10}>In Person</MenuItem>*/}\n        {/*    <MenuItem value={20}>Telemedicine</MenuItem>*/}\n        {/*  </Select>*/}\n        {/*</FormControl>*/}\n\n        {/*<FormControl size=\"small\" fullWidth>*/}\n        {/*  <InputLabel>Day in the queue</InputLabel>*/}\n        {/*  <Select*/}\n        {/*    value={claimsQueueState.dayInQueue}*/}\n        {/*    onChange={(e) => useClaimsQueueStore.setState({ dayInQueue: e.target.value as number })}*/}\n        {/*    label=\"Day in the queue\"*/}\n        {/*  >*/}\n        {/*    <MenuItem value={1}>1 day</MenuItem>*/}\n        {/*    <MenuItem value={2}>2 days</MenuItem>*/}\n        {/*    <MenuItem value={3}>3 days</MenuItem>*/}\n        {/*  </Select>*/}\n        {/*</FormControl>*/}\n\n        {/*<StatusFilter*/}\n        {/*  value={claimsQueueState.status}*/}\n        {/*  onChange={(value) => useClaimsQueueStore.setState({ status: value })}*/}\n        {/*/>*/}\n      </Box>\n\n      <Box sx={{ display: 'flex', gap: 1 }}>\n        {/*<StateFilter*/}\n        {/*  value={claimsQueueState.state}*/}\n        {/*  onChange={(value) => useClaimsQueueStore.setState({ state: value })}*/}\n        {/*/>*/}\n\n        <VirtualizedAutocomplete\n          value={currentGroup}\n          onChange={(org) => useClaimsQueueStore.setState({ facilityGroup: org?.id })}\n          options={allFacilityGroups}\n          clearable\n          label=\"Facility group\"\n          renderRow={(org) => org.name || ''}\n        />\n\n        <VirtualizedAutocomplete\n          value={currentFacility}\n          onChange={(facility) => useClaimsQueueStore.setState({ facility: facility?.id })}\n          options={allFacilities}\n          clearable\n          label=\"Facility\"\n          renderRow={(facility) => facility.name || ''}\n        />\n\n        <VirtualizedAutocomplete\n          value={currentInsurancePlan}\n          onChange={(insurance) => useClaimsQueueStore.setState({ insurance: insurance?.name })}\n          options={insurancePlans}\n          clearable\n          label=\"Insurance\"\n          renderRow={(insurance) => insurance.name || ''}\n        />\n\n        {/*<TextField*/}\n        {/*  onChange={(e) => balanceDebounce(() => useClaimsQueueStore.setState({ balance: +e.target.value }))}*/}\n        {/*  inputProps={{ type: 'number' }}*/}\n        {/*  size=\"small\"*/}\n        {/*  fullWidth*/}\n        {/*  label=\"Balance due, more than $... \"*/}\n        {/*/>*/}\n\n        {/*<LocalizationProvider dateAdapter={AdapterLuxon}>*/}\n        {/*  <DatePicker*/}\n        {/*    label=\"DOS - from\"*/}\n        {/*    onChange={(value) => useClaimsQueueStore.setState({ dosFrom: value?.toISO() || undefined })}*/}\n        {/*    inputFormat=\"MM.dd.yyyy\"*/}\n        {/*    value={dosFrom ? DateTime.fromISO(dosFrom || '') || null : null}*/}\n        {/*    renderInput={(params) => (*/}\n        {/*      <TextField*/}\n        {/*        fullWidth*/}\n        {/*        size=\"small\"*/}\n        {/*        {...params}*/}\n        {/*        error={false}*/}\n        {/*        inputProps={{*/}\n        {/*          ...params.inputProps,*/}\n        {/*          placeholder: 'MM.DD.YYYY',*/}\n        {/*        }}*/}\n        {/*      />*/}\n        {/*    )}*/}\n        {/*  />*/}\n\n        {/*  <DatePicker*/}\n        {/*    label=\"DOS - to\"*/}\n        {/*    onChange={(value) => useClaimsQueueStore.setState({ dosTo: value?.toISO() || undefined })}*/}\n        {/*    inputFormat=\"MM.dd.yyyy\"*/}\n        {/*    value={dosTo ? DateTime.fromISO(dosTo || '') || null : null}*/}\n        {/*    renderInput={(params) => (*/}\n        {/*      <TextField*/}\n        {/*        fullWidth*/}\n        {/*        size=\"small\"*/}\n        {/*        {...params}*/}\n        {/*        error={false}*/}\n        {/*        inputProps={{*/}\n        {/*          ...params.inputProps,*/}\n        {/*          placeholder: 'MM.DD.YYYY',*/}\n        {/*        }}*/}\n        {/*      />*/}\n        {/*    )}*/}\n        {/*  />*/}\n        {/*</LocalizationProvider>*/}\n      </Box>\n    </Box>\n  );\n};\n"]}