{"version":3,"file":"EligibilityStatusChip.js","sourceRoot":"","sources":["EligibilityStatusChip.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Chip } from '@mui/material';\nimport { Appointment, CoverageEligibilityResponse } from 'fhir/r4b';\nimport { FC } from 'react';\n\n// todo: delete this file?\ntype EligibilityStatusChipProps = {\n  eligibilityResponse?: CoverageEligibilityResponse;\n  appointment: Appointment;\n};\n\nconst mapStatusToDisplay: { [value in EligibilityStatus]: { value: string; color: string; background: string } } = {\n  passed: { value: 'Passed', color: '#1B5E20', background: '#C8E6C9' },\n  bypassed: { value: 'Bypassed', color: '#E65100', background: '#FFE0B2' },\n  unsupported: { value: 'Unsupported', color: '#E65100', background: '#FFE0B2' },\n  'api-down': { value: 'Api down', color: '#E65100', background: '#FFE0B2' },\n  ineligible: { value: 'Ineligible', color: '#B71C1C', background: '#FECDD2' },\n};\n\nconst ELIGIBILITY_BENEFIT_CODES = 'UC,86,30';\n\ntype EligibilityStatus = 'bypassed' | 'unsupported' | 'api-down' | 'passed' | 'ineligible';\n\nconst getEligibilityStatus = ({\n  eligibilityResponse,\n  appointment,\n}: {\n  eligibilityResponse?: CoverageEligibilityResponse;\n  appointment: Appointment;\n}): EligibilityStatus => {\n  if (!eligibilityResponse) {\n    return 'bypassed';\n  }\n\n  const failureReason = appointment.meta?.tag?.find((tag) => tag.system?.includes('eligibility-failed-reason'))?.code;\n  if (failureReason === 'real-time-eligibility-unsupported') {\n    return 'unsupported';\n  }\n  if (failureReason === 'api-failure') {\n    return 'api-down';\n  }\n\n  const eligible = eligibilityResponse.insurance?.[0].item?.some((item) => {\n    const code = item.category?.coding?.[0].code;\n    const isActive = item.benefit?.filter((benefit) => benefit.type.text === 'Active Coverage').length !== 0;\n    return isActive && code && ELIGIBILITY_BENEFIT_CODES.includes(code);\n  });\n\n  if (eligible) {\n    return 'passed';\n  } else {\n    return 'ineligible';\n  }\n};\n\nexport const EligibilityStatusChip: FC<EligibilityStatusChipProps> = (props) => {\n  const { appointment, eligibilityResponse } = props;\n\n  const status = getEligibilityStatus({ appointment, eligibilityResponse });\n\n  return (\n    <Chip\n      size=\"small\"\n      label={mapStatusToDisplay[status].value}\n      sx={{\n        borderRadius: '4px',\n        border: 'none',\n        background: mapStatusToDisplay[status].background,\n        height: 'auto',\n        '& .MuiChip-label': {\n          display: 'block',\n          whiteSpace: 'normal',\n          fontWeight: 500,\n          fontSize: '12px',\n          color: mapStatusToDisplay[status].color,\n          textTransform: 'uppercase',\n        },\n      }}\n      variant=\"outlined\"\n    />\n  );\n};\n"]}