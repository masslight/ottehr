{"version":3,"file":"Claims.js","sourceRoot":"","sources":["Claims.tsx"],"names":[],"mappings":";;;AAAA,iFAAgF;AAChF,0CAAsE;AACtE,+BAAgD;AAChD,qDAAmD;AACnD,+BAAyD;AACzD,wCAAsF;AACtF,kCAA+C;AAExC,IAAM,MAAM,GAAO;IAClB,IAAA,KAAkC,IAAA,kCAAe,GAAE,EAAlD,YAAY,QAAA,EAAE,eAAe,QAAqB,CAAC;IACpD,IAAA,KAA4B,IAAA,gBAAQ,EAAkB,uBAAe,CAAC,CAAC,CAAC,CAAC,EAAxE,SAAS,QAAA,EAAE,YAAY,QAAiD,CAAC;IAEhF,IAAA,iBAAS,EAAC;QACR,IAAM,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,MAAM,CAAoB,CAAC;QAEzD,IAAI,CAAC,IAAI,IAAI,CAAC,uBAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7C,eAAe,CAAC,EAAE,IAAI,EAAE,uBAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACN,YAAY,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;IACH,CAAC,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC,CAAC;IAEpC,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;SACxB,CAAC,CAEF;MAAA,CAAC,kBAAO,CAAC,AAAD,EAER;;MAAA,CAAC,eAAI,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CACvF;QAAA,CAAC,6BAAkB,CAAC,AAAD,EAEnB;;QAAA,CAAC,cAAG,CACF;UAAA,CAAC,qBAAU,CACT,KAAK,CAAC,SAAS,CACf,IAAI,CAAC,OAAO,CACZ,OAAO,CAAC,CAAC;YACP,OAAA,2BAAmB,CAAC,QAAQ,CAAC;gBAC3B,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,SAAS;gBAClB,UAAU,EAAE,SAAS;gBACrB,aAAa,EAAE,SAAS;gBACxB,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,SAAS;gBAClB,KAAK,EAAE,SAAS;aACjB,CAAC;QATF,CAUF,CAAC,CAED;YAAA,CAAC,8BAAwB,CAAC,AAAD,EAC3B;UAAA,EAAE,qBAAU,CACd;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,eAAI,CAEN;;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAClE;QAAA,CAAC,6BAAkB,CAAC,AAAD,EAEnB;;QAAA,CAAC,gBAAK,CACJ;UAAA,CAAC,0BAAe,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EACnC;QAAA,EAAE,gBAAK,CACT;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAzDW,QAAA,MAAM,UAyDjB","sourcesContent":["import FilterAltOffOutlinedIcon from '@mui/icons-material/FilterAltOffOutlined';\nimport { Box, Card, Divider, IconButton, Paper } from '@mui/material';\nimport { FC, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ClaimQueueTypes, ClaimsQueueType } from 'utils';\nimport { ClaimsQueueButtons, ClaimsQueueFilters, ClaimsQueueGrid } from '../features';\nimport { useClaimsQueueStore } from '../state';\n\nexport const Claims: FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [claimType, setClaimType] = useState<ClaimsQueueType>(ClaimQueueTypes[0]);\n\n  useEffect(() => {\n    const type = searchParams.get('type') as ClaimsQueueType;\n\n    if (!type || !ClaimQueueTypes.includes(type)) {\n      setSearchParams({ type: ClaimQueueTypes[0] });\n    } else {\n      setClaimType(type);\n    }\n  }, [searchParams, setSearchParams]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Divider />\n\n      <Card sx={{ display: 'flex', gap: 2, p: 2, backgroundColor: 'inherit', borderRadius: 0 }}>\n        <ClaimsQueueFilters />\n\n        <Box>\n          <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={() =>\n              useClaimsQueueStore.setState({\n                patient: undefined,\n                visitId: undefined,\n                teamMember: undefined,\n                facilityGroup: undefined,\n                facility: undefined,\n                insurance: undefined,\n                dosFrom: undefined,\n                dosTo: undefined,\n              })\n            }\n          >\n            <FilterAltOffOutlinedIcon />\n          </IconButton>\n        </Box>\n      </Card>\n\n      <Box sx={{ display: 'flex', flexDirection: 'column', p: 3, gap: 2 }}>\n        <ClaimsQueueButtons />\n\n        <Paper>\n          <ClaimsQueueGrid type={claimType} />\n        </Paper>\n      </Box>\n    </Box>\n  );\n};\n"]}