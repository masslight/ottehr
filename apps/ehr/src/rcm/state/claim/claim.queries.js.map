{"version":3,"file":"claim.queries.js","sourceRoot":"","sources":["claim.queries.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Appointment,\n  Bundle,\n  Claim,\n  Coverage,\n  DocumentReference,\n  Encounter,\n  FhirResource,\n  InsurancePlan,\n  Location,\n  Organization,\n  Patient,\n  RelatedPerson,\n} from 'fhir/r4b';\nimport { useMutation, UseMutationResult, useQuery, UseQueryResult } from 'react-query';\nimport { INSURANCE_PLAN_PAYER_META_TAG_CODE } from 'utils';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { findResourceByType, generateOpByResourceData, getCoverageRelatedResources } from '../../utils';\n\nexport const useGetClaim = (\n  {\n    claimId,\n  }: {\n    claimId: string | undefined;\n  },\n  onSuccess: (data: Bundle<FhirResource>[]) => void\n): UseQueryResult<FhirResource[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['rcm-claim', claimId],\n    async () => {\n      if (oystehr && claimId) {\n        const resources = (\n          await oystehr.fhir.search<\n            Appointment | Claim | Coverage | DocumentReference | Encounter | Patient | RelatedPerson\n          >({\n            resourceType: 'Claim',\n            params: [\n              { name: '_id', value: claimId },\n              {\n                name: '_include',\n                value: 'Claim:patient',\n              },\n              {\n                name: '_include',\n                value: 'Claim:encounter',\n              },\n              {\n                name: '_include:iterate',\n                value: 'Encounter:appointment',\n              },\n              {\n                name: '_revinclude:iterate',\n                value: 'DocumentReference:encounter',\n              },\n            ],\n          })\n        ).unbundle();\n\n        const claim = findResourceByType<Claim>(resources, 'Claim');\n\n        const coverageReference = claim?.insurance?.[0]?.coverage?.reference;\n        const coverageResourcesPromise = getCoverageRelatedResources(oystehr, coverageReference);\n\n        const additionalCoverageReference = claim?.insurance?.[1]?.coverage?.reference;\n        const additionalCoverageResourcesPromise = getCoverageRelatedResources(oystehr, additionalCoverageReference);\n\n        resources.push(...(await coverageResourcesPromise));\n        resources.push(...(await additionalCoverageResourcesPromise));\n\n        return resources;\n      }\n      throw new Error('fhir client not defined or claimId not provided');\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get claim: ', err);\n      },\n    }\n  );\n};\n\nexport const useGetInsurancePlans = (\n  onSuccess: (data: InsurancePlan[]) => void\n): UseQueryResult<InsurancePlan[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['rcm-insurance-plans'],\n    async () => {\n      if (oystehr) {\n        return (\n          await oystehr.fhir.search<InsurancePlan>({\n            resourceType: 'InsurancePlan',\n            params: [\n              {\n                name: '_tag',\n                value: INSURANCE_PLAN_PAYER_META_TAG_CODE,\n              },\n              {\n                name: 'status',\n                value: 'active',\n              },\n            ],\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined');\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get insurance plans: ', err);\n      },\n    }\n  );\n};\n\nexport const useGetOrganizations = (\n  onSuccess: (data: Organization[]) => void\n): UseQueryResult<Organization[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['rcm-organizations'],\n    async () => {\n      if (oystehr) {\n        return (\n          await oystehr.fhir.search<Organization>({\n            resourceType: 'Organization',\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined');\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get organizations: ', err);\n      },\n    }\n  );\n};\n\nexport const useGetFacilities = (onSuccess: (data: Location[]) => void): UseQueryResult<Location[], unknown> => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['rcm-facilities'],\n    async () => {\n      if (oystehr) {\n        return (\n          await oystehr.fhir.search<Location>({\n            resourceType: 'Location',\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined');\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get facilities: ', err);\n      },\n    }\n  );\n};\n\nexport const useEditCoverageInformationMutation = (): UseMutationResult<\n  Coverage,\n  unknown,\n  {\n    coverageData: Coverage;\n    previousCoverageData: Coverage;\n    fieldsToUpdate?: ('relationship' | 'class' | 'payor' | 'subscriberId')[];\n  }\n> => {\n  const { oystehr } = useApiClients();\n  return useMutation({\n    mutationFn: ({\n      coverageData,\n      previousCoverageData,\n      fieldsToUpdate,\n    }: {\n      coverageData: Coverage;\n      previousCoverageData: Coverage;\n      fieldsToUpdate?: ('relationship' | 'class' | 'payor' | 'subscriberId')[];\n    }) => {\n      if (!oystehr) {\n        throw new Error('Oystehr not found');\n      }\n\n      if (!fieldsToUpdate || fieldsToUpdate.length === 0) {\n        fieldsToUpdate = ['relationship'];\n      }\n      const fieldsSet = [...new Set(fieldsToUpdate)];\n\n      const operations = fieldsSet\n        .filter((field) => coverageData[field] !== undefined || previousCoverageData[field] !== undefined)\n        .map((field) => ({\n          op: generateOpByResourceData(coverageData, previousCoverageData, field),\n          path: `/${field}`,\n          value: coverageData[field],\n        }));\n\n      if (operations.length === 0) {\n        return Promise.resolve(coverageData);\n      }\n\n      return oystehr.fhir.patch<Coverage>({\n        resourceType: 'Coverage',\n        id: coverageData.id ?? '',\n        operations: operations,\n      });\n    },\n    onError: (err) => {\n      console.error('Error during editing coverage information: ', err);\n    },\n  });\n};\n\nexport const useEditRelatedPersonInformationMutation = (): UseMutationResult<\n  RelatedPerson,\n  unknown,\n  {\n    relatedPersonData: RelatedPerson;\n    previousRelatedPersonData: RelatedPerson;\n    fieldsToUpdate?: ('address' | 'birthDate' | 'gender' | 'name')[];\n  }\n> => {\n  const { oystehr } = useApiClients();\n  return useMutation({\n    mutationFn: ({\n      relatedPersonData,\n      previousRelatedPersonData,\n      fieldsToUpdate,\n    }: {\n      relatedPersonData: RelatedPerson;\n      previousRelatedPersonData: RelatedPerson;\n      fieldsToUpdate?: ('address' | 'birthDate' | 'gender' | 'name')[];\n    }) => {\n      if (!oystehr) {\n        throw new Error('Oystehr not found');\n      }\n\n      if (!fieldsToUpdate || fieldsToUpdate.length === 0) {\n        fieldsToUpdate = ['address', 'birthDate', 'gender', 'name'];\n      }\n      const fieldsSet = [...new Set(fieldsToUpdate)];\n\n      return oystehr.fhir.patch<RelatedPerson>({\n        resourceType: 'RelatedPerson',\n        id: relatedPersonData.id ?? '',\n        operations: fieldsSet\n          .filter((field) => relatedPersonData[field] !== undefined || previousRelatedPersonData[field] !== undefined)\n          .map((field) => ({\n            op: generateOpByResourceData(relatedPersonData, previousRelatedPersonData, field),\n            path: `/${field}`,\n            value: relatedPersonData[field],\n          })),\n      });\n    },\n    onError: (err) => {\n      console.error('Error during editing related person information: ', err);\n    },\n  });\n};\n\nexport const useEditClaimInformationMutation = (): UseMutationResult<\n  Claim,\n  unknown,\n  {\n    claimData: Claim;\n    previousClaimData: Claim;\n    fieldsToUpdate?: (\n      | 'accident'\n      | 'extension'\n      | 'supportingInfo'\n      | 'related'\n      | 'insurance'\n      | 'diagnosis'\n      | 'item'\n      | 'total'\n      | 'facility'\n      | 'provider'\n      | 'enterer'\n    )[];\n  }\n> => {\n  const { oystehr } = useApiClients();\n  return useMutation({\n    mutationFn: ({\n      claimData,\n      previousClaimData,\n      fieldsToUpdate,\n    }: {\n      claimData: Claim;\n      previousClaimData: Claim;\n      fieldsToUpdate?: (\n        | 'accident'\n        | 'extension'\n        | 'supportingInfo'\n        | 'related'\n        | 'insurance'\n        | 'diagnosis'\n        | 'item'\n        | 'total'\n        | 'facility'\n        | 'provider'\n        | 'enterer'\n      )[];\n    }) => {\n      if (!oystehr) {\n        throw new Error('Oystehr not found');\n      }\n\n      if (!fieldsToUpdate || fieldsToUpdate.length === 0) {\n        fieldsToUpdate = ['accident', 'extension', 'supportingInfo', 'related', 'insurance'];\n      }\n      const fieldsSet = [...new Set(fieldsToUpdate)];\n\n      return oystehr.fhir.patch<Claim>({\n        resourceType: 'Claim',\n        id: claimData.id ?? '',\n        operations: fieldsSet\n          .filter((field) => claimData[field] !== undefined || previousClaimData[field] !== undefined)\n          .map((field) => ({\n            op: generateOpByResourceData(claimData, previousClaimData, field),\n            path: `/${field}`,\n            value: claimData[field],\n          })),\n      });\n    },\n    onError: (err) => {\n      console.error('Error during editing claim information: ', err);\n    },\n  });\n};\n"]}