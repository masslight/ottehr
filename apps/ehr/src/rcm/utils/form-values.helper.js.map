{"version":3,"file":"form-values.helper.js","sourceRoot":"","sources":["form-values.helper.ts"],"names":[],"mappings":";;;AAgBa,QAAA,eAAe,GAA4D;IACtF,SAAS,EAAE;QACT,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE;QACR,QAAQ,EAAE,IAAI;KACf;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,UAAC,KAAK;YACd,IAAI,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAA,EAAE,CAAC;gBACpB,OAAO,sBAAsB,CAAC;YAChC,CAAC;YACD,OAAO;QACT,CAAC;KACF;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACL,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,UAAC,KAAK;YACd,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC3C,OAAO,8BAA8B,CAAC;YACxC,CAAC;YACD,OAAO;QACT,CAAC;KACF;IACD,OAAO,EAAE;QACP,QAAQ,EAAE,IAAI;KACf;IACD,IAAI,EAAE;QACJ,QAAQ,EAAE,IAAI;KACf;IACD,KAAK,EAAE;QACL,QAAQ,EAAE,IAAI;KACf;IACD,GAAG,EAAE;QACH,QAAQ,EAAE,IAAI;QACd,QAAQ,EAAE,UAAC,KAAK;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC3B,OAAO,qBAAqB,CAAC;YAC/B,CAAC;YACD,OAAO;QACT,CAAC;KACF;IACD,YAAY,EAAE;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,YAAY,EAAE;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,SAAS,EAAE;QACT,QAAQ,EAAE,IAAI;KACf;CACF,CAAC","sourcesContent":["import { ControllerProps } from 'react-hook-form';\n\ntype FieldsForRules =\n  | 'firstName'\n  | 'lastName'\n  | 'dob'\n  | 'sex'\n  | 'phone'\n  | 'address'\n  | 'city'\n  | 'state'\n  | 'zip'\n  | 'relationship'\n  | 'planAndPayor'\n  | 'insuredID';\n\nexport const mapFieldToRules: { [value in FieldsForRules]: ControllerProps['rules'] } = {\n  firstName: {\n    required: true,\n  },\n  lastName: {\n    required: true,\n  },\n  dob: {\n    required: true,\n    validate: (value) => {\n      if (!value?.isValid) {\n        return 'Provide correct date';\n      }\n      return;\n    },\n  },\n  sex: {\n    required: true,\n  },\n  phone: {\n    required: true,\n    validate: (value) => {\n      if (!/^\\(\\d{3}\\) \\d{3}-\\d{4}$/.test(value)) {\n        return 'Provide correct phone number';\n      }\n      return;\n    },\n  },\n  address: {\n    required: true,\n  },\n  city: {\n    required: true,\n  },\n  state: {\n    required: true,\n  },\n  zip: {\n    required: true,\n    validate: (value) => {\n      if (!/^\\d{5}$/.test(value)) {\n        return 'Provide correct ZIP';\n      }\n      return;\n    },\n  },\n  relationship: {\n    required: true,\n  },\n  planAndPayor: {\n    required: true,\n  },\n  insuredID: {\n    required: true,\n  },\n};\n"]}