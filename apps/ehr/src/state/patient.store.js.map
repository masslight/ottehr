{"version":3,"file":"patient.store.js","sourceRoot":"","sources":["patient.store.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,+BAMe;AACf,mCAAiC;AA4BjC,IAAM,eAAe,GAAiB;IACpC,OAAO,EAAE,IAAI;IACb,UAAU,EAAE,EAAE;IACd,aAAa,EAAE,EAAE;IACjB,cAAc,EAAE,EAAE;IAClB,cAAc,EAAE,EAAE;IAClB,eAAe,EAAE;QACf,OAAO,EAAE,EAAE;QACX,SAAS,EAAE,EAAE;QACb,cAAc,EAAE,EAAE;KACnB;CACF,CAAC;AAEW,QAAA,eAAe,GAAG,IAAA,gBAAM,GAAsC,CAAC,UAAC,GAAG,IAAK,OAAA,uBAChF,eAAe,KAClB,UAAU,EAAE,UAAC,OAAO,IAAK,OAAA,GAAG,CAAC,EAAE,OAAO,SAAA,EAAE,CAAC,EAAhB,CAAgB,EACzC,iBAAiB,EAAE,UAAC,cAAc,IAAK,OAAA,GAAG,CAAC,EAAE,cAAc,gBAAA,EAAE,CAAC,EAAvB,CAAuB,EAC9D,KAAK,EAAE;QACL,GAAG,CAAC;YACF,eAAe,EAAE,eAAe,CAAC,eAAe;SACjD,CAAC,CAAC;IACL,CAAC,IACD,EATmF,CASnF,CAAC,CAAC;AAEG,IAAM,sBAAsB,GAAG,UAAC,YAA0B;;IACvD,IAAA,EAAE,GAA8B,YAAY,GAA1C,EAAE,IAAI,GAAwB,YAAY,KAApC,EAAE,MAAM,GAAgB,YAAY,OAA5B,EAAE,SAAS,GAAK,YAAY,UAAjB,CAAkB;IAErD,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;IAC3E,CAAC;IAED,IAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,YAAY,CAAC,CAAC;IAEzC,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC9D,CAAC;IAED,IAAM,gBAAgB,cACpB,EAAE,IAAA,EACF,IAAI,MAAA,EACJ,OAAO,EAAE,MAAM,EACf,OAAO,SAAA,IACH,MAAM,CAAC,WAAW,CACpB,kCAA0B,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,GAAG,EAAE,KAAK,CAAC,EAAZ,CAAY,CAAC,CACd,CAC1C,CAAC;IAEF,MAAA,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CACL,IAAI,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,GAAG,KAAK,2DAA2D,EAA7E,CAA6E,CAAC,0CAClG,SAAS,0CAAE,OAAO,CAAC,UAAC,WAAW;QAC/B,gBAAgB,CAAC,WAAW,CAAC,GAAmC,CAAC,GAAG,WAAW,CAAC,YAAY,IAAI,KAAK,CAAC;IACxG,CAAC,CAAC,CAAC;IAEL,OAAO,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AA9BW,QAAA,sBAAsB,0BA8BjC","sourcesContent":["import { Operation } from 'fast-json-patch';\nimport { Coverage, Organization, Patient, RelatedPerson } from 'fhir/r4b';\nimport {\n  eligibilityRequirementKeys,\n  getPayerId,\n  InsurancePlanDTO,\n  InsurancePlanRequirementKeyBooleans,\n  InsurancePlanRequirementKeys,\n} from 'utils';\nimport { create } from 'zustand';\n\nexport interface Insurance {\n  coverage: Coverage;\n  relatedPerson: RelatedPerson;\n  isTemp: true;\n}\n\ninterface ResourcePatches {\n  patient: Operation[];\n  coverages: { [id: string]: Operation[] }; // key is Coverage.id\n  relatedPersons: { [id: string]: Operation[] }; // key is RelatedPerson.id\n}\n\ntype PatientState = {\n  patient: Patient | null;\n  insurances: Coverage[];\n  policyHolders: RelatedPerson[];\n  patchOperations: ResourcePatches;\n  tempInsurances: Insurance[];\n  insurancePlans: InsurancePlanDTO[];\n};\ninterface PatientStoreActions {\n  setPatient: (patient: Patient | null) => void;\n  setInsurancePlans: (insurancePlans: InsurancePlanDTO[]) => void;\n  reset: () => void;\n}\n\nconst PATIENT_INITIAL: PatientState = {\n  patient: null,\n  insurances: [],\n  policyHolders: [],\n  tempInsurances: [],\n  insurancePlans: [],\n  patchOperations: {\n    patient: [],\n    coverages: {},\n    relatedPersons: {},\n  },\n};\n\nexport const usePatientStore = create<PatientState & PatientStoreActions>()((set) => ({\n  ...PATIENT_INITIAL,\n  setPatient: (patient) => set({ patient }),\n  setInsurancePlans: (insurancePlans) => set({ insurancePlans }),\n  reset: () => {\n    set({\n      patchOperations: PATIENT_INITIAL.patchOperations,\n    });\n  },\n}));\n\nexport const createInsurancePlanDto = (organization: Organization): InsurancePlanDTO => {\n  const { id, name, partOf, extension } = organization;\n\n  if (!id || !name) {\n    throw new Error('Insurance is missing id, name or owning organization.');\n  }\n\n  const payerId = getPayerId(organization);\n\n  if (!payerId) {\n    throw new Error('Owning organization is missing payer-id.');\n  }\n\n  const insurancePlanDto: InsurancePlanDTO = {\n    id,\n    name,\n    ownedBy: partOf,\n    payerId,\n    ...(Object.fromEntries(\n      eligibilityRequirementKeys.map((key) => [key, false])\n    ) as InsurancePlanRequirementKeyBooleans),\n  };\n\n  extension\n    ?.find((extension) => extension.url === 'https://extensions.fhir.zapehr.com/insurance-requirements')\n    ?.extension?.forEach((requirement) => {\n      insurancePlanDto[requirement.url as InsurancePlanRequirementKeys] = requirement.valueBoolean || false;\n    });\n\n  return insurancePlanDto;\n};\n"]}