{"version":3,"file":"ConfirmationDialog.js","sourceRoot":"","sources":["ConfirmationDialog.tsx"],"names":[],"mappings":";;;AAAA,0CAAyD;AAEzD,gEAA+D;AAC/D,+DAA4D;AAC5D,uDAAsD;AAqB/C,IAAM,kBAAkB,GAAgC,UAAC,KAAK;IACnE,IAAM,cAAc,GAAG,UAAC,UAAsB;QAC5C,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,UAAU,EAAE,CAAC;IACf,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,mCAAgB,CACf,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CACnB,OAAO,CAAC,CACN,KAAK,CAAC,WAAW;YACjB,CAAC,OAAO,KAAK,CAAC,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,CACvC,CAAC,4BAAiB,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,4BAAiB,CAAC,CAC3D,CAAC,CAAC,CAAC,CACF,KAAK,CAAC,WAAW,CAClB,CACH,CAAC,CACD,OAAO,CAAC,CAAC,UAAC,UAAU;;YAAK,OAAA,CACvB,CAAC,gBAAK,CAAC,SAAS,CAAC,CAAC,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,OAAO,EAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAClF;UAAA,CAAC,6BAAa,CACZ,WAAW,CAAC,CAAC,2BAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAC9C,OAAO,CAAC,CAAC,cAAM,OAAA,cAAc,CAAC,UAAU,CAAC,EAA1B,CAA0B,CAAC,CAC1C,OAAO,CAAC,WAAW,CACnB,KAAK,CAAC,CAAC,CAAA,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,OAAO,0CAAE,KAAK,KAAI,SAAS,CAAC,CACzD,QAAQ,CAAC,CAAC,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,OAAO,0CAAE,QAAQ,CAAC,CAElD;YAAA,CAAC,CAAA,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,OAAO,0CAAE,IAAI,KAAI,SAAS,CACnD;UAAA,EAAE,6BAAa,CACf;UAAA,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,IAAI,0CAAE,KAAK,KAAI,SAAS,CAAC,CACxF;YAAA,CAAC,CAAA,MAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,0CAAE,IAAI,0CAAE,IAAI,KAAI,MAAM,CAC7C;UAAA,EAAE,6BAAa,CACjB;QAAA,EAAE,gBAAK,CAAC,CACT,CAAA;SAAA,CAAC,CACF,WAAW,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAEhC;MAAA,CAAC,UAAC,UAAU,IAAK,OAAA,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAA1B,CAA0B,CAC7C;IAAA,EAAE,mCAAgB,CAAC,CACpB,CAAC;AACJ,CAAC,CAAC;AAtCW,QAAA,kBAAkB,sBAsC7B","sourcesContent":["import { DialogContentText, Stack } from '@mui/material';\nimport { FC, ReactNode } from 'react';\nimport { RoundedButton } from '../../components/RoundedButton';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { InnerStateDialog } from './InnerStateDialog';\n\ntype ConfirmationDialogProps = {\n  response: () => void;\n  title: string;\n  description?: string | ReactNode;\n  children: (showDialog: () => void) => ReactNode;\n  actionButtons?: {\n    proceed?: {\n      text?: string;\n      color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning';\n      disabled?: boolean;\n    };\n    back?: {\n      text?: string;\n      color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning';\n    };\n    reverse?: boolean;\n  };\n};\n\nexport const ConfirmationDialog: FC<ConfirmationDialogProps> = (props) => {\n  const confirmRequest = (hideDialog: () => void): void => {\n    props.response();\n    hideDialog();\n  };\n\n  return (\n    <InnerStateDialog\n      title={props.title}\n      content={\n        props.description &&\n        (typeof props.description === 'string' ? (\n          <DialogContentText>{props.description}</DialogContentText>\n        ) : (\n          props.description\n        ))\n      }\n      actions={(hideDialog) => (\n        <Stack direction={props?.actionButtons?.reverse ? 'row-reverse' : 'row'} spacing={2}>\n          <RoundedButton\n            data-testid={dataTestIds.dialog.proceedButton}\n            onClick={() => confirmRequest(hideDialog)}\n            variant=\"contained\"\n            color={props?.actionButtons?.proceed?.color || 'primary'}\n            disabled={props?.actionButtons?.proceed?.disabled}\n          >\n            {props?.actionButtons?.proceed?.text || 'Proceed'}\n          </RoundedButton>\n          <RoundedButton onClick={hideDialog} color={props?.actionButtons?.back?.color || 'primary'}>\n            {props?.actionButtons?.back?.text || 'Back'}\n          </RoundedButton>\n        </Stack>\n      )}\n      DialogProps={{ maxWidth: 'xs' }}\n    >\n      {(showDialog) => props.children(showDialog)}\n    </InnerStateDialog>\n  );\n};\n"]}