{"version":3,"file":"HearingRelayPopup.js","sourceRoot":"","sources":["HearingRelayPopup.tsx"],"names":[],"mappings":";;AAAA,0CAAsG;AACtG,+BAA4C;AAC5C,+BAAyD;AACzD,gEAA+D;AAC/D,kCAA+C;AAO/C,IAAM,iBAAiB,GAAG,UAAC,EAA2C;;QAAzC,OAAO,aAAA,EAAE,MAAM,YAAA;IAClC,IAAA,qBAAqB,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,uBAAuB,CAAC,CAAC,sBAAjE,CAAkE;IAE/F,IAAM,kBAAkB,GACtB,CAAA,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,gBAAgB,EAAE,qBAAqB,CAAC,0CAAE,MAAM,0CAAG,CAAC,CAAC,0CAAE,WAAW;SACnG,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,iBAAiB,EAAE,qBAAqB,CAAC,0CAAE,MAAM,0CAAG,CAAC,CAAC,0CAAE,WAAW,CAAA;QACpG,EAAE,CAAC;IAEL,IAAM,QAAQ,GAAG;QACf,UAAU,EAAE,GAAG;QACf,aAAa,EAAE,MAAM;QACrB,YAAY,EAAE,CAAC;QACf,EAAE,EAAE,CAAC;QACL,EAAE,EAAE,CAAC;KACN,CAAC;IAEF,OAAO,CACL,CAAC,iBAAM,CACL,IAAI,CAAC,CAAC,MAAM,CAAC,CACb,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,SAAS,CACT,iBAAiB,CACjB,EAAE,CAAC,CAAC;YACF,gBAAgB,EAAE;gBAChB,OAAO,EAAE,CAAC;gBACV,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,SAAS;aACpB;SACF,CAAC,CAEF;MAAA,CAAC,sBAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CACnE;;MACF,EAAE,sBAAW,CACb;MAAA,CAAC,wBAAa,CACZ;QAAA,CAAC,qBAAU,CAAC,CAAC,qFAA8E,kBAAkB,MAAG,CAAC,EAAE,qBAAU,CAC/H;MAAA,EAAE,wBAAa,CACf;MAAA,CAAC,wBAAa,CAAC,EAAE,CAAC,CAAC,EAAE,cAAc,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACvD;QAAA,CAAC,iBAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CACvF;;QACF,EAAE,iBAAM,CACV;MAAA,EAAE,wBAAa,CACjB;IAAA,EAAE,iBAAM,CAAC,CACV,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,iBAAiB,CAAC","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@mui/material';\nimport React, { ReactElement } from 'react';\nimport { getQuestionnaireResponseByLinkId } from 'utils';\nimport { getSelectors } from '../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../state';\n\ninterface HearingRelayPopupProps {\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nconst HearingRelayPopup = ({ onClose, isOpen }: HearingRelayPopupProps): ReactElement => {\n  const { questionnaireResponse } = getSelectors(useAppointmentStore, ['questionnaireResponse']);\n\n  const patientPhoneNumber =\n    getQuestionnaireResponseByLinkId('patient-number', questionnaireResponse)?.answer?.[0]?.valueString ||\n    getQuestionnaireResponseByLinkId('guardian-number', questionnaireResponse)?.answer?.[0]?.valueString ||\n    '';\n\n  const buttonSx = {\n    fontWeight: 500,\n    textTransform: 'none',\n    borderRadius: 6,\n    mb: 2,\n    ml: 1,\n  };\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      fullWidth\n      disableScrollLock\n      sx={{\n        '.MuiPaper-root': {\n          padding: 1,\n          width: '444px',\n          maxWidth: 'initial',\n        },\n      }}\n    >\n      <DialogTitle variant=\"h4\" color=\"primary.dark\" sx={{ width: '100%' }}>\n        Patient requires a Hearing Impaired Relay Service (711)\n      </DialogTitle>\n      <DialogContent>\n        <Typography>{`Patient requires a Hearing Impaired Relay Service (711). Patient number is ${patientPhoneNumber}.`}</Typography>\n      </DialogContent>\n      <DialogActions sx={{ justifyContent: 'flex-end', mr: 3 }}>\n        <Button onClick={onClose} color=\"primary\" variant=\"contained\" size=\"medium\" sx={buttonSx}>\n          OK, Got it\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default HearingRelayPopup;\n"]}