{"version":3,"file":"SectionList.js","sourceRoot":"","sources":["SectionList.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAA6D;AAC7D,+BAAiC;AAE1B,IAAM,WAAW,GAAG,UAAC,EAM3B;QALC,QAAQ,cAAA,EACR,EAAE,QAAA;IAKF,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,WAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAK,EAAE,EAAG,CACnE;MAAA,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAChC,CAAC,gBAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CACnB;UAAA,CAAC,OAAO,CACR;UAAA,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,kBAAO,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAG,CAC/E;QAAA,EAAE,gBAAQ,CAAC,CACZ,EALiC,CAKjC,CAAC,CACJ;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAjBW,QAAA,WAAW,eAiBtB","sourcesContent":["import { Box, Divider, SxProps, Theme } from '@mui/material';\nimport { Fragment } from 'react';\n\nexport const SectionList = ({\n  sections,\n  sx,\n}: {\n  sections: (false | JSX.Element)[];\n  sx?: SxProps<Theme>;\n}): JSX.Element => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, ...sx }}>\n      {sections.map((section, index) => (\n        <Fragment key={index}>\n          {section}\n          {index < sections.length - 1 && <Divider orientation=\"horizontal\" flexItem />}\n        </Fragment>\n      ))}\n    </Box>\n  );\n};\n"]}