{"version":3,"file":"oystehrApi.js","sourceRoot":"","sources":["oystehrApi.ts"],"names":[],"mappings":"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","sourcesContent":["import Oystehr from '@oystehr/sdk';\nimport {\n  AssignPractitionerInput,\n  AssignPractitionerResponse,\n  ChangeInPersonVisitStatusInput,\n  ChangeInPersonVisitStatusResponse,\n  ChangeTelemedAppointmentStatusInput,\n  ChangeTelemedAppointmentStatusResponse,\n  CommunicationDTO,\n  DeleteChartDataRequest,\n  DeleteChartDataResponse,\n  DeletePatientInstructionInput,\n  GetChartDataRequest,\n  GetChartDataResponse,\n  GetCreateLabOrderResources,\n  GetMedicationOrdersInput,\n  GetMedicationOrdersResponse,\n  getOystehrApiHelpers,\n  GetPatientAccountZambdaInput,\n  GetPatientInstructionsInput,\n  GetTelemedAppointmentsResponseEhr,\n  IcdSearchRequestParams,\n  IcdSearchResponse,\n  InitTelemedSessionRequestParams,\n  InitTelemedSessionResponse,\n  LabOrderResourcesRes,\n  NotFoundAppointmentErrorHandler,\n  PatientAccountResponse,\n  RemoveCoverageZambdaInput,\n  SaveChartDataRequest,\n  SaveChartDataResponse,\n  SavePatientInstructionInput,\n  SendFaxZambdaInput,\n  SignAppointmentInput,\n  SignAppointmentResponse,\n  SyncUserResponse,\n  UnassignPractitionerZambdaInput,\n  UnassignPractitionerZambdaOutput,\n  UpdateCoverageZambdaInput,\n  UpdateMedicationOrderInput,\n} from 'utils';\nimport { GetAppointmentsRequestParams } from '../utils';\nimport { GetOystehrTelemedAPIParams } from './types';\n\nenum ZambdaNames {\n  'get telemed appointments' = 'get telemed appointments',\n  'init telemed session' = 'init telemed session',\n  'get chart data' = 'get chart data',\n  'save chart data' = 'save chart data',\n  'delete chart data' = 'delete chart data',\n  'change telemed appointment status' = 'change telemed appointment status',\n  'change in person visit status' = 'change in person visit status',\n  'assign practitioner' = 'assign practitioner',\n  'unassign practitioner' = 'unassign practitioner',\n  'sign appointment' = 'sign appointment',\n  'sync user' = 'sync user',\n  'get patient instructions' = 'get patient instructions',\n  'save patient instruction' = 'save patient instruction',\n  'delete patient instruction' = 'delete patient instruction',\n  'icd search' = 'icd search',\n  'create update medication order' = 'create update medication order',\n  'get medication orders' = 'get medication orders',\n  'create update patient followup' = 'create update patient followup',\n  'get patient account' = 'get patient account',\n  'update patient account' = 'update patient account',\n  'remove patient coverage' = 'remove patient coverage',\n  'send fax' = 'send fax',\n  'external lab resource search' = 'external lab resource search',\n}\n\nconst zambdasPublicityMap: Record<keyof typeof ZambdaNames, boolean> = {\n  'get telemed appointments': false,\n  'init telemed session': false,\n  'get chart data': false,\n  'save chart data': false,\n  'delete chart data': false,\n  'change telemed appointment status': false,\n  'change in person visit status': false,\n  'assign practitioner': false,\n  'unassign practitioner': false,\n  'sign appointment': false,\n  'sync user': false,\n  'get patient instructions': false,\n  'save patient instruction': false,\n  'delete patient instruction': false,\n  'icd search': false,\n  'create update medication order': false,\n  'get medication orders': false,\n  'create update patient followup': false,\n  'get patient account': false,\n  'update patient account': false,\n  'remove patient coverage': false,\n  'send fax': false,\n  'external lab resource search': false,\n};\n\nexport type OystehrTelemedAPIClient = ReturnType<typeof getOystehrTelemedAPI>;\n\nexport const getOystehrTelemedAPI = (\n  params: GetOystehrTelemedAPIParams,\n  oystehr: Oystehr\n): {\n  getTelemedAppointments: typeof getTelemedAppointments;\n  initTelemedSession: typeof initTelemedSession;\n  getChartData: typeof getChartData;\n  saveChartData: typeof saveChartData;\n  deleteChartData: typeof deleteChartData;\n  changeTelemedAppointmentStatus: typeof changeTelemedAppointmentStatus;\n  changeInPersonVisitStatus: typeof changeInPersonVisitStatus;\n  assignPractitioner: typeof assignPractitioner;\n  unassignPractitioner: typeof unassignPractitioner;\n  signAppointment: typeof signAppointment;\n  syncUser: typeof syncUser;\n  getPatientInstructions: typeof getPatientInstructions;\n  savePatientInstruction: typeof savePatientInstruction;\n  deletePatientInstruction: typeof deletePatientInstruction;\n  icdSearch: typeof icdSearch;\n  createUpdateMedicationOrder: typeof createUpdateMedicationOrder;\n  getMedicationOrders: typeof getMedicationOrders;\n  savePatientFollowup: typeof savePatientFollowup;\n  getPatientAccount: typeof getPatientAccount;\n  updatePatientAccount: typeof updatePatientAccount;\n  removePatientCoverage: typeof removePatientCoverage;\n  sendFax: typeof sendFax;\n  getCreateExternalLabResources: typeof getCreateExternalLabResources;\n} => {\n  const {\n    getTelemedAppointmentsZambdaID,\n    initTelemedSessionZambdaID,\n    getChartDataZambdaID,\n    saveChartDataZambdaID,\n    deleteChartDataZambdaID,\n    changeTelemedAppointmentStatusZambdaID,\n    changeInPersonVisitStatusZambdaID,\n    assignPractitionerZambdaID,\n    unassignPractitionerZambdaID,\n    signAppointmentZambdaID,\n    syncUserZambdaID,\n    getPatientInstructionsZambdaID,\n    savePatientInstructionZambdaID,\n    deletePatientInstructionZambdaID,\n    icdSearchZambdaId,\n    createUpdateMedicationOrderZambdaID,\n    getMedicationOrdersZambdaID,\n    savePatientFollowupZambdaID,\n    getPatientAccountZambdaID,\n    updatePatientAccountZambdaID,\n    removePatientCoverageZambdaID,\n    sendFaxZambdaID,\n    externalLabResourceSearchID,\n  } = params;\n\n  const zambdasToIdsMap: Record<keyof typeof ZambdaNames, string | undefined> = {\n    'get telemed appointments': getTelemedAppointmentsZambdaID,\n    'init telemed session': initTelemedSessionZambdaID,\n    'get chart data': getChartDataZambdaID,\n    'save chart data': saveChartDataZambdaID,\n    'delete chart data': deleteChartDataZambdaID,\n    'change telemed appointment status': changeTelemedAppointmentStatusZambdaID,\n    'change in person visit status': changeInPersonVisitStatusZambdaID,\n    'assign practitioner': assignPractitionerZambdaID,\n    'unassign practitioner': unassignPractitionerZambdaID,\n    'sign appointment': signAppointmentZambdaID,\n    'sync user': syncUserZambdaID,\n    'get patient instructions': getPatientInstructionsZambdaID,\n    'save patient instruction': savePatientInstructionZambdaID,\n    'delete patient instruction': deletePatientInstructionZambdaID,\n    'icd search': icdSearchZambdaId,\n    'create update medication order': createUpdateMedicationOrderZambdaID,\n    'get medication orders': getMedicationOrdersZambdaID,\n    'create update patient followup': savePatientFollowupZambdaID,\n    'get patient account': getPatientAccountZambdaID,\n    'update patient account': updatePatientAccountZambdaID,\n    'remove patient coverage': removePatientCoverageZambdaID,\n    'send fax': sendFaxZambdaID,\n    'external lab resource search': externalLabResourceSearchID,\n  };\n  const isAppLocalProvided = params.isAppLocal != null;\n\n  const { makeZapRequest } = getOystehrApiHelpers(\n    oystehr,\n    ZambdaNames,\n    zambdasToIdsMap,\n    zambdasPublicityMap,\n    isAppLocalProvided\n  );\n\n  const getTelemedAppointments = async (\n    parameters: GetAppointmentsRequestParams\n  ): Promise<GetTelemedAppointmentsResponseEhr> => {\n    return await makeZapRequest('get telemed appointments', parameters, NotFoundAppointmentErrorHandler);\n  };\n\n  const initTelemedSession = async (\n    parameters: InitTelemedSessionRequestParams\n  ): Promise<InitTelemedSessionResponse> => {\n    return await makeZapRequest('init telemed session', parameters);\n  };\n\n  const getChartData = async (parameters: GetChartDataRequest): Promise<GetChartDataResponse> => {\n    return await makeZapRequest('get chart data', parameters);\n  };\n\n  const saveChartData = async (parameters: SaveChartDataRequest): Promise<SaveChartDataResponse> => {\n    return await makeZapRequest('save chart data', parameters);\n  };\n\n  const deleteChartData = async (parameters: DeleteChartDataRequest): Promise<DeleteChartDataResponse> => {\n    return await makeZapRequest('delete chart data', parameters);\n  };\n\n  const changeTelemedAppointmentStatus = async (\n    parameters: Omit<ChangeTelemedAppointmentStatusInput, 'secrets'>\n  ): Promise<ChangeTelemedAppointmentStatusResponse> => {\n    return await makeZapRequest('change telemed appointment status', parameters);\n  };\n\n  const changeInPersonVisitStatus = async (\n    parameters: Omit<ChangeInPersonVisitStatusInput, 'secrets'>\n  ): Promise<ChangeInPersonVisitStatusResponse> => {\n    return await makeZapRequest('change in person visit status', parameters);\n  };\n\n  const assignPractitioner = async (parameters: AssignPractitionerInput): Promise<AssignPractitionerResponse> => {\n    return await makeZapRequest('assign practitioner', parameters);\n  };\n\n  const unassignPractitioner = async (\n    parameters: UnassignPractitionerZambdaInput\n  ): Promise<UnassignPractitionerZambdaOutput> => {\n    return await makeZapRequest('unassign practitioner', parameters);\n  };\n\n  const signAppointment = async (\n    parameters: Omit<SignAppointmentInput, 'secrets'>\n  ): Promise<SignAppointmentResponse> => {\n    return await makeZapRequest('sign appointment', parameters);\n  };\n\n  const syncUser = async (): Promise<SyncUserResponse> => {\n    return await makeZapRequest('sync user');\n  };\n\n  const getPatientInstructions = async (parameters: GetPatientInstructionsInput): Promise<CommunicationDTO[]> => {\n    return await makeZapRequest('get patient instructions', parameters);\n  };\n\n  const savePatientInstruction = async (parameters: SavePatientInstructionInput): Promise<CommunicationDTO> => {\n    return await makeZapRequest('save patient instruction', parameters);\n  };\n\n  const deletePatientInstruction = async (parameters: DeletePatientInstructionInput): Promise<void> => {\n    return await makeZapRequest('delete patient instruction', parameters);\n  };\n\n  const savePatientFollowup = async (parameters: { id: 'test' }): Promise<void> => {\n    return await makeZapRequest('create update patient followup', parameters);\n  };\n\n  const icdSearch = async (parameters: IcdSearchRequestParams): Promise<IcdSearchResponse> => {\n    return await makeZapRequest('icd search', parameters);\n  };\n\n  const createUpdateMedicationOrder = async (\n    parameters: UpdateMedicationOrderInput\n  ): Promise<{ id: string; message: string }> => {\n    return await makeZapRequest('create update medication order', parameters);\n  };\n\n  const getMedicationOrders = async (parameters: GetMedicationOrdersInput): Promise<GetMedicationOrdersResponse> => {\n    return await makeZapRequest('get medication orders', parameters);\n  };\n\n  const getPatientAccount = async (parameters: GetPatientAccountZambdaInput): Promise<PatientAccountResponse> => {\n    return await makeZapRequest('get patient account', parameters);\n  };\n\n  const updatePatientAccount = async (parameters: UpdateCoverageZambdaInput): Promise<PatientAccountResponse> => {\n    return await makeZapRequest('update patient account', parameters);\n  };\n\n  const removePatientCoverage = async (parameters: RemoveCoverageZambdaInput): Promise<PatientAccountResponse> => {\n    return await makeZapRequest('remove patient coverage', parameters);\n  };\n\n  const sendFax = async (parameters: SendFaxZambdaInput): Promise<void> => {\n    return await makeZapRequest('send fax', parameters);\n  };\n\n  const getCreateExternalLabResources = async (\n    parameters: GetCreateLabOrderResources\n  ): Promise<LabOrderResourcesRes> => {\n    return await makeZapRequest('external lab resource search', parameters);\n  };\n\n  return {\n    getTelemedAppointments,\n    initTelemedSession,\n    getChartData,\n    saveChartData,\n    deleteChartData,\n    changeTelemedAppointmentStatus,\n    changeInPersonVisitStatus,\n    assignPractitioner,\n    unassignPractitioner,\n    signAppointment,\n    syncUser,\n    getPatientInstructions,\n    savePatientInstruction,\n    deletePatientInstruction,\n    icdSearch,\n    getMedicationOrders,\n    createUpdateMedicationOrder,\n    savePatientFollowup,\n    getPatientAccount,\n    updatePatientAccount,\n    removePatientCoverage,\n    sendFax,\n    getCreateExternalLabResources,\n  };\n};\n"]}