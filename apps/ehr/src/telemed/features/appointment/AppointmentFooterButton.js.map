{"version":3,"file":"AppointmentFooterButton.js","sourceRoot":"","sources":["AppointmentFooterButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, darken, styled, useTheme } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { mapStatusToTelemed, TelemedAppointmentStatusEnum } from 'utils';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport useEvolveUser from '../../../hooks/useEvolveUser';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { ConfirmationDialog } from '../../components';\nimport { useGetAppointmentAccessibility } from '../../hooks';\nimport { useOystehrAPIClient } from '../../hooks/useOystehrAPIClient';\nimport {\n  useAppointmentStore,\n  useChangeTelemedAppointmentStatusMutation,\n  useGetMeetingData,\n  useInitTelemedSessionMutation,\n  useVideoCallStore,\n} from '../../state';\nimport { updateEncounterStatusHistory } from '../../utils';\n\nconst FooterButton = styled(LoadingButton)(({ theme }) => ({\n  textTransform: 'none',\n  fontSize: '15px',\n  fontWeight: 500,\n  borderRadius: 20,\n  backgroundColor: theme.palette.primary.light,\n  '&:hover': { backgroundColor: darken(theme.palette.primary.light, 0.125) },\n  '&.MuiLoadingButton-loading': {\n    backgroundColor: darken(theme.palette.primary.light, 0.25),\n  },\n  '& .MuiLoadingButton-loadingIndicator': {\n    color: darken(theme.palette.primary.contrastText, 0.25),\n  },\n}));\n\nexport const AppointmentFooterButton: FC = () => {\n  const { encounter, appointment, isAppointmentLoading } = getSelectors(useAppointmentStore, [\n    'encounter',\n    'appointment',\n    'isAppointmentLoading',\n  ]);\n  const user = useEvolveUser();\n  const { getAccessTokenSilently } = useAuth0();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const apiClient = useOystehrAPIClient();\n  const changeTelemedAppointmentStatusEnum = useChangeTelemedAppointmentStatusMutation();\n  const initTelemedSession = useInitTelemedSessionMutation();\n  const getMeetingData = useGetMeetingData(\n    getAccessTokenSilently,\n    (data) => {\n      useVideoCallStore.setState({ meetingData: data });\n    },\n    () => {\n      enqueueSnackbar('Error trying to connect to a patient.', {\n        variant: 'error',\n      });\n    }\n  );\n\n  const [buttonType, setButtonType] = useState<'assignMe' | 'connectUnassign' | 'reconnect' | null>(null);\n\n  const appointmentAccessibility = useGetAppointmentAccessibility();\n\n  useEffect(() => {\n    if (\n      appointmentAccessibility.status !== TelemedAppointmentStatusEnum.ready &&\n      !appointmentAccessibility.isStatusEditable\n    ) {\n      setButtonType(null);\n    } else if (\n      appointmentAccessibility.isCurrentUserHasAccessToAppointment &&\n      appointmentAccessibility.status === TelemedAppointmentStatusEnum.ready\n    ) {\n      setButtonType('assignMe');\n    } else if (\n      appointmentAccessibility.isCurrentUserHasAccessToAppointment &&\n      appointmentAccessibility.status === TelemedAppointmentStatusEnum['pre-video']\n    ) {\n      setButtonType('connectUnassign');\n    } else if (\n      appointmentAccessibility.isCurrentUserHasAccessToAppointment &&\n      appointmentAccessibility.status === TelemedAppointmentStatusEnum['on-video']\n    ) {\n      setButtonType('reconnect');\n    }\n  }, [appointmentAccessibility]);\n\n  const onAssignMe = async (): Promise<void> => {\n    if (!apiClient || !appointment?.id) {\n      throw new Error('api client not defined or appointment id not provided');\n    }\n    await changeTelemedAppointmentStatusEnum.mutateAsync(\n      { apiClient, appointmentId: appointment.id, newStatus: TelemedAppointmentStatusEnum['pre-video'] },\n      {}\n    );\n\n    await queryClient.invalidateQueries({ queryKey: ['telemed-appointment'] });\n  };\n\n  const onConnect = useCallback((): void => {\n    if (mapStatusToTelemed(encounter.status, appointment?.status) === TelemedAppointmentStatusEnum['on-video']) {\n      void getMeetingData.refetch({ throwOnError: true });\n    } else {\n      if (!apiClient || !user || !appointment?.id) {\n        throw new Error('api client not defined or userId not provided');\n      }\n      initTelemedSession.mutate(\n        { apiClient, appointmentId: appointment.id, userId: user?.id },\n        {\n          onSuccess: async (response) => {\n            useVideoCallStore.setState({\n              meetingData: response.meetingData,\n            });\n            useAppointmentStore.setState({\n              encounter: {\n                ...encounter,\n                status: 'in-progress',\n                statusHistory: updateEncounterStatusHistory('in-progress', encounter.statusHistory),\n              },\n            });\n          },\n          onError: () => {\n            enqueueSnackbar('Error trying to connect to a patient.', {\n              variant: 'error',\n            });\n          },\n        }\n      );\n    }\n  }, [apiClient, appointment?.id, appointment?.status, encounter, getMeetingData, initTelemedSession, user]);\n\n  useEffect(() => {\n    if (\n      appointmentAccessibility.isCurrentUserHasAccessToAppointment &&\n      appointmentAccessibility.status === TelemedAppointmentStatusEnum['on-video']\n    ) {\n      if (location.state?.reconnect) {\n        navigate(location.pathname, {});\n        onConnect();\n      }\n    }\n  }, [\n    appointmentAccessibility.isCurrentUserHasAccessToAppointment,\n    appointmentAccessibility.status,\n    location,\n    navigate,\n    onConnect,\n  ]);\n\n  const onUnassign = async (): Promise<void> => {\n    if (!apiClient || !appointment?.id) {\n      throw new Error('api client not defined or appointment id not provided');\n    }\n    await changeTelemedAppointmentStatusEnum.mutateAsync(\n      { apiClient, appointmentId: appointment.id, newStatus: TelemedAppointmentStatusEnum.ready },\n      {}\n    );\n    navigate('/telemed/appointments');\n  };\n\n  switch (buttonType) {\n    case 'assignMe': {\n      return (\n        <ConfirmationDialog\n          title=\"Do you want to assign this appointment?\"\n          response={onAssignMe}\n          actionButtons={{\n            proceed: {\n              text: 'Assign me',\n            },\n            back: { text: 'Cancel' },\n          }}\n        >\n          {(showDialog) => (\n            <FooterButton\n              loading={changeTelemedAppointmentStatusEnum.isLoading || isAppointmentLoading}\n              onClick={showDialog}\n              variant=\"contained\"\n              data-testid={dataTestIds.telemedEhrFlow.footerButtonAssignMe}\n            >\n              Assign to me\n            </FooterButton>\n          )}\n        </ConfirmationDialog>\n      );\n    }\n    case 'connectUnassign': {\n      return (\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <ConfirmationDialog\n            title=\"Do you want to connect to the patient?\"\n            description=\"This action will start the video call.\"\n            response={onConnect}\n            actionButtons={{\n              proceed: {\n                text: 'Connect to Patient',\n              },\n              back: { text: 'Cancel' },\n            }}\n          >\n            {(showDialog) => (\n              <FooterButton\n                loading={initTelemedSession.isLoading || getMeetingData.isLoading}\n                onClick={showDialog}\n                variant=\"contained\"\n                data-testid={dataTestIds.telemedEhrFlow.footerButtonConnectToPatient}\n              >\n                Connect to Patient\n              </FooterButton>\n            )}\n          </ConfirmationDialog>\n\n          <ConfirmationDialog\n            title=\"Do you want to unassign this appointment?\"\n            response={onUnassign}\n            actionButtons={{\n              proceed: {\n                text: 'Unassign',\n                color: 'error',\n              },\n              back: { text: 'Cancel' },\n            }}\n          >\n            {(showDialog) => (\n              <FooterButton\n                loading={changeTelemedAppointmentStatusEnum.isLoading}\n                onClick={showDialog}\n                variant=\"contained\"\n                data-testid={dataTestIds.telemedEhrFlow.footerButtonUnassign}\n                sx={{\n                  backgroundColor: theme.palette.error.main,\n                  '&:hover': { backgroundColor: darken(theme.palette.error.main, 0.125) },\n                  '&.MuiLoadingButton-loading': {\n                    backgroundColor: darken(theme.palette.error.main, 0.25),\n                  },\n                  '& .MuiLoadingButton-loadingIndicator': {\n                    color: darken(theme.palette.error.contrastText, 0.25),\n                  },\n                }}\n              >\n                Unassign\n              </FooterButton>\n            )}\n          </ConfirmationDialog>\n        </Box>\n      );\n    }\n    case 'reconnect': {\n      return (\n        <FooterButton\n          loading={initTelemedSession.isLoading || getMeetingData.isLoading}\n          onClick={onConnect}\n          variant=\"contained\"\n        >\n          Reconnect\n        </FooterButton>\n      );\n    }\n    default: {\n      return null;\n    }\n  }\n};\n"]}