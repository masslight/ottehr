{"version":3,"file":"AssessmentCard.js","sourceRoot":"","sources":["AssessmentCard.tsx"],"names":[],"mappings":";;;AAAA,0CAAuD;AACvD,+BAAkC;AAClC,qFAAuF;AACvF,mFAAkF;AAClF,sEAAqE;AACrE,kDAA2E;AAC3E,2DAA0D;AAC1D,wCAAgE;AAChE,wCAAqD;AACrD,uEAAsE;AACtE,2CAMsB;AAEf,IAAM,cAAc,GAAO;IACxB,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IAE/D,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC;QACjC,WAAW,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE;QAC/B,eAAe,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;QACjC,kBAAkB,EAAE,IAAI;KACzB,CAAC,UAJe,CAId;IACH,0EAA0E;IAClE,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IAC/E,IAAM,MAAM,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,CAAC;IAEzB,IAAA,GAAG,GAAK,IAAA,8BAAe,GAAE,IAAtB,CAAuB;IAElC,OAAO,CACL,CAAC,gBAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAChB;MAAA,CAAC,qBAAS,CAAC,KAAK,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,EAC3D;MAAA,CAAC,mDAAwB,CAAC,AAAD,EACzB;MAAA,CAAC,0BAAa,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CACnD;QAAA,CAAC,kCAAqB,CACpB,OAAO,CACP,UAAU,CAAC,CACT,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAClE;cAAA,CAAC,+BAAkB,CAAC,AAAD,EACnB;cAAA,CAAC,GAAG,IAAI,CAAC,qCAAwB,CAAC,AAAD,EAAG,CACtC;YAAA,EAAE,cAAG,CACP,CAAC,CACD,WAAW,CAAC,CACV,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAClE;cAAA,CAAC,CAAC,GAAG,IAAI,CAAC,qCAAwB,CAAC,AAAD,EAAG,CACrC;cAAA,CAAC,GAAG,CAAC,CAAC,CAAC,CACL,CAAC,kCAAqB,CAAC,AAAD,EAAG,CAC1B,CAAC,CAAC,CAAC,CACF,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAC5D;kBAAA,CAAC,4BAAe,CAAC,QAAQ,EAAE,4BAAe,CAC1C;kBAAA,CAAC,UAAU,CAAC,CAAC,CAAC,CACZ,MAAM,CAAC,CAAC,CAAC,CACP,CAAC,qBAAU,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,qBAAU,CAAC,CAC1C,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,iBAAiB,CAAC,YAAY,EAAE,qBAAU,CAAC,CAC9D,CACF,CAAC,CAAC,CAAC,CACF,CAAC,wBAAW,CAAC,AAAD,EAAG,CAChB,CACH;gBAAA,EAAE,cAAG,CAAC,CACP,CACH;YAAA,EAAE,cAAG,CACP,CAAC,EAEL;MAAA,EAAE,0BAAa,CACjB;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AApDW,QAAA,cAAc,kBAoDzB","sourcesContent":["import { Box, Stack, Typography } from '@mui/material';\nimport React, { FC } from 'react';\nimport { useFeatureFlags } from '../../../../features/css-module/context/featureFlags';\nimport { useChartData } from '../../../../features/css-module/hooks/useChartData';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard, DoubleColumnContainer } from '../../../components';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { useGetAppointmentAccessibility } from '../../../hooks';\nimport { useAppointmentStore } from '../../../state';\nimport { AiPotentialDiagnosesCard } from './AiPotentialDiagnosesCard';\nimport {\n  AssessmentTitle,\n  BillingCodesContainer,\n  DiagnosesContainer,\n  EMCodeField,\n  MedicalDecisionContainer,\n} from './components';\n\nexport const AssessmentCard: FC = () => {\n  const { encounter } = getSelectors(useAppointmentStore, ['encounter']);\n\n  const { chartData } = useChartData({\n    encounterId: encounter.id || '',\n    requestedFields: { cptCodes: {} },\n    replaceStoreValues: true,\n  });\n  // const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const emCode = chartData?.emCode;\n\n  const { css } = useFeatureFlags();\n\n  return (\n    <Stack spacing={1}>\n      <PageTitle label=\"Assessment\" showIntakeNotesButton={false} />\n      <AiPotentialDiagnosesCard />\n      <AccordionCard label={css ? undefined : 'Assessment'}>\n        <DoubleColumnContainer\n          divider\n          leftColumn={\n            <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <DiagnosesContainer />\n              {css && <MedicalDecisionContainer />}\n            </Box>\n          }\n          rightColumn={\n            <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n              {!css && <MedicalDecisionContainer />}\n              {css ? (\n                <BillingCodesContainer />\n              ) : (\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                  <AssessmentTitle>E&M code</AssessmentTitle>\n                  {isReadOnly ? (\n                    emCode ? (\n                      <Typography>{emCode.display}</Typography>\n                    ) : (\n                      <Typography color=\"secondary.light\">Not provided</Typography>\n                    )\n                  ) : (\n                    <EMCodeField />\n                  )}\n                </Box>\n              )}\n            </Box>\n          }\n        />\n      </AccordionCard>\n    </Stack>\n  );\n};\n"]}