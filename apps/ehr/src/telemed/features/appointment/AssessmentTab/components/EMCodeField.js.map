{"version":3,"file":"EMCodeField.js","sourceRoot":"","sources":["EMCodeField.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Autocomplete, TextField } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC } from 'react';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore, useDeleteChartData, useSaveChartData } from '../../../../state';\n\nexport type CPTCodeOption = {\n  code: string;\n  display: string;\n};\n\nexport const EMCodeField: FC = () => {\n  const { chartData, setPartialChartData } = getSelectors(useAppointmentStore, ['chartData', 'setPartialChartData']);\n  const emCode = chartData?.emCode;\n\n  const { mutate: saveChartData, isLoading: isSaveLoading } = useSaveChartData();\n  const { mutate: deleteChartData, isLoading: isDeleteLoading } = useDeleteChartData();\n\n  const onChange = (value: CPTCodeOption | null): void => {\n    if (value) {\n      const prevValue = emCode;\n\n      saveChartData(\n        { emCode: { ...emCode, ...value } },\n        {\n          onSuccess: (data) => {\n            const saved = data.chartData?.emCode;\n\n            if (saved) {\n              setPartialChartData({ emCode: saved });\n            }\n          },\n          onError: () => {\n            enqueueSnackbar('An error has occurred while saving E&M code. Please try again.', { variant: 'error' });\n            setPartialChartData({ emCode: prevValue });\n          },\n        }\n      );\n      setPartialChartData({ emCode: value });\n    } else {\n      deleteChartData({ emCode });\n      setPartialChartData({ emCode: undefined });\n    }\n  };\n\n  return (\n    <Autocomplete\n      disabled={isSaveLoading || isDeleteLoading}\n      options={emCodeOptions}\n      data-testid={dataTestIds.assessmentCard.emCodeDropdown}\n      isOptionEqualToValue={(option, value) => option.code === value.code}\n      value={emCode ? { display: emCode.display, code: emCode.code } : null}\n      getOptionLabel={(option) => option.display}\n      onChange={(_e, value) => onChange(value)}\n      renderInput={(params) => <TextField {...params} size=\"small\" label=\"E&M code\" placeholder=\"Search E&M code\" />}\n    />\n  );\n};\n\nexport const emCodeOptions: CPTCodeOption[] = [\n  { display: '99201 New Patient - E/M Level 1', code: '99201' },\n  { display: '99202 New Patient - E/M Level 2', code: '99202' },\n  { display: '99203 New Patient - E/M Level 3', code: '99203' },\n  { display: '99204 New Patient - E/M Level 4', code: '99204' },\n  { display: '99205 New Patient - E/M Level 5', code: '99205' },\n  { display: '99212 Established Patient - E/M Level 2', code: '99212' },\n  { display: '99213 Established Patient - E/M Level 3', code: '99213' },\n  { display: '99214 Established Patient - E/M Level 4', code: '99214' },\n  { display: '99215 Established Patient - E/M Level 5', code: '99215' },\n];\n"]}