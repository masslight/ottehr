{"version":3,"file":"ERX.js","sourceRoot":"","sources":["ERX.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Alert, Box } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useChartData } from 'src/features/css-module/hooks/useChartData';\nimport useEvolveUser from 'src/hooks/useEvolveUser';\nimport { getPractitionerMissingFields } from 'src/shared/utils';\nimport { VitalFieldNames } from 'utils';\nimport { createVitalsSearchConfig } from 'utils/lib/helpers/visit-note/create-vitals-search-config.helper';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport {\n  useAppointmentStore,\n  useCheckPractitionerEnrollment,\n  useConnectPractitionerToERX,\n  useEnrollPractitionerToERX,\n  useSyncERXPatient,\n} from '../../state';\nimport { ERXDialog } from './ERXDialog';\n\nexport enum ERXStatus {\n  INITIAL,\n  LOADING,\n  READY,\n  ERROR,\n}\n\nexport const ERX: FC<{\n  onStatusChanged: (status: ERXStatus) => void;\n  showDefaultAlert: boolean;\n}> = ({ onStatusChanged, showDefaultAlert }) => {\n  const { patient, encounter } = getSelectors(useAppointmentStore, ['patient', 'encounter']);\n  const phoneNumber = patient?.telecom?.find((telecom) => telecom.system === 'phone')?.value;\n  const user = useEvolveUser();\n  const practitioner = user?.profileResource;\n\n  const [alertMessage, setAlertMessage] = useState<string | null>(\n    showDefaultAlert ? 'If something goes wrong - please reload the page.' : null\n  );\n\n  const practitionerMissingFields = useMemo(() => {\n    return practitioner ? getPractitionerMissingFields(practitioner) : [];\n  }, [practitioner]);\n\n  const [isTimeout, setIsTimeout] = useState<boolean>(false);\n\n  // Step 1: Get patient vitals\n  const heightSearchConfig = createVitalsSearchConfig(VitalFieldNames.VitalHeight, 'patient', 1);\n  const weightSearchConfig = createVitalsSearchConfig(VitalFieldNames.VitalWeight, 'patient', 1);\n\n  const {\n    chartData: heightVitalObservationResponse,\n    isLoading: isHeightLoading,\n    isFetched: isHeightFetched,\n  } = useChartData({\n    encounterId: encounter.id!,\n    requestedFields: { [heightSearchConfig.fieldName]: heightSearchConfig.searchParams },\n    enabled: Boolean(encounter?.id),\n  });\n\n  const {\n    chartData: weightVitalObservationResponse,\n    isLoading: isWeightLoading,\n    isFetched: isWeightFetched,\n  } = useChartData({\n    encounterId: encounter.id!,\n    requestedFields: { [weightSearchConfig.fieldName]: weightSearchConfig.searchParams },\n    enabled: Boolean(encounter?.id),\n  });\n\n  const hasVitals = Boolean(\n    heightVitalObservationResponse?.vitalsObservations?.find((obs) => obs.field === VitalFieldNames.VitalHeight) &&\n      weightVitalObservationResponse?.vitalsObservations?.find((obs) => obs.field === VitalFieldNames.VitalWeight)\n  );\n  const isVitalsLoading = isHeightLoading || isWeightLoading;\n  const isVitalsFetched = isHeightFetched && isWeightFetched;\n\n  console.log(isVitalsLoading, hasVitals, practitionerMissingFields);\n  // Step 2: Check practitioner enrollment\n  const {\n    data: practitionerEnrollmentStatus,\n    isFetched: isPractitionerEnrollmentChecked,\n    refetch: refetchPractitionerEnrollment,\n  } = useCheckPractitionerEnrollment({\n    enabled: !isVitalsLoading && hasVitals && practitionerMissingFields.length === 0,\n  });\n\n  useEffect(() => {\n    if (practitionerMissingFields.length > 0) {\n      onStatusChanged(ERXStatus.ERROR);\n    }\n  }, [onStatusChanged, practitionerMissingFields]);\n\n  // Step 3: Sync patient\n  const { isFetched: isPatientSynced, isLoading: isPatientSyncing } = useSyncERXPatient({\n    patient: patient!,\n    enabled: Boolean(practitionerEnrollmentStatus?.confirmed && hasVitals),\n    onError: (error) => {\n      let errorMsg = 'Something went wrong while trying to sync patient to eRx';\n\n      if (error.status === 400) {\n        if (error.message?.includes('phone')) {\n          errorMsg = `Patient has specified some wrong phone number: ${phoneNumber}. Please provide a real patient's phone number`;\n        } else if (error.message?.includes('eRx service is not configured')) {\n          errorMsg = `eRx service is not configured. Please contact support.`;\n        } else {\n          errorMsg = `Something is wrong with patient data.`;\n        }\n      }\n\n      enqueueSnackbar(errorMsg, { variant: 'error' });\n      onStatusChanged(ERXStatus.ERROR);\n    },\n  });\n\n  // Step 4: Handle practitioner enrollment\n  const {\n    mutateAsync: enrollPractitioner,\n    isLoading: isEnrollingPractitioner,\n    isError: isEnrollPractitionerError,\n    isSuccess: isEnrollPractitionerSuccess,\n  } = useEnrollPractitionerToERX({\n    onError: () => {\n      enqueueSnackbar('Enrolling practitioner to eRx failed', { variant: 'error' });\n      onStatusChanged(ERXStatus.ERROR);\n    },\n  });\n\n  const enrollPractitionerFn = useCallback(\n    async (practitionerId: string) => {\n      try {\n        await enrollPractitioner(practitionerId);\n        await refetchPractitionerEnrollment();\n      } catch (error) {\n        console.error('Error enrolling practitioner:', error);\n      }\n    },\n    [enrollPractitioner, refetchPractitionerEnrollment]\n  );\n\n  // Step 5: Connect practitioner\n  const {\n    data: ssoLink,\n    isLoading: isConnectingPractitioner,\n    mutateAsync: connectPractitioner,\n    isSuccess: isPractitionerConnected,\n  } = useConnectPractitionerToERX({ patientId: patient?.id, encounterId: encounter.id });\n\n  const {\n    data: ssoLinkForEnrollment,\n    isLoading: isConnectingPractitionerForConfirmation,\n    mutateAsync: connectPractitionerForConfirmation,\n    isSuccess: isPractitionerConnectedForConfirmation,\n  } = useConnectPractitionerToERX({});\n\n  const connectPractitionerFn = useCallback(\n    async (mode: 'confirmation' | 'ordering') => {\n      try {\n        await (mode === 'confirmation' ? connectPractitionerForConfirmation() : connectPractitioner());\n        if (mode === 'confirmation') {\n          setAlertMessage('When you complete the RxLink Agreement, please reload the page.');\n        }\n      } catch (error) {\n        enqueueSnackbar('Something went wrong while trying to connect practitioner to eRx', { variant: 'error' });\n        console.error('Error trying to connect practitioner to eRx: ', error);\n        onStatusChanged(ERXStatus.ERROR);\n      }\n    },\n    [connectPractitioner, connectPractitionerForConfirmation, onStatusChanged]\n  );\n\n  // Handle vitals validation\n  useEffect(() => {\n    if (isVitalsFetched && !hasVitals) {\n      enqueueSnackbar(\n        \"Patient doesn't have height or weight vital specified. Please specify it first on the `Vitals` tab\",\n        { variant: 'error' }\n      );\n      onStatusChanged(ERXStatus.ERROR);\n    }\n  }, [isVitalsFetched, hasVitals, onStatusChanged]);\n\n  // Handle practitioner enrollment\n  useEffect(() => {\n    if (\n      isPractitionerEnrollmentChecked &&\n      !practitionerEnrollmentStatus?.registered &&\n      user?.profileResource?.id &&\n      !isEnrollingPractitioner &&\n      !isEnrollPractitionerError &&\n      !isEnrollPractitionerSuccess\n    ) {\n      void enrollPractitionerFn(user.profileResource.id);\n    }\n  }, [\n    isPractitionerEnrollmentChecked,\n    practitionerEnrollmentStatus?.registered,\n    user?.profileResource?.id,\n    enrollPractitionerFn,\n    isEnrollingPractitioner,\n    isEnrollPractitionerError,\n    isEnrollPractitionerSuccess,\n  ]);\n\n  // Handle practitioner connection for eRx\n  useEffect(() => {\n    if (\n      practitionerEnrollmentStatus?.confirmed &&\n      isPatientSynced &&\n      !isConnectingPractitioner &&\n      !isPractitionerConnected\n    ) {\n      void connectPractitionerFn('ordering');\n    }\n  }, [\n    practitionerEnrollmentStatus?.confirmed,\n    isPatientSynced,\n    connectPractitionerFn,\n    isConnectingPractitioner,\n    isPractitionerConnected,\n  ]);\n\n  // Handle practitioner connection for confirmation\n  useEffect(() => {\n    if (\n      practitionerEnrollmentStatus?.registered &&\n      (!practitionerEnrollmentStatus?.confirmed || !practitionerEnrollmentStatus?.identityVerified) &&\n      !isConnectingPractitionerForConfirmation &&\n      !isPractitionerConnectedForConfirmation\n    ) {\n      void connectPractitionerFn('confirmation');\n    }\n  }, [\n    isPatientSynced,\n    connectPractitionerFn,\n    isConnectingPractitionerForConfirmation,\n    isPractitionerConnectedForConfirmation,\n    practitionerEnrollmentStatus,\n  ]);\n\n  // Handle ready state\n  useEffect(() => {\n    if (isPractitionerConnected) {\n      onStatusChanged(ERXStatus.READY);\n    }\n  }, [onStatusChanged, isPractitionerConnected]);\n\n  useEffect(() => {\n    if (isTimeout && !isPractitionerConnected) {\n      onStatusChanged(ERXStatus.ERROR);\n    } else if (\n      isHeightLoading ||\n      isWeightLoading ||\n      isPatientSyncing ||\n      isEnrollingPractitioner ||\n      isConnectingPractitioner ||\n      isConnectingPractitionerForConfirmation\n    ) {\n      onStatusChanged(ERXStatus.LOADING);\n    }\n  }, [\n    isHeightLoading,\n    isWeightLoading,\n    isPatientSyncing,\n    onStatusChanged,\n    isEnrollingPractitioner,\n    isConnectingPractitioner,\n    isConnectingPractitionerForConfirmation,\n    isTimeout,\n    isPractitionerConnected,\n  ]);\n\n  // Timeout after 30 seconds\n  useEffect(() => {\n    setTimeout(() => {\n      setIsTimeout(true);\n    }, 30000);\n  }, []);\n\n  return (\n    <>\n      <Box>\n        {(practitionerMissingFields.length > 0 && (\n          <Alert severity=\"warning\">\n            To be able to prescribe please fill in the following fields in your profile:{' '}\n            {practitionerMissingFields.join(', ')}.\n          </Alert>\n        )) ||\n          (alertMessage && <Alert severity=\"info\">{alertMessage}</Alert>)}\n        {(ssoLink || ssoLinkForEnrollment) && <ERXDialog ssoLink={ssoLink || ssoLinkForEnrollment || ''} />}\n      </Box>\n    </>\n  );\n};\n"]}