{"version":3,"file":"VitalsCard.js","sourceRoot":"","sources":["VitalsCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard } from '../../../components';\nimport { useExamCardCollapsed } from '../../../hooks/useExamCardCollapsed';\nimport { useAppointmentStore } from '../../../state';\nimport { getValidationValuesByDOB, isEmptyValidation, isNumberValidation } from '../../../utils';\nimport { VitalsBloodPressure, VitalsComponent, VitalsTemperature } from './components';\n\nexport const VitalsCard: FC = () => {\n  const [isCollapsed, onSwitch] = useExamCardCollapsed('vitals');\n\n  const { patient } = getSelectors(useAppointmentStore, ['patient']);\n\n  const validationValues = getValidationValuesByDOB(patient!.birthDate!);\n\n  return (\n    <AccordionCard label=\"Vitals\" collapsed={isCollapsed} onSwitch={onSwitch}>\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center', gap: 3 }}>\n        <Typography variant=\"subtitle1\" fontSize={16} sx={{ whiteSpace: 'nowrap' }}>\n          Patient provided:\n        </Typography>\n        <VitalsTemperature\n          validate={(value) => {\n            if (isEmptyValidation(value)) {\n              return;\n            }\n            const isNotNumber = isNumberValidation(value);\n            if (isNotNumber) {\n              return isNotNumber;\n            }\n            if (+value > validationValues.temperature.high) {\n              return 'Invalid temperature';\n            }\n            return;\n          }}\n        />\n        <VitalsComponent\n          name=\"vitals-pulse\"\n          label=\"Pulse Ox\"\n          validate={(value) => {\n            if (isEmptyValidation(value)) {\n              return;\n            }\n            const isNotNumber = isNumberValidation(value);\n            if (isNotNumber) {\n              return isNotNumber;\n            }\n            if (+value > validationValues.pulse.high) {\n              return 'Invalid pulse';\n            }\n            return;\n          }}\n        />\n        <VitalsComponent\n          name=\"vitals-hr\"\n          label=\"HR\"\n          validate={(value) => {\n            if (isEmptyValidation(value)) {\n              return;\n            }\n            const isNotNumber = isNumberValidation(value);\n            if (isNotNumber) {\n              return isNotNumber;\n            }\n            if (+value > validationValues.hr.high) {\n              return 'Invalid heart rate';\n            }\n            return;\n          }}\n        />\n        <VitalsComponent\n          name=\"vitals-rr\"\n          label=\"RR\"\n          validate={(value) => {\n            if (isEmptyValidation(value)) {\n              return;\n            }\n            const isNotNumber = isNumberValidation(value);\n            if (isNotNumber) {\n              return isNotNumber;\n            }\n            if (+value > validationValues.rr.high) {\n              return 'Invalid respiration rate';\n            }\n            return;\n          }}\n        />\n        <VitalsBloodPressure\n          validate={(value) => {\n            const [systolic, diastolic] = value.split('/');\n            if (isEmptyValidation(systolic) && isEmptyValidation(diastolic)) {\n              return;\n            }\n            const isNotNumberSystolic = isNumberValidation(systolic);\n            const isNotNumberDiastolic = isNumberValidation(diastolic);\n            if (isNotNumberSystolic) {\n              return `Systolic ${isNotNumberSystolic}`;\n            }\n            if (isNotNumberDiastolic) {\n              return `Diastolic ${isNotNumberDiastolic}`;\n            }\n            return;\n          }}\n        />\n      </Box>\n    </AccordionCard>\n  );\n};\n"]}