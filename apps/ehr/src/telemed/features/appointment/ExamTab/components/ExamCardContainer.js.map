{"version":3,"file":"ExamCardContainer.js","sourceRoot":"","sources":["ExamCardContainer.tsx"],"names":[],"mappings":";;;AAAA,0CAAmE;AAGnE,qDAAuD;AAWhD,IAAM,iBAAiB,GAA+B,UAAC,KAAK;IACzD,IAAA,SAAS,GAAwD,KAAK,UAA7D,EAAE,QAAQ,GAA8C,KAAK,SAAnD,EAAE,KAAK,GAAuC,KAAK,MAA5C,EAAE,cAAc,GAAuB,KAAK,eAA5B,EAAE,IAAI,GAAiB,KAAK,KAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IAE/E,IAAM,UAAU,GAAG;QACjB,IAAM,KAAK,GAAgB,EAAE,CAAC;QAE9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE,CAAC;YAApB,IAAM,GAAG,aAAA;YACZ,IAAM,QAAQ,GAAgB,EAAE,CAAC;YAEjC,KAAK,IAAM,QAAQ,IAAI,GAAG,EAAE,CAAC;gBAC3B,IAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC3B,QAAQ,CAAC,IAAI,CACX,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CACvC;YAAA,CAAC,IAAI,CACP;UAAA,EAAE,QAAQ,CAAC,CACZ,CAAC;YACJ,CAAC;YAED,KAAK,CAAC,IAAI,CACR,QAAQ,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,EAAE,KAAK,IAAK,OAAA,CAAC,IAAI,EAAE,CAAC,kBAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAG,EAAE,IAAI,CAAC,EAArE,CAAqE,CAAC,CAC9G,CAAC;QACJ,CAAC;QAED,OAAO,KAAK;aACT,GAAG,CAAY,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,EAArC,CAAqC,CAAC;aACtE,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,EAAE,KAAK,IAAK,OAAA,CAAC,IAAI,EAAE,CAAC,kBAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAG,EAAE,IAAI,CAAC,EAApD,CAAoD,CAAC,CAAC;IACzF,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,0BAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAC5F;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CACzC;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,EAAE,cAAG,CAC3F;QAAA,CAAC,cAAc,IAAI,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE,cAAG,CAAC,CACxE;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,0BAAa,CAAC,CACjB,CAAC;AACJ,CAAC,CAAC;AApCW,QAAA,iBAAiB,qBAoC5B;AAIF,IAAM,OAAO,GAAqB,UAAC,KAAK;IAC9B,IAAA,QAAQ,GAAK,KAAK,SAAV,CAAW;IAE3B,OAAO,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,cAAG,CAAC,CAAC;AAChE,CAAC,CAAC;AAIF,IAAM,QAAQ,GAAsB,UAAC,KAAK;IAChC,IAAA,QAAQ,GAAY,KAAK,SAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;IAElC,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAC7D;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAC9E;QAAA,CAAC,KAAK,CACR;MAAA,EAAE,qBAAU,CACZ;MAAA,CAAC,QAAQ,CACX;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Box, Divider, Typography, useTheme } from '@mui/material';\nimport { FC, type ReactNode } from 'react';\nimport { PropsWithChildren } from '../../../../../shared/types';\nimport { AccordionCard } from '../../../../components';\n\nexport type ExamCardContainerProps = {\n  collapsed?: boolean;\n  onSwitch?: () => void;\n  label: string;\n  rightComponent?: ReactNode;\n  grid: Record<string, ReactNode>[];\n  dataTestId?: string;\n};\n\nexport const ExamCardContainer: FC<ExamCardContainerProps> = (props) => {\n  const { collapsed, onSwitch, label, rightComponent, grid, dataTestId } = props;\n\n  const renderGrid = (): ReactNode => {\n    const nodes: ReactNode[] = [];\n\n    for (const row of grid) {\n      const subNodes: ReactNode[] = [];\n\n      for (const cellName in row) {\n        const cell = row[cellName];\n        subNodes.push(\n          <ExamCell key={cellName} label={cellName}>\n            {cell}\n          </ExamCell>\n        );\n      }\n\n      nodes.push(\n        subNodes.reduce((prev, curr, index) => [prev, <Divider key={index} orientation=\"vertical\" flexItem />, curr])\n      );\n    }\n\n    return nodes\n      .map<ReactNode>((node, index) => <ExamRow key={index}>{node}</ExamRow>)\n      .reduce((prev, curr, index) => [prev, <Divider key={index + 100} flexItem />, curr]);\n  };\n\n  return (\n    <AccordionCard label={label} collapsed={collapsed} onSwitch={onSwitch} dataTestId={dataTestId}>\n      <Box sx={{ p: 2, display: 'flex', gap: 4 }}>\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 2 }}>{renderGrid()}</Box>\n        {rightComponent && <Box sx={{ width: '260px' }}>{rightComponent}</Box>}\n      </Box>\n    </AccordionCard>\n  );\n};\n\ntype ExamRowProps = PropsWithChildren;\n\nconst ExamRow: FC<ExamRowProps> = (props) => {\n  const { children } = props;\n\n  return <Box sx={{ display: 'flex', gap: 2 }}>{children}</Box>;\n};\n\ntype ExamCellProps = PropsWithChildren<{ label: string }>;\n\nconst ExamCell: FC<ExamCellProps> = (props) => {\n  const { children, label } = props;\n\n  const theme = useTheme();\n\n  return (\n    <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n      <Typography variant=\"subtitle2\" fontSize={16} color={theme.palette.primary.dark}>\n        {label}\n      </Typography>\n      {children}\n    </Box>\n  );\n};\n"]}