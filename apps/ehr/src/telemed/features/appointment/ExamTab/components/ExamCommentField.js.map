{"version":3,"file":"ExamCommentField.js","sourceRoot":"","sources":["ExamCommentField.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0CAAiE;AACjE,+BAA0D;AAE1D,2CAAgD;AAChD,6EAA4E;AAOrE,IAAM,gBAAgB,GAAG,UAC9B,KAA+B;IAEvB,IAAA,IAAI,GAAiB,KAAK,KAAtB,EAAE,UAAU,GAAK,KAAK,WAAV,CAAW;IAE7B,IAAA,KAA2D,IAAA,yCAAmB,EAAC,IAAI,CAAC,EAA3E,KAAK,WAAA,EAAE,MAAM,YAAA,EAAU,WAAW,YAAA,EAAE,SAAS,eAA8B,CAAC;IAEnF,IAAA,QAAQ,GAAK,IAAA,mBAAW,EAAC,GAAG,CAAC,SAArB,CAAsB;IAEtC,IAAM,QAAQ,GAAG,UAAC,KAAa;QAC7B,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAErB,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE,CAAC;YAChC,OAAO;QACT,CAAC;QAED,QAAQ,CAAC;YACP,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,uBAAM,KAAK,KAAE,IAAI,EAAE,KAAK,IAAG,CAAC;YACpC,CAAC;iBAAM,CAAC;gBACN,WAAW,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEI,IAAA,KAAoB,IAAA,gBAAQ,EAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,EAA7C,KAAK,QAAA,EAAE,QAAQ,QAA8B,CAAC;IAErD,IAAA,iBAAS,EAAC;;QACR,IAAI,CAAA,MAAA,KAAK,CAAC,IAAI,0CAAE,IAAI,EAAE,MAAK,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;YACxC,8DAA8D;YAC9D,QAAQ,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAC7B,CAAC;QACD,uDAAuD;IACzD,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAEjB,OAAO,CACL,CAAC,oBAAS,CACR,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,QAAQ,CAAC,CAAC,UAAC,CAAC;YACV,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9C,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzB,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACF,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,kBAAkB,CACxB,WAAW,CAAC,CAAC,UAAU,CAAC,CACxB,SAAS,CACT,UAAU,CAAC,CAAC;YACV,YAAY,EAAE,SAAS,IAAI,CACzB,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,CAC3E;YAAA,CAAC,2BAAgB,CAAC,IAAI,CAAC,MAAM,EAC/B;UAAA,EAAE,cAAG,CAAC,CACP;SACF,CAAC,EACF,CACH,CAAC;AACJ,CAAC,CAAC;AAxDW,QAAA,gBAAgB,oBAwD3B","sourcesContent":["import { Box, CircularProgress, TextField } from '@mui/material';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { ExamCardsNames, InPersonExamCardsNames } from 'utils';\nimport { useDebounce } from '../../../../hooks';\nimport { useExamObservations } from '../../../../hooks/useExamObservations';\n\ntype ExamCommentFieldProps<T extends ExamCardsNames | InPersonExamCardsNames = ExamCardsNames> = {\n  name: T;\n  dataTestId?: string;\n};\n\nexport const ExamCommentField = <T extends ExamCardsNames | InPersonExamCardsNames = ExamCardsNames>(\n  props: ExamCommentFieldProps<T>\n): ReactElement => {\n  const { name, dataTestId } = props;\n\n  const { value: field, update, delete: deleteField, isLoading } = useExamObservations(name);\n\n  const { debounce } = useDebounce(700);\n\n  const onChange = (value: string): void => {\n    value = value.trim();\n\n    if (!field.resourceId && !value) {\n      return;\n    }\n\n    debounce(() => {\n      if (value) {\n        update({ ...field, note: value });\n      } else {\n        deleteField(field);\n      }\n    });\n  };\n\n  const [value, setValue] = useState(field.note || '');\n\n  useEffect(() => {\n    if (field.note?.trim() !== value.trim()) {\n      // update UI value only if it's different from the field value\n      setValue(field.note || '');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [field.note]);\n\n  return (\n    <TextField\n      value={value}\n      onChange={(e) => {\n        console.log('e.target.value', e.target.value);\n        setValue(e.target.value);\n        onChange(e.target.value);\n      }}\n      size=\"small\"\n      label=\"Provider comment\"\n      data-testid={dataTestId}\n      fullWidth\n      InputProps={{\n        endAdornment: isLoading && (\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <CircularProgress size=\"20px\" />\n          </Box>\n        ),\n      }}\n    />\n  );\n};\n"]}