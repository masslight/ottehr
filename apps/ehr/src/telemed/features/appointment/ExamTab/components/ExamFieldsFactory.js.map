{"version":3,"file":"ExamFieldsFactory.js","sourceRoot":"","sources":["ExamFieldsFactory.tsx"],"names":[],"mappings":";;;AAAA,0CAAoC;AAEpC,+BAQe;AACf,wEAAqE;AACrE,wFAA0F;AAC1F,mEAAkE;AAClE,uEAAsE;AAe/D,IAAM,iBAAiB,GAA+B,UAAC,KAAK;IACzD,IAAA,MAAM,GAAyB,KAAK,OAA9B,EAAE,IAAI,GAAmB,KAAK,KAAxB,EAAE,KAAK,GAAY,KAAK,MAAjB,EAAE,KAAK,GAAK,KAAK,MAAV,CAAW;IAErC,IAAA,GAAG,GAAK,IAAA,8BAAe,GAAE,IAAtB,CAAuB;IAClC,IAAI,MAA0F,CAAC;IAE/F,IAAI,IAAI,IAAI,KAAK,EAAE,CAAC;QAClB,IAAI,GAAG,EAAE,CAAC;YACR,MAAM,GAAG,iDAAyC,CAAC,MAAM,CACvD,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,KAAK,KAAK,KAAK,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAhD,CAAgD,CAC7C,CAAC;QACrB,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,yCAAiC,CAAC,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,KAAK,KAAK,KAAK,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,EAAhD,CAAgD,CAAC,CAAC;QACnH,CAAC;IACH,CAAC;SAAM,CAAC;QACN,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,IAAK,OAAA,oCAA4B,CAAC,KAAK,CAAC,EAAnC,CAAmC,CAAC,CAAC;IACtE,CAAC;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,OAAA,CACpC,CAAC,cAAG,CAAC,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CACvE;MAAA,CAAC,KAAK,CAAC,CAAC,CAAC,CACP,CAAC,mDAAwB,CACvB,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACnB,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACpB,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACrB,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAC3B,CACH,CAAC,CAAC,CAAC,CACF,CAAC,+CAAsB,CACrB,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACnB,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACpB,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CACrB,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAC3B,CACH,CACH;IAAA,EAAE,cAAG,CAAC,CACP,EAlBqC,CAkBrC,CAAC,CAAC;IAEH,OAAO,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AACtB,CAAC,CAAC;AAvCW,QAAA,iBAAiB,qBAuC5B","sourcesContent":["import { Box } from '@mui/material';\nimport { FC } from 'react';\nimport {\n  ExamFieldsNames,\n  ExamObservationFieldsDetails,\n  examObservationFieldsDetailsArray,\n  ExamTabGroupNames,\n  ExamTabProviderCardNames,\n  inPersonExamObservationFieldsDetailsArray,\n  InPersonExamTabProviderCardNames,\n} from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { useFeatureFlags } from '../../../../../features/css-module/context/featureFlags';\nimport { ControlledExamCheckbox } from './ControlledExamCheckbox';\nimport { ControlledExamRadioGroup } from './ControlledExamRadioGroup';\n\ntype ExamFieldsFactoryProps = { radio?: boolean } & (\n  | {\n      fields: ExamFieldsNames[];\n      card?: never;\n      group?: never;\n    }\n  | {\n      fields?: never;\n      card: ExamTabProviderCardNames | InPersonExamTabProviderCardNames;\n      group: ExamTabGroupNames;\n    }\n);\n\nexport const ExamFieldsFactory: FC<ExamFieldsFactoryProps> = (props) => {\n  const { fields, card, group, radio } = props;\n\n  const { css } = useFeatureFlags();\n  let values: (typeof ExamObservationFieldsDetails)[keyof typeof ExamObservationFieldsDetails][];\n\n  if (card && group) {\n    if (css) {\n      values = inPersonExamObservationFieldsDetailsArray.filter(\n        (details) => details.group === group && details.card === card\n      ) as typeof values;\n    } else {\n      values = examObservationFieldsDetailsArray.filter((details) => details.group === group && details.card === card);\n    }\n  } else {\n    values = fields.map((field) => ExamObservationFieldsDetails[field]);\n  }\n\n  const array = values.map((details) => (\n    <Box data-testid={dataTestIds.telemedEhrFlow.examTabField(details.field)}>\n      {radio ? (\n        <ControlledExamRadioGroup\n          key={details.field}\n          name={details.field}\n          label={details.label}\n          abnormal={details.abnormal}\n        />\n      ) : (\n        <ControlledExamCheckbox\n          key={details.field}\n          name={details.field}\n          label={details.label}\n          abnormal={details.abnormal}\n        />\n      )}\n    </Box>\n  ));\n\n  return <>{array}</>;\n};\n"]}