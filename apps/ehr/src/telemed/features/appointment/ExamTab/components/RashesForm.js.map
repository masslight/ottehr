{"version":3,"file":"RashesForm.js","sourceRoot":"","sources":["RashesForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Autocomplete, Box, TextField, Typography } from '@mui/material';\nimport React, { FC, useEffect, useState } from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport { ExamObservationDTO } from 'utils';\nimport { parseRashesFieldToName, rashesFields, rashesOptions } from 'utils';\nimport { RoundedButton } from '../../../../../components/RoundedButton';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { ActionsList, DeleteIconButton } from '../../../../components';\nimport { useExamObservations } from '../../../../hooks/useExamObservations';\nimport { StatelessExamCheckbox } from './StatelessExamCheckbox';\n\ntype FormValues = {\n  rashes: string | null;\n  description: string;\n};\n\nexport const RashesForm: FC = () => {\n  const { value: fields, update, isLoading } = useExamObservations(rashesFields);\n\n  const {\n    value: noRashesField,\n    update: updateNoRashes,\n    isLoading: isNoRashesLoading,\n  } = useExamObservations('no-rashes');\n\n  const abnormalFields = fields.filter((field) => field.value);\n\n  const [savedFields, setSavedFields] = useState<ExamObservationDTO[]>([]);\n\n  const methods = useForm<FormValues>({\n    defaultValues: {\n      rashes: null,\n      description: '',\n    },\n  });\n  const { control, handleSubmit, reset } = methods;\n\n  const onAdd = (data: FormValues): void => {\n    const field = fields.find((field) => field.field === data.rashes)!;\n\n    update({ ...field, value: true, note: data.description || undefined });\n\n    reset();\n  };\n\n  const onRemove = (name: string): void => {\n    const field = fields.find((field) => field.field === name)!;\n\n    update({ ...field, value: false });\n  };\n\n  useEffect(() => {\n    if (!noRashesField.value) {\n      if (savedFields.length > 0) {\n        update(savedFields.map((field) => ({ ...field, value: true })));\n      }\n    } else {\n      if (abnormalFields.length > 0) {\n        setSavedFields(abnormalFields);\n        update(abnormalFields.map((field) => ({ ...field, value: false, note: undefined })));\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noRashesField.value]);\n\n  const onBooleanChange = (value: boolean): void => {\n    updateNoRashes({ ...noRashesField, value: !value });\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <Box data-testid={dataTestIds.telemedEhrFlow.examTabRashesCheckbox}>\n        <StatelessExamCheckbox\n          abnormal\n          label=\"Rashes\"\n          checked={!noRashesField.value}\n          onChange={onBooleanChange}\n          disabled={isNoRashesLoading}\n        />\n      </Box>\n\n      {abnormalFields.length > 0 && (\n        <Box sx={{ width: '100%' }} data-testid={dataTestIds.telemedEhrFlow.examTabRashesAbnormalSubsection}>\n          <ActionsList\n            data={abnormalFields}\n            getKey={(value) => value.field}\n            itemDataTestId={dataTestIds.telemedEhrFlow.examTabRashElementInSubsection}\n            renderItem={(value) => <Typography>{parseRashesFieldToName(value.field, fields)}</Typography>}\n            renderActions={(value) => <DeleteIconButton disabled={isLoading} onClick={() => onRemove(value.field)} />}\n            divider\n            gap={0.5}\n          />\n        </Box>\n      )}\n\n      {!noRashesField.value && (\n        <FormProvider {...methods}>\n          <Box\n            sx={{\n              p: 2,\n              backgroundColor: otherColors.formCardBg,\n              display: 'flex',\n              flexDirection: 'column',\n              gap: 2,\n              borderRadius: 2,\n            }}\n          >\n            <Controller\n              name=\"rashes\"\n              control={control}\n              rules={{\n                required: true,\n              }}\n              render={({ field: { onChange, value }, fieldState: { error } }) => (\n                <Autocomplete\n                  options={Object.keys(rashesOptions)}\n                  getOptionLabel={(option) => rashesOptions[option as keyof typeof rashesOptions]}\n                  data-testid={dataTestIds.telemedEhrFlow.examTabRashesDropdown}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      helperText={error ? error.message : null}\n                      error={!!error}\n                      size=\"small\"\n                      label=\"Rashes\"\n                    />\n                  )}\n                  onChange={(_e, data) => onChange(data)}\n                  value={value}\n                />\n              )}\n            />\n            <Controller\n              name=\"description\"\n              control={control}\n              rules={{\n                required: false,\n              }}\n              render={({ field: { onChange, value }, fieldState: { error } }) => (\n                <TextField\n                  helperText={error ? error.message : null}\n                  data-testid={dataTestIds.telemedEhrFlow.examTabRashesDescription}\n                  error={!!error}\n                  size=\"small\"\n                  label=\"Description\"\n                  value={value}\n                  onChange={onChange}\n                  multiline\n                />\n              )}\n            />\n            <RoundedButton\n              onClick={handleSubmit(onAdd)}\n              disabled={isLoading}\n              data-testid={dataTestIds.telemedEhrFlow.examTabRashesAddButton}\n            >\n              Add\n            </RoundedButton>\n          </Box>\n        </FormProvider>\n      )}\n    </Box>\n  );\n};\n"]}