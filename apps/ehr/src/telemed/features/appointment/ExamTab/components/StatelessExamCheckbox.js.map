{"version":3,"file":"StatelessExamCheckbox.js","sourceRoot":"","sources":["StatelessExamCheckbox.tsx"],"names":[],"mappings":";;;AAAA,0CAAiF;AAW1E,IAAM,qBAAqB,GAAmC,UAAC,KAAK;IACjE,IAAA,KAAK,GAA4C,KAAK,MAAjD,EAAE,QAAQ,GAAkC,KAAK,SAAvC,EAAE,OAAO,GAAyB,KAAK,QAA9B,EAAE,QAAQ,GAAe,KAAK,SAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAC/D,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,2BAAgB,CACf,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACb,OAAO,CAAC,CACN,CAAC,mBAAQ,CACP,IAAI,CAAC,OAAO,CACZ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,EAAE,CAAC,CAAC;gBACF,eAAe,EAAE;oBACf,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI;iBAC/F;gBACD,CAAC,EAAE,GAAG;aACP,CAAC,CACF,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,QAAQ,CAAC,CAAC,UAAC,CAAC,IAAK,OAAA,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAtC,CAAsC,CAAC,EAE5D,CAAC,CACD,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,qBAAU,CAAC,UAAU,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,qBAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EACzG,CACH,CAAC;AACJ,CAAC,CAAC;AAxBW,QAAA,qBAAqB,yBAwBhC","sourcesContent":["import { Checkbox, FormControlLabel, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\n\ntype StatelessExamCheckboxProps = {\n  label?: string;\n  abnormal?: boolean;\n  checked?: boolean;\n  onChange?: (value: boolean) => void;\n  disabled?: boolean;\n};\n\nexport const StatelessExamCheckbox: FC<StatelessExamCheckboxProps> = (props) => {\n  const { label, abnormal, checked, onChange, disabled } = props;\n  const theme = useTheme();\n\n  return (\n    <FormControlLabel\n      sx={{ m: 0 }}\n      control={\n        <Checkbox\n          size=\"small\"\n          disabled={disabled}\n          sx={{\n            '&.Mui-checked': {\n              color: disabled ? undefined : abnormal ? theme.palette.error.main : theme.palette.success.main,\n            },\n            p: 0.5,\n          }}\n          checked={checked}\n          onChange={(e) => onChange && onChange(e.target.checked)}\n        />\n      }\n      label={label ? <Typography fontWeight={checked && abnormal ? 600 : 400}>{label}</Typography> : undefined}\n    />\n  );\n};\n"]}