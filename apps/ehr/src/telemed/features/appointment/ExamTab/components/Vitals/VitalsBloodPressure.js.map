{"version":3,"file":"VitalsBloodPressure.js","sourceRoot":"","sources":["VitalsBloodPressure.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { getQuestionnaireResponseByLinkId } from 'utils';\nimport { getSelectors } from '../../../../../../shared/store/getSelectors';\nimport { useDebounce } from '../../../../../hooks';\nimport { useAppointmentStore, useUpdatePaperwork } from '../../../../../state';\nimport { updateQuestionnaireResponse } from '../../../../../utils';\nimport { NumberInput } from '../NumberInput';\n\ntype VitalsBloodPressureProps = {\n  validate: (value: string) => string | undefined;\n};\n\nexport const VitalsBloodPressure: FC<VitalsBloodPressureProps> = (props) => {\n  const { validate } = props;\n\n  const { appointment, questionnaireResponse } = getSelectors(useAppointmentStore, [\n    'appointment',\n    'questionnaireResponse',\n  ]);\n  const defaultValue = getQuestionnaireResponseByLinkId('vitals-bp', questionnaireResponse)?.answer?.[0]?.valueString;\n  const { control, handleSubmit, watch, setValue, getValues } = useForm<{\n    'vitals-bp': string;\n  }>({\n    defaultValues: {\n      'vitals-bp': (defaultValue === 'N/A' ? '' : defaultValue) || '',\n    },\n  });\n  const { mutate } = useUpdatePaperwork();\n  const { debounce, clear } = useDebounce(1000);\n  const [_bp, setBp] = useState(getValues('vitals-bp') ?? '/');\n\n  const onSubmit = useCallback(\n    (value: { 'vitals-bp': string }): void => {\n      debounce(() => {\n        mutate(\n          {\n            appointmentID: appointment!.id!,\n            paperwork: {\n              'vitals-bp': value['vitals-bp'] || 'N/A',\n            },\n          },\n          {\n            onSuccess: () => {\n              updateQuestionnaireResponse(questionnaireResponse, 'vitals-bp', value['vitals-bp'] || 'N/A');\n            },\n          }\n        );\n      });\n    },\n    [debounce, mutate, appointment, questionnaireResponse]\n  );\n\n  useEffect(() => {\n    const subscription = watch(() => handleSubmit(onSubmit)());\n    return () => subscription.unsubscribe();\n  }, [handleSubmit, watch, onSubmit]);\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flex: 1.5 }}>\n      <Controller\n        name=\"vitals-bp\"\n        control={control}\n        rules={{\n          validate: (value) => {\n            const result = validate(value);\n            if (result) {\n              clear();\n              return result;\n            }\n            return;\n          },\n        }}\n        render={({ field: { value, onChange }, fieldState: { error } }) => {\n          const [systolic, diastolic] = value.split('/');\n          const systolicError = error?.message?.startsWith('Systolic ');\n          const systolicErrorMessage = systolicError && error?.message?.split('Systolic ')[1];\n          const diastolicError = error?.message?.startsWith('Diastolic ');\n          const diastolicErrorMessage = diastolicError && error?.message?.split('Diastolic ')[1];\n\n          return (\n            <>\n              <NumberInput\n                helperText={error && systolicError ? systolicErrorMessage : null}\n                error={!!systolicError}\n                label=\"BP Systolic, mmHg\"\n                value={systolic}\n                onChange={(e) => {\n                  const newBp = `${e.target.value}/${diastolic}`;\n                  onChange(e);\n                  setBp(newBp);\n                  setValue('vitals-bp', newBp);\n                }}\n              />\n              <Typography>/</Typography>\n              <NumberInput\n                helperText={error && diastolicError ? diastolicErrorMessage : null}\n                error={!!diastolicError}\n                label=\"BP Diastolic, mmHg\"\n                value={diastolic}\n                onChange={(e) => {\n                  const newBp = `${systolic}/${e.target.value}`;\n                  onChange(e);\n                  setBp(newBp);\n                  setValue('vitals-bp', newBp);\n                }}\n              />\n            </>\n          );\n        }}\n      />\n    </Box>\n  );\n};\n"]}