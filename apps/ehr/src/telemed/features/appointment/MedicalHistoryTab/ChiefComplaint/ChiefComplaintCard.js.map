{"version":3,"file":"ChiefComplaintCard.js","sourceRoot":"","sources":["ChiefComplaintCard.tsx"],"names":[],"mappings":";;;AAAA,+BAAqC;AACrC,wFAA0F;AAC1F,yEAAwE;AACxE,2CAAmE;AACnE,2CAAwD;AACxD,wEAAuE;AACvE,6EAA4E;AAC5E,+EAIwC;AAEjC,IAAM,kBAAkB,GAAO;IAC9B,IAAA,KAAsC,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAApD,cAAc,QAAA,EAAE,iBAAiB,QAAmB,CAAC;IACpD,IAAA,kBAAkB,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,oBAAoB,CAAC,CAAC,mBAA9D,CAA+D;IACjF,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IACvE,IAAA,GAAG,GAAK,IAAA,8BAAe,GAAE,IAAtB,CAAuB;IAElC,OAAO,CACL,CAAC,mDAAwB,CACvB,KAAK,CAAC,uBAAuB,CAC7B,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAC5C,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,cAAM,OAAA,iBAAiB,CAAC,UAAC,KAAK,IAAK,OAAA,CAAC,KAAK,EAAN,CAAM,CAAC,EAApC,CAAoC,CAAC,CACvE,WAAW,CAAC,CAAC,CAAC,yDAA2B,CAAC,AAAD,EAAG,CAAC,CAC7C,YAAY,CAAC,CACX,kBAAkB,CAAC,CAAC,CAAC,CACnB,CAAC,mEAAoC,CAAC,AAAD,EAAG,CACzC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CACf,CAAC,mEAAoC,CAAC,AAAD,EAAG,CACzC,CAAC,CAAC,CAAC,CACF,CAAC,2DAA4B,CAAC,AAAD,EAAG,CAEpC,CAAC,EACD,CACH,CAAC;AACJ,CAAC,CAAC;AAvBW,QAAA,kBAAkB,sBAuB7B","sourcesContent":["import { FC, useState } from 'react';\nimport { useFeatureFlags } from '../../../../../features/css-module/context/featureFlags';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useGetAppointmentAccessibility } from '../../../../hooks';\nimport { useAppointmentStore } from '../../../../state';\nimport { MedicalHistoryDoubleCard } from '../MedicalHistoryDoubleCard';\nimport { ChiefComplaintPatientColumn } from './ChiefComplaintPatientColumn';\nimport {\n  ChiefComplaintProviderColumn,\n  ChiefComplaintProviderColumnReadOnly,\n  ChiefComplaintProviderColumnSkeleton,\n} from './ChiefComplaintProviderColumn';\n\nexport const ChiefComplaintCard: FC = () => {\n  const [isHPICollapsed, setIsHPICollapsed] = useState(false);\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const { css } = useFeatureFlags();\n\n  return (\n    <MedicalHistoryDoubleCard\n      label=\"Chief complaint & HPI\"\n      collapsed={css ? undefined : isHPICollapsed}\n      onSwitch={css ? undefined : () => setIsHPICollapsed((state) => !state)}\n      patientSide={<ChiefComplaintPatientColumn />}\n      providerSide={\n        isChartDataLoading ? (\n          <ChiefComplaintProviderColumnSkeleton />\n        ) : isReadOnly ? (\n          <ChiefComplaintProviderColumnReadOnly />\n        ) : (\n          <ChiefComplaintProviderColumn />\n        )\n      }\n    />\n  );\n};\n"]}