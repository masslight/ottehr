{"version":3,"file":"ChiefComplaintProviderColumn.js","sourceRoot":"","sources":["ChiefComplaintProviderColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, CircularProgress, FormControlLabel, Skeleton, Switch, TextField, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useDebounceNotesField } from '../../../../hooks';\nimport { useAppointmentStore } from '../../../../state';\n\nexport const ChiefComplaintProviderColumn: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const methods = useForm({\n    defaultValues: {\n      chiefComplaint: chartData?.chiefComplaint?.text || '',\n      ros: chartData?.ros?.text || '',\n    },\n  });\n\n  const { control } = methods;\n\n  const {\n    onValueChange: onChiefComplaintChange,\n    isLoading: isChiefComplaintLoading,\n    isChartDataLoading: isChiefComplaintChartDataLoading,\n  } = useDebounceNotesField('chiefComplaint');\n  const {\n    onValueChange: onRosChange,\n    isLoading: isRosLoading,\n    isChartDataLoading: isRosChartDataLoading,\n  } = useDebounceNotesField('ros');\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n      <Controller\n        name=\"chiefComplaint\"\n        control={control}\n        render={({ field: { value, onChange } }) => (\n          <TextField\n            value={value}\n            onChange={(e) => {\n              onChange(e);\n              onChiefComplaintChange(e.target.value);\n            }}\n            disabled={isChiefComplaintChartDataLoading}\n            label=\"HPI provider notes\"\n            fullWidth\n            multiline\n            rows={3}\n            data-testid={dataTestIds.telemedEhrFlow.hpiChiefComplaintNotes}\n            InputProps={{\n              endAdornment: isChiefComplaintLoading && (\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                  <CircularProgress size=\"20px\" />\n                </Box>\n              ),\n            }}\n          />\n        )}\n      />\n\n      <Controller\n        name=\"ros\"\n        control={control}\n        render={({ field: { value, onChange } }) => (\n          <TextField\n            value={value}\n            onChange={(e) => {\n              onChange(e);\n              onRosChange(e.target.value);\n            }}\n            disabled={isRosChartDataLoading}\n            label=\"ROS (optional)\"\n            fullWidth\n            multiline\n            data-testid={dataTestIds.telemedEhrFlow.hpiChiefComplaintRos}\n            InputProps={{\n              endAdornment: isRosLoading && (\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                  <CircularProgress size=\"20px\" />\n                </Box>\n              ),\n            }}\n          />\n        )}\n      />\n    </Box>\n  );\n};\n\nexport const ChiefComplaintProviderColumnReadOnly: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n\n  const chiefComplaint = chartData?.chiefComplaint?.text;\n  const ros = chartData?.ros?.text;\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n      {chiefComplaint && (\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          <Typography variant=\"subtitle2\" color=\"primary.dark\">\n            HPI provider notes\n          </Typography>\n          <Typography>{chiefComplaint}</Typography>\n        </Box>\n      )}\n\n      {ros && (\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          <Typography variant=\"subtitle2\" color=\"primary.dark\">\n            ROS provider notes\n          </Typography>\n          <Typography>{ros}</Typography>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport const ChiefComplaintProviderColumnSkeleton: FC = () => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n      <Skeleton variant=\"rounded\" width=\"100%\">\n        <TextField multiline rows={3} />\n      </Skeleton>\n      <Skeleton variant=\"rounded\">\n        <FormControlLabel control={<Switch />} label=\"Add ROS\" />\n      </Skeleton>\n    </Box>\n  );\n};\n"]}