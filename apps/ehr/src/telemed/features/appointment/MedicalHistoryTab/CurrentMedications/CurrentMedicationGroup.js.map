{"version":3,"file":"CurrentMedicationGroup.js","sourceRoot":"","sources":["CurrentMedicationGroup.tsx"],"names":[],"mappings":";;;AAAA,0CAAgD;AAChD,+BAAiC;AAEjC,wEAAqE;AACrE,wEAAoE;AACpE,qDAAuE;AACvE,wGAAuG;AACvG,2CAAmE;AAE5D,IAAM,sBAAsB,GAAG,UAAC,EAYtC;QAXC,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,UAAU,gBAAA;IAQF,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IAC/E,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,GAAG,EAAE,GAAG;SACT,CAAC,CACF,WAAW,CAAC,CAAC,UAAU,CAAC,CAExB;MAAA,CAAC,+DAA8B,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,+DAA8B,CACxF;MAAA,CAAC,wBAAW,CACV,IAAI,CAAC,CAAC,WAAW,CAAC,CAClB,MAAM,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,UAAW,EAAjB,CAAiB,CAAC,CACrC,cAAc,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAAC,CACrF,UAAU,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,EAAG,EAAvC,CAAuC,CAAC,CAC/D,aAAa,CAAC,CACZ,UAAU;YACR,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,CAAC,6BAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,QAAQ,CAAC,KAAK,CAAC,UAAW,CAAC,EAA3B,CAA2B,CAAC,EAAG,EAArF,CACjB,CAAC,CACD,OAAO,EAEX;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAtCW,QAAA,sBAAsB,0BAsCjC;AAEF,SAAS,qBAAqB,CAAC,EAAmC;;QAAjC,KAAK,WAAA;IACpC,IAAM,cAAc,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,gBAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACxF,IAAI,qBAAqB,GAAG,EAAE,CAAC;IAC/B,IAAI,cAAc,YAAY,gBAAQ,EAAE,CAAC;QACvC,qBAAqB,GAAG,UAAG,cAAc,CAAC,QAAQ,CAAC,4BAAW,CAAC,iBAAO,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAE,CAAC;IAC7G,CAAC;IACD,IAAM,cAAc,GAAG,CAAC,MAAA,KAAK,CAAC,UAAU,0CAAE,IAAI,EAAE,qBAAqB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEjG,OAAO,CACL,CAAC,qBAAU,CAAC,OAAO,CAAC,OAAO,CACzB;MAAA,CAAC,KAAK,CAAC,IAAI,CACX;MAAA,CAAC,cAAc,CAAC,CAAC,CAAC,WAAI,cAAc,MAAG,CAAC,CAAC,CAAC,EAAE,CAC9C;IAAA,EAAE,qBAAU,CAAC,CACd,CAAC;AACJ,CAAC","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { MedicationDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { DATE_FORMAT } from '../../../../../helpers/formatDateTime';\nimport { ActionsList, DeleteIconButton } from '../../../../components';\nimport { MedHistorySubsectionTypography } from '../../../../components/MedHistorySubsectionTypography';\nimport { useGetAppointmentAccessibility } from '../../../../hooks';\n\nexport const CurrentMedicationGroup = ({\n  label,\n  medications,\n  isLoading,\n  onRemove,\n  dataTestId,\n}: {\n  label: string;\n  medications: MedicationDTO[];\n  isLoading: boolean;\n  onRemove: (resourceId: string) => void;\n  dataTestId: string;\n}): JSX.Element => {\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 0.5,\n      }}\n      data-testid={dataTestId}\n    >\n      <MedHistorySubsectionTypography sx={{ pb: 0.5 }}>{label}</MedHistorySubsectionTypography>\n      <ActionsList\n        data={medications}\n        getKey={(value) => value.resourceId!}\n        itemDataTestId={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsListItem(dataTestId)}\n        renderItem={(value) => <CurrentMedicationItem value={value} />}\n        renderActions={\n          isReadOnly\n            ? undefined\n            : (value) => <DeleteIconButton disabled={isLoading} onClick={() => onRemove(value.resourceId!)} />\n        }\n        divider\n      />\n    </Box>\n  );\n};\n\nfunction CurrentMedicationItem({ value }: { value: MedicationDTO }): JSX.Element {\n  const lastIntakeDate = value.intakeInfo.date && DateTime.fromISO(value.intakeInfo.date);\n  let lastIntakeDateDisplay = '';\n  if (lastIntakeDate instanceof DateTime) {\n    lastIntakeDateDisplay = `${lastIntakeDate.toFormat(DATE_FORMAT)} at ${lastIntakeDate.toFormat('HH:mm a')}`;\n  }\n  const additionalInfo = [value.intakeInfo?.dose, lastIntakeDateDisplay].filter(Boolean).join(' ');\n\n  return (\n    <Typography variant=\"body2\">\n      {value.name}\n      {additionalInfo ? `(${additionalInfo})` : ''}\n    </Typography>\n  );\n}\n"]}