{"version":3,"file":"CurrentMedicationsProviderColumn.js","sourceRoot":"","sources":["CurrentMedicationsProviderColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  debounce,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { DateTimePicker } from '@mui/x-date-pickers';\nimport { AdapterLuxon } from '@mui/x-date-pickers/AdapterLuxon';\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\nimport { ErxSearchMedicationsResponse } from '@oystehr/sdk';\nimport { DateTime } from 'luxon';\nimport { FC, useCallback, useMemo, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useMedicationHistory } from 'src/features/css-module/hooks/useMedicationHistory';\nimport { MedicationDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useChartDataArrayValue, useGetAppointmentAccessibility } from '../../../../hooks';\nimport { ExtractObjectType, useAppointmentStore, useGetMedicationsSearch } from '../../../../state';\nimport { ProviderSideListSkeleton } from '../ProviderSideListSkeleton';\nimport { CurrentMedicationGroup } from './CurrentMedicationGroup';\n\ninterface CurrentMedicationsProviderColumnForm {\n  medication: ExtractObjectType<ErxSearchMedicationsResponse> | null;\n  type: MedicationDTO['type'];\n  date: DateTime | null;\n  dose: string | null;\n}\n\nexport const CurrentMedicationsProviderColumn: FC = () => {\n  const methods = useForm<CurrentMedicationsProviderColumnForm>({\n    defaultValues: { medication: null, dose: null, date: null, type: 'scheduled' },\n  });\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const { control, reset, handleSubmit } = methods;\n\n  const { refetchHistory } = useMedicationHistory();\n\n  const {\n    isLoading,\n    onSubmit,\n    onRemove,\n    values: medications,\n  } = useChartDataArrayValue(\n    'medications',\n    undefined,\n    {\n      _sort: '-_lastUpdated',\n      _include: 'MedicationStatement:source',\n      status: { type: 'token', value: 'active' },\n    },\n    refetchHistory\n  );\n\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n\n  const { isFetching: isSearching, data } = useGetMedicationsSearch(debouncedSearchTerm);\n  const medSearchOptions = data || [];\n\n  const medicationsMap: { scheduled: MedicationDTO[]; asNeeded: MedicationDTO[] } = useMemo(\n    () => ({\n      scheduled: medications.filter((med) => med.type === 'scheduled'),\n      asNeeded: medications.filter((med) => med.type === 'as-needed'),\n    }),\n    [medications]\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedHandleInputChange = useCallback(\n    debounce((data) => {\n      console.log(data);\n      if (data.length > 2) {\n        setDebouncedSearchTerm(data);\n      }\n    }, 800),\n    []\n  );\n\n  const handleFormSubmitted = async (data: CurrentMedicationsProviderColumnForm): Promise<void> => {\n    if (data) {\n      const success = await onSubmit({\n        name: `${data.medication?.name}${data.medication?.strength ? ` (${data.medication?.strength})` : ''}`,\n        id: data.medication?.id?.toString(),\n        type: data.type,\n        intakeInfo: {\n          date: data.date?.toUTC().toString(),\n          dose: data.dose ?? undefined,\n        },\n        status: 'active',\n      });\n      if (success) {\n        reset({ medication: null, date: null, dose: null, type: 'scheduled' });\n        void refetchHistory();\n      }\n    }\n  };\n\n  return (\n    <Box>\n      <Box\n        data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsColumn}\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n          mb: (medications.length || isChartDataLoading) && !isReadOnly ? 2 : 0,\n        }}\n      >\n        {isChartDataLoading ? (\n          <ProviderSideListSkeleton />\n        ) : (\n          <>\n            {medicationsMap.scheduled.length > 0 ? (\n              <Box data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsScheduledList}>\n                <CurrentMedicationGroup\n                  label=\"Scheduled medications\"\n                  medications={medicationsMap.scheduled}\n                  onRemove={onRemove}\n                  isLoading={isLoading}\n                  dataTestId={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsList('scheduled')}\n                ></CurrentMedicationGroup>\n              </Box>\n            ) : null}\n            {medicationsMap.asNeeded.length > 0 ? (\n              <Box data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsAsNeededList}>\n                <CurrentMedicationGroup\n                  label=\"As needed medications\"\n                  medications={medicationsMap.asNeeded}\n                  onRemove={onRemove}\n                  isLoading={isLoading}\n                  dataTestId={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsList('as-needed')}\n                ></CurrentMedicationGroup>\n              </Box>\n            ) : null}\n          </>\n        )}\n      </Box>\n\n      {medications.length === 0 && isReadOnly && !isChartDataLoading && (\n        <Typography color=\"secondary.light\">Missing. Patient input must be reconciled by provider</Typography>\n      )}\n\n      {!isReadOnly && (\n        <form onSubmit={(event) => handleSubmit((data) => handleFormSubmitted(data))(event)}>\n          <Card\n            elevation={0}\n            sx={{\n              p: 3,\n              backgroundColor: otherColors.formCardBg,\n              borderRadius: 2,\n              display: 'grid',\n              gridTemplateColumns: 'repeat(1, 1fr)',\n              gap: 2,\n            }}\n          >\n            <Controller\n              name=\"type\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field: { value, onChange } }) => (\n                <RadioGroup row value={value} onChange={onChange}>\n                  <FormControlLabel\n                    value=\"scheduled\"\n                    data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsScheduledRadioButton}\n                    control={<Radio size=\"small\" disabled={isLoading} />}\n                    label={'Scheduled medication'}\n                  />\n                  <FormControlLabel\n                    value=\"as-needed\"\n                    data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsAsNeededRadioButton}\n                    control={<Radio size=\"small\" disabled={isLoading} />}\n                    label={'As needed medication'}\n                  />\n                </RadioGroup>\n              )}\n            ></Controller>\n\n            <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: 2 }}>\n              <Controller\n                name=\"medication\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { value, onChange }, fieldState: { error } }) => (\n                  <Autocomplete\n                    value={value}\n                    getOptionLabel={(option) =>\n                      typeof option === 'string'\n                        ? option\n                        : `${option.name} ${option.strength ? `(${option.strength})` : ''}`\n                    }\n                    fullWidth\n                    isOptionEqualToValue={(option, value) => value.id === option.id}\n                    loading={isSearching}\n                    size=\"small\"\n                    disablePortal\n                    disabled={isLoading || isChartDataLoading}\n                    noOptionsText={\n                      debouncedSearchTerm && debouncedSearchTerm.length > 2 && medSearchOptions.length === 0\n                        ? 'Nothing found for this search criteria'\n                        : 'Start typing to load results'\n                    }\n                    options={medSearchOptions}\n                    onChange={(_e, data) => {\n                      onChange(data);\n                    }}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        onChange={(e) => debouncedHandleInputChange(e.target.value)}\n                        data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsInput}\n                        label=\"Medication\"\n                        placeholder=\"Search\"\n                        required={true}\n                        error={!!error}\n                        InputLabelProps={{ shrink: true }}\n                        sx={{\n                          '& .MuiInputLabel-root': {\n                            fontWeight: 'bold',\n                          },\n                        }}\n                      />\n                    )}\n                  />\n                )}\n              />\n              <Controller\n                name=\"dose\"\n                control={control}\n                render={({ field: { value, onChange }, fieldState: { error } }) => (\n                  <TextField\n                    value={value || ''}\n                    onChange={onChange}\n                    data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsDoseInput}\n                    size=\"small\"\n                    InputLabelProps={{ shrink: true }}\n                    label=\"Recent dose amount and units\"\n                    placeholder=\"Provide amount and units\"\n                    error={!!error}\n                  />\n                )}\n              ></Controller>\n              <Controller\n                name=\"date\"\n                control={control}\n                rules={{\n                  validate: (val) => {\n                    if (val && !val.isValid) {\n                      return val.invalidExplanation ?? 'Provide valid date time';\n                    }\n                    return true;\n                  },\n                }}\n                render={({ field: { value, onChange }, fieldState: { error } }) => (\n                  <Box\n                    sx={{ gridColumn: 'span 2' }}\n                    data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsDateTimeInput}\n                  >\n                    <LocalizationProvider dateAdapter={AdapterLuxon}>\n                      <DateTimePicker\n                        onChange={onChange}\n                        value={value || null}\n                        label=\"Last time medication was taken\"\n                        slotProps={{\n                          textField: {\n                            sx: { width: '100%' },\n                            InputLabelProps: { shrink: true },\n                            InputProps: { size: 'small', error: !!error },\n                          },\n                        }}\n                      ></DateTimePicker>\n                    </LocalizationProvider>\n                  </Box>\n                )}\n              ></Controller>\n            </Box>\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              disabled={isLoading}\n              data-testid={dataTestIds.telemedEhrFlow.hpiCurrentMedicationsAddButton}\n              sx={{\n                borderColor: otherColors.consentBorder,\n                borderRadius: 100,\n                textTransform: 'none',\n                fontWeight: 500,\n                fontSize: 14,\n                maxWidth: '100px',\n              }}\n            >\n              Add\n            </Button>\n          </Card>\n        </form>\n      )}\n    </Box>\n  );\n};\n"]}