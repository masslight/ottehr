{"version":3,"file":"KnownAllergiesPatientColumn.js","sourceRoot":"","sources":["KnownAllergiesPatientColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Divider, Typography, useTheme } from '@mui/material';\nimport { FC, ReactElement } from 'react';\nimport { AiObservationField, getQuestionnaireResponseByLinkId, ObservationTextFieldDTO } from 'utils';\nimport AiSuggestion from '../../../../../components/AiSuggestion';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../state';\nimport { PatientSideListSkeleton } from '../PatientSideListSkeleton';\n\nexport const KnownAllergiesPatientColumn: FC = () => {\n  const theme = useTheme();\n\n  const { questionnaireResponse, isAppointmentLoading, chartData } = getSelectors(useAppointmentStore, [\n    'questionnaireResponse',\n    'isAppointmentLoading',\n    'chartData',\n  ]);\n\n  const knownAllergies = getQuestionnaireResponseByLinkId(\n    'allergies',\n    questionnaireResponse\n  )?.answer?.[0]?.valueArray?.filter(\n    (answer) => answer['allergies-form-agent-substance-medications'] || answer['allergies-form-agent-substance-other']\n  );\n\n  const aiAllergies = chartData?.observations?.find(\n    (observation) => observation.field === AiObservationField.Allergies\n  ) as ObservationTextFieldDTO;\n\n  const isInPersonPaperwork = questionnaireResponse?.questionnaire?.startsWith(\n    'https://ottehr.com/FHIR/Questionnaire/intake-paperwork-inperson'\n  );\n\n  const renderAllergies = (): ReactElement | ReactElement[] => {\n    if (isAppointmentLoading) {\n      return <PatientSideListSkeleton />;\n    }\n    if (questionnaireResponse == null || questionnaireResponse.status === 'in-progress' || isInPersonPaperwork) {\n      return <Typography color={theme.palette.text.secondary}>No answer</Typography>;\n    }\n    if (knownAllergies == null || knownAllergies?.length === 0) {\n      return <Typography color={theme.palette.text.secondary}>Patient has no known allergies</Typography>;\n    }\n    return knownAllergies.map((answer, index, arr) => (\n      <Box key={index}>\n        <Typography>\n          {answer['allergies-form-agent-substance-medications'] || answer['allergies-form-agent-substance-other']} (\n          {answer['allergies-form-agent-substance-medications'] ? 'medication' : 'other'})\n        </Typography>\n        {index + 1 !== arr.length && <Divider sx={{ pt: 1 }} />}\n      </Box>\n    ));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 1,\n      }}\n      data-testid={dataTestIds.telemedEhrFlow.hpiKnownAllergiesPatientProvidedList}\n    >\n      {renderAllergies()}\n      {aiAllergies ? (\n        <>\n          <hr style={{ border: '0.5px solid #DFE5E9', margin: '0 -16px 0 -16px' }} />\n          <AiSuggestion title={'Allergies'} content={aiAllergies.value} />\n        </>\n      ) : undefined}\n    </Box>\n  );\n};\n"]}