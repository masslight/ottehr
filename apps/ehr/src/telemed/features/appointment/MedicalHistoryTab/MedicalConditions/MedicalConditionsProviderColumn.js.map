{"version":3,"file":"MedicalConditionsProviderColumn.js","sourceRoot":"","sources":["MedicalConditionsProviderColumn.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport {\n  Autocomplete,\n  Box,\n  Card,\n  CircularProgress,\n  debounce,\n  Divider,\n  FormControlLabel,\n  Switch,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useMemo, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { CompleteConfiguration } from 'src/components/CompleteConfiguration';\nimport { APIErrorCode, IcdSearchResponse, MedicalConditionDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { useFeatureFlags } from '../../../../../features/css-module/context/featureFlags';\nimport { useChartData } from '../../../../../features/css-module/hooks/useChartData';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { DeleteIconButton } from '../../../../components';\nimport { useGetAppointmentAccessibility } from '../../../../hooks';\nimport { useAppointmentStore, useDeleteChartData, useGetIcd10Search, useSaveChartData } from '../../../../state';\nimport { ProviderSideListSkeleton } from '../ProviderSideListSkeleton';\n\nexport const MedicalConditionsProviderColumn: FC = () => {\n  const { encounter, chartData } = getSelectors(useAppointmentStore, ['encounter', 'chartData']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const featureFlags = useFeatureFlags();\n\n  const { isLoading: isChartDataLoading } = useChartData({\n    encounterId: encounter.id || '',\n    requestedFields: {\n      conditions: {},\n    },\n    onSuccess: (data) => {\n      useAppointmentStore.setState((prevState) => ({\n        ...prevState,\n        chartData: {\n          ...prevState.chartData,\n          patientId: prevState.chartData?.patientId || '',\n          conditions: data.conditions,\n        },\n      }));\n    },\n  });\n\n  const conditions = chartData?.conditions || [];\n  const length = conditions.length;\n\n  return (\n    <Box\n      sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\n      data-testid={dataTestIds.telemedEhrFlow.hpiMedicalConditionColumn}\n    >\n      {isChartDataLoading && <ProviderSideListSkeleton />}\n\n      {length > 0 && !isChartDataLoading && (\n        <Box\n          sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}\n          data-testid={dataTestIds.telemedEhrFlow.hpiMedicalConditionsList}\n        >\n          {conditions.map((value, index) => (\n            <MedicalConditionListItem\n              key={value.resourceId || `new${index}`}\n              value={value}\n              index={index}\n              length={length}\n            />\n          ))}\n        </Box>\n      )}\n\n      {conditions.length === 0 && isReadOnly && !isChartDataLoading && !featureFlags.css && (\n        <Typography color=\"secondary.light\">Missing. Patient input must be reconciled by provider</Typography>\n      )}\n\n      {!isReadOnly && <AddMedicalConditionField />}\n    </Box>\n  );\n};\n\nconst setUpdatedCondition = (updatedCondition?: MedicalConditionDTO): void => {\n  if (updatedCondition) {\n    useAppointmentStore.setState((prevState) => ({\n      chartData: {\n        ...prevState.chartData!,\n        conditions: prevState.chartData?.conditions?.map((condition) =>\n          condition.resourceId === updatedCondition.resourceId ? updatedCondition : condition\n        ),\n      },\n    }));\n  }\n};\n\nconst MedicalConditionListItem: FC<{ value: MedicalConditionDTO; index: number; length: number }> = ({\n  value,\n  index,\n  length,\n}) => {\n  const [note, setNote] = useState(value.note || '');\n  const areNotesEqual = note.trim() === (value.note || '');\n\n  const featureFlags = useFeatureFlags();\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const { mutate: updateChartData, isLoading: isUpdateLoading } = useSaveChartData();\n  const { mutate: deleteChartData, isLoading: isDeleteLoading } = useDeleteChartData();\n  const isLoading = isUpdateLoading || isDeleteLoading;\n  const isLoadingOrAwaiting = isLoading || !areNotesEqual;\n  const isAlreadySaved = !!value.resourceId;\n\n  const updateNote = useMemo(\n    () =>\n      debounce((input: string) => {\n        updateChartData(\n          {\n            conditions: [{ ...value, note: input.trim() || undefined }],\n          },\n          {\n            onSuccess: (data) => {\n              const updatedCondition = data.chartData.conditions?.[0];\n              setUpdatedCondition(updatedCondition);\n            },\n            onError: () => {\n              enqueueSnackbar('An error has occurred while updating medical condition note. Please try again.', {\n                variant: 'error',\n              });\n            },\n          }\n        );\n      }, 1500),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [value.current]\n  );\n\n  const updateCurrent = (newCurrentValue: boolean): void => {\n    updateChartData(\n      {\n        conditions: [{ ...value, current: newCurrentValue, note: newCurrentValue ? undefined : value.note }],\n      },\n      {\n        onSuccess: (data) => {\n          if (newCurrentValue) {\n            setNote('');\n          }\n          const updatedCondition = data.chartData.conditions?.[0];\n          setUpdatedCondition(updatedCondition);\n        },\n        onError: () => {\n          enqueueSnackbar('An error has occurred while updating medical condition status. Please try again.', {\n            variant: 'error',\n          });\n        },\n      }\n    );\n  };\n\n  const deleteCondition = (): void => {\n    deleteChartData(\n      {\n        conditions: [value],\n      },\n      {\n        onSuccess: () => {\n          useAppointmentStore.setState((prevState) => ({\n            chartData: {\n              ...prevState.chartData!,\n              conditions: prevState.chartData?.conditions?.filter(\n                (condition) => condition.resourceId !== value.resourceId\n              ),\n            },\n          }));\n        },\n        onError: () => {\n          enqueueSnackbar('An error has occurred while deleting medical condition. Please try again.', {\n            variant: 'error',\n          });\n        },\n      }\n    );\n  };\n\n  return (\n    <Box\n      sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}\n      data-testid={dataTestIds.telemedEhrFlow.hpiMedicalConditionListItem}\n    >\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n        <Typography\n          sx={{\n            color: (theme) => (!value.current && featureFlags.css ? theme.palette.text.secondary : undefined),\n          }}\n        >\n          {value.code} {value.display}\n          {featureFlags.css &&\n            isReadOnly &&\n            ` | ${value.current ? 'Current' : 'Inactive now'}${value.note ? ' | Note: ' + value.note : ''}`}\n        </Typography>\n\n        {!isReadOnly && (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            {featureFlags.css && (\n              <FormControlLabel\n                control={<Switch checked={value.current} onChange={(e) => updateCurrent(e.target.checked)} />}\n                label={value.current ? 'Current' : 'Inactive now'}\n                disabled={isLoadingOrAwaiting || !isAlreadySaved}\n                labelPlacement=\"start\"\n                sx={{\n                  '& .MuiFormControlLabel-label': {\n                    marginRight: 1,\n                    textAlign: 'right',\n                    color: (theme) => (!value.current ? theme.palette.text.secondary : undefined),\n                  },\n                }}\n              />\n            )}\n            <DeleteIconButton disabled={isLoadingOrAwaiting || !isAlreadySaved} onClick={deleteCondition} />\n          </Box>\n        )}\n      </Box>\n\n      {!value.current && !isReadOnly && featureFlags.css && (\n        <TextField\n          value={note}\n          onChange={(e) => {\n            setNote(e.target.value);\n            updateNote(e.target.value);\n          }}\n          disabled={(isLoading && areNotesEqual) || !isAlreadySaved}\n          size=\"small\"\n          fullWidth\n          label=\"Notes for inactive condition\"\n          InputProps={{\n            endAdornment: !areNotesEqual && (\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <CircularProgress size=\"20px\" />\n              </Box>\n            ),\n          }}\n        />\n      )}\n\n      {index + 1 !== length && <Divider />}\n    </Box>\n  );\n};\n\nconst AddMedicalConditionField: FC = () => {\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n  const { mutate: updateChartData, isLoading: isUpdateLoading } = useSaveChartData();\n  const { error: icdSearchError } = useGetIcd10Search({ search: 'E11', sabs: 'ICD10CM' });\n\n  const nlmApiKeyMissing = icdSearchError?.code === APIErrorCode.MISSING_NLM_API_KEY_ERROR;\n\n  const methods = useForm<{ value: IcdSearchResponse['codes'][number] | null }>({\n    defaultValues: { value: null },\n  });\n  const { control, reset } = methods;\n\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');\n\n  const { isFetching: isSearching, data } = useGetIcd10Search({ search: debouncedSearchTerm, sabs: 'ICD10CM' });\n  const icdSearchOptions = data?.codes || [];\n\n  const debouncedHandleInputChange = useMemo(\n    () =>\n      debounce((data) => {\n        console.log(data);\n        setDebouncedSearchTerm(data);\n      }, 800),\n    []\n  );\n\n  const handleSelectOption = (data: IcdSearchResponse['codes'][number] | null): void => {\n    if (data) {\n      const newValue = {\n        code: data.code,\n        display: data.display,\n        current: true,\n      };\n      useAppointmentStore.setState((prevState) => ({\n        chartData: {\n          ...prevState.chartData!,\n          conditions: [...(prevState.chartData?.conditions || []), newValue],\n        },\n      }));\n      reset({ value: null });\n\n      updateChartData(\n        { conditions: [newValue] },\n        {\n          onSuccess: (data) => {\n            const updatedCondition = data.chartData.conditions?.[0];\n            if (updatedCondition) {\n              useAppointmentStore.setState((prevState) => ({\n                chartData: {\n                  ...prevState.chartData!,\n                  conditions: prevState.chartData?.conditions?.map((conditions) =>\n                    conditions.code === updatedCondition.code && !conditions.resourceId ? updatedCondition : conditions\n                  ),\n                },\n              }));\n            }\n          },\n          onError: () => {\n            useAppointmentStore.setState((prevState) => ({\n              chartData: {\n                ...prevState.chartData!,\n                conditions: prevState.chartData?.conditions?.filter((condition) => condition.resourceId),\n              },\n            }));\n            enqueueSnackbar('An error has occurred while adding medical condition. Please try again.', {\n              variant: 'error',\n            });\n          },\n        }\n      );\n    }\n  };\n\n  const handleSetup = (): void => {\n    window.open('https://docs.oystehr.com/ottehr/setup/terminology/', '_blank');\n  };\n\n  return (\n    <Card\n      elevation={0}\n      sx={{\n        p: 3,\n        backgroundColor: otherColors.formCardBg,\n        borderRadius: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n      }}\n    >\n      <Controller\n        name=\"value\"\n        control={control}\n        rules={{ required: true }}\n        render={({ field: { value, onChange } }) => (\n          <Autocomplete\n            value={value || null}\n            onChange={(_e, data) => {\n              onChange((data || '') as any);\n              handleSelectOption(data);\n            }}\n            getOptionLabel={(option) => (typeof option === 'string' ? option : `${option.code} ${option.display}`)}\n            isOptionEqualToValue={(option, value) => value.code === option.code}\n            fullWidth\n            size=\"small\"\n            loading={isSearching}\n            blurOnSelect\n            disabled={isChartDataLoading || isUpdateLoading}\n            options={icdSearchOptions}\n            noOptionsText={\n              debouncedSearchTerm && icdSearchOptions.length === 0\n                ? 'Nothing found for this search criteria'\n                : 'Start typing to load results'\n            }\n            filterOptions={(x) => x}\n            renderInput={(params) => (\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                <TextField\n                  {...params}\n                  onChange={(e) => debouncedHandleInputChange(e.target.value)}\n                  data-testid={dataTestIds.telemedEhrFlow.hpiMedicalConditionsInput}\n                  label=\"Medical condition\"\n                  placeholder=\"Search\"\n                  InputLabelProps={{ shrink: true }}\n                  sx={{\n                    '& .MuiInputLabel-root': {\n                      fontWeight: 'bold',\n                    },\n                  }}\n                />\n                {nlmApiKeyMissing && <CompleteConfiguration handleSetup={handleSetup} />}\n              </Box>\n            )}\n          />\n        )}\n      />\n    </Card>\n  );\n};\n"]}