{"version":3,"file":"ProceduresForm.js","sourceRoot":"","sources":["ProceduresForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport { Autocomplete, Box, Card, Stack, TextField, Typography } from '@mui/material';\nimport { FC, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { RoundedButton } from 'src/components/RoundedButton';\nimport { CPTCodeDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { ActionsList, DeleteIconButton } from '../../../../components';\nimport { useChartDataArrayValue } from '../../../../hooks';\nimport { useAppointmentStore } from '../../../../state';\nimport { ProviderSideListSkeleton } from '../ProviderSideListSkeleton';\n\nconst surgicalHistoryOptions: CPTCodeDTO[] = [\n  { display: 'Adenoidectomy', code: '42830' },\n  { display: 'Appendectomy', code: '44950' },\n  { display: 'C-section', code: '59510' },\n  { display: 'Circumcision', code: '54150' },\n  { display: 'Cleft Lip/Palate Repair', code: '42200' },\n  { display: 'Cyst removed', code: '97139' },\n  { display: 'Dental/Oral Surgery', code: '41899' },\n  { display: 'Ear tube placement', code: '69436' },\n  { display: 'Elbow/Hand/Arm Surgery', code: '24999' },\n  { display: 'Feeding tube', code: '43246' },\n  { display: 'Foot/Ankle Surgery', code: '27899' },\n  { display: 'Frenotomy', code: '41010' },\n  { display: 'Gallbladder removal', code: '47600' },\n  { display: 'Heart/Cardiac surgery', code: '33999' },\n  { display: 'Hemangioma', code: '17106' },\n  { display: 'Hernia Repair', code: '49617' },\n  { display: 'Hydrocele Repair', code: '55060' },\n  { display: 'Hypospadias repair', code: '53450' },\n  { display: 'Kidney surgery', code: '50540' },\n  { display: 'Knee Surgery', code: '29850' },\n  { display: 'Orchiectomy (Testicle Removal)', code: '54520' },\n  { display: 'Other Eye surgery', code: '65799' },\n  { display: 'Pyloromyotomy', code: '67599' },\n  { display: 'Sinus surgery', code: '43520' },\n  { display: 'Splenectomy', code: '31299' },\n  { display: 'Tear Duct Eye surgery', code: '38100' },\n  { display: 'Tonsillectomy and adenoidectomy', code: '68899' },\n  { display: 'Undescended Testicle Repair', code: '42820' },\n  { display: 'Ventriculoperitoneal shunt placement', code: '54640' },\n  { display: 'Wisdom teeth removal', code: '75809' },\n  { display: 'Other', code: '41899' },\n];\n\nexport const ProceduresForm: FC = () => {\n  const methods = useForm<{\n    selectedProcedure: CPTCodeDTO | null;\n    otherProcedureName: string;\n  }>({\n    defaultValues: {\n      selectedProcedure: null,\n      otherProcedureName: '',\n    },\n  });\n  const { isChartDataLoading } = getSelectors(useAppointmentStore, ['isChartDataLoading']);\n  const [isOtherOptionSelected, setIsOtherOptionSelected] = useState(false);\n\n  const { control, reset, handleSubmit } = methods;\n\n  const { isLoading, onSubmit, onRemove, values: procedures } = useChartDataArrayValue('surgicalHistory', reset, {});\n\n  const handleSelectOption = (data: CPTCodeDTO | null): void => {\n    if (data) {\n      void onSubmit(data);\n      reset({ selectedProcedure: null, otherProcedureName: '' });\n      setIsOtherOptionSelected(false);\n    }\n  };\n\n  const onSubmitForm = (data: { selectedProcedure: CPTCodeDTO | null; otherProcedureName: string }): void => {\n    if (data.selectedProcedure) {\n      handleSelectOption({\n        ...data.selectedProcedure,\n        display: 'Other' + (data.otherProcedureName ? ` (${data.otherProcedureName})` : ''),\n      });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmitForm)}>\n      <Box>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            mb: procedures.length || isChartDataLoading ? 2 : 0,\n          }}\n        >\n          {isChartDataLoading ? (\n            <ProviderSideListSkeleton />\n          ) : (\n            <Box data-testid={dataTestIds.telemedEhrFlow.hpiSurgicalHistoryList}>\n              <ActionsList\n                data={procedures}\n                itemDataTestId={dataTestIds.telemedEhrFlow.hpiSurgicalHistoryListItem}\n                getKey={(value) => value.resourceId!}\n                renderItem={(value) => (\n                  <Typography>\n                    {value.code} {value.display}\n                  </Typography>\n                )}\n                renderActions={(value) => (\n                  <DeleteIconButton disabled={isLoading} onClick={() => onRemove(value.resourceId!)} />\n                )}\n                divider\n              />\n            </Box>\n          )}\n        </Box>\n        <Card\n          elevation={0}\n          sx={{\n            p: 3,\n            backgroundColor: otherColors.formCardBg,\n            borderRadius: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n          }}\n        >\n          <Controller\n            name=\"selectedProcedure\"\n            control={control}\n            rules={{ required: true }}\n            render={({ field: { value, onChange } }) => (\n              <Autocomplete\n                value={value || null}\n                onChange={(_e, data) => {\n                  onChange(data);\n                  if (data?.display === 'Other') {\n                    setIsOtherOptionSelected(true);\n                  } else {\n                    setIsOtherOptionSelected(false);\n                    handleSelectOption(data);\n                  }\n                }}\n                fullWidth\n                size=\"small\"\n                disabled={isLoading || isChartDataLoading}\n                options={surgicalHistoryOptions}\n                noOptionsText=\"Nothing found for this search criteria\"\n                getOptionLabel={(option) => `${option.code} ${option.display}`}\n                renderOption={(props, option) => (\n                  <li {...props}>\n                    <Typography component=\"span\">\n                      {option.code} {option.display}\n                    </Typography>\n                  </li>\n                )}\n                isOptionEqualToValue={(option, value) => option.code === value.code}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Surgery\"\n                    placeholder=\"Search\"\n                    InputLabelProps={{ shrink: true }}\n                    data-testid={dataTestIds.telemedEhrFlow.hpiSurgicalHistoryInput}\n                    sx={{\n                      '& .MuiInputLabel-root': {\n                        fontWeight: 'bold',\n                      },\n                    }}\n                  />\n                )}\n              />\n            )}\n          />\n          {isOtherOptionSelected && (\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n              <Controller\n                name=\"otherProcedureName\"\n                control={control}\n                render={({ field: { value, onChange } }) => (\n                  <TextField\n                    value={value}\n                    onChange={(e) => onChange(e.target.value)}\n                    label=\"Other surgery\"\n                    placeholder=\"Please specify\"\n                    fullWidth\n                    size=\"small\"\n                  />\n                )}\n              />\n              <RoundedButton type=\"submit\">Add</RoundedButton>\n            </Stack>\n          )}\n        </Card>\n      </Box>\n    </form>\n  );\n};\n"]}