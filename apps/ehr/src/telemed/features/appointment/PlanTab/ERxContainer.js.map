{"version":3,"file":"ERxContainer.js","sourceRoot":"","sources":["ERxContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport { Stack } from '@mui/system';\nimport { Practitioner } from 'fhir/r4b';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useState } from 'react';\nimport { ERX_MEDICATION_META_TAG_CODE, formatDateToMDYWithTime, RoleType } from 'utils';\nimport { RoundedButton } from '../../../../components/RoundedButton';\nimport { useChartData } from '../../../../features/css-module/hooks/useChartData';\nimport { useApiClients } from '../../../../hooks/useAppClients';\nimport useEvolveUser from '../../../../hooks/useEvolveUser';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { useGetAppointmentAccessibility } from '../../../hooks';\nimport { useAppointmentStore } from '../../../state';\nimport { getAppointmentStatusChip } from '../../../utils';\nimport { ERX, ERXStatus } from '../ERX';\n\nconst getPractitionerName = (practitioner?: Practitioner): string | undefined => {\n  if (!practitioner) {\n    return;\n  }\n  const givenName = practitioner?.name?.[0]?.given?.at(0) ?? '';\n  const familyName = practitioner?.name?.[0]?.family ?? '';\n  return `${familyName}, ${givenName}`.trim();\n};\n\nconst medicationStatusMapper = {\n  loading: {\n    background: {\n      primary: '#B3E5FC',\n    },\n    color: {\n      primary: '#01579B',\n    },\n  },\n  active: {\n    background: {\n      primary: '#B3E5FC',\n    },\n    color: {\n      primary: '#01579B',\n    },\n  },\n  'on-hold': {\n    background: {\n      primary: '#D1C4E9',\n    },\n    color: {\n      primary: '#311B92',\n    },\n  },\n  cancelled: {\n    background: {\n      primary: '#FFFFFF',\n    },\n    color: {\n      primary: '#616161',\n    },\n  },\n  completed: {\n    background: {\n      primary: '#C8E6C9',\n    },\n    color: {\n      primary: '#1B5E20',\n    },\n  },\n  'entered-in-error': {\n    background: {\n      primary: '#FFE0B2',\n    },\n    color: {\n      primary: '#E65100',\n    },\n  },\n  stopped: {\n    background: {\n      primary: '#FFCCBC',\n    },\n    color: {\n      primary: '#BF360C',\n    },\n  },\n  draft: {\n    background: {\n      primary: '#FFFFFF',\n    },\n    color: {\n      primary: '#616161',\n    },\n  },\n  unknown: {\n    background: {\n      primary: '#FFFFFF',\n    },\n    color: {\n      primary: '#616161',\n    },\n  },\n};\n\ninterface ERxContainerProps {\n  showHeader?: boolean;\n}\n\nexport const ERxContainer: FC<ERxContainerProps> = ({ showHeader = true }) => {\n  const { encounter, appointment, setPartialChartData, chartData, patient } = getSelectors(useAppointmentStore, [\n    'encounter',\n    'appointment',\n    'setPartialChartData',\n    'chartData',\n    'patient',\n  ]);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const { isLoading, isFetching, refetch } = useChartData({\n    encounterId: encounter.id || '',\n    requestedFields: {\n      prescribedMedications: {\n        _include: 'MedicationRequest:requester',\n        _tag: ERX_MEDICATION_META_TAG_CODE,\n      },\n    },\n    refetchInterval: 10000,\n    onSuccess: (data) => {\n      console.log('data', data);\n      const prescribedMedications = data.prescribedMedications;\n\n      setPartialChartData({\n        prescribedMedications,\n        practitioners: (data.practitioners || []).reduce(\n          (prev, curr) => {\n            const index = prev.findIndex((practitioner) => practitioner.id === curr.id);\n            if (index === -1) {\n              prev.push(curr);\n            } else {\n              prev[index] = curr;\n            }\n            return prev;\n          },\n          chartData?.practitioners || []\n        ),\n      });\n    },\n  });\n\n  const [isERXOpen, setIsERXOpen] = useState(false);\n  const [erxStatus, setERXStatus] = useState(ERXStatus.INITIAL);\n  const [openTooltip, setOpenTooltip] = useState(false);\n  const [cancellationLoading, setCancellationLoading] = useState<string[]>([]);\n  const { oystehr } = useApiClients();\n  const user = useEvolveUser();\n\n  const cancelPrescription = async (medRequestId: string, patientId: string): Promise<void> => {\n    if (!oystehr) {\n      enqueueSnackbar('An error occurred. Please try again.', { variant: 'error' });\n      return;\n    }\n    setCancellationLoading((prevState) => [...prevState, medRequestId]);\n    try {\n      await oystehr.erx.cancelPrescription({ medicationRequestId: medRequestId, patientId });\n    } catch (error) {\n      enqueueSnackbar('An error occurred while cancelling prescription. Please try again.', { variant: 'error' });\n      console.error(`Error cancelling prescription: ${error}`);\n    } finally {\n      await refetch();\n      setCancellationLoading((prevState) => prevState.filter((item) => item !== medRequestId));\n    }\n  };\n\n  const handleCloseTooltip = (): void => {\n    setOpenTooltip(false);\n  };\n\n  const handleOpenTooltip = (): void => {\n    setOpenTooltip(true);\n  };\n\n  // const handleSetup = (): void => {\n  //   window.open('https://docs.oystehr.com/ottehr/setup/prescriptions/', '_blank');\n  // };\n\n  const onNewOrderClick = async (): Promise<void> => {\n    // await oystehr?.erx.unenrollPractitioner({ practitionerId: user!.profileResource!.id! });\n    setIsERXOpen(true);\n  };\n\n  return (\n    <>\n      <Stack gap={1}>\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Stack direction=\"row\" gap={1} alignItems=\"center\">\n            {showHeader && <PageTitle label=\"eRX\" showIntakeNotesButton={false} />}\n            {(isLoading || isFetching || cancellationLoading.length > 0) && <CircularProgress size={16} />}\n          </Stack>\n          <Tooltip\n            placement=\"top\"\n            title=\"You don't have the necessary role to access ERX. Please contact your administrator.\"\n            open={openTooltip && !isReadOnly && !user?.hasRole([RoleType.Provider])}\n            onClose={handleCloseTooltip}\n            onOpen={handleOpenTooltip}\n          >\n            <Stack>\n              {isERXOpen && erxStatus !== ERXStatus.LOADING ? (\n                <RoundedButton\n                  disabled={isReadOnly || !user?.hasRole([RoleType.Provider])}\n                  variant=\"contained\"\n                  onClick={() => {\n                    setIsERXOpen(false);\n                  }}\n                >\n                  Close eRX\n                </RoundedButton>\n              ) : (\n                <RoundedButton\n                  disabled={isReadOnly || erxStatus === ERXStatus.LOADING || !user?.hasRole([RoleType.Provider])}\n                  variant=\"contained\"\n                  onClick={() => onNewOrderClick()}\n                  startIcon={erxStatus === ERXStatus.LOADING ? <CircularProgress size={16} /> : <AddIcon />}\n                >\n                  {erxStatus === ERXStatus.LOADING ? 'Loading eRx' : 'Open eRx'}\n                </RoundedButton>\n              )}\n            </Stack>\n          </Tooltip>\n        </Stack>\n        {/* {!erxEnvVariable && <CompleteConfiguration handleSetup={handleSetup} />} */}\n        {isERXOpen && (\n          <ERX\n            onStatusChanged={(status) => {\n              if (status === ERXStatus.ERROR) {\n                setIsERXOpen(false);\n              }\n              setERXStatus(status);\n            }}\n            showDefaultAlert={true}\n          />\n        )}\n        <div id=\"prescribe-dialog\" style={{ flex: '1 0 auto', display: 'flex' }} />\n\n        {chartData?.prescribedMedications && chartData.prescribedMedications.length > 0 && (\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead\n                sx={{\n                  '& .MuiTableCell-head': {\n                    fontWeight: 700,\n                  },\n                }}\n              >\n                <TableRow>\n                  <TableCell>Medication</TableCell>\n                  <TableCell>Patient instructions (SIG)</TableCell>\n                  {/*<TableCell>Dx</TableCell>*/}\n                  <TableCell>Visit</TableCell>\n                  <TableCell>Provider</TableCell>\n                  <TableCell>Order added</TableCell>\n                  {/*<TableCell>Pharmacy</TableCell>*/}\n                  <TableCell>Status</TableCell>\n                  {!isReadOnly && <TableCell>Action</TableCell>}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {chartData.prescribedMedications.map((row) => (\n                  <TableRow key={row.resourceId}>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.instructions}</TableCell>\n                    {/*<TableCell>Dx</TableCell>*/}\n                    <TableCell>\n                      {formatDateToMDYWithTime(appointment?.start)\n                        ?.split(' at ')\n                        ?.map((item) => (\n                          <Typography variant=\"body2\" key={item}>\n                            {item}\n                          </Typography>\n                        ))}\n                    </TableCell>\n                    <TableCell>\n                      {getPractitionerName(\n                        chartData.practitioners?.find((practitioner) => practitioner.id === row.provider)\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      {formatDateToMDYWithTime(row.added)\n                        ?.split(' at ')\n                        ?.map((item) => (\n                          <Typography variant=\"body2\" key={item}>\n                            {item}\n                          </Typography>\n                        ))}\n                    </TableCell>\n                    {/*<TableCell>Pharmacy</TableCell>*/}\n                    <TableCell>{getAppointmentStatusChip(row.status, medicationStatusMapper)}</TableCell>\n                    {!isReadOnly && patient?.id && (\n                      <TableCell>\n                        <LoadingButton\n                          loading={cancellationLoading.includes(row.resourceId!)}\n                          variant=\"text\"\n                          color=\"error\"\n                          onClick={() => cancelPrescription(row.resourceId!, patient.id!)}\n                          disabled={\n                            row.status === 'loading' ||\n                            row.status === 'completed' ||\n                            row.status === 'cancelled' ||\n                            cancellationLoading.includes(row.resourceId!)\n                          }\n                        >\n                          Cancel\n                        </LoadingButton>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Stack>\n    </>\n  );\n};\n"]}