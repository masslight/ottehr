{"version":3,"file":"PatientInstructionsCard.js","sourceRoot":"","sources":["PatientInstructionsCard.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+CAA8C;AAC9C,iDAAgD;AAChD,0CAA2D;AAC3D,uCAA4C;AAC5C,+BAA4C;AAC5C,+BAAuD;AACvD,sEAAqE;AACrE,sEAAqE;AACrE,kDAAmF;AACnF,wCAAgE;AAChE,wCAAsH;AACtH,2CAAkE;AAE3D,IAAM,uBAAuB,GAAO;IACnC,IAAA,KAA4B,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAA1C,SAAS,QAAA,EAAE,YAAY,QAAmB,CAAC;IAE5C,IAAA,KAAwC,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAtD,eAAe,QAAA,EAAE,kBAAkB,QAAmB,CAAC;IACxD,IAAA,KAAkD,IAAA,gBAAQ,EAAC,KAAK,CAAC,EAAhE,oBAAoB,QAAA,EAAE,uBAAuB,QAAmB,CAAC;IAElE,IAAA,KAAgC,IAAA,gBAAQ,EAAC,EAAE,CAAC,EAA3C,WAAW,QAAA,EAAE,cAAc,QAAgB,CAAC;IAE7C,IAAA,KAAiF,IAAA,iCAAyB,GAAE,EAAlG,sBAAsB,YAAA,EAAa,+BAA+B,eAAgC,CAAC;IAC7G,IAAA,KAA+D,IAAA,wBAAgB,GAAE,EAAvE,aAAa,YAAA,EAAa,sBAAsB,eAAuB,CAAC;IAChF,IAAQ,eAAe,GAAK,IAAA,0BAAkB,GAAE,OAAzB,CAA0B;IAEzD,IAAM,SAAS,GAAG,+BAA+B,IAAI,sBAAsB,CAAC;IAEpE,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IACzE,IAAA,KAAqC,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,EAAE,qBAAqB,CAAC,CAAC,EAA1G,SAAS,eAAA,EAAE,mBAAmB,yBAA4E,CAAC;IACnH,IAAM,YAAY,GAAG,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,KAAI,EAAE,CAAC;IAEnD,IAAM,YAAY,GAAG;QACnB,sBAAsB,CACpB,EAAE,IAAI,EAAE,WAAW,EAAE,EACrB;YACE,OAAO,EAAE;gBACP,IAAA,2BAAe,EAAC,oFAAoF,EAAE;oBACpG,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;YACL,CAAC;SACF,CACF,CAAC;QACF,KAAK,EAAE,CAAC;IACV,CAAC,CAAC;IAEF,IAAM,KAAK,GAAG;QACZ,IAAM,iBAAiB,mCAAO,YAAY,UAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAC,CAAC;QAEnE,mBAAmB,CAAC;YAClB,YAAY,EAAE,iBAAiB;SAChC,CAAC,CAAC;QACH,aAAa,CACX;YACE,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC;SACtC,EACD;YACE,SAAS,EAAE,UAAC,IAAI;;gBACd,IAAM,WAAW,GAAG,CAAC,CAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,0CAAE,YAAY,KAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,IAAI,WAAW,EAAE,CAAC;oBAChB,mBAAmB,CAAC;wBAClB,YAAY,EAAE,iBAAiB,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,EAAtC,CAAsC,CAAC;qBACtF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YACD,OAAO,EAAE;gBACP,IAAA,2BAAe,EAAC,2EAA2E,EAAE;oBAC3F,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;gBACH,mBAAmB,CAAC,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;gBACtC,cAAc,CAAC,WAAW,CAAC,CAAC;YAC9B,CAAC;SACF,CACF,CAAC;QAEF,cAAc,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,UAAC,KAAuB;QACvC,mBAAmB,CAAC;YAClB,YAAY,EAAE,YAAY,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,EAApC,CAAoC,CAAC;SAClF,CAAC,CAAC;QACH,eAAe,CACb;YACE,YAAY,EAAE,CAAC,KAAK,CAAC;SACtB,EACD;YACE,OAAO,EAAE;gBACP,IAAA,2BAAe,EAAC,6EAA6E,EAAE;oBAC7F,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;gBACH,mBAAmB,CAAC,EAAE,YAAY,cAAA,EAAE,CAAC,CAAC;YACxC,CAAC;SACF,CACF,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,CACL,EACE;MAAA,CAAC,0BAAa,CACZ,KAAK,CAAC,sBAAsB,CAC5B,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,QAAQ,CAAC,CAAC,cAAM,OAAA,YAAY,CAAC,UAAC,SAAS,IAAK,OAAA,CAAC,SAAS,EAAV,CAAU,CAAC,EAAvC,CAAuC,CAAC,CAExD;QAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAClE;UAAA,CAAC,CAAC,UAAU,IAAI,CACd,EACE;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,CAAC,CAC7D;gBAAA,CAAC,oBAAS,CACR,KAAK,CAAC,CAAC,WAAW,CAAC,CACnB,QAAQ,CAAC,CAAC,UAAC,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAChD,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,aAAa,CACnB,WAAW,CAAC,CAAC,8DAAuD,oBAAY,cAAW,CAAC,CAC5F,SAAS,CACT,SAAS,EAEX;gBAAA,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAO,CAAC,AAAD,EAAG,CAAC,CAChG;;gBACF,EAAE,6BAAa,CACf;gBAAA,CAAC,6BAAa,CACZ,OAAO,CAAC,CAAC,YAAY,CAAC,CACtB,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,SAAS,CAAC,CAC3C,SAAS,CAAC,CAAC,CAAC,cAAQ,CAAC,AAAD,EAAG,CAAC,CAExB;;gBACF,EAAE,6BAAa,CACjB;cAAA,EAAE,cAAG,CACL;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CACzD;gBAAA,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,CAAC,IAAI,CAAC,EAAxB,CAAwB,CAAC,CAAC,YAAY,EAAE,6BAAa,CACnF;gBAAA,CAAC,6BAAa,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,uBAAuB,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAAC,CAAC,oBAAY,CAAE,UAAS,EAAE,6BAAa,CACtG;cAAA,EAAE,cAAG,CACP;YAAA,GAAG,CACJ,CAED;;UAAA,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,CAC1B,CAAC,wBAAW,CACV,IAAI,CAAC,CAAC,YAAY,CAAC,CACnB,MAAM,CAAC,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,CAAC,UAAU,IAAI,KAAK,EAAzB,CAAyB,CAAC,CACpD,UAAU,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAAxE,CAAwE,CAAC,CAChG,aAAa,CAAC,CACZ,UAAU;gBACR,CAAC,CAAC,SAAS;gBACX,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,CAAC,6BAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,QAAQ,CAAC,KAAK,CAAC,EAAf,CAAe,CAAC,EAAG,EAAjF,CACjB,CAAC,CACD,OAAO,CACP,GAAG,CAAC,CAAC,CAAC,CAAC,EACP,CACH,CAED;;UAAA,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,IAAI,CAC1C,CAAC,qBAAU,CAAC,KAAK,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,qBAAU,CAAC,CAClF,CACH;QAAA,EAAE,cAAG,CACP;MAAA,EAAE,0BAAa,CAEf;;MAAA,CAAC,eAAe,IAAI,CAClB,CAAC,+CAAkC,CACjC,IAAI,CAAC,CAAC,eAAe,CAAC,CACtB,OAAO,CAAC,CAAC,cAAM,OAAA,kBAAkB,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CACzC,IAAI,CAAC,UAAU,CACf,QAAQ,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,cAAc,CAAC,KAAK,CAAC,IAAK,CAAC,EAA3B,CAA2B,CAAC,EACjD,CACH,CACD;MAAA,CAAC,oBAAoB,IAAI,CACvB,CAAC,+CAAkC,CACjC,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAC3B,OAAO,CAAC,CAAC,cAAM,OAAA,uBAAuB,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAC9C,IAAI,CAAC,cAAc,CACnB,QAAQ,CAAC,CAAC,UAAC,KAAK,IAAK,OAAA,cAAc,CAAC,KAAK,CAAC,IAAK,CAAC,EAA3B,CAA2B,CAAC,EACjD,CACH,CACH;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAhKW,QAAA,uBAAuB,2BAgKlC","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { Box, TextField, Typography } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport React, { FC, useState } from 'react';\nimport { CommunicationDTO, PROJECT_NAME } from 'utils';\nimport { RoundedButton } from '../../../../components/RoundedButton';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard, ActionsList, DeleteIconButton } from '../../../components';\nimport { useGetAppointmentAccessibility } from '../../../hooks';\nimport { useAppointmentStore, useDeleteChartData, useSaveChartData, useSavePatientInstruction } from '../../../state';\nimport { PatientInstructionsTemplatesDialog } from './components';\n\nexport const PatientInstructionsCard: FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const [myTemplatesOpen, setMyTemplatesOpen] = useState(false);\n  const [defaultTemplatesOpen, setDefaultTemplatesOpen] = useState(false);\n\n  const [instruction, setInstruction] = useState('');\n\n  const { mutate: savePatientInstruction, isLoading: isSavePatientInstructionLoading } = useSavePatientInstruction();\n  const { mutate: saveChartData, isLoading: isSaveChartDataLoading } = useSaveChartData();\n  const { mutate: deleteChartData } = useDeleteChartData();\n\n  const isLoading = isSavePatientInstructionLoading || isSaveChartDataLoading;\n\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const { chartData, setPartialChartData } = getSelectors(useAppointmentStore, ['chartData', 'setPartialChartData']);\n  const instructions = chartData?.instructions || [];\n\n  const onAddAndSave = (): void => {\n    savePatientInstruction(\n      { text: instruction },\n      {\n        onError: () => {\n          enqueueSnackbar('An error has occurred while saving patient instruction template. Please try again.', {\n            variant: 'error',\n          });\n        },\n      }\n    );\n    onAdd();\n  };\n\n  const onAdd = (): void => {\n    const localInstructions = [...instructions, { text: instruction }];\n\n    setPartialChartData({\n      instructions: localInstructions,\n    });\n    saveChartData(\n      {\n        instructions: [{ text: instruction }],\n      },\n      {\n        onSuccess: (data) => {\n          const instruction = (data?.chartData?.instructions || [])[0];\n          if (instruction) {\n            setPartialChartData({\n              instructions: localInstructions.map((item) => (item.resourceId ? item : instruction)),\n            });\n          }\n        },\n        onError: () => {\n          enqueueSnackbar('An error has occurred while adding patient instruction. Please try again.', {\n            variant: 'error',\n          });\n          setPartialChartData({ instructions });\n          setInstruction(instruction);\n        },\n      }\n    );\n\n    setInstruction('');\n  };\n\n  const onDelete = (value: CommunicationDTO): void => {\n    setPartialChartData({\n      instructions: instructions.filter((item) => item.resourceId !== value.resourceId),\n    });\n    deleteChartData(\n      {\n        instructions: [value],\n      },\n      {\n        onError: () => {\n          enqueueSnackbar('An error has occurred while deleting patient instruction. Please try again.', {\n            variant: 'error',\n          });\n          setPartialChartData({ instructions });\n        },\n      }\n    );\n  };\n\n  return (\n    <>\n      <AccordionCard\n        label=\"Patient instructions\"\n        collapsed={collapsed}\n        onSwitch={() => setCollapsed((prevState) => !prevState)}\n      >\n        <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n          {!isReadOnly && (\n            <>\n              <Box sx={{ display: 'flex', gap: 2, alignItems: 'flex-start' }}>\n                <TextField\n                  value={instruction}\n                  onChange={(e) => setInstruction(e.target.value)}\n                  size=\"small\"\n                  label=\"Instruction\"\n                  placeholder={`Enter a new instruction of select from own saved or ${PROJECT_NAME} template`}\n                  multiline\n                  fullWidth\n                />\n                <RoundedButton onClick={onAdd} disabled={!instruction.trim() || isLoading} startIcon={<AddIcon />}>\n                  Add\n                </RoundedButton>\n                <RoundedButton\n                  onClick={onAddAndSave}\n                  disabled={!instruction.trim() || isLoading}\n                  startIcon={<DoneIcon />}\n                >\n                  Add & Save\n                </RoundedButton>\n              </Box>\n              <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n                <RoundedButton onClick={() => setMyTemplatesOpen(true)}>My templates</RoundedButton>\n                <RoundedButton onClick={() => setDefaultTemplatesOpen(true)}>{PROJECT_NAME} templates</RoundedButton>\n              </Box>\n            </>\n          )}\n\n          {instructions.length > 0 && (\n            <ActionsList\n              data={instructions}\n              getKey={(value, index) => value.resourceId || index}\n              renderItem={(value) => <Typography style={{ whiteSpace: 'pre-line' }}>{value.text}</Typography>}\n              renderActions={\n                isReadOnly\n                  ? undefined\n                  : (value) => <DeleteIconButton disabled={!value.resourceId} onClick={() => onDelete(value)} />\n              }\n              divider\n              gap={1}\n            />\n          )}\n\n          {instructions.length === 0 && isReadOnly && (\n            <Typography color=\"secondary.light\">No patient instructions provided</Typography>\n          )}\n        </Box>\n      </AccordionCard>\n\n      {myTemplatesOpen && (\n        <PatientInstructionsTemplatesDialog\n          open={myTemplatesOpen}\n          onClose={() => setMyTemplatesOpen(false)}\n          type=\"provider\"\n          onSelect={(value) => setInstruction(value.text!)}\n        />\n      )}\n      {defaultTemplatesOpen && (\n        <PatientInstructionsTemplatesDialog\n          open={defaultTemplatesOpen}\n          onClose={() => setDefaultTemplatesOpen(false)}\n          type=\"organization\"\n          onSelect={(value) => setInstruction(value.text!)}\n        />\n      )}\n    </>\n  );\n};\n"]}