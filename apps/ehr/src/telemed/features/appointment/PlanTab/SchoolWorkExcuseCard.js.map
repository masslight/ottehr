{"version":3,"file":"SchoolWorkExcuseCard.js","sourceRoot":"","sources":["SchoolWorkExcuseCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Divider, Grid, Typography } from '@mui/material';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useState } from 'react';\nimport { SCHOOL_WORK_NOTE } from 'utils';\nimport { getStringAnswer } from '../../../../features/css-module/parser';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard, DoubleColumnContainer } from '../../../components';\nimport {\n  useExcusePresignedFiles,\n  useGetAppointmentAccessibility,\n  usePatientProvidedExcusePresignedFiles,\n} from '../../../hooks';\nimport { useAppointmentStore, useDeleteChartData, useSaveChartData } from '../../../state';\nimport { ExcuseCard, ExcuseLink, GenerateExcuseDialog } from './components';\n\nexport const SchoolWorkExcuseCard: FC = () => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const [generateWorkTemplateOpen, setGenerateWorkTemplateOpen] = useState(false);\n  const [generateWorkFreeOpen, setGenerateWorkFreeOpen] = useState(false);\n  const [generateSchoolTemplateOpen, setGenerateSchoolTemplateOpen] = useState(false);\n  const [generateSchoolFreeOpen, setGenerateSchoolFreeOpen] = useState(false);\n\n  const { mutate: saveChartData, isLoading: isSaveLoading } = useSaveChartData();\n  const { mutate: deleteChartData, isLoading: isDeleteLoading } = useDeleteChartData();\n  const isLoading = isSaveLoading || isDeleteLoading;\n\n  const { chartData, questionnaireResponse, setPartialChartData } = getSelectors(useAppointmentStore, [\n    'chartData',\n    'questionnaireResponse',\n    'setPartialChartData',\n  ]);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n  const presignedFiles = useExcusePresignedFiles(chartData?.schoolWorkNotes);\n  const { patientSchoolPresignedUrl, patientWorkPresignedUrl } = usePatientProvidedExcusePresignedFiles();\n\n  const workExcuse = presignedFiles.find((file) => file.type === 'work');\n  const schoolExcuse = presignedFiles.find((file) => file.type === 'school');\n\n  const onDelete = (id: string): void => {\n    const schoolWorkNotes = chartData?.schoolWorkNotes || [];\n    const note = schoolWorkNotes.find((note) => note.id === id)!;\n    deleteChartData(\n      {\n        schoolWorkNotes: [note],\n      },\n      {\n        onError: () => {\n          enqueueSnackbar('An error has occurred while deleting excuse. Please try again.', {\n            variant: 'error',\n          });\n          setPartialChartData({\n            schoolWorkNotes: schoolWorkNotes,\n          });\n        },\n      }\n    );\n    setPartialChartData({\n      schoolWorkNotes: schoolWorkNotes.filter((note) => note.id !== id),\n    });\n  };\n\n  const onPublish = (id: string): void => {\n    const schoolWorkNotes = chartData?.schoolWorkNotes || [];\n    const note = schoolWorkNotes.find((note) => note.id === id)!;\n\n    saveChartData(\n      {\n        schoolWorkNotes: [{ id: note.id, published: true }],\n      },\n      {\n        onSuccess: () => {\n          setPartialChartData({\n            schoolWorkNotes: schoolWorkNotes.map((note) => (note.id === id ? { ...note, published: true } : note)),\n          });\n        },\n        onError: () => {\n          enqueueSnackbar('An error has occurred while publishing excuse. Please try again.', {\n            variant: 'error',\n          });\n        },\n      }\n    );\n  };\n\n  const schoolWorkNoteChoice = getStringAnswer(questionnaireResponse, `${SCHOOL_WORK_NOTE}-choice`);\n\n  let title = '';\n  switch (schoolWorkNoteChoice) {\n    case 'School only':\n      title = 'School';\n      break;\n    case 'Work only':\n      title = 'Work';\n      break;\n    case 'Both school and work notes':\n      title = 'School & Work';\n      break;\n    default:\n      // case 'Neither'\n      title = 'Neither';\n      break;\n  }\n\n  const numTemplatesUploaded = +Boolean(patientSchoolPresignedUrl) + +Boolean(patientWorkPresignedUrl);\n\n  return (\n    <>\n      <AccordionCard\n        label=\"School / Work Excuse\"\n        collapsed={collapsed}\n        onSwitch={() => setCollapsed((prevState) => !prevState)}\n      >\n        <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <Box>\n            <Typography display=\"inline\">Patient requested excuse from:</Typography>&nbsp;\n            <Typography display=\"inline\" fontWeight={500}>\n              {title}\n            </Typography>\n          </Box>\n          {numTemplatesUploaded !== 0 && (\n            <>\n              <Typography>{`Attached template${numTemplatesUploaded === 2 ? 's' : ''}:`}</Typography>\n              <Grid container columnSpacing={3} sx={{ position: 'relative' }}>\n                {patientSchoolPresignedUrl && (\n                  <Grid item xs={6}>\n                    {/* TODO extension should match extension uploaded */}\n                    <ExcuseLink label={`School excuse note template${'.pdf'}`} to={patientSchoolPresignedUrl} />\n                  </Grid>\n                )}\n                {patientWorkPresignedUrl && (\n                  <Grid item xs={6}>\n                    {/* TODO extension should match extension uploaded */}\n                    <ExcuseLink label={`Work excuse note template${'.pdf'}`} to={patientWorkPresignedUrl} />\n                  </Grid>\n                )}\n              </Grid>\n            </>\n          )}\n        </Box>\n\n        <Divider />\n\n        <DoubleColumnContainer\n          leftColumn={\n            <ExcuseCard\n              label=\"School excuse\"\n              excuse={schoolExcuse}\n              onDelete={onDelete}\n              onPublish={onPublish}\n              isLoading={isLoading || isReadOnly}\n              generateTemplateOpen={setGenerateSchoolTemplateOpen}\n              generateFreeOpen={setGenerateSchoolFreeOpen}\n              disabled={isReadOnly}\n            />\n          }\n          rightColumn={\n            <ExcuseCard\n              label=\"Work excuse\"\n              excuse={workExcuse}\n              onDelete={onDelete}\n              onPublish={onPublish}\n              isLoading={isLoading}\n              generateTemplateOpen={setGenerateWorkTemplateOpen}\n              generateFreeOpen={setGenerateWorkFreeOpen}\n              disabled={isReadOnly}\n            />\n          }\n          divider\n          padding\n        />\n      </AccordionCard>\n\n      {generateWorkTemplateOpen && (\n        <GenerateExcuseDialog\n          type=\"workTemplate\"\n          open={generateWorkTemplateOpen}\n          onClose={() => setGenerateWorkTemplateOpen(false)}\n          generate={saveChartData}\n        />\n      )}\n      {generateWorkFreeOpen && (\n        <GenerateExcuseDialog\n          type=\"workFree\"\n          open={generateWorkFreeOpen}\n          onClose={() => setGenerateWorkFreeOpen(false)}\n          generate={saveChartData}\n        />\n      )}\n      {generateSchoolTemplateOpen && (\n        <GenerateExcuseDialog\n          type=\"schoolTemplate\"\n          open={generateSchoolTemplateOpen}\n          onClose={() => setGenerateSchoolTemplateOpen(false)}\n          generate={saveChartData}\n        />\n      )}\n      {generateSchoolFreeOpen && (\n        <GenerateExcuseDialog\n          type=\"schoolFree\"\n          open={generateSchoolFreeOpen}\n          onClose={() => setGenerateSchoolFreeOpen(false)}\n          generate={saveChartData}\n        />\n      )}\n    </>\n  );\n};\n"]}