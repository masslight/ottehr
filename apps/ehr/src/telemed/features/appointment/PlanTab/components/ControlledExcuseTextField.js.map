{"version":3,"file":"ControlledExcuseTextField.js","sourceRoot":"","sources":["ControlledExcuseTextField.tsx"],"names":[],"mappings":";;;AAAA,0CAA0C;AAC1C,+BAAkC;AAClC,mDAA6D;AAatD,IAAM,yBAAyB,GAAuC,UAAC,KAAK;IACzE,IAAA,IAAI,GAAmE,KAAK,KAAxE,EAAE,QAAQ,GAAyD,KAAK,SAA9D,EAAE,WAAW,GAA4C,KAAK,YAAjD,EAAE,KAAK,GAAqC,KAAK,MAA1C,EAAE,SAAS,GAA0B,KAAK,UAA/B,EAAE,SAAS,GAAe,KAAK,UAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAE7E,IAAA,OAAO,GAAK,IAAA,gCAAc,GAAE,QAArB,CAAsB;IAErC,OAAO,CACL,CAAC,4BAAU,CACT,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,KAAK,CAAC,CAAC,EAAE,QAAQ,UAAA,EAAE,QAAQ,UAAA,EAAE,CAAC,CAC9B,MAAM,CAAC,CAAC,UAAC,EAAqD;gBAAnD,aAA0B,EAAjB,QAAQ,cAAA,EAAE,KAAK,WAAA,EAAkB,KAAK,sBAAA;YAAS,OAAA,CACjE,CAAC,oBAAS,CACR,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CACf,UAAU,CAAC,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,CAC3B,WAAW,CAAC,CAAC,WAAW,CAAC,CACzB,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,QAAQ,CAAC,CAAC,QAAQ,CAAC,CACnB,SAAS,CAAC,CAAC,SAAS,CAAC,CACrB,SAAS,CAAC,CAAC,SAAS,CAAC,EACrB,CACH;QAZkE,CAYlE,CAAC,EACF,CACH,CAAC;AACJ,CAAC,CAAC;AAzBW,QAAA,yBAAyB,6BAyBpC","sourcesContent":["import { TextField } from '@mui/material';\nimport React, { FC } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { NoteExcuseFields } from '../../../../utils';\n\ntype ControlledExcuseTextFieldProps = {\n  name: NoteExcuseFields;\n  validate?: (value: string) => string | undefined;\n  placeholder?: string;\n  label?: string;\n  fullWidth?: boolean;\n  multiline?: boolean;\n  required?: boolean;\n};\n\nexport const ControlledExcuseTextField: FC<ControlledExcuseTextFieldProps> = (props) => {\n  const { name, validate, placeholder, label, fullWidth, multiline, required } = props;\n\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      rules={{ validate, required }}\n      render={({ field: { onChange, value }, fieldState: { error } }) => (\n        <TextField\n          error={!!error}\n          helperText={error?.message}\n          placeholder={placeholder}\n          label={label}\n          size=\"small\"\n          value={value}\n          onChange={onChange}\n          fullWidth={fullWidth}\n          multiline={multiline}\n        />\n      )}\n    />\n  );\n};\n"]}