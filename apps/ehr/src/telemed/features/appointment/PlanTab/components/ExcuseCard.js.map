{"version":3,"file":"ExcuseCard.js","sourceRoot":"","sources":["ExcuseCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { Box, Popover, Typography } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport React, { FC, useState } from 'react';\nimport { SchoolWorkNoteExcuseDocFileDTO } from 'utils';\nimport { RoundedButton } from '../../../../../components/RoundedButton';\nimport { UppercaseCaptionTypography } from '../../../../components';\nimport { ExcuseLink } from './ExcuseLink';\n\ntype ExcuseCardProps = {\n  label: string;\n  excuse?: SchoolWorkNoteExcuseDocFileDTO & { presignedUrl?: string };\n  isLoading: boolean;\n  onDelete: (id: string) => void;\n  onPublish: (id: string) => void;\n  generateTemplateOpen: (value: boolean) => void;\n  generateFreeOpen: (value: boolean) => void;\n  disabled?: boolean;\n};\n\nexport const ExcuseCard: FC<ExcuseCardProps> = (props) => {\n  const { label, excuse, isLoading, onDelete, onPublish, generateTemplateOpen, generateFreeOpen, disabled } = props;\n\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLElement>): void => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = (): void => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n      <UppercaseCaptionTypography>{label}</UppercaseCaptionTypography>\n\n      {excuse && (\n        <>\n          <ExcuseLink\n            label={excuse.name!}\n            to={excuse.presignedUrl!}\n            onDelete={disabled ? undefined : () => onDelete(excuse.id)}\n            disabled={isLoading}\n          />\n          <Typography>\n            Generated: {DateTime.fromISO(excuse.date!).toLocaleString(DateTime.DATETIME_SHORT, { locale: 'en-us' })}\n          </Typography>\n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center', justifyContent: 'end' }}>\n            <Box\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n              sx={{ display: 'flex', alignItems: 'center' }}\n            >\n              <InfoOutlinedIcon color=\"primary\" />\n            </Box>\n            <RoundedButton\n              variant=\"contained\"\n              disabled={excuse.published || isLoading || disabled}\n              onClick={() => onPublish(excuse.id)}\n            >\n              {excuse.published ? 'Published' : 'Publish now'}\n            </RoundedButton>\n          </Box>\n          <Popover\n            sx={{\n              pointerEvents: 'none',\n            }}\n            open={open}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'center',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            onClose={handlePopoverClose}\n            disableRestoreFocus\n          >\n            <Typography sx={{ p: 2, width: '300px' }}>\n              Optional - you can publish note now or it will publish automatically after you review and sign visit note\n            </Typography>\n          </Popover>\n        </>\n      )}\n\n      {!excuse && (\n        <Box sx={{ display: 'flex', gap: 2 }}>\n          <RoundedButton onClick={() => generateTemplateOpen(true)} disabled={isLoading || disabled}>\n            Generate to the template\n          </RoundedButton>\n          <RoundedButton onClick={() => generateFreeOpen(true)} disabled={isLoading || disabled}>\n            Free format note\n          </RoundedButton>\n        </Box>\n      )}\n    </Box>\n  );\n};\n"]}