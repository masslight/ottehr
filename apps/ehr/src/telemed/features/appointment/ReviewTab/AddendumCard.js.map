{"version":3,"file":"AddendumCard.js","sourceRoot":"","sources":["AddendumCard.tsx"],"names":[],"mappings":";;;AAAA,0CAAiE;AAEjE,mDAAsD;AACtD,sEAAqE;AACrE,kDAAoD;AACpD,wCAAuD;AACvD,wCAAqD;AAE9C,IAAM,YAAY,GAAO;;IACtB,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IAEvE,IAAM,YAAY,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,0CAAE,IAAI,CAAC;IACnD,IAAM,OAAO,GAAG,IAAA,yBAAO,EAAC;QACtB,aAAa,EAAE;YACb,YAAY,EAAE,YAAY,IAAI,EAAE;SACjC;KACF,CAAC,CAAC;IACK,IAAA,OAAO,GAAK,OAAO,QAAZ,CAAa;IAEtB,IAAA,KAA+B,IAAA,6BAAqB,EAAC,cAAc,CAAC,EAAlE,aAAa,mBAAA,EAAE,SAAS,eAA0C,CAAC;IAE3E,OAAO,CACL,CAAC,0BAAa,CAAC,KAAK,CAAC,UAAU,CAC7B;MAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CACvF;QAAA,CAAC,4BAAU,CACT,IAAI,CAAC,cAAc,CACnB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,MAAM,CAAC,CAAC,UAAC,EAA8B;gBAA5B,aAA0B,EAAjB,KAAK,WAAA,EAAE,QAAQ,cAAA;YAAS,OAAA,CAC1C,CAAC,oBAAS,CACR,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,QAAQ,CAAC,CAAC,UAAC,CAAC;oBACV,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACZ,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,CAAC,CAAC,CACF,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,MAAM,CACZ,SAAS,CACT,SAAS,CACT,UAAU,CAAC,CAAC;oBACV,YAAY,EAAE,SAAS,IAAI,CACzB,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,CAAC,CAC3E;oBAAA,CAAC,2BAAgB,CAAC,IAAI,CAAC,MAAM,EAC/B;kBAAA,EAAE,cAAG,CAAC,CACP;iBACF,CAAC,EACF,CACH;QAnB2C,CAmB3C,CAAC,EAEN;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,0BAAa,CAAC,CACjB,CAAC;AACJ,CAAC,CAAC;AA3CW,QAAA,YAAY,gBA2CvB","sourcesContent":["import { Box, CircularProgress, TextField } from '@mui/material';\nimport { FC } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard } from '../../../components';\nimport { useDebounceNotesField } from '../../../hooks';\nimport { useAppointmentStore } from '../../../state';\n\nexport const AddendumCard: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n\n  const addendumNote = chartData?.addendumNote?.text;\n  const methods = useForm({\n    defaultValues: {\n      addendumNote: addendumNote || '',\n    },\n  });\n  const { control } = methods;\n\n  const { onValueChange, isLoading } = useDebounceNotesField('addendumNote');\n\n  return (\n    <AccordionCard label=\"Addendum\">\n      <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', gap: 2, alignItems: 'start' }}>\n        <Controller\n          name=\"addendumNote\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <TextField\n              value={value}\n              onChange={(e) => {\n                onChange(e);\n                onValueChange(e.target.value);\n              }}\n              size=\"small\"\n              label=\"Note\"\n              fullWidth\n              multiline\n              InputProps={{\n                endAdornment: isLoading && (\n                  <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                    <CircularProgress size=\"20px\" />\n                  </Box>\n                ),\n              }}\n            />\n          )}\n        />\n      </Box>\n    </AccordionCard>\n  );\n};\n"]}