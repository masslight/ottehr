{"version":3,"file":"VisitNoteCard.js","sourceRoot":"","sources":["VisitNoteCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC } from 'react';\nimport { getSpentTime } from 'utils';\nimport { ADDITIONAL_QUESTIONS } from '../../../../constants';\nimport { dataTestIds } from '../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { AccordionCard, SectionList } from '../../../components';\nimport { usePatientInstructionsVisibility } from '../../../hooks';\nimport { useAppointmentStore } from '../../../state';\nimport {\n  AdditionalQuestionsContainer,\n  AllergiesContainer,\n  AssessmentContainer,\n  ChiefComplaintContainer,\n  CPTCodesContainer,\n  EMCodeContainer,\n  ExaminationContainer,\n  MedicalConditionsContainer,\n  MedicalDecisionMakingContainer,\n  MedicationsContainer,\n  PatientInformationContainer,\n  PatientInstructionsContainer,\n  PrescribedMedicationsContainer,\n  PrivacyPolicyAcknowledgement,\n  ReviewOfSystemsContainer,\n  SurgicalHistoryContainer,\n  VisitDetailsContainer,\n} from './components';\n\nexport const VisitNoteCard: FC = () => {\n  const { encounter, chartData } = getSelectors(useAppointmentStore, ['encounter', 'chartData']);\n\n  const chiefComplaint = chartData?.chiefComplaint?.text;\n  const spentTime = getSpentTime(encounter.statusHistory);\n  const ros = chartData?.ros?.text;\n  const diagnoses = chartData?.diagnosis;\n  const medicalDecision = chartData?.medicalDecision?.text;\n  const emCode = chartData?.emCode;\n  const cptCodes = chartData?.cptCodes;\n  const prescriptions = chartData?.prescribedMedications;\n\n  const showChiefComplaint = !!((chiefComplaint && chiefComplaint.length > 0) || (spentTime && spentTime.length > 0));\n  const showReviewOfSystems = !!(ros && ros.length > 0);\n  const showAdditionalQuestions = ADDITIONAL_QUESTIONS.some((question) => {\n    const value = chartData?.observations?.find((observation) => observation.field === question.field)?.value;\n    return value === true || value === false;\n  });\n  const showAssessment = !!(diagnoses && diagnoses.length > 0);\n  const showMedicalDecisionMaking = !!(medicalDecision && medicalDecision.length > 0);\n  const showEmCode = !!emCode;\n  const showCptCodes = !!(cptCodes && cptCodes.length > 0);\n  const showPrescribedMedications = !!(prescriptions && prescriptions.length > 0);\n  const { showPatientInstructions } = usePatientInstructionsVisibility();\n\n  const sections = [\n    <PatientInformationContainer />,\n    <VisitDetailsContainer />,\n    showChiefComplaint && <ChiefComplaintContainer />,\n    showReviewOfSystems && <ReviewOfSystemsContainer />,\n    <MedicationsContainer />,\n    <AllergiesContainer />,\n    <MedicalConditionsContainer />,\n    <SurgicalHistoryContainer />,\n    showAdditionalQuestions && <AdditionalQuestionsContainer />,\n    <ExaminationContainer />,\n    showAssessment && <AssessmentContainer />,\n    showMedicalDecisionMaking && <MedicalDecisionMakingContainer />,\n    showEmCode && <EMCodeContainer />,\n    showCptCodes && <CPTCodesContainer />,\n    showPrescribedMedications && <PrescribedMedicationsContainer />,\n    showPatientInstructions && <PatientInstructionsContainer />,\n    <PrivacyPolicyAcknowledgement />,\n  ].filter(Boolean);\n\n  return (\n    <AccordionCard label=\"Visit note\" dataTestId={dataTestIds.progressNotePage.visitNoteCard}>\n      <SectionList sections={sections} sx={{ p: 2 }} />\n    </AccordionCard>\n  );\n};\n"]}