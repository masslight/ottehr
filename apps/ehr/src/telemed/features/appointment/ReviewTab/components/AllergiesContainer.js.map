{"version":3,"file":"AllergiesContainer.js","sourceRoot":"","sources":["AllergiesContainer.tsx"],"names":[],"mappings":";;;AAAA,0CAA0D;AAG1D,wEAAqE;AACrE,yEAAwE;AACxE,2CAAwD;AACxD,kFAAiF;AAE1E,IAAM,kBAAkB,GAA8B,UAAC,EAAS;;QAAP,KAAK,WAAA;IAC3D,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IACvE,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,SAAS,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,SAAS,0CAAE,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,OAAO,KAAK,IAAI,EAAxB,CAAwB,CAAC,CAAC;IAEtF,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAC1E,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,gCAAgC,CAAC,CAEzE;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC3C;;MACF,EAAE,qBAAU,CACZ;MAAA,CAAC,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,EAAC,CAAC,CAAC,CACnB,SAAS,CAAC,GAAG,CAAC,UAAC,OAAO,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAAhE,CAAgE,CAAC,CAC7F,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,kBAAkB,EAAE,qBAAU,CAAC,CACjF,CAED;;MAAA,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAC5B,EACE;UAAA,CAAC,iCAAe,CAAC,eAAe,EAAE,iCAAe,CACjD;UAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC9D;YAAA,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAA1D,CAA0D,CAAC,CACnF;UAAA,EAAE,cAAG,CACP;QAAA,GAAG,CACJ,CACH;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,kBAAkB,sBA8B7B","sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { NoteDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../state';\nimport { AssessmentTitle } from '../../AssessmentTab/components/AssessmentTitle';\n\nexport const AllergiesContainer: FC<{ notes?: NoteDTO[] }> = ({ notes }) => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const theme = useTheme();\n\n  const allergies = chartData?.allergies?.filter((allergy) => allergy.current === true);\n\n  return (\n    <Box\n      sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}\n      data-testid={dataTestIds.telemedEhrFlow.reviewTabKnownAllergiesContainer}\n    >\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Allergies\n      </Typography>\n      {allergies?.length ? (\n        allergies.map((allergy) => <Typography key={allergy.resourceId}>{allergy.name}</Typography>)\n      ) : (\n        <Typography color={theme.palette.text.secondary}>No known allergies</Typography>\n      )}\n\n      {notes && notes.length > 0 && (\n        <>\n          <AssessmentTitle>Allergies notes</AssessmentTitle>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            {notes?.map((note) => <Typography key={note.resourceId}>{note.text}</Typography>)}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n"]}