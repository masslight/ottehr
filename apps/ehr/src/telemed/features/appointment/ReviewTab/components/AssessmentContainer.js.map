{"version":3,"file":"AssessmentContainer.js","sourceRoot":"","sources":["AssessmentContainer.tsx"],"names":[],"mappings":";;;AAAA,0CAAgD;AAEhD,yEAAwE;AACxE,2CAAwD;AACxD,qDAAsD;AAE/C,IAAM,mBAAmB,GAAO;IAC7B,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IAEvE,IAAM,SAAS,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,SAAS,CAAC;IACvC,IAAM,gBAAgB,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,SAAS,EAAd,CAAc,CAAC,CAAC;IACnE,IAAM,cAAc,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,SAAS,EAAf,CAAe,CAAC,CAAC;IAEpE,OAAO,CACL,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAC3E;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC3C;;MACF,EAAE,qBAAU,CACZ;MAAA,EACE;QAAA,CAAC,gBAAgB,IAAI,CACnB,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC9D;YAAA,CAAC,+BAAe,CAAC,QAAQ,EAAE,+BAAe,CAC1C;YAAA,CAAC,qBAAU,CACT;cAAA,CAAC,gBAAgB,CAAC,OAAO,CAAE,CAAA,CAAC,gBAAgB,CAAC,IAAI,CACnD;YAAA,EAAE,qBAAU,CACd;UAAA,EAAE,cAAG,CAAC,CACP,CACD;QAAA,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,CAC9C,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC9D;YAAA,CAAC,+BAAe,CAAC,UAAU,EAAE,+BAAe,CAC5C;YAAA,CAAC,cAAc,CAAC,GAAG,CAAC,UAAC,SAAS,IAAK,OAAA,CACjC,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CACpC;gBAAA,CAAC,SAAS,CAAC,OAAO,CAAE,CAAA,CAAC,SAAS,CAAC,IAAI,CACrC;cAAA,EAAE,qBAAU,CAAC,CACd,EAJkC,CAIlC,CAAC,CACJ;UAAA,EAAE,cAAG,CAAC,CACP,CACH;MAAA,GACF;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,mBAAmB,uBAkC9B","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../state';\nimport { AssessmentTitle } from '../../AssessmentTab';\n\nexport const AssessmentContainer: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n\n  const diagnoses = chartData?.diagnosis;\n  const primaryDiagnosis = diagnoses?.find((item) => item.isPrimary);\n  const otherDiagnoses = diagnoses?.filter((item) => !item.isPrimary);\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, width: '100%' }}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Assessment\n      </Typography>\n      <>\n        {primaryDiagnosis && (\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            <AssessmentTitle>Primary:</AssessmentTitle>\n            <Typography>\n              {primaryDiagnosis.display} {primaryDiagnosis.code}\n            </Typography>\n          </Box>\n        )}\n        {otherDiagnoses && otherDiagnoses.length > 0 && (\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            <AssessmentTitle>Secondary:</AssessmentTitle>\n            {otherDiagnoses.map((diagnosis) => (\n              <Typography key={diagnosis.resourceId}>\n                {diagnosis.display} {diagnosis.code}\n              </Typography>\n            ))}\n          </Box>\n        )}\n      </>\n    </Box>\n  );\n};\n"]}