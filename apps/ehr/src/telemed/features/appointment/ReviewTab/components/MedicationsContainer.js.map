{"version":3,"file":"MedicationsContainer.js","sourceRoot":"","sources":["MedicationsContainer.tsx"],"names":[],"mappings":";;;AAAA,0CAA0D;AAG1D,wEAAqE;AACrE,yEAAwE;AACxE,2CAAwD;AACxD,kFAAiF;AAE1E,IAAM,oBAAoB,GAA8B,UAAC,EAAS;QAAP,KAAK,WAAA;IAC7D,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IACvE,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,IAAM,WAAW,GAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,CAAC;IAE3C,OAAO,CACL,CAAC,cAAG,CACF,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAC1E,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,6BAA6B,CAAC,CAEtE;MAAA,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAC3C;;MACF,EAAE,qBAAU,CACZ;MAAA,CAAC,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,EAAC,CAAC,CAAC,CACrB,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAAtE,CAAsE,CAAC,CACxG,CAAC,CAAC,CAAC,CACF,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,qBAAU,CAAC,CACrF,CAED;;MAAA,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAC5B,EACE;UAAA,CAAC,iCAAe,CAAC,iBAAiB,EAAE,iCAAe,CACnD;UAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC9D;YAAA,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,qBAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,qBAAU,CAAC,EAA1D,CAA0D,CAAC,CACnF;UAAA,EAAE,cAAG,CACP;QAAA,GAAG,CACJ,CACH;IAAA,EAAE,cAAG,CAAC,CACP,CAAC;AACJ,CAAC,CAAC;AA9BW,QAAA,oBAAoB,wBA8B/B","sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\nimport { FC } from 'react';\nimport { NoteDTO } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../state';\nimport { AssessmentTitle } from '../../AssessmentTab/components/AssessmentTitle';\n\nexport const MedicationsContainer: FC<{ notes?: NoteDTO[] }> = ({ notes }) => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const theme = useTheme();\n\n  const medications = chartData?.medications;\n\n  return (\n    <Box\n      sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}\n      data-testid={dataTestIds.telemedEhrFlow.reviewTabMedicationsContainer}\n    >\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Medications\n      </Typography>\n      {medications?.length ? (\n        medications.map((medication) => <Typography key={medication.resourceId}>{medication.name}</Typography>)\n      ) : (\n        <Typography color={theme.palette.text.secondary}>No current medications</Typography>\n      )}\n\n      {notes && notes.length > 0 && (\n        <>\n          <AssessmentTitle>Medications notes</AssessmentTitle>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n            {notes?.map((note) => <Typography key={note.resourceId}>{note.text}</Typography>)}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n"]}