{"version":3,"file":"PatientInstructionsContainer.js","sourceRoot":"","sources":["PatientInstructionsContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Link, Typography } from '@mui/material';\nimport { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  dispositionCheckboxOptions,\n  mapDispositionTypeToLabel,\n  NOTHING_TO_EAT_OR_DRINK_FIELD,\n  NOTHING_TO_EAT_OR_DRINK_LABEL,\n} from 'utils';\nimport { followUpInOptions } from 'utils';\nimport { dataTestIds } from '../../../../../constants/data-test-ids';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { SectionList } from '../../../../components';\nimport { useExcusePresignedFiles, usePatientInstructionsVisibility } from '../../../../hooks';\nimport { useAppointmentStore } from '../../../../state';\nimport { AssessmentTitle } from '../../AssessmentTab';\n\nexport const PatientInstructionsContainer: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n\n  const instructions = chartData?.instructions;\n  const disposition = chartData?.disposition;\n  const schoolWorkExcuses = useExcusePresignedFiles(chartData?.schoolWorkNotes);\n\n  const { showInstructions, showDischargeInstructions, showFollowUp, showSchoolWorkExcuse } =\n    usePatientInstructionsVisibility();\n\n  const sections = [\n    showInstructions && (\n      <>\n        <AssessmentTitle>Patient instructions</AssessmentTitle>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          {instructions?.map((instruction) => (\n            <Typography key={instruction.resourceId} style={{ whiteSpace: 'pre-line' }}>\n              {instruction.text}\n            </Typography>\n          ))}\n        </Box>\n      </>\n    ),\n    showDischargeInstructions && (\n      <>\n        <AssessmentTitle>\n          Disposition - {disposition?.type ? mapDispositionTypeToLabel[disposition.type] : 'Not provided'}\n        </AssessmentTitle>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          {disposition?.note && <Typography>{disposition?.note}</Typography>}\n          {disposition?.[NOTHING_TO_EAT_OR_DRINK_FIELD] && <Typography>{NOTHING_TO_EAT_OR_DRINK_LABEL}</Typography>}\n          {disposition?.labService && disposition.labService.length > 0 && (\n            <Typography>Lab Services: {disposition.labService.join(', ')}</Typography>\n          )}\n\n          {disposition?.virusTest && disposition.virusTest.length > 0 && (\n            <Typography>Virus Tests: {disposition.virusTest.join(', ')}</Typography>\n          )}\n\n          {typeof disposition?.followUpIn === 'number' && (\n            <Typography>\n              Follow-up visit{' '}\n              {disposition.followUpIn === 0\n                ? followUpInOptions.find((option) => option.value === disposition.followUpIn)?.label\n                : `in ${followUpInOptions.find((option) => option.value === disposition.followUpIn)?.label}`}\n            </Typography>\n          )}\n\n          {disposition?.reason && disposition.reason.length > 0 && (\n            <Typography>Reason for transfer: {disposition.reason}</Typography>\n          )}\n        </Box>\n      </>\n    ),\n    showFollowUp && (\n      <>\n        <AssessmentTitle>Subspecialty follow-up</AssessmentTitle>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          {disposition?.followUp?.map((followUp) => {\n            const display = dispositionCheckboxOptions.find((option) => option.name === followUp.type)!.label;\n            let note = '';\n\n            if (followUp.type === 'other') {\n              note = `: ${followUp.note}`;\n            }\n\n            return <Typography key={followUp.type}>{`${display}${note}`}</Typography>;\n          })}\n        </Box>\n      </>\n    ),\n    showSchoolWorkExcuse && (\n      <>\n        <AssessmentTitle>School / Work Excuse</AssessmentTitle>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n          {schoolWorkExcuses.map((excuse) => (\n            <Link component={RouterLink} to={excuse.presignedUrl!} target=\"_blank\" key={excuse.id}>\n              {excuse.name}\n            </Link>\n          ))}\n        </Box>\n      </>\n    ),\n  ].filter(Boolean);\n\n  return (\n    <Box data-testid={dataTestIds.telemedEhrFlow.reviewTabPatientInstructionsContainer}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Plan\n      </Typography>\n\n      <SectionList sections={sections} sx={{ width: '100%' }} />\n    </Box>\n  );\n};\n"]}