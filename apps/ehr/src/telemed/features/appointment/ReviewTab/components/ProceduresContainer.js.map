{"version":3,"file":"ProceduresContainer.js","sourceRoot":"","sources":["ProceduresContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Stack, Typography, useTheme } from '@mui/material';\nimport { DateTime } from 'luxon';\nimport { FC, ReactElement } from 'react';\nimport { getSelectors } from '../../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../../state';\n\nexport const ProceduresContainer: FC = () => {\n  const { chartData } = getSelectors(useAppointmentStore, ['chartData']);\n  const theme = useTheme();\n  const procedures = chartData?.procedures;\n\n  const renderProperty = (label: string, value: string | undefined): ReactElement | undefined => {\n    if (value == null) {\n      return undefined;\n    }\n    return (\n      <Box>\n        <Typography display=\"inline\" sx={{ fontWeight: '500' }}>\n          {label}:\n        </Typography>{' '}\n        {value}\n      </Box>\n    );\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5, width: '100%' }}>\n      <Typography variant=\"h5\" color=\"primary.dark\">\n        Procedures\n      </Typography>\n      {procedures?.length ? (\n        procedures.map((procedure) => (\n          <Stack key={procedure.resourceId}>\n            <Typography sx={{ color: '#0F347C', fontWeight: '500' }}>{procedure.procedureType}</Typography>\n            {renderProperty(\n              'CPT',\n              procedure.cptCodes != null && procedure.cptCodes.length > 0\n                ? procedure.cptCodes.map((cptCode) => cptCode.code + ' ' + cptCode.display).join('; ')\n                : undefined\n            )}\n            {renderProperty(\n              'Dx',\n              procedure.diagnoses != null && procedure.diagnoses.length > 0\n                ? procedure.diagnoses.map((diagnosis) => diagnosis.code + ' ' + diagnosis.display).join('; ')\n                : undefined\n            )}\n            {renderProperty(\n              'Date and time of the procedure',\n              procedure.procedureDateTime != null\n                ? DateTime.fromISO(procedure.procedureDateTime).toFormat('MM/dd/yyyy, HH:mm a')\n                : undefined\n            )}\n            {renderProperty('Performed by', procedure.performerType)}\n            {renderProperty('Anaesthesia / medication used', procedure.medicationUsed)}\n            {renderProperty('Site/location', procedure.bodySite)}\n            {renderProperty('Side of body', procedure.bodySide)}\n            {renderProperty('Technique', procedure.technique)}\n            {renderProperty('Instruments / supplies used', procedure.suppliesUsed)}\n            {renderProperty('Procedure details', procedure.procedureDetails)}\n            {renderProperty(\n              'Specimen sent',\n              procedure.specimenSent != null ? (procedure.specimenSent ? 'Yes' : 'No') : undefined\n            )}\n            {renderProperty('Complications', procedure.complications)}\n            {renderProperty('Patient response', procedure.patientResponse)}\n            {renderProperty('Post-procedure instructions', procedure.postInstructions)}\n            {renderProperty('Time spent', procedure.timeSpent)}\n            {renderProperty('Documented by', procedure.documentedBy)}\n          </Stack>\n        ))\n      ) : (\n        <Typography color={theme.palette.text.secondary}>No procedures</Typography>\n      )}\n    </Box>\n  );\n};\n"]}