{"version":3,"file":"VideoControls.js","sourceRoot":"","sources":["VideoControls.tsx"],"names":[],"mappings":"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","sourcesContent":["import CallEndIcon from '@mui/icons-material/CallEnd';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport VideocamIcon from '@mui/icons-material/Videocam';\nimport VideocamOffIcon from '@mui/icons-material/VideocamOff';\nimport { Box, CircularProgress, useTheme } from '@mui/material';\nimport { useLocalVideo, useMeetingManager, useToggleLocalMute } from 'amazon-chime-sdk-component-library-react';\nimport { FC, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TelemedAppointmentStatusEnum } from 'utils';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { ConfirmationDialog, IconButtonContained } from '../../components';\nimport { useOystehrAPIClient } from '../../hooks/useOystehrAPIClient';\nimport { useAppointmentStore, useChangeTelemedAppointmentStatusMutation, useVideoCallStore } from '../../state';\nimport { updateEncounterStatusHistory } from '../../utils';\nimport { CallSettings } from './CallSettings';\n\nexport const VideoControls: FC = () => {\n  const theme = useTheme();\n\n  const apiClient = useOystehrAPIClient();\n  const { mutateAsync, isLoading } = useChangeTelemedAppointmentStatusMutation();\n  const { encounter } = getSelectors(useAppointmentStore, ['encounter']);\n\n  const { id: appointmentId } = useParams();\n\n  const { toggleVideo, isVideoEnabled } = useLocalVideo();\n  const { muted, toggleMute } = useToggleLocalMute();\n  const meetingManager = useMeetingManager();\n\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n\n  const openSettings = (): void => {\n    setIsSettingsOpen(true);\n  };\n\n  const closeSettings = (): void => {\n    setIsSettingsOpen(false);\n  };\n\n  const cleanup = async (): Promise<void> => {\n    if (meetingManager) {\n      await meetingManager.meetingSession?.deviceController.destroy().catch((error) => console.error(error));\n      await meetingManager.leave().catch((error) => console.error(error));\n    }\n    useVideoCallStore.setState({ meetingData: null });\n  };\n\n  const disconnect = async (): Promise<void> => {\n    if (apiClient && appointmentId) {\n      await mutateAsync({ apiClient, appointmentId, newStatus: TelemedAppointmentStatusEnum.unsigned }, {}).catch(\n        (error) => {\n          console.error(error);\n        }\n      );\n      useAppointmentStore.setState({\n        encounter: {\n          ...encounter,\n          status: 'finished',\n          statusHistory: updateEncounterStatusHistory('finished', encounter.statusHistory),\n        },\n      });\n    }\n    await cleanup();\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n        }}\n      >\n        <IconButtonContained onClick={toggleVideo} variant=\"primary.lighter\">\n          {isVideoEnabled ? (\n            <VideocamIcon sx={{ color: theme.palette.primary.contrastText }} />\n          ) : (\n            <VideocamOffIcon sx={{ color: theme.palette.primary.contrastText }} />\n          )}\n        </IconButtonContained>\n        <IconButtonContained onClick={toggleMute} variant=\"primary.lighter\">\n          {!muted ? (\n            <MicIcon sx={{ color: theme.palette.primary.contrastText }} />\n          ) : (\n            <MicOffIcon sx={{ color: theme.palette.primary.contrastText }} />\n          )}\n        </IconButtonContained>\n        <IconButtonContained onClick={openSettings} variant=\"primary.lighter\">\n          <SettingsIcon sx={{ color: theme.palette.primary.contrastText }} />\n        </IconButtonContained>\n        <ConfirmationDialog\n          title=\"Do you want to end video call with the patient?\"\n          response={disconnect}\n          actionButtons={{\n            proceed: {\n              text: 'End video call',\n              color: 'error',\n            },\n            back: { text: 'Cancel' },\n          }}\n        >\n          {(showDialog) => (\n            <IconButtonContained onClick={showDialog} disabled={isLoading} variant=\"error\">\n              {isLoading ? (\n                <CircularProgress size={24} sx={{ color: theme.palette.primary.contrastText }} />\n              ) : (\n                <CallEndIcon\n                  sx={{ color: theme.palette.primary.contrastText }}\n                  data-testid={dataTestIds.telemedEhrFlow.endVideoCallButton}\n                />\n              )}\n            </IconButtonContained>\n          )}\n        </ConfirmationDialog>\n      </Box>\n      {isSettingsOpen && <CallSettings onClose={closeSettings} />}\n    </>\n  );\n};\n"]}