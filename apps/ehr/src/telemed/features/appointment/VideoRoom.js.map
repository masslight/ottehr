{"version":3,"file":"VideoRoom.js","sourceRoot":"","sources":["VideoRoom.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\nimport {\n  LocalVideo,\n  RemoteVideo,\n  useLocalVideo,\n  useRemoteVideoTileState,\n  useRosterState,\n} from 'amazon-chime-sdk-component-library-react';\nimport { RosterAttendeeType } from 'amazon-chime-sdk-component-library-react/lib/types';\nimport { FC, useEffect, useMemo, useState } from 'react';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { useVideoCallStore } from '../../state';\nimport { VideoControls } from './VideoControls';\nimport { VideoTimer } from './VideoTimer';\n\ntype Participant = RosterAttendeeType & {\n  tileId?: number;\n};\n\nexport const VideoRoom: FC = () => {\n  const theme = useTheme();\n  const { attendeeIdToTileId } = useRemoteVideoTileState();\n  const { isVideoEnabled } = useLocalVideo();\n  const { roster } = useRosterState();\n  const videoCallState = getSelectors(useVideoCallStore, ['meetingData']);\n\n  const [activeParticipant, setActiveParticipant] = useState<null | Participant>(null);\n\n  const participants = useMemo<Participant[]>(() => {\n    return Object.keys(roster)\n      .filter(\n        (participantId) => (videoCallState.meetingData?.Attendee as { AttendeeId: string }).AttendeeId !== participantId\n      )\n      .map((participantId) => ({\n        ...roster[participantId],\n        tileId: attendeeIdToTileId[participantId],\n      }));\n  }, [roster, videoCallState.meetingData?.Attendee, attendeeIdToTileId]);\n\n  useEffect(() => {\n    if (participants.length) {\n      setActiveParticipant(participants[0]);\n    } else {\n      setActiveParticipant(null);\n    }\n  }, [participants]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        height: '100%',\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <Box sx={{ display: 'flex', padding: 1, gap: 1, height: '100%' }}>\n          <Box\n            sx={{\n              color: 'white',\n              width: '100%',\n              overflow: 'hidden',\n              display: 'flex',\n              gap: 1,\n            }}\n          >\n            {activeParticipant && (\n              <Box\n                sx={{\n                  height: '100%',\n                  overflow: 'hidden',\n                  position: 'relative',\n                  width: '100%',\n                  backgroundColor: theme.palette.primary.dark,\n                  borderRadius: 2,\n                }}\n              >\n                {activeParticipant.tileId && <RemoteVideo tileId={activeParticipant.tileId} />}\n              </Box>\n            )}\n          </Box>\n          <Box\n            sx={{\n              color: 'white',\n              minWidth: '20%',\n              display: 'grid',\n              gridAutoColumns: '1fr',\n              rowGap: 1,\n              alignContent: 'start',\n            }}\n          >\n            <Box\n              sx={{\n                aspectRatio: '1/1',\n                backgroundColor: theme.palette.primary.dark,\n                borderRadius: '8px',\n                overflow: 'hidden',\n                position: 'relative',\n              }}\n            >\n              {isVideoEnabled && <LocalVideo />}\n              <Box\n                sx={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  height: 34,\n                  width: '100%',\n                  backgroundImage: 'linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0))',\n                  pt: '10px',\n                  pl: '10px',\n                }}\n              >\n                <Typography sx={{ fontWeight: 500, fontSize: '14px' }}>You</Typography>\n              </Box>\n            </Box>\n            {participants\n              .filter((participant) => participant.chimeAttendeeId !== activeParticipant?.chimeAttendeeId)\n              .map((participant) => (\n                <Box\n                  key={participant.chimeAttendeeId}\n                  sx={{\n                    aspectRatio: '1/1',\n                    backgroundColor: theme.palette.primary.dark,\n                    borderRadius: '8px',\n                    overflow: 'hidden',\n                    position: 'relative',\n                    cursor: participant.tileId ? 'pointer' : 'auto',\n                  }}\n                >\n                  {participant.tileId && (\n                    <RemoteVideo\n                      onClick={() => {\n                        setActiveParticipant(participant);\n                      }}\n                      tileId={participant.tileId}\n                    />\n                  )}\n                </Box>\n              ))}\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            backgroundColor: theme.palette.primary.dark,\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            px: 2,\n            py: 1,\n          }}\n        >\n          <VideoTimer />\n          <VideoControls />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n"]}