{"version":3,"file":"VideoTimer.js","sourceRoot":"","sources":["VideoTimer.tsx"],"names":[],"mappings":"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","sourcesContent":["import InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { Box, Checkbox, darken, FormControlLabel, Typography } from '@mui/material';\nimport { DateTime, Duration } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { FC, useEffect, useState } from 'react';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { InnerStatePopover } from '../../components';\nimport { useAppointmentStore, useSaveChartData } from '../../state';\nimport { formatVideoTimerTime } from '../../utils';\n\nexport const VideoTimer: FC = () => {\n  const { encounter } = getSelectors(useAppointmentStore, ['encounter']);\n  const [difference, setDifference] = useState<Duration>();\n  const { chartData, setPartialChartData } = getSelectors(useAppointmentStore, ['chartData', 'setPartialChartData']);\n  const { mutate, isLoading } = useSaveChartData();\n\n  const addToVisitNote = chartData?.addToVisitNote?.value || false;\n\n  const onChange = (value: boolean): void => {\n    setPartialChartData({ addToVisitNote: { value } });\n    mutate(\n      { addToVisitNote: { value } },\n      {\n        onSuccess: (data) => {\n          const addToVisitNoteUpdated = data.chartData.addToVisitNote;\n          if (addToVisitNoteUpdated) {\n            setPartialChartData({ addToVisitNote: addToVisitNoteUpdated });\n          }\n        },\n        onError: () => {\n          enqueueSnackbar('An error has occurred while adding to visit note. Please try again.', {\n            variant: 'error',\n          });\n          setPartialChartData({ addToVisitNote: chartData?.addToVisitNote });\n        },\n      }\n    );\n  };\n\n  useEffect(() => {\n    const startTime = encounter.statusHistory?.find((item) => item.status === 'in-progress')?.period.start;\n    if (!startTime) {\n      return;\n    }\n\n    const interval = setInterval(() => setDifference(DateTime.fromISO(startTime).diffNow(['minute', 'second'])), 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [encounter.statusHistory]);\n\n  if (!difference) {\n    return null;\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n      <Typography fontWeight={500} sx={{ width: '45px' }}>\n        {formatVideoTimerTime(difference)}\n      </Typography>\n\n      <FormControlLabel\n        sx={{\n          mr: 0,\n        }}\n        control={\n          <Checkbox\n            sx={{\n              color: '#C79DFF',\n              '&.Mui-checked': {\n                color: '#C79DFF',\n              },\n              '&.Mui-disabled': {\n                color: darken('#C79DFF', 0.4),\n              },\n            }}\n            disabled={isLoading}\n            checked={addToVisitNote}\n            onChange={(e) => onChange(e.target.checked)}\n          />\n        }\n        label={<Typography sx={{ color: isLoading ? darken('#FFF', 0.4) : '#FFF' }}>Add to visit note</Typography>}\n      />\n\n      <InnerStatePopover\n        popoverChildren={\n          <Typography sx={{ p: 2, maxWidth: '320px' }}>\n            By checking this box you add time spent in visit statement to the progress note.\n          </Typography>\n        }\n      >\n        {({ handlePopoverOpen, handlePopoverClose }) => (\n          <InfoOutlinedIcon fontSize=\"small\" onMouseEnter={handlePopoverOpen} onMouseLeave={handlePopoverClose} />\n        )}\n      </InnerStatePopover>\n    </Box>\n  );\n};\n"]}