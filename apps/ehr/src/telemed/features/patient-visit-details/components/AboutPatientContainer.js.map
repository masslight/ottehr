{"version":3,"file":"AboutPatientContainer.js","sourceRoot":"","sources":["AboutPatientContainer.tsx"],"names":[],"mappings":";;;AAAA,8BAA8B;AAC9B,+EAA8E;AAC9E,0CAAqD;AACrD,+BAA8C;AAC9C,+BAAqG;AACrG,sEAAqE;AACrE,kDAAuD;AACvD,wCAAqD;AACrD,2EAA0E;AAC1E,qDAAoD;AAE7C,IAAM,qBAAqB,GAAO;IACvC,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEnB,IAAA,KAA2B,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,EAAtF,OAAO,aAAA,EAAE,WAAW,iBAAkE,CAAC;IAEzF,IAAA,KAA8C,IAAA,gBAAQ,EAAU,KAAK,CAAC,EAArE,kBAAkB,QAAA,EAAE,qBAAqB,QAA4B,CAAC;IAC7E,IAAM,oBAAoB,GAAG,cAAY,OAAA,qBAAqB,CAAC,KAAK,CAAC,EAA5B,CAA4B,CAAC;IAEtE,IAAM,cAAc,GAAG,WAAW,IAAI,IAAA,uCAA+B,EAAC,WAAW,CAAC,CAAC;IACnF,IAAM,MAAM,GAAG,IAAA,2BAAmB,EAAC,OAAO,CAAC,CAAC;IAC5C,IAAM,cAAc,GAAG,IAAA,eAAO,EAAC;;QAC7B,IAAM,UAAU,GAAG,CAAC,MAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,mCAAI,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/D,OAAO,UAAU,CAAC,GAAG,CAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,IAAI,EAAE,EAAhB,CAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC,EAAE,CAAC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,WAAW,CAAC,CAAC,CAAC;IAE/B,OAAO,CACL,EACE;MAAA,CAAC,iCAAe,CACd,KAAK,CAAC,mBAAmB,CACzB,MAAM,CAAC,CAAC;YACN;gBACE,KAAK,EAAE,oCAAoC;gBAC3C,KAAK,EAAE,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,KAAI,IAAA,8BAAsB,EAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC;gBACvE,MAAM,EAAE,CACN,CAAC,6BAAgB,CAAC,OAAO,CAAC,CAAC,cAAM,OAAA,qBAAqB,CAAC,IAAI,CAAC,EAA3B,CAA2B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAG,CACtG;aACF;YACD;gBACE,KAAK,EAAE,qCAAqC;gBAC5C,KAAK,EAAE,cAAc,IAAI,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,IAAA,8BAAsB,EAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG;gBACjG,IAAI,EAAE,CAAC,6BAAuB,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAG;aAC/F;YACD,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,IAAA,qBAAU,EAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,EAAE,CAAC,EAAE;YACpE,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,cAAc,EAAE;YACpD,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,MAAM,EAAE;SACjD,CAAC,EAEJ;MAAA,CAAC,uDAA0B,CAAC,SAAS,CAAC,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAAC,EAC3F;IAAA,GAAG,CACJ,CAAC;AACJ,CAAC,CAAC;AAxCW,QAAA,qBAAqB,yBAwChC","sourcesContent":["// cSpell:ignore Gmailerrorred\nimport ReportGmailerrorredIcon from '@mui/icons-material/ReportGmailerrorred';\nimport { capitalize, useTheme } from '@mui/material';\nimport { FC, useMemo, useState } from 'react';\nimport { getUnconfirmedDOBForAppointment, getWeightForPatient, mdyStringFromISOString } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { PencilIconButton } from '../../../components';\nimport { useAppointmentStore } from '../../../state';\nimport { EditPatientBirthDateDialog } from './EditPatientBirthDateDialog';\nimport { InformationCard } from './InformationCard';\n\nexport const AboutPatientContainer: FC = () => {\n  const theme = useTheme();\n\n  const { patient, appointment } = getSelectors(useAppointmentStore, ['patient', 'appointment']);\n\n  const [updateDOBModalOpen, setUpdateDOBModalOpen] = useState<boolean>(false);\n  const closePatientDOBModal = (): void => setUpdateDOBModalOpen(false);\n\n  const unconfirmedDOB = appointment && getUnconfirmedDOBForAppointment(appointment);\n  const weight = getWeightForPatient(patient);\n  const reasonForVisit = useMemo(() => {\n    const complaints = (appointment?.description ?? '').split(',');\n    return complaints.map((complaint) => complaint.trim()).join(', ');\n  }, [appointment?.description]);\n\n  return (\n    <>\n      <InformationCard\n        title=\"About the patient\"\n        fields={[\n          {\n            label: \"Patient's date of birth (Original)\",\n            value: patient?.birthDate && mdyStringFromISOString(patient?.birthDate),\n            button: (\n              <PencilIconButton onClick={() => setUpdateDOBModalOpen(true)} size=\"16px\" sx={{ padding: '10px' }} />\n            ),\n          },\n          {\n            label: \"Patient's date of birth (Unmatched)\",\n            value: unconfirmedDOB && unconfirmedDOB !== 'true' ? mdyStringFromISOString(unconfirmedDOB) : '-',\n            icon: <ReportGmailerrorredIcon sx={{ color: theme.palette.warning.main, fontSize: '1rem' }} />,\n          },\n          { label: \"Patient's sex\", value: capitalize(patient?.gender || '') },\n          { label: 'Reason for visit', value: reasonForVisit },\n          { label: 'Patient weight (lbs)', value: weight },\n        ]}\n      />\n      <EditPatientBirthDateDialog modalOpen={updateDOBModalOpen} onClose={closePatientDOBModal} />\n    </>\n  );\n};\n"]}