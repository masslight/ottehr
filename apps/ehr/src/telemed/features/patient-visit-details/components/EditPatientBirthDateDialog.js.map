{"version":3,"file":"EditPatientBirthDateDialog.js","sourceRoot":"","sources":["EditPatientBirthDateDialog.tsx"],"names":[],"mappings":"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","sourcesContent":["import CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, IconButton, Typography } from '@mui/material';\nimport { Patient } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport DateSearch from '../../../../components/DateSearch';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { useEditPatientBirthDateMutation } from '../../../hooks';\nimport { useAppointmentStore } from '../../../state';\n\ninterface EditPatientBirthDateDialogProps {\n  modalOpen: boolean;\n  onClose: () => void;\n}\n\ninterface FormInputs {\n  dateOfBirth: DateTime | null;\n}\n\nexport const EditPatientBirthDateDialog = ({ modalOpen, onClose }: EditPatientBirthDateDialogProps): ReactElement => {\n  const {\n    handleSubmit,\n    formState,\n    control,\n    setError: setFormError,\n    resetField,\n    setValue,\n    getValues,\n  } = useForm<FormInputs>();\n  const [error, setError] = useState(false);\n  const { patient } = getSelectors(useAppointmentStore, ['patient']);\n\n  useEffect(() => {\n    setValue('dateOfBirth', patient?.birthDate ? DateTime.fromISO(patient?.birthDate) : null);\n  }, [patient, setValue]);\n\n  const editPatientBirthDate = useEditPatientBirthDateMutation();\n\n  const onSubmit = async (data: FormInputs): Promise<void> => {\n    try {\n      if (!patient?.id) {\n        throw new Error('Patient reference not provided');\n      }\n\n      const patientData: Patient = {\n        ...patient,\n        resourceType: 'Patient',\n        id: patient.id,\n        birthDate: data.dateOfBirth!.toISODate()!,\n      };\n\n      await editPatientBirthDate.mutateAsync(\n        { patientData: patientData },\n        {\n          onSuccess: (updatedData) => {\n            useAppointmentStore.setState({\n              patient: { ...updatedData },\n            });\n            onClose();\n          },\n        }\n      );\n    } catch (error) {\n      setError(true);\n      console.error('Error while updating patient date of birth: ', error);\n    }\n  };\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      fullWidth\n      disableScrollLock\n      sx={{ '.MuiPaper-root': { padding: 1, width: '444px', maxWidth: 'initial' } }}\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <DialogTitle\n          variant=\"h4\"\n          color=\"primary.dark\"\n          sx={{ width: '100%', py: 1, display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 1 }}\n        >\n          Please enter patient's confirmed date of birth\n          <IconButton onClick={onClose} aria-label=\"close\" sx={{ mr: -3, mt: -3 }}>\n            <CloseOutlinedIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <FormControl fullWidth required sx={{ mt: 2 }}>\n            <Controller\n              name={'dateOfBirth'}\n              control={control}\n              render={({ field: { value } }) => (\n                <DateSearch\n                  date={value || null}\n                  setDate={(date) => setValue('dateOfBirth', date)}\n                  setIsValidDate={(valid) => {\n                    if (valid) {\n                      const val = getValues('dateOfBirth');\n                      resetField('dateOfBirth');\n                      setValue('dateOfBirth', val);\n                    } else {\n                      setFormError('dateOfBirth', { message: 'Date of birth is not valid' });\n                    }\n                  }}\n                  defaultValue={null}\n                  label=\"Date of birth\"\n                  required\n                ></DateSearch>\n              )}\n            />\n          </FormControl>\n        </DialogContent>\n        <DialogActions sx={{ justifyContent: 'flex-start', marginLeft: 1 }}>\n          <LoadingButton\n            loading={editPatientBirthDate.isLoading}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n            sx={{ fontWeight: 500, textTransform: 'none', borderRadius: 6, ml: 1, mb: 1, px: 4 }}\n            disabled={!formState.isValid}\n          >\n            Update Date of Birth\n          </LoadingButton>\n        </DialogActions>\n        {error && (\n          <Typography color=\"error\" variant=\"body2\" my={1} mx={2}>\n            Failed to update patient date of birth, please try again.\n          </Typography>\n        )}\n      </form>\n    </Dialog>\n  );\n};\n"]}