{"version":3,"file":"InformationCard.js","sourceRoot":"","sources":["InformationCard.tsx"],"names":[],"mappings":";;;AAAA,0CAA0E;AAC1E,+BAAmD;AAc5C,IAAM,eAAe,GAA6B,UAAC,EAAiB;QAAf,KAAK,WAAA,EAAE,MAAM,YAAA;IACvE,IAAM,KAAK,GAAG,IAAA,mBAAQ,GAAE,CAAC;IAEzB,OAAO,CACL,CAAC,gBAAK,CACJ,EAAE,CAAC,CAAC;YACF,SAAS,EAAE,CAAC;YACZ,OAAO,EAAE,CAAC;SACX,CAAC,CAEF;MAAA,CAAC,KAAK,IAAI,CACR,CAAC,qBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CACxE;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,qBAAU,CAAC,CACd,CACD;MAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;YACF,OAAO,EAAE,MAAM;YACf,aAAa,EAAE,QAAQ;YACvB,GAAG,EAAE,CAAC;SACP,CAAC,CAEF;QAAA,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,IAAK,OAAA,CACpC,CAAC,gBAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CACnB;YAAA,CAAC,cAAG,CACF,EAAE,CAAC,CAAC;gBACF,OAAO,EAAE,MAAM;gBACf,cAAc,EAAE,eAAe;gBAC/B,GAAG,EAAE,KAAK;aACX,CAAC,CAEF;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAC9E;gBAAA,CAAC,qBAAU,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,qBAAU,CACtF;gBAAA,CAAC,KAAK,CAAC,IAAI,CACb;cAAA,EAAE,cAAG,CACL;cAAA,CAAC,cAAG,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,CAC9D;gBAAA,CAAC,qBAAU,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,qBAAU,CAC5C;gBAAA,CAAC,KAAK,CAAC,MAAM,CACf;cAAA,EAAE,cAAG,CACP;YAAA,EAAE,cAAG,CACL;YAAA,CAAC,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,kBAAO,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAG,CACvF;UAAA,EAAE,gBAAQ,CAAC,CACZ,EApBqC,CAoBrC,CAAC,CACJ;MAAA,EAAE,cAAG,CACP;IAAA,EAAE,gBAAK,CAAC,CACT,CAAC;AACJ,CAAC,CAAC;AA9CW,QAAA,eAAe,mBA8C1B","sourcesContent":["import { Box, Divider, Paper, Typography, useTheme } from '@mui/material';\nimport { FC, Fragment, ReactElement } from 'react';\n\ntype Field = {\n  label?: string;\n  value?: string;\n  icon?: ReactElement;\n  button?: ReactElement;\n};\n\ntype InformationCardProps = {\n  title?: string;\n  fields?: Field[];\n};\n\nexport const InformationCard: FC<InformationCardProps> = ({ title, fields }) => {\n  const theme = useTheme();\n\n  return (\n    <Paper\n      sx={{\n        marginTop: 2,\n        padding: 3,\n      }}\n    >\n      {title && (\n        <Typography variant=\"h4\" color={theme.palette.primary.dark} sx={{ mb: 2 }}>\n          {title}\n        </Typography>\n      )}\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n        }}\n      >\n        {(fields || []).map((field, index) => (\n          <Fragment key={index}>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                gap: '5px',\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: '5px', flex: '0 1 50%' }}>\n                <Typography sx={{ color: theme.palette.primary.dark }}>{field.label || ''}</Typography>\n                {field.icon}\n              </Box>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                <Typography>{field.value || '-'}</Typography>\n                {field.button}\n              </Box>\n            </Box>\n            {fields && index < fields.length - 1 && <Divider orientation=\"horizontal\" flexItem />}\n          </Fragment>\n        ))}\n      </Box>\n    </Paper>\n  );\n};\n"]}