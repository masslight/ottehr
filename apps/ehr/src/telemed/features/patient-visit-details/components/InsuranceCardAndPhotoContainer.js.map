{"version":3,"file":"InsuranceCardAndPhotoContainer.js","sourceRoot":"","sources":["InsuranceCardAndPhotoContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport { otherColors } from '@ehrTheme/colors';\nimport ContentPasteOffIcon from '@mui/icons-material/ContentPasteOff';\nimport { Box, CircularProgress, Grid, Paper, Typography } from '@mui/material';\nimport { Bundle, BundleEntry, DocumentReference } from 'fhir/r4b';\nimport { FC, useMemo, useState } from 'react';\nimport { getQuestionnaireResponseByLinkId, INSURANCE_CARD_CODE, PHOTO_ID_CARD_CODE } from 'utils';\nimport DownloadImagesButton from '../../../../components/DownloadImagesButton';\nimport ImageCarousel, { ImageCarouselObject } from '../../../../components/ImageCarousel';\nimport { getPresignedFileUrl } from '../../../../helpers/files.helper';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { DocumentInfo, DocumentType } from '../../../../types/types';\nimport { useAppointmentStore, useGetDocumentReferences } from '../../../state';\nfunction compareCards(\n  cardBackType: DocumentType.PhotoIdBack | DocumentType.InsuranceBack | DocumentType.InsuranceBackSecondary\n) {\n  return (a: DocumentInfo, b: DocumentInfo) => {\n    if (a && b) {\n      return a.type === cardBackType ? 1 : -1;\n    }\n    return 0;\n  };\n}\n\nexport const InsuranceCardAndPhotoContainer: FC = () => {\n  const { getAccessTokenSilently } = useAuth0();\n  const { patient, appointment, questionnaireResponse } = getSelectors(useAppointmentStore, [\n    'patient',\n    'appointment',\n    'questionnaireResponse',\n  ]);\n\n  const appointmentId = appointment?.id;\n  const paymentOption = getQuestionnaireResponseByLinkId('payment-option', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const selfPay = paymentOption === 'I will pay without insurance';\n  const [photoZoom, setPhotoZoom] = useState<boolean>(false);\n  const [zoomedIdx, setZoomedIdx] = useState<number>(0);\n\n  const [sections, setSections] = useState<{ title: string; cards: DocumentInfo[]; downloadLabel: string }[]>([]);\n  const [fetchCompleted, setFetchCompleted] = useState<boolean>(false);\n\n  useGetDocumentReferences({ appointmentId: appointment?.id, patientId: patient?.id }, async (data) => {\n    const authToken = await getAccessTokenSilently();\n\n    const documentReferenceResources: DocumentReference[] = [];\n\n    const bundleEntries = data.entry;\n    bundleEntries?.forEach((bundleEntry: BundleEntry) => {\n      const bundleResource = bundleEntry.resource as Bundle;\n      bundleResource.entry?.forEach((entry) => {\n        const docRefResource = entry.resource as DocumentReference;\n        if (docRefResource) {\n          documentReferenceResources.push(docRefResource);\n        }\n      });\n    });\n\n    const allCards: DocumentInfo[] = [];\n    for (const docRef of documentReferenceResources) {\n      const docRefCode = docRef.type?.coding?.[0].code;\n\n      if (docRefCode && [PHOTO_ID_CARD_CODE, INSURANCE_CARD_CODE].includes(docRefCode)) {\n        for (const content of docRef.content) {\n          const title = content.attachment.title;\n          const z3Url = content.attachment.url;\n\n          if (\n            z3Url &&\n            title &&\n            Object.values<string>(DocumentType).includes(title) &&\n            (docRefCode === PHOTO_ID_CARD_CODE || (docRefCode === INSURANCE_CARD_CODE && !selfPay))\n          ) {\n            const presignedUrl = await getPresignedFileUrl(z3Url, authToken);\n            if (presignedUrl) {\n              allCards.push({\n                z3Url: z3Url,\n                presignedUrl: presignedUrl,\n                type: title as DocumentType,\n              });\n            }\n          }\n        }\n      }\n    }\n\n    if (allCards.length) {\n      const photoIdCards: DocumentInfo[] = allCards\n        .filter((card) => [DocumentType.PhotoIdFront, DocumentType.PhotoIdBack].includes(card.type))\n        .sort(compareCards(DocumentType.PhotoIdBack));\n      const primaryInsuranceCards: DocumentInfo[] = allCards\n        .filter((card) => [DocumentType.InsuranceFront, DocumentType.InsuranceBack].includes(card.type))\n        .sort(compareCards(DocumentType.InsuranceBack));\n      const secondaryInsuranceCards: DocumentInfo[] = allCards\n        .filter((card) =>\n          [DocumentType.InsuranceFrontSecondary, DocumentType.InsuranceBackSecondary].includes(card.type)\n        )\n        .sort(compareCards(DocumentType.InsuranceBackSecondary));\n\n      const sectionsData = [\n        {\n          title: 'Primary Insurance Card',\n          cards: primaryInsuranceCards,\n          downloadLabel: 'Download Insurance Card',\n        },\n        {\n          title: 'Secondary Insurance Card',\n          cards: secondaryInsuranceCards,\n          downloadLabel: 'Download Insurance Card',\n        },\n        {\n          title: 'Photo ID',\n          cards: photoIdCards,\n          downloadLabel: 'Download Photo IDs',\n        },\n      ];\n\n      setSections(sectionsData);\n    }\n\n    setFetchCompleted(true);\n  });\n\n  const imageCarouselObjs = useMemo(\n    () =>\n      sections.flatMap((section) =>\n        section.cards.map<ImageCarouselObject>((card) => ({\n          alt: card.type,\n          url: card.presignedUrl || '',\n          key: card.type,\n        }))\n      ),\n    [sections]\n  );\n\n  return (\n    <>\n      <ImageCarousel\n        imagesObj={imageCarouselObjs}\n        imageIndex={zoomedIdx}\n        setImageIndex={setZoomedIdx}\n        open={photoZoom}\n        setOpen={setPhotoZoom}\n      />\n      <Paper sx={{ width: '100%', display: 'flex', flexWrap: 'wrap', p: 3, gap: 2 }}>\n        {(!fetchCompleted && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n            <CircularProgress sx={{ justifySelf: 'center' }} />\n          </Box>\n        )) ||\n          sections.map((section, sectionIndex) => (\n            <Box key={sectionIndex} sx={{ flex: '0 1 475px', display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <Typography color=\"primary.dark\">{section.title}</Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', gap: 2 }}>\n                {section.cards.map((card, cardIndex) => {\n                  const offset = sections\n                    .slice(0, sectionIndex)\n                    .reduce((total, currentSection) => total + currentSection.cards.length, 0);\n\n                  return (\n                    <Box\n                      key={cardIndex}\n                      sx={{\n                        flex: '1 0 48%',\n                        height: '140px',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        cursor: 'pointer',\n                        borderRadius: 2,\n                        border: `1px solid ${otherColors.dottedLine}`,\n                      }}\n                      onClick={() => {\n                        setZoomedIdx(cardIndex + offset);\n                        setPhotoZoom(true);\n                      }}\n                    >\n                      <img src={card.presignedUrl} alt={card.type} style={{ maxHeight: '100%', maxWidth: '100%' }} />\n                    </Box>\n                  );\n                })}\n              </Box>\n              {appointmentId && (\n                <Box>\n                  <DownloadImagesButton\n                    cards={section.cards}\n                    appointmentId={appointmentId}\n                    title={section.downloadLabel}\n                  />\n                </Box>\n              )}\n            </Box>\n          ))}\n        {!sections.some((section) => section.cards.length > 0) && fetchCompleted && (\n          <Grid item xs={12} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <Typography variant=\"h3\" color=\"primary.dark\">\n              No images have been uploaded <ContentPasteOffIcon />\n            </Typography>\n          </Grid>\n        )}\n      </Paper>\n    </>\n  );\n};\n"]}