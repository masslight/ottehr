{"version":3,"file":"InsuranceContainer.js","sourceRoot":"","sources":["InsuranceContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FC } from 'react';\nimport { getQuestionnaireResponseByLinkId, mdyStringFromISOString } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../state';\nimport { InformationCard } from './InformationCard';\n\nexport const InsuranceContainer: FC = () => {\n  const { questionnaireResponse } = getSelectors(useAppointmentStore, ['questionnaireResponse']);\n\n  const insuranceCarrier = getQuestionnaireResponseByLinkId('insurance-carrier', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const memberId = getQuestionnaireResponseByLinkId('insurance-member-id', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const policyHolderFirstName = getQuestionnaireResponseByLinkId('policy-holder-last-name', questionnaireResponse)\n    ?.answer?.[0]?.valueString;\n  const policyHolderLastName = getQuestionnaireResponseByLinkId('policy-holder-first-name', questionnaireResponse)\n    ?.answer?.[0]?.valueString;\n  const policyHolderFirstAndLastName =\n    policyHolderFirstName && policyHolderLastName ? `${policyHolderFirstName}, ${policyHolderLastName}` : undefined;\n  const policyHolderDateOfBirth = getQuestionnaireResponseByLinkId('policy-holder-date-of-birth', questionnaireResponse)\n    ?.answer?.[0]?.valueDate;\n  const policyHolderBirthSex = getQuestionnaireResponseByLinkId('policy-holder-birth-sex', questionnaireResponse)\n    ?.answer?.[0]?.valueString;\n  const policyHolderAddress = getQuestionnaireResponseByLinkId('policy-holder-address', questionnaireResponse)\n    ?.answer?.[0]?.valueString;\n  const policyHolderCity = getQuestionnaireResponseByLinkId('policy-holder-city', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const policyHolderState = getQuestionnaireResponseByLinkId('policy-holder-state', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const policyHolderZip = getQuestionnaireResponseByLinkId('policy-holder-zip', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const policyHolderCityStateZip =\n    policyHolderCity && policyHolderState && policyHolderZip\n      ? `${policyHolderCity}, ${policyHolderState}, ${policyHolderZip}`\n      : undefined;\n  const patientRelationshipToInsured = getQuestionnaireResponseByLinkId(\n    'patient-relationship-to-insured',\n    questionnaireResponse\n  )?.answer?.[0]?.valueString;\n\n  return (\n    <InformationCard\n      title=\"Insurance information\"\n      fields={[\n        {\n          label: 'Insurance Carrier',\n          value: insuranceCarrier,\n        },\n        {\n          label: 'Member ID',\n          value: memberId,\n        },\n        {\n          label: \"Policy holder's name\",\n          value: policyHolderFirstAndLastName,\n        },\n        {\n          label: \"Policy holder's date of birth\",\n          value: policyHolderDateOfBirth && mdyStringFromISOString(policyHolderDateOfBirth),\n        },\n        {\n          label: \"Policy holder's sex\",\n          value: policyHolderBirthSex,\n        },\n        {\n          label: 'Street address',\n          value: policyHolderAddress,\n        },\n        {\n          label: 'City, State, ZIP',\n          value: policyHolderCityStateZip,\n        },\n        {\n          label: \"Patient's relationship to insured\",\n          value: patientRelationshipToInsured,\n        },\n      ]}\n    />\n  );\n};\n"]}