{"version":3,"file":"ResponsibleInformationContainer.js","sourceRoot":"","sources":["ResponsibleInformationContainer.tsx"],"names":[],"mappings":";;;AACA,+BAAiF;AACjF,sEAAqE;AACrE,wCAAqD;AACrD,qDAAoD;AAE7C,IAAM,+BAA+B,GAAO;;IACzC,IAAA,qBAAqB,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,uBAAuB,CAAC,CAAC,sBAAjE,CAAkE;IAE/F,IAAM,YAAY,GAAG,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,gCAAgC,EAAE,qBAAqB,CAAC,0CAC1G,MAAM,0CAAG,CAAC,CAAC,0CAAE,WAAW,CAAC;IAC7B,IAAM,gBAAgB,GAAG,gBACrB,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,8BAA8B,EAAE,qBAAqB,CAAC,0CAAE,MAAM,0CAAG,CAAC,CAAC,0CAClG,WAAW,eAAK,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,6BAA6B,EAAE,qBAAqB,CAAC,0CACtG,MAAM,0CAAG,CAAC,CAAC,0CAAE,WAAW,CAAE,CAAC;IACjC,IAAM,WAAW,GAAG,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,iCAAiC,EAAE,qBAAqB,CAAC,0CAC1G,MAAM,0CAAG,CAAC,CAAC,0CAAE,SAAS,CAAC;IAC3B,IAAM,QAAQ,GAAG,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,6BAA6B,EAAE,qBAAqB,CAAC,0CAAE,MAAM,0CAAG,CAAC,CAAC,0CAChH,WAAW,CAAC;IAChB,IAAM,KAAK,GAAG,MAAA,MAAA,MAAA,IAAA,wCAAgC,EAAC,0BAA0B,EAAE,qBAAqB,CAAC,0CAAE,MAAM,0CAAG,CAAC,CAAC,0CAC1G,WAAW,CAAC;IAEhB,OAAO,CACL,CAAC,iCAAe,CACd,KAAK,CAAC,+BAA+B,CACrC,MAAM,CAAC,CAAC;YACN;gBACE,KAAK,EAAE,cAAc;gBACrB,KAAK,EAAE,YAAY;aACpB;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,gBAAgB;aACxB;YACD;gBACE,KAAK,EAAE,eAAe;gBACtB,KAAK,EAAE,WAAW,IAAI,IAAA,8BAAsB,EAAC,WAAW,CAAC;aAC1D;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,KAAK,EAAE,QAAQ;aAChB;YACD;gBACE,KAAK,EAAE,OAAO;gBACd,KAAK,EAAE,KAAK;aACb;SACF,CAAC,EACF,CACH,CAAC;AACJ,CAAC,CAAC;AA3CW,QAAA,+BAA+B,mCA2C1C","sourcesContent":["import { FC } from 'react';\nimport { getQuestionnaireResponseByLinkId, mdyStringFromISOString } from 'utils';\nimport { getSelectors } from '../../../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../../../state';\nimport { InformationCard } from './InformationCard';\n\nexport const ResponsibleInformationContainer: FC = () => {\n  const { questionnaireResponse } = getSelectors(useAppointmentStore, ['questionnaireResponse']);\n\n  const relationship = getQuestionnaireResponseByLinkId('responsible-party-relationship', questionnaireResponse)\n    ?.answer?.[0]?.valueString;\n  const firstAndLastName = `\n    ${getQuestionnaireResponseByLinkId('responsible-party-first-name', questionnaireResponse)?.answer?.[0]\n      ?.valueString}, ${getQuestionnaireResponseByLinkId('responsible-party-last-name', questionnaireResponse)\n      ?.answer?.[0]?.valueString}`;\n  const dateOfBirth = getQuestionnaireResponseByLinkId('responsible-party-date-of-birth', questionnaireResponse)\n    ?.answer?.[0]?.valueDate;\n  const birthSex = getQuestionnaireResponseByLinkId('responsible-party-birth-sex', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n  const phone = getQuestionnaireResponseByLinkId('responsible-party-number', questionnaireResponse)?.answer?.[0]\n    ?.valueString;\n\n  return (\n    <InformationCard\n      title=\"Responsible party information\"\n      fields={[\n        {\n          label: 'Relationship',\n          value: relationship,\n        },\n        {\n          label: 'Full name',\n          value: firstAndLastName,\n        },\n        {\n          label: 'Date of birth',\n          value: dateOfBirth && mdyStringFromISOString(dateOfBirth),\n        },\n        {\n          label: 'Birth sex',\n          value: birthSex,\n        },\n        {\n          label: 'Phone',\n          value: phone,\n        },\n      ]}\n    />\n  );\n};\n"]}