{"version":3,"file":"EditState.js","sourceRoot":"","sources":["EditState.tsx"],"names":[],"mappings":"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","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Button,\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Paper,\n  Skeleton,\n  Switch,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport Oystehr from '@oystehr/sdk';\nimport { Location } from 'fhir/r4b';\nimport { enqueueSnackbar } from 'notistack';\nimport { useState } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { Link, useParams } from 'react-router-dom';\nimport { AllStatesToVirtualLocationsData, isLocationVirtual, StateType } from 'utils';\nimport { STATES_URL } from '../../../App';\nimport CustomBreadcrumbs from '../../../components/CustomBreadcrumbs';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport PageContainer from '../../../layout/PageContainer';\n\nexport default function EditStatePage(): JSX.Element {\n  const { oystehr } = useApiClients();\n  const theme = useTheme();\n  const [isOperateInStateChecked, setIsOperateInStateChecked] = useState<boolean>(false);\n  const { state } = useParams();\n  const fullLabel = `${state} - ${AllStatesToVirtualLocationsData[state as StateType]?.name}`;\n\n  if (!oystehr || !state) {\n    throw new Error('oystehr or state is not initialized.');\n  }\n\n  const { data: location, isFetching } = useQuery(\n    ['state-location-data'],\n    () => getStateLocation(oystehr, state as StateType),\n    {\n      onSuccess: (location) => {\n        setIsOperateInStateChecked(Boolean(location && location.status === 'active'));\n      },\n    }\n  );\n\n  const mutation = useMutation(({ location, newStatus }: { location: Location; newStatus: string }) =>\n    updateStateLocationStatus(oystehr, location, newStatus)\n  );\n\n  const onSwitchChange = (value: boolean): void => {\n    setIsOperateInStateChecked(value);\n  };\n\n  const onSubmit = async (event: any): Promise<void> => {\n    event.preventDefault();\n    const newStatus = isOperateInStateChecked ? 'active' : 'suspended';\n    if (!location) {\n      enqueueSnackbar('Location was not loaded.', {\n        variant: 'error',\n      });\n      throw new Error('Location was not loaded.');\n    }\n    mutation.mutate(\n      { newStatus, location },\n      {\n        onSuccess(data) {\n          console.log(`${data}`);\n          enqueueSnackbar(`State was updated successfully`, {\n            variant: 'success',\n          });\n        },\n        onError(error) {\n          console.log(`error while updating state: ${error}`);\n          enqueueSnackbar('An error has occurred while updating state. Please try again.', {\n            variant: 'error',\n          });\n        },\n      }\n    );\n  };\n\n  return (\n    <PageContainer tabTitle={'Edit State'}>\n      <form onSubmit={onSubmit}>\n        <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n          <Grid item maxWidth={'584px'} width={'100%'}>\n            {/* Breadcrumbs */}\n            <CustomBreadcrumbs\n              chain={[\n                { link: STATES_URL, children: 'States' },\n                { link: '#', children: fullLabel || <Skeleton width={150} /> },\n              ]}\n            />\n\n            {/* Page Title */}\n            <Typography\n              data-testid={dataTestIds.editState.stateNameTitle}\n              variant=\"h3\"\n              color=\"primary.dark\"\n              marginTop={2}\n              sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center', fontWeight: '600 !important' }}\n            >\n              {fullLabel || <Skeleton width={250} />}\n            </Typography>\n\n            {/* Page Content */}\n            <Paper sx={{ padding: 3 }}>\n              <FormLabel\n                sx={{ ...theme.typography.h4, color: theme.palette.primary.dark, mb: 1, fontWeight: '600 !important' }}\n              >\n                State information\n              </FormLabel>\n\n              <Box sx={{ marginTop: '10px' }}>\n                <TextField\n                  data-testid={dataTestIds.editState.stateNameField}\n                  id=\"outlined-read-only-input\"\n                  label=\"State name\"\n                  value={fullLabel}\n                  sx={{ marginBottom: 2 }}\n                  margin=\"dense\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                />\n              </Box>\n              <Box>\n                {isFetching ? (\n                  <Skeleton width={140} height={38} />\n                ) : (\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        data-testid={dataTestIds.editState.operateInStateToggle}\n                        checked={isOperateInStateChecked}\n                        onChange={(event) => onSwitchChange(event.target.checked)}\n                      />\n                    }\n                    label=\"Operate in state\"\n                  />\n                )}\n              </Box>\n\n              {/* Update State and Cancel Buttons */}\n              <Grid>\n                <LoadingButton\n                  data-testid={dataTestIds.editState.saveChangesButton}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  sx={{\n                    textTransform: 'none',\n                    borderRadius: 28,\n                    marginTop: 3,\n                    fontWeight: 'bold',\n                    marginRight: 1,\n                  }}\n                  type=\"submit\"\n                  loading={isFetching || mutation.isLoading}\n                  disabled={false}\n                >\n                  Save changes\n                </LoadingButton>\n\n                <Link to={STATES_URL}>\n                  <Button\n                    data-testid={dataTestIds.editState.cancelButton}\n                    variant=\"text\"\n                    color=\"primary\"\n                    sx={{\n                      textTransform: 'none',\n                      borderRadius: 28,\n                      marginTop: 3,\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </Link>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </form>\n    </PageContainer>\n  );\n}\n\nasync function getStateLocation(oystehr: Oystehr, state: StateType): Promise<Location | undefined> {\n  const resources = (\n    await oystehr.fhir.search<Location>({\n      resourceType: 'Location',\n      params: [\n        {\n          name: 'address-state',\n          value: state,\n        },\n      ],\n    })\n  ).unbundle();\n\n  return resources.find(isLocationVirtual);\n}\n\nasync function updateStateLocationStatus(\n  oystehr: Oystehr,\n  location: Location,\n  status: string\n): Promise<Location | undefined> {\n  const updatedLocation = await oystehr.fhir.patch<Location>({\n    resourceType: 'Location',\n    id: location.id ?? '',\n    operations: [\n      {\n        op: location.status ? 'replace' : 'add',\n        path: '/status',\n        value: status,\n      },\n    ],\n  });\n  return updatedLocation;\n}\n"]}