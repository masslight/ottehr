{"version":3,"file":"Insurance.js","sourceRoot":"","sources":["Insurance.tsx"],"names":[],"mappings":"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","sourcesContent":["import { otherColors } from '@ehrTheme/colors';\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Paper,\n  Select,\n  SelectChangeEvent,\n  Skeleton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n  useTheme,\n} from '@mui/material';\nimport { Organization } from 'fhir/r4b';\nimport React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { INSURANCES_URL } from '../../../App';\nimport { INSURANCE_ROWS_PER_PAGE } from '../../../constants';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { BooleanStateChip } from '../..';\nimport { useInsurancesQuery } from './telemed-admin.queries';\n\nenum IsActiveStatus {\n  active,\n  deactivated,\n}\n\nexport default function Insurances(): ReactElement {\n  const theme = useTheme();\n  // set up the pagination states\n  const [rowsPerPage, setRowsPerPage] = React.useState(INSURANCE_ROWS_PER_PAGE);\n  const [pageNumber, setPageNumber] = React.useState(0);\n  const [searchText, setSearchText] = React.useState('');\n  const [activeFilter, setActiveFilter] = React.useState<IsActiveStatus | ''>('');\n\n  const { data, isFetching } = useInsurancesQuery();\n\n  // Filter insurances based on filters and search\n  const filteredInsurances = React.useMemo(() => {\n    const newData: Organization[] | undefined = data\n      ?.sort((a, b) => a.name?.localeCompare(b.name ?? '') ?? 0)\n      .filter((insurance: Organization) => {\n        if (activeFilter === IsActiveStatus.deactivated && insurance.active !== false) {\n          return false;\n        }\n        return searchText ? insurance.name?.toLowerCase().includes(searchText.toLowerCase()) : true;\n      });\n\n    return newData || [];\n  }, [activeFilter, data, searchText]);\n\n  // For pagination, only include the rows that are on the current page\n  const currentPagesEntities = React.useMemo(\n    () =>\n      filteredInsurances.slice(\n        pageNumber * rowsPerPage, // skip over the rows from previous pages\n        (pageNumber + 1) * rowsPerPage // only show the rows from the current page\n      ),\n    [pageNumber, filteredInsurances, rowsPerPage]\n  );\n\n  // Handle pagination\n  const handleChangePage = (_: unknown, newPageNumber: number): void => {\n    setPageNumber(newPageNumber);\n  };\n\n  // Handle changing the number of rows per page\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setRowsPerPage(parseInt(event.target.value));\n    setPageNumber(0);\n  };\n\n  // Handle changing the search text\n  const handleChangeSearchText = (event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void =>\n    setSearchText(event.target.value);\n\n  // Handle change status\n  const handleStatusChange = (ev: SelectChangeEvent<IsActiveStatus | ''>): void => {\n    setActiveFilter(ev.target.value as IsActiveStatus | '');\n  };\n\n  const skeletonRow = (key: string): JSX.Element => (\n    <TableRow key={key}>\n      <TableCell>\n        <Skeleton width={100} height=\"100%\" />\n      </TableCell>\n      <TableCell>\n        <Skeleton width={35} height={20} />\n      </TableCell>\n    </TableRow>\n  );\n\n  return (\n    <Paper sx={{ padding: 2 }}>\n      <TableContainer>\n        <Grid container spacing={2} paddingTop={1} display=\"flex\" alignItems=\"center\">\n          <Grid item xs={12} sm={5} marginTop={-0.5}>\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              label=\"Insurance\"\n              onChange={(e) => {\n                if (pageNumber !== 0) setPageNumber(0);\n                handleChangeSearchText(e);\n              }}\n              InputProps={{ endAdornment: <SearchIcon /> }}\n              margin=\"dense\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={5} paddingTop={5}>\n            <FormControl fullWidth>\n              <InputLabel id=\"select-insurance-status-filter\">Status</InputLabel>\n              <Select\n                labelId=\"select-insurance-status-filter\"\n                margin=\"dense\"\n                defaultValue={''}\n                input={<OutlinedInput label=\"Status\" />}\n                onChange={handleStatusChange}\n              >\n                <MenuItem value={''}>None</MenuItem>\n                <MenuItem value={IsActiveStatus.active}>Active</MenuItem>\n                <MenuItem value={IsActiveStatus.deactivated}>Deactivated</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={2} display={'flex'}>\n            <Link to={`${INSURANCES_URL}/new`} style={{ width: '100%' }}>\n              <Button\n                sx={{\n                  borderRadius: 100,\n                  textTransform: 'none',\n                  width: '100%',\n                  fontWeight: 600,\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                <AddIcon />\n                <Typography fontWeight=\"bold\">Add new</Typography>\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n\n        <Table sx={{ minWidth: 650 }} aria-label=\"locationsTable\">\n          {/* Label Row */}\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ fontWeight: 'bold', width: '50%' }}>Display name</TableCell>\n              <TableCell sx={{ fontWeight: 'bold' }} align=\"left\">\n                Status\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {isFetching && [1, 2, 3].map((id) => skeletonRow('skeleton-row-' + id))}\n            {currentPagesEntities.map((insurance: Organization, idx: number) => {\n              const displayName = insurance.name;\n              const isActive = insurance.active !== false;\n              const isActiveLabel = isActive ? 'ACTIVE' : 'DEACTIVATED';\n              return (\n                <TableRow key={idx}>\n                  <TableCell>\n                    <Link\n                      to={`${INSURANCES_URL}/${insurance.id}`}\n                      style={{\n                        display: 'contents',\n                        color: theme.palette.primary.main,\n                      }}\n                    >\n                      {displayName}\n                    </Link>\n                  </TableCell>\n                  <TableCell\n                    align=\"left\"\n                    sx={{\n                      color: otherColors.tableRow,\n                    }}\n                  >\n                    {isFetching ? (\n                      <Skeleton width={35} height={20} />\n                    ) : (\n                      <BooleanStateChip label={isActiveLabel} state={isActive} />\n                    )}\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n\n        {/* Table Pagination */}\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 50, 100]}\n          component=\"div\"\n          count={filteredInsurances.length}\n          rowsPerPage={rowsPerPage}\n          page={pageNumber}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          data-testid={dataTestIds.pagination.paginationContainer}\n        />\n      </TableContainer>\n    </Paper>\n  );\n}\n"]}