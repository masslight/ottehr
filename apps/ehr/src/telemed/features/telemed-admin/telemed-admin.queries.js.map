{"version":3,"file":"telemed-admin.queries.js","sourceRoot":"","sources":["telemed-admin.queries.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Extension, Location, Organization } from 'fhir/r4b';\nimport { useMutation, useQuery } from 'react-query';\nimport {\n  FHIR_EXTENSION,\n  INSURANCE_SETTINGS_MAP,\n  isLocationVirtual,\n  ORG_TYPE_CODE_SYSTEM,\n  ORG_TYPE_PAYER_CODE,\n} from 'utils';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport { InsuranceData } from './EditInsurance';\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useStatesQuery = () => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['state-locations', { oystehr }],\n    async () => {\n      const resources = await oystehr!.fhir.search<Location>({\n        resourceType: 'Location',\n        params: [\n          {\n            name: 'address-state:missing',\n            value: 'false',\n          },\n        ],\n      });\n\n      return resources.unbundle().filter(isLocationVirtual);\n    },\n    {\n      enabled: !!oystehr,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useInsurancesQuery = (id?: string, enabled?: boolean) => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['insurances', { oystehr, id }],\n    async () => {\n      const searchParams = [];\n      let offset = 0;\n      if (id) {\n        searchParams.push({\n          name: '_id',\n          value: id,\n        });\n      }\n      searchParams.push(\n        {\n          name: '_count',\n          value: '1000',\n        },\n        {\n          name: 'type',\n          value: `${ORG_TYPE_CODE_SYSTEM}|${ORG_TYPE_PAYER_CODE}`,\n        },\n        {\n          name: '_offset',\n          value: offset,\n        }\n      );\n      let plans: Organization[] = [];\n      let resources = await oystehr!.fhir.search<Organization>({\n        resourceType: 'Organization',\n        params: searchParams,\n      });\n      plans = plans.concat(resources.unbundle());\n      while (resources.link?.find((link) => link.relation === 'next')) {\n        resources = await oystehr!.fhir.search<Organization>({\n          resourceType: 'Organization',\n          params: searchParams.map((param) => {\n            if (param.name === '_offset') {\n              return {\n                ...param,\n                value: (offset += 1000),\n              };\n            }\n            return param;\n          }),\n        });\n        plans = plans.concat(resources.unbundle());\n      }\n\n      return plans;\n    },\n    {\n      enabled: (enabled !== undefined ? enabled : true) && !!oystehr,\n      cacheTime: 0,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useInsuranceMutation = (insurancePlan?: Organization) => {\n  const { oystehr } = useApiClients();\n\n  return useMutation(['insurances', { oystehr, id: insurancePlan?.id }], async (data: InsuranceData) => {\n    const resourceExtensions = insurancePlan?.extension || [];\n    const requirementSettingsExistingExtensions = resourceExtensions.find(\n      (ext) => ext.url === FHIR_EXTENSION.InsurancePlan.insuranceRequirements.url\n    )?.extension;\n    const requirementSettingsNewExtensions = requirementSettingsExistingExtensions || [];\n\n    Object.keys(INSURANCE_SETTINGS_MAP).map((setting) => {\n      if (data[setting as keyof typeof INSURANCE_SETTINGS_MAP] === undefined) {\n        return;\n      }\n      const currentSettingExt: Extension = {\n        url: setting,\n        valueBoolean: data[setting as keyof typeof INSURANCE_SETTINGS_MAP],\n      };\n\n      const existingExtIndex = requirementSettingsNewExtensions.findIndex((ext) => ext.url === currentSettingExt.url);\n      if (existingExtIndex >= 0) {\n        requirementSettingsNewExtensions[existingExtIndex] = currentSettingExt;\n      } else {\n        requirementSettingsNewExtensions.push(currentSettingExt);\n      }\n    });\n\n    const resource: Organization = {\n      resourceType: 'Organization',\n      active: data.active ?? true,\n      name: data.displayName,\n      type: [\n        {\n          coding: [\n            {\n              system: ORG_TYPE_CODE_SYSTEM,\n              code: ORG_TYPE_PAYER_CODE,\n            },\n          ],\n        },\n      ],\n    };\n    if (!requirementSettingsExistingExtensions) {\n      resourceExtensions?.push({\n        url: FHIR_EXTENSION.InsurancePlan.insuranceRequirements.url,\n        extension: requirementSettingsNewExtensions,\n      });\n    }\n    resource.extension = resourceExtensions;\n\n    if (!oystehr) throw new Error('Oystehr is not defined');\n    let prom: Promise<Organization>;\n    if (data.id) {\n      resource.id = data.id;\n      prom = oystehr.fhir.update<Organization>(resource);\n    } else {\n      prom = oystehr.fhir.create<Organization>(resource);\n    }\n    const response = await prom;\n    return response;\n  });\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useInsuranceOrganizationsQuery = () => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['insurance-organizations', { oystehr }],\n    async () => {\n      const resources = await oystehr!.fhir.search<Organization>({\n        resourceType: 'Organization',\n        params: [\n          {\n            name: 'type',\n            value: `${ORG_TYPE_CODE_SYSTEM}|${ORG_TYPE_PAYER_CODE}`,\n          },\n        ],\n      });\n\n      return resources.unbundle();\n    },\n    {\n      enabled: !!oystehr,\n    }\n  );\n};\n"]}