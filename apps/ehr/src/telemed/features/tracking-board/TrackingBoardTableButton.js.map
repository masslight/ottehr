{"version":3,"file":"TrackingBoardTableButton.js","sourceRoot":"","sources":["TrackingBoardTableButton.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gCAAyC;AAEzC,2CAA6C;AAC7C,qDAA+C;AAC/C,+BAA8G;AAC9G,kEAA+D;AAC/D,+CAAsD;AACtD,qCAA8D;AAC9D,uEAAsE;AACtE,qCAAwE;AAExE,IAAM,UAAU,GAAG;IACjB,YAAY,EAAE,CAAC;IACf,aAAa,EAAE,MAAM;IACrB,QAAQ,EAAE,MAAM;IAChB,UAAU,EAAE,GAAG;CAChB,CAAC;AAEK,IAAM,wBAAwB,GAAuD,UAAC,KAAK;IACxF,IAAA,WAAW,GAAK,KAAK,YAAV,CAAW;IAE9B,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,IAAM,QAAQ,GAAG,IAAA,iDAAyC,GAAE,CAAC;IAC7D,IAAM,QAAQ,GAAG,IAAA,8BAAW,GAAE,CAAC;IAC/B,IAAM,WAAW,GAAG,IAAA,4BAAc,GAAE,CAAC;IAErC,IAAM,eAAe,GAAG,UAAC,KAAe;QACtC,QAAQ,CAAC,gCAAyB,WAAW,CAAC,EAAE,CAAE,EAAE,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;IACjE,CAAC,CAAC;IAEF,IAAM,YAAY,GAAG,UAAO,SAAmC,EAAE,UAAoB;;;;oBACnF,IAAI,CAAC,SAAS,EAAE,CAAC;wBACf,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;oBAC5C,CAAC;oBACD,qBAAM,QAAQ,CAAC,WAAW,CAAC,EAAE,SAAS,WAAA,EAAE,aAAa,EAAE,WAAW,CAAC,EAAE,EAAE,SAAS,WAAA,EAAE,EAAE,EAAE,CAAC,EAAA;;oBAAvF,SAAuF,CAAC;yBAEpF,UAAU,EAAV,wBAAU;oBACZ,qBAAM,WAAW,CAAC,iBAAiB,CAAC,EAAE,QAAQ,EAAE,CAAC,sBAAsB,CAAC,EAAE,CAAC,EAAA;;oBAA3E,SAA2E,CAAC;;;;;SAE/E,CAAC;IAEF,IAAM,mBAAmB,GAAG,UAAO,SAAmC;;;wBACpE,qBAAM,YAAY,CAAC,SAAS,CAAC,EAAA;;oBAA7B,SAA6B,CAAC;oBAC9B,eAAe,EAAE,CAAC;;;;SACnB,CAAC;IAEM,IAAA,IAAI,GAAK,IAAA,uCAA+B,EAAC,EAAE,WAAW,aAAA,EAAE,CAAC,KAArD,CAAsD;IAElE,QAAQ,IAAI,EAAE,CAAC;QACb,KAAK,eAAe,CAAC;QACrB,KAAK,cAAc,CAAC,CAAC,CAAC;YACpB,OAAO,CACL,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,cAAM,OAAA,eAAe,EAAE,EAAjB,CAAiB,CAAC,CACjC,OAAO,CAAC,CAAC,IAAI,KAAK,eAAe,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAC7D,EAAE,CAAC,CAAC,UAAU,CAAC,CACf,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,uBAAuB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAEhF;;QACF,EAAE,mBAAa,CAAC,CACjB,CAAC;QACJ,CAAC;QACD,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,OAAO,CACL,CAAC,+BAAkB,CACjB,KAAK,CAAC,yCAAyC,CAC/C,QAAQ,CAAC,CAAC,cAAM,OAAA,mBAAmB,CAAC,oCAA4B,CAAC,WAAW,CAAC,CAAC,EAA9D,CAA8D,CAAC,CAC/E,aAAa,CAAC,CAAC;oBACb,OAAO,EAAE;wBACP,IAAI,EAAE,WAAW;qBAClB;oBACD,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;iBACzB,CAAC,CAEF;UAAA,CAAC,UAAC,UAAU,IAAK,OAAA,CACf,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,UAAU,CAAC,CACpB,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC5B,OAAO,CAAC,WAAW,CACnB,EAAE,CAAC,CAAC,UAAU,CAAC,CACf,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAElE;;YACF,EAAE,mBAAa,CAAC,CACjB,EAVgB,CAUhB,CACH;QAAA,EAAE,+BAAkB,CAAC,CACtB,CAAC;QACJ,CAAC;QACD,KAAK,UAAU,CAAC,CAAC,CAAC;YAChB,OAAO,CACL,CAAC,+BAAkB,CACjB,KAAK,CAAC,2CAA2C,CACjD,QAAQ,CAAC,CAAC,cAAM,OAAA,YAAY,CAAC,oCAA4B,CAAC,KAAK,EAAE,IAAI,CAAC,EAAtD,CAAsD,CAAC,CACvE,aAAa,CAAC,CAAC;oBACb,OAAO,EAAE;wBACP,IAAI,EAAE,UAAU;wBAChB,KAAK,EAAE,OAAO;qBACf;oBACD,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;iBACzB,CAAC,CAEF;UAAA,CAAC,UAAC,UAAU,IAAK,OAAA,CACf,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,UAAU,CAAC,CACpB,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC5B,KAAK,CAAC,OAAO,CACb,OAAO,CAAC,UAAU,CAClB,EAAE,CAAC,CAAC,UAAU,CAAC,CAEf;;YACF,EAAE,mBAAa,CAAC,CACjB,EAVgB,CAUhB,CACH;QAAA,EAAE,+BAAkB,CAAC,CACtB,CAAC;QACJ,CAAC;QACD,KAAK,WAAW,CAAC,CAAC,CAAC;YACjB,OAAO,CACL,CAAC,mBAAa,CACZ,OAAO,CAAC,CAAC,cAAM,OAAA,eAAe,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAApC,CAAoC,CAAC,CACpD,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC5B,OAAO,CAAC,WAAW,CACnB,EAAE,CAAC,CAAC,UAAU,CAAC,CAEf;;QACF,EAAE,mBAAa,CAAC,CACjB,CAAC;QACJ,CAAC;QACD,OAAO,CAAC,CAAC,CAAC;YACR,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;AACH,CAAC,CAAC;AAjHW,QAAA,wBAAwB,4BAiHnC","sourcesContent":["import { LoadingButton } from '@mui/lab';\nimport { FC } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { TelemedAppointmentInformation, TelemedAppointmentStatus, TelemedAppointmentStatusEnum } from 'utils';\nimport { dataTestIds } from '../../../constants/data-test-ids';\nimport { ConfirmationDialog } from '../../components';\nimport { useTrackingBoardTableButtonType } from '../../hooks';\nimport { useOystehrAPIClient } from '../../hooks/useOystehrAPIClient';\nimport { useChangeTelemedAppointmentStatusMutation } from '../../state';\n\nconst baseStyles = {\n  borderRadius: 8,\n  textTransform: 'none',\n  fontSize: '15px',\n  fontWeight: 500,\n};\n\nexport const TrackingBoardTableButton: FC<{ appointment: TelemedAppointmentInformation }> = (props) => {\n  const { appointment } = props;\n\n  const apiClient = useOystehrAPIClient();\n  const mutation = useChangeTelemedAppointmentStatusMutation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n\n  const goToAppointment = (state?: unknown): void => {\n    navigate(`/telemed/appointments/${appointment.id}`, { state });\n  };\n\n  const changeStatus = async (newStatus: TelemedAppointmentStatus, invalidate?: boolean): Promise<void> => {\n    if (!apiClient) {\n      throw new Error('api client not defined');\n    }\n    await mutation.mutateAsync({ apiClient, appointmentId: appointment.id, newStatus }, {});\n\n    if (invalidate) {\n      await queryClient.invalidateQueries({ queryKey: ['telemed-appointments'] });\n    }\n  };\n\n  const changeStatusAndGoTo = async (newStatus: TelemedAppointmentStatus): Promise<void> => {\n    await changeStatus(newStatus);\n    goToAppointment();\n  };\n\n  const { type } = useTrackingBoardTableButtonType({ appointment });\n\n  switch (type) {\n    case 'viewContained':\n    case 'viewOutlined': {\n      return (\n        <LoadingButton\n          onClick={() => goToAppointment()}\n          variant={type === 'viewContained' ? 'contained' : 'outlined'}\n          sx={baseStyles}\n          data-testid={dataTestIds.telemedEhrFlow.trackingBoardViewButton(appointment.id)}\n        >\n          View\n        </LoadingButton>\n      );\n    }\n    case 'assignMe': {\n      return (\n        <ConfirmationDialog\n          title=\"Do you want to assign this appointment?\"\n          response={() => changeStatusAndGoTo(TelemedAppointmentStatusEnum['pre-video'])}\n          actionButtons={{\n            proceed: {\n              text: 'Assign me',\n            },\n            back: { text: 'Cancel' },\n          }}\n        >\n          {(showDialog) => (\n            <LoadingButton\n              onClick={showDialog}\n              loading={mutation.isLoading}\n              variant=\"contained\"\n              sx={baseStyles}\n              data-testid={dataTestIds.telemedEhrFlow.trackingBoardAssignButton}\n            >\n              Assign me\n            </LoadingButton>\n          )}\n        </ConfirmationDialog>\n      );\n    }\n    case 'unassign': {\n      return (\n        <ConfirmationDialog\n          title=\"Do you want to unassign this appointment?\"\n          response={() => changeStatus(TelemedAppointmentStatusEnum.ready, true)}\n          actionButtons={{\n            proceed: {\n              text: 'Unassign',\n              color: 'error',\n            },\n            back: { text: 'Cancel' },\n          }}\n        >\n          {(showDialog) => (\n            <LoadingButton\n              onClick={showDialog}\n              loading={mutation.isLoading}\n              color=\"error\"\n              variant=\"outlined\"\n              sx={baseStyles}\n            >\n              Unassign\n            </LoadingButton>\n          )}\n        </ConfirmationDialog>\n      );\n    }\n    case 'reconnect': {\n      return (\n        <LoadingButton\n          onClick={() => goToAppointment({ reconnect: true })}\n          loading={mutation.isLoading}\n          variant=\"contained\"\n          sx={baseStyles}\n        >\n          Reconnect\n        </LoadingButton>\n      );\n    }\n    default: {\n      return null;\n    }\n  }\n};\n"]}