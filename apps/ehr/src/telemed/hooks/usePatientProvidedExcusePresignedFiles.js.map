{"version":3,"file":"usePatientProvidedExcusePresignedFiles.js","sourceRoot":"","sources":["usePatientProvidedExcusePresignedFiles.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAA8C;AAC9C,+BAA4C;AAC5C,+BAAyC;AACzC,2DAAiE;AACjE,gEAA+D;AAC/D,kCAA+C;AAExC,IAAM,sCAAsC,GAAG;IAI5C,IAAA,sBAAsB,GAAK,IAAA,sBAAQ,GAAE,uBAAf,CAAgB;IACxC,IAAA,KAA4D,IAAA,gBAAQ,EAAqB,SAAS,CAAC,EAAlG,yBAAyB,QAAA,EAAE,4BAA4B,QAA2C,CAAC;IACpG,IAAA,KAAwD,IAAA,gBAAQ,EAAqB,SAAS,CAAC,EAA9F,uBAAuB,QAAA,EAAE,0BAA0B,QAA2C,CAAC;IAE9F,IAAA,kBAAkB,GAAK,IAAA,2BAAY,EAAC,2BAAmB,EAAE,CAAC,oBAAoB,CAAC,CAAC,mBAA9D,CAA+D;IAEzF,IAAA,iBAAS,EAAC;QACR,SAAe,wBAAwB;;;;;;;4BAEjB,qBAAM,sBAAsB,EAAE,EAAA;;4BAA1C,SAAS,GAAG,SAA8B;4BAE1C,WAAW,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,QAAQ,CAAC,UAAG,wBAAgB,qBAAkB,CAAC,EAApD,CAAoD,CAAC,CAAC;iCACxG,WAAW,EAAX,wBAAW;4BACc,qBAAM,IAAA,kCAAmB,EAAC,WAAW,EAAE,SAAS,CAAC,EAAA;;4BAAtE,kBAAkB,GAAG,SAAiD;4BAC5E,4BAA4B,CAAC,kBAAkB,CAAC,CAAC;;;4BAE7C,SAAS,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,QAAQ,CAAC,UAAG,wBAAgB,mBAAgB,CAAC,EAAlD,CAAkD,CAAC,CAAC;iCACpG,SAAS,EAAT,wBAAS;4BACc,qBAAM,IAAA,kCAAmB,EAAC,SAAS,EAAE,SAAS,CAAC,EAAA;;4BAAlE,gBAAgB,GAAG,SAA+C;4BACxE,0BAA0B,CAAC,gBAAgB,CAAC,CAAC;;;;;4BAG/C,OAAO,CAAC,KAAK,CAAC,mDAAmD,CAAC,CAAC;;;;;;SAEtE;QAED,IAAI,CAAA,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,MAAM,IAAG,CAAC,EAAE,CAAC;YACnC,KAAK,wBAAwB,EAAE,CAAC;QAClC,CAAC;IACH,CAAC,EAAE,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC,CAAC;IAEjD,OAAO,EAAE,yBAAyB,2BAAA,EAAE,uBAAuB,yBAAA,EAAE,CAAC;AAChE,CAAC,CAAC;AApCW,QAAA,sCAAsC,0CAoCjD","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\nimport { useEffect, useState } from 'react';\nimport { SCHOOL_WORK_NOTE } from 'utils';\nimport { getPresignedFileUrl } from '../../helpers/files.helper';\nimport { getSelectors } from '../../shared/store/getSelectors';\nimport { useAppointmentStore } from '../state';\n\nexport const usePatientProvidedExcusePresignedFiles = (): {\n  patientSchoolPresignedUrl: string | undefined;\n  patientWorkPresignedUrl: string | undefined;\n} => {\n  const { getAccessTokenSilently } = useAuth0();\n  const [patientSchoolPresignedUrl, setPatientSchoolPresignedUrl] = useState<string | undefined>(undefined);\n  const [patientWorkPresignedUrl, setPatientWorkPresignedUrl] = useState<string | undefined>(undefined);\n\n  const { schoolWorkNoteUrls } = getSelectors(useAppointmentStore, ['schoolWorkNoteUrls']);\n\n  useEffect(() => {\n    async function getPresignedTemplateUrls(): Promise<void> {\n      try {\n        const authToken = await getAccessTokenSilently();\n\n        const schoolZ3Url = schoolWorkNoteUrls.find((name) => name.includes(`${SCHOOL_WORK_NOTE}-template-school`));\n        if (schoolZ3Url) {\n          const schoolPresignedUrl = await getPresignedFileUrl(schoolZ3Url, authToken);\n          setPatientSchoolPresignedUrl(schoolPresignedUrl);\n        }\n        const workZ3Url = schoolWorkNoteUrls.find((name) => name.includes(`${SCHOOL_WORK_NOTE}-template-work`));\n        if (workZ3Url) {\n          const workPresignedUrl = await getPresignedFileUrl(workZ3Url, authToken);\n          setPatientWorkPresignedUrl(workPresignedUrl);\n        }\n      } catch {\n        console.error('Error while trying to get template presigned urls');\n      }\n    }\n\n    if (schoolWorkNoteUrls?.length > 0) {\n      void getPresignedTemplateUrls();\n    }\n  }, [getAccessTokenSilently, schoolWorkNoteUrls]);\n\n  return { patientSchoolPresignedUrl, patientWorkPresignedUrl };\n};\n"]}