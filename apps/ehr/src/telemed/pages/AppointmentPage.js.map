{"version":3,"file":"AppointmentPage.js","sourceRoot":"","sources":["AppointmentPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box } from '@mui/material';\nimport { GlobalStyles, lightTheme, MeetingProvider } from 'amazon-chime-sdk-component-library-react';\nimport {\n  Appointment,\n  DocumentReference,\n  Encounter,\n  FhirResource,\n  Location,\n  Patient,\n  Practitioner,\n  QuestionnaireResponse,\n} from 'fhir/r4b';\nimport { FC, useEffect, useMemo, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport {\n  getQuestionnaireResponseByLinkId,\n  isLocationVirtual,\n  mapStatusToTelemed,\n  RefreshableAppointmentData,\n  SCHOOL_WORK_NOTE_CODE,\n  SCHOOL_WORK_NOTE_TEMPLATE_CODE,\n  TelemedAppointmentStatusEnum,\n} from 'utils';\nimport { getSelectors } from '../../shared/store/getSelectors';\nimport HearingRelayPopup from '../components/HearingRelayPopup';\nimport PreferredLanguagePopup from '../components/PreferredLanguagePopup';\nimport {\n  AppointmentFooter,\n  AppointmentHeader,\n  AppointmentSidePanel,\n  AppointmentTabs,\n  VideoChatContainer,\n} from '../features/appointment';\nimport { useResetAppointmentStore } from '../hooks';\nimport { useAppointmentStore, useGetAppointment, useRefreshableAppointmentData, useVideoCallStore } from '../state';\nimport { arraysEqual, extractPhotoUrlsFromAppointmentData, extractReviewAndSignAppointmentData } from '../utils';\n\nexport const AppointmentPage: FC = () => {\n  const { id } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { meetingData } = getSelectors(useVideoCallStore, ['meetingData']);\n\n  const {\n    appointment,\n    encounter,\n    patientPhotoUrls: currentPatientPhotosUrls,\n  } = getSelectors(useAppointmentStore, ['appointment', 'encounter', 'patientPhotoUrls']);\n\n  const [wasHearingRelayPopupOpen, setWasHearingRelayPopupOpen] = useState(false);\n  const [shouldHearingRelayPopupBeOpened, setShouldHearingRelayPopupBeOpened] = useState(false);\n  const [wasPreferredLanguagePopupOpen, setWasPreferredLanguagePopupOpen] = useState(false);\n  const [shouldPreferredLanguagePopupBeOpened, setShouldPreferredLanguagePopupBeOpened] = useState(false);\n  const [preferredLanguage, setPreferredLanguage] = useState<string | undefined>(undefined);\n  const isPreferredLanguagePopupOpen = shouldPreferredLanguagePopupBeOpened && !wasPreferredLanguagePopupOpen;\n  const isHearingRelayPopupOpen =\n    shouldHearingRelayPopupBeOpened && !wasHearingRelayPopupOpen && !isPreferredLanguagePopupOpen;\n\n  const closeHearingRelayPopup = (): void => {\n    setWasHearingRelayPopupOpen(true);\n  };\n\n  const closePreferredLanguagePopup = (): void => {\n    setWasPreferredLanguagePopupOpen(true);\n  };\n\n  const shouldPeriodicallyRefreshAppointmentData = useMemo(() => {\n    const appointmentStatus = mapStatusToTelemed(encounter.status, appointment?.status);\n    return (\n      appointmentStatus === TelemedAppointmentStatusEnum.ready ||\n      appointmentStatus === TelemedAppointmentStatusEnum['pre-video'] ||\n      appointmentStatus === TelemedAppointmentStatusEnum['on-video']\n    );\n  }, [appointment, encounter]);\n\n  useRefreshableAppointmentData(\n    {\n      appointmentId: id,\n      isEnabled: shouldPeriodicallyRefreshAppointmentData,\n    },\n    (refreshedData: RefreshableAppointmentData) => {\n      const updatedPatientConditionPhotoUrs = refreshedData.patientConditionPhotoUrls;\n      const hasPhotosUpdates = !arraysEqual(currentPatientPhotosUrls, updatedPatientConditionPhotoUrs);\n      if (hasPhotosUpdates) {\n        useAppointmentStore.setState({ patientPhotoUrls: updatedPatientConditionPhotoUrs });\n      }\n    }\n  );\n\n  useGetAppointment(\n    {\n      appointmentId: id,\n    },\n    (data) => {\n      const questionnaireResponse = data?.find(\n        (resource: FhirResource) => resource.resourceType === 'QuestionnaireResponse'\n      ) as QuestionnaireResponse;\n      useAppointmentStore.setState({\n        appointment: data?.find((resource: FhirResource) => resource.resourceType === 'Appointment') as Appointment,\n        patient: data?.find((resource: FhirResource) => resource.resourceType === 'Patient') as Patient,\n        location: (data?.filter((resource: FhirResource) => resource.resourceType === 'Location') as Location[]).find(\n          (location) => !isLocationVirtual(location)\n        ),\n        locationVirtual: (\n          data?.filter((resource: FhirResource) => resource.resourceType === 'Location') as Location[]\n        ).find(isLocationVirtual),\n        practitioner: data?.find(\n          (resource: FhirResource) => resource.resourceType === 'Practitioner'\n        ) as unknown as Practitioner,\n        encounter: data?.find((resource: FhirResource) => resource.resourceType === 'Encounter') as Encounter,\n        questionnaireResponse,\n        patientPhotoUrls: extractPhotoUrlsFromAppointmentData(data),\n        schoolWorkNoteUrls:\n          (data\n            ?.filter(\n              (resource: FhirResource) =>\n                resource.resourceType === 'DocumentReference' &&\n                resource.status === 'current' &&\n                (resource.type?.coding?.[0].code === SCHOOL_WORK_NOTE_CODE ||\n                  resource.type?.coding?.[0].code === SCHOOL_WORK_NOTE_TEMPLATE_CODE)\n            )\n            .flatMap((docRef: FhirResource) => (docRef as DocumentReference).content.map((cnt) => cnt.attachment.url))\n            .filter(Boolean) as string[]) || [],\n        reviewAndSignData: extractReviewAndSignAppointmentData(data),\n      });\n\n      const relayPhone = getQuestionnaireResponseByLinkId('relay-phone', questionnaireResponse)?.answer.find(Boolean)\n        ?.valueString;\n      if (relayPhone?.toLowerCase() === 'yes') {\n        setShouldHearingRelayPopupBeOpened(true);\n      }\n      const preferredLanguage = getQuestionnaireResponseByLinkId('preferred-language', questionnaireResponse)\n        ?.answer?.[0]?.valueString;\n      setPreferredLanguage(preferredLanguage);\n      if (preferredLanguage && preferredLanguage !== 'English') {\n        setShouldPreferredLanguagePopupBeOpened(true);\n      }\n    }\n  );\n\n  useResetAppointmentStore();\n\n  const [tab] = useState(searchParams.get('tab'));\n  useEffect(() => {\n    if (tab) {\n      useAppointmentStore.setState({ currentTab: tab });\n      searchParams.delete('tab');\n      setSearchParams(searchParams);\n    }\n  }, [searchParams, setSearchParams, tab]);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n      }}\n    >\n      <AppointmentHeader />\n\n      <PreferredLanguagePopup\n        isOpen={isPreferredLanguagePopupOpen}\n        onClose={closePreferredLanguagePopup}\n        preferredLanguage={preferredLanguage}\n      />\n\n      <HearingRelayPopup isOpen={isHearingRelayPopupOpen} onClose={closeHearingRelayPopup} />\n\n      <Box sx={{ display: 'flex', flex: 1 }}>\n        <AppointmentSidePanel />\n\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            m: 3,\n            width: '100%',\n          }}\n        >\n          {meetingData && (\n            <ThemeProvider theme={lightTheme}>\n              <GlobalStyles />\n              <MeetingProvider>\n                <VideoChatContainer />\n              </MeetingProvider>\n            </ThemeProvider>\n          )}\n\n          <Box sx={{ width: '100%' }}>\n            <AppointmentTabs />\n          </Box>\n        </Box>\n      </Box>\n\n      <AppointmentFooter />\n\n      <div id=\"prescribe-dialog\" />\n    </Box>\n  );\n};\n"]}