{"version":3,"file":"PatientVisitDetailsPage.js","sourceRoot":"","sources":["PatientVisitDetailsPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Box, Grid } from '@mui/material';\nimport { Appointment, Location, Patient, QuestionnaireResponse } from 'fhir/r4b';\nimport { FC } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getInsuranceOrgById, isLocationVirtual } from 'utils';\nimport { LoadingScreen } from '../../components/LoadingScreen';\nimport { useApiClients } from '../../hooks/useAppClients';\nimport PageContainer from '../../layout/PageContainer';\nimport {\n  AboutPatientContainer,\n  BreadCrumbs,\n  CompletedFormsContainer,\n  ContactContainer,\n  InsuranceCardAndPhotoContainer,\n  InsuranceContainer,\n  PatientDetailsContainer,\n  ResponsibleInformationContainer,\n  SecondaryInsuranceContainer,\n  TitleRow,\n} from '../features/patient-visit-details/components';\nimport { useResetAppointmentStore } from '../hooks';\nimport { useAppointmentStore, useGetAppointment, VisitResources } from '../state';\n\nexport const PatientVisitDetails: FC = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const appointmentId = queryParams.get('appointment') || undefined;\n\n  useResetAppointmentStore();\n\n  const { oystehr } = useApiClients();\n  const { isFetching } = useGetAppointment(\n    {\n      appointmentId,\n    },\n    async (data) => {\n      const appointment = data?.find(\n        (resource: VisitResources) => resource.resourceType === 'Appointment'\n      ) as Appointment;\n      const patient = data?.find((resource: VisitResources) => resource.resourceType === 'Patient') as Patient;\n      const location = (\n        data?.filter((resource: VisitResources) => resource.resourceType === 'Location') as Location[]\n      ).find((location) => !isLocationVirtual(location));\n      const locationVirtual = (\n        data?.filter((resource: VisitResources) => resource.resourceType === 'Location') as Location[]\n      ).find((location) => isLocationVirtual(location));\n      const questionnaireResponse = data?.find(\n        (resource: VisitResources) => resource.resourceType === 'QuestionnaireResponse'\n      ) as QuestionnaireResponse;\n\n      // Update insurance in questionnaireResponse accordingly insurance plan id stored in questionnaireResponse\n      if (questionnaireResponse?.item) {\n        for (const item of questionnaireResponse.item) {\n          if (\n            (item.linkId === 'insurance-carrier' || item.linkId === 'insurance-carrier-2') &&\n            item.answer?.[0]?.valueString\n          ) {\n            const insuranceId = item?.answer?.[0]?.valueString;\n            try {\n              if (oystehr) {\n                const insuranceOrg = await getInsuranceOrgById(insuranceId, oystehr);\n                item.answer[0].valueString = insuranceOrg.name || '-';\n              }\n            } catch (error) {\n              console.error(`Error fetching Organization with id ${insuranceId}:`, error);\n            }\n          }\n        }\n      }\n\n      useAppointmentStore.setState({\n        appointment,\n        patient,\n        location,\n        locationVirtual,\n        questionnaireResponse,\n      });\n    }\n  );\n\n  return (\n    <PageContainer tabTitle={'Patient Visit Details'}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {isFetching ? (\n          <LoadingScreen />\n        ) : (\n          <Box sx={{ maxWidth: '1200px' }}>\n            <BreadCrumbs />\n            <TitleRow />\n            <InsuranceCardAndPhotoContainer />\n            <Grid container direction=\"row\">\n              <Grid item xs={6} paddingRight={2}>\n                <AboutPatientContainer />\n                <ContactContainer />\n                <PatientDetailsContainer />\n              </Grid>\n              <Grid item xs={6} paddingLeft={2}>\n                <InsuranceContainer />\n                <SecondaryInsuranceContainer />\n                <ResponsibleInformationContainer />\n                <CompletedFormsContainer />\n              </Grid>\n            </Grid>\n          </Box>\n        )}\n      </Box>\n    </PageContainer>\n  );\n};\n"]}