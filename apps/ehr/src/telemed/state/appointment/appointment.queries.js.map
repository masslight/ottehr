{"version":3,"file":"appointment.queries.js","sourceRoot":"","sources":["appointment.queries.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,+BAAiC;AACjC,uCAA4C;AAC5C,+BAAkC;AAClC,2CAAoE;AACpE,+BAqBe;AACf,gDAA2G;AAC3G,8DAA6D;AAC7D,8DAAyE;AACzE,mEAAkE;AAElE,qCAA6D;AAC7D,uEAAsE;AACtE,qCAAoG;AACpG,yDAA0D;AAEnD,IAAM,uBAAuB,GAAG,UACrC,EAMC,EACD,SAAwD;QANtD,aAAa,mBAAA,EACb,cAAc,oBAAA;IAOR,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,sBAAQ,EACb,CAAC,qCAAqC,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,EAC1D;;;;yBACM,CAAA,OAAO,IAAI,aAAa,CAAA,EAAxB,wBAAwB;oBAExB,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAA0B;4BACjD,YAAY,EAAE,aAAa;4BAC3B,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;gCACrC,EAAE,IAAI,EAAE,qBAAqB,EAAE,KAAK,EAAE,uBAAuB,EAAE;6BAChE;yBACF,CAAC,EAAA;wBAPJ,sBAAO,CACL,SAME,CACH,CAAC,QAAQ,EAAE,EAAC;wBAEf,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;;;SAC7E,EACD;QACE,OAAO,EAAE,cAAc;QACvB,SAAS,EAAE,UAAC,IAAI;YACd,IAAM,iBAAiB,GAAG,IAAA,2CAAmC,EAAC,IAAI,CAAC,CAAC;YACpE,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAC/B,CAAC;QACD,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;QACxE,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC;AAtCW,QAAA,uBAAuB,2BAsClC;AAEK,IAAM,6BAA6B,GAAG,UAC3C,EAMC,EACD,SAAqD;AACrD,4EAA4E;;QAP1E,aAAa,mBAAA,EACb,SAAS,eAAA;IAQX,OAAO,IAAA,+CAAuC,EAC5C;QACE,aAAa,EAAE,aAAa;QAC5B,SAAS,EAAE,SAAS;QACpB,iBAAiB,EAAE,wCAA4B;KAChD,EACD,UAAC,YAAY;QACX,IAAM,aAAa,GAAG,IAAA,wCAAgC,EAAC,YAAY,CAAC,CAAC;QACrE,SAAS,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,6BAA6B,iCAsBxC;AAEK,IAAM,uCAAuC,GAAG,UACrD,EAQC,EACD,SAA2C;AAC3C,4EAA4E;;QAT1E,aAAa,mBAAA,EACb,SAAS,eAAA,EACT,iBAAiB,uBAAA;IASX,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,IAAM,cAAc,GAAG,iBAAiB,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACvF,OAAO,IAAA,sBAAQ,EACb,CAAC,sCAAsC,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,EAC3D;;;;yBACM,CAAA,OAAO,IAAI,aAAa,CAAA,EAAxB,wBAAwB;oBAExB,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAiB;4BACxC,YAAY,EAAE,aAAa;4BAC3B,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;gCACrC,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,2BAA2B,EAAE;6BAC5D;yBACF,CAAC,EAAA;wBAPJ,sBAAO,CACL,SAME,CACH,CAAC,QAAQ,EAAE,EAAC;wBAEf,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;;;SAC1E,wBAEI,cAAc,KACjB,OAAO,EAAE,SAAS,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,EAChE,SAAS,WAAA,EACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,0DAA0D,EAAE,GAAG,CAAC,CAAC;QACjF,CAAC,IAEJ,CAAC;AACJ,CAAC,CAAC;AAxCW,QAAA,uCAAuC,2CAwClD;AAIK,IAAM,iBAAiB,GAAG,UAC/B,EAIC,EACD,SAA2C;QAJzC,aAAa,mBAAA;IAMP,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,IAAM,KAAK,GAAG,IAAA,sBAAQ,EACpB,CAAC,qBAAqB,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,EAC1C;;;;yBACM,CAAA,OAAO,IAAI,aAAa,CAAA,EAAxB,wBAAwB;oBAExB,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAiB;4BACxC,YAAY,EAAE,aAAa;4BAC3B,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;gCACrC;oCACE,IAAI,EAAE,UAAU;oCAChB,KAAK,EAAE,qBAAqB;iCAC7B;gCACD;oCACE,IAAI,EAAE,UAAU;oCAChB,KAAK,EAAE,sBAAsB;iCAC9B;gCACD;oCACE,IAAI,EAAE,kBAAkB;oCACxB,KAAK,EAAE,oCAAoC;iCAC5C;gCACD;oCACE,IAAI,EAAE,qBAAqB;oCAC3B,KAAK,EAAE,uBAAuB;iCAC/B;gCACD;oCACE,IAAI,EAAE,qBAAqB;oCAC3B,KAAK,EAAE,iCAAiC;iCACzC;gCACD,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,2BAA2B,EAAE;6BAC5D;yBACF,CAAC,EAAA;wBA3BJ,sBAAO,CACL,SA0BE,CACH;yBACE,QAAQ,EAAE;yBACV,MAAM,CACL,UAAC,QAAQ;;wBACP,OAAA,QAAQ,CAAC,YAAY,KAAK,uBAAuB;6BACjD,MAAA,QAAQ,CAAC,aAAa,0CAAE,QAAQ,CAAC,iEAAiE,CAAC,CAAA;6BACnG,MAAA,QAAQ,CAAC,aAAa,0CAAE,QAAQ,CAAC,gEAAgE,CAAC,CAAA,CAAA;qBAAA,CACrG,EAAC;wBAEN,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;;;SAC1E,EACD;QACE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,aAAa,CAAC;QACnD,SAAS,WAAA;QACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;QACxE,CAAC;KACF,CACF,CAAC;IACM,IAAA,UAAU,GAAK,KAAK,WAAV,CAAW;IAE7B,IAAA,iBAAS,EAAC;QACR,uCAAmB,CAAC,QAAQ,CAAC,EAAE,oBAAoB,EAAE,UAAU,EAAE,CAAC,CAAC;IACrE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IAEjB,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAnEW,QAAA,iBAAiB,qBAmE5B;AAEK,IAAM,wBAAwB,GAAG,UACtC,EAMC,EACD,SAA+C;AAC/C,4EAA4E;;QAP1E,aAAa,mBAAA,EACb,SAAS,eAAA;IAQH,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,sBAAQ,EACb,CAAC,+BAA+B,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,EACpD;QACE,IAAI,OAAO,IAAI,aAAa,IAAI,SAAS,EAAE,CAAC;YAC1C,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;gBACxB,QAAQ,EAAE;oBACR;wBACE,MAAM,EAAE,KAAK;wBACb,GAAG,EAAE,4DAAqD,SAAS,kCAAwB,aAAa,CAAE;qBAC3G;iBACF;aACF,CAAC,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;IAC3F,CAAC,EACD;QACE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,aAAa,CAAC;QACnD,SAAS,WAAA;QACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,mEAAmE,EAAE,GAAG,CAAC,CAAC;QAC1F,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC;AAnCW,QAAA,wBAAwB,4BAmCnC;AAEK,IAAM,oCAAoC,GAAG,UAClD,EAMC,EACD,SAAwD;QANtD,aAAa,mBAAA,EACb,SAAS,eAAA;IAOH,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,sBAAQ,EACb,CAAC,+BAA+B,EAAE,EAAE,aAAa,eAAA,EAAE,CAAC,EACpD;;;;;yBACM,CAAA,OAAO,IAAI,aAAa,CAAA,EAAxB,wBAAwB;oBAExB,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAwC;4BAC/D,YAAY,EAAE,aAAa;4BAC3B,MAAM,EAAE;gCACN,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;gCACrC;oCACE,IAAI,EAAE,UAAU;oCAChB,KAAK,EAAE,qBAAqB;iCAC7B;gCACD;oCACE,IAAI,EAAE,qBAAqB;oCAC3B,KAAK,EAAE,uBAAuB;iCAC/B;6BACF;yBACF,CAAC,EAAA;;oBAdE,oBAAoB,GAAG,CAC3B,SAaE,CACH,CAAC,QAAQ,EAAE;oBAEN,WAAW,GAAG,IAAA,uBAAe,EAAC,oBAAoB,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBAE/C,qBAAM,IAAA,yCAAiC,EAAC,OAAO,EAAE,oBAAoB,CAAC,EAAA;;oBAA7F,oBAAoB,GAAG,SAAsE;oBAE7F,QAAQ,GAAG,IAAA,sBAAc,EAAC,SAAU,EAAE,oBAAoB,CAAC,CAAC;oBAElE,4CAAY,WAAW,KAAE,QAAQ,UAAA,KAAG;wBAEtC,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;;;SAC/F,EACD;QACE,eAAe,EAAE,iCAAqB;QACtC,SAAS,WAAA;QACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,2DAA2D,EAAE,GAAG,CAAC,CAAC;QAClF,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,aAAa;KACtC,CACF,CAAC;AACJ,CAAC,CAAC;AApDW,QAAA,oCAAoC,wCAoD/C;AAEK,IAAM,iBAAiB,GAAG,UAC/B,sBAA6C,EAC7C,SAAsC,EACtC,OAA+B;AAC/B,4EAA4E;;IAE5E,OAAO,IAAA,sBAAQ,EACb,CAAC,cAAc,CAAC,EAChB;;;;;oBACQ,WAAW,GAAG,uCAAmB,CAAC,QAAQ,EAAE,CAAC;oBACrC,qBAAM,sBAAsB,EAAE,EAAA;;oBAAtC,KAAK,GAAG,SAA8B;yBAExC,CAAA,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,KAAK,CAAA,EAAjC,wBAAiC;oBACZ,qBAAM,KAAK,CAChC,UAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,iCAAuB,WAAW,CAAC,SAAS,CAAC,EAAE,UAAO,EACjG;4BACE,OAAO,EAAE;gCACP,aAAa,EAAE,iBAAU,KAAK,CAAE;6BACjC;4BACD,MAAM,EAAE,KAAK;yBACd,CACF,EAAA;;oBARK,cAAc,GAAG,SAQtB;oBACY,qBAAM,cAAc,CAAC,IAAI,EAAE,EAAA;;oBAAlC,IAAI,GAAG,SAA2B;oBACxC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC;wBACvB,MAAM,IAAI,KAAK,CAAC,oDAAoD,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC/F,CAAC;oBACD,sBAAO,IAAmB,EAAC;wBAG7B,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;;;SACtD,EACD;QACE,OAAO,EAAE,KAAK;QACd,SAAS,WAAA;QACT,OAAO,SAAA;KACR,CACF,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,iBAAiB,qBAqC5B;AAEW,QAAA,yBAAyB,GAAG,wBAAwB,CAAC;AAY3D,IAAM,eAAe,GAAG,UAC7B,EAYC,EACD,SAAiG,EACjG,OAA8B;AAC9B,4EAA4E;;QAd1E,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,eAAe,qBAAA,EACf,OAAO,aAAA,EACP,eAAe,qBAAA;IAYjB,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IACrB,IAAA,oBAAoB,GAAK,IAAA,2BAAY,EAAC,uCAAmB,EAAE,CAAC,sBAAsB,CAAC,CAAC,qBAAhE,CAAiE;IACrF,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IAE/E,IAAM,GAAG,GAAsB;QAC7B,iCAAyB;QACzB,SAAS;QACT,WAAW;QACX,IAAI;QACJ,UAAU;QACV,oBAAoB;QACpB,eAAe;KAChB,CAAC;IAEF,IAAM,KAAK,GAAG,IAAA,sBAAQ,EACpB,GAAG,EACH;QACE,IAAI,SAAS,IAAI,WAAW,EAAE,CAAC;YAC7B,OAAO,SAAS,CAAC,YAAY,CAAC;gBAC5B,WAAW,aAAA;gBACX,eAAe,iBAAA;aAChB,CAAC,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;IACxE,CAAC,EACD;QACE,SAAS,EAAE,UAAC,IAAI;YACd,SAAS,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC;QACD,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAG,GAAG,CAAC,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kDAAkD,EAAE,GAAG,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB,IAAI,OAAO;QACnF,SAAS,EAAE,CAAC;QACZ,eAAe,EAAE,eAAe,IAAI,KAAK;KAC1C,CACF,CAAC;IACF,6BACK,KAAK,KACR,QAAQ,EAAE,GAAG,IACb;AACJ,CAAC,CAAC;AA5DW,QAAA,eAAe,mBA4D1B;AAEF,4EAA4E;AACrE,IAAM,gBAAgB,GAAG;IAC9B,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAChC,IAAA,SAAS,GAAK,IAAA,2BAAY,EAAC,uCAAmB,EAAE,CAAC,WAAW,CAAC,CAAC,UAArD,CAAsD;IAC/D,IAAuB,UAAU,GAAK,IAAA,sCAA8B,GAAE,sBAArC,CAAsC;IAE/E,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,eAA0D;YACrE,oEAAoE;YACpE,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAC,GAA6B,KAAK,cAAc,EAAjD,CAAiD,CAAC,EAAE,CAAC;gBAChH,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACvD,CAAC;YAED,IAAI,SAAS,IAAI,SAAS,CAAC,EAAE,EAAE,CAAC;gBAC9B,OAAO,SAAS,CAAC,aAAa,YAC5B,WAAW,EAAE,SAAS,CAAC,EAAE,IACtB,eAAe,EAClB,CAAC;YACL,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;QACxE,CAAC;QACD,KAAK,EAAE,CAAC;KACT,CAAC,CAAC;AACL,CAAC,CAAC;AAtBW,QAAA,gBAAgB,oBAsB3B;AAEF,4EAA4E;AACrE,IAAM,kBAAkB,GAAG;IAChC,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAChC,IAAA,SAAS,GAAK,uCAAmB,CAAC,QAAQ,EAAE,UAAnC,CAAoC;IAErD,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,eAAyF;YACpG,IAAI,SAAS,IAAI,SAAS,CAAC,EAAE,EAAE,CAAC;gBAC9B,OAAO,SAAS,CAAC,eAAe,YAC9B,WAAW,EAAE,SAAS,CAAC,EAAE,IACtB,eAAe,EAClB,CAAC;YACL,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;QACxE,CAAC;QACD,KAAK,EAAE,CAAC;KACT,CAAC,CAAC;AACL,CAAC,CAAC;AAhBW,QAAA,kBAAkB,sBAgB7B;AAIF,4EAA4E;AACrE,IAAM,uBAAuB,GAAG,UAAC,oBAA4B;IAC1D,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,sBAAQ,EACb,CAAC,oBAAoB,EAAE,EAAE,oBAAoB,sBAAA,EAAE,CAAC,EAChD;;YACE,IAAI,OAAO,EAAE,CAAC;gBACZ,sBAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC,EAAC;YACvE,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;;SAC3C,EACD;QACE,OAAO,EAAE,UAAC,IAAI;YACZ,IAAA,2BAAe,EAAC,mEAAmE,EAAE;gBACnF,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,OAAO,CAAC,oBAAoB,CAAC;QACtC,gBAAgB,EAAE,IAAI;QACtB,SAAS,EAAE,4BAAgB;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,uBAAuB,2BAsBlC;AAEF,4EAA4E;AACrE,IAAM,qBAAqB,GAAG,UAAC,mBAA2B;IACvD,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,sBAAQ,EACb,CAAC,kBAAkB,EAAE,EAAE,mBAAmB,qBAAA,EAAE,CAAC,EAC7C;;YACE,IAAI,OAAO,EAAE,CAAC;gBACZ,sBAAO,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,CAAC,EAAC;YACpE,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;;SAC3C,EACD;QACE,OAAO,EAAE,UAAC,IAAI;YACZ,IAAA,2BAAe,EAAC,mEAAmE,EAAE;gBACnF,OAAO,EAAE,OAAO;aACjB,CAAC,CAAC;QACL,CAAC;QACD,OAAO,EAAE,OAAO,CAAC,mBAAmB,CAAC;QACrC,gBAAgB,EAAE,IAAI;QACtB,SAAS,EAAE,4BAAgB;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AAtBW,QAAA,qBAAqB,yBAsBhC;AAEF,4EAA4E;AACrE,IAAM,gCAAgC,GAAG,UAAC,EAAiD;QAA/C,SAAS,eAAA,EAAE,MAAM,YAAA;IAClE,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,OAAO,IAAA,sBAAQ,EACb,CAAC,8BAA8B,EAAE,EAAE,SAAS,WAAA,EAAE,MAAM,QAAA,EAAE,CAAC,EACvD;;YACE,sBAAO,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,6BAA6B,CAAC,EAAE,SAAS,WAAA,EAAE,MAAM,QAAA,EAAE,CAAC,EAAC;;SACxE,EACD;QACE,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC;QACpD,gBAAgB,EAAE,IAAI;QACtB,SAAS,EAAE,4BAAgB;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AAbW,QAAA,gCAAgC,oCAa3C;AAEF,4EAA4E;AACrE,IAAM,iBAAiB,GAAG,UAAC,EAAuD;QAArD,MAAM,YAAA,EAAE,IAAI,UAAA,EAAE,aAAa,mBAAA;IAC7D,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,IAAM,SAAS,GAAG;QAChB,IAAA,2BAAe,EAAC,oEAAoE,EAAE;YACpF,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,IAAA,sBAAQ,EACb,CAAC,YAAY,EAAE,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,aAAa,eAAA,EAAE,CAAC,EAC/C;;YACE,sBAAO,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,SAAS,CAAC,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,aAAa,eAAA,EAAE,CAAC,EAAC;;SAC9D,EACD;QACE,OAAO,EAAE,UAAC,KAAe;YACvB,SAAS,EAAE,CAAC;YACZ,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,EAAE,OAAO,CAAC,SAAS,IAAI,MAAM,CAAC;QACrC,gBAAgB,EAAE,IAAI;QACtB,SAAS,EAAE,4BAAgB;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AAvBW,QAAA,iBAAiB,qBAuB5B;AAEF,4EAA4E;AACrE,IAAM,kBAAkB,GAAG;IACxB,IAAA,aAAa,GAAK,IAAA,6BAAa,GAAE,cAApB,CAAqB;IAE1C,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,iEAAO,EAMlB;;gBALC,aAAa,mBAAA,EACb,iBAAc,EAAd,SAAS,mBAAG,EAAE,KAAA;;;;wBAKR,0BAA0B,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC;wBAEvF,IAAI,CAAC,aAAa,EAAE,CAAC;4BACnB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;wBAC5C,CAAC;wBACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;4BAChC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;wBAC5D,CAAC;wBAEgB,qBAAM,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;gCAClD,EAAE,EAAE,0BAA0B;gCAC9B,aAAa,eAAA;gCACb,SAAS,WAAA;gCACT,QAAQ,EAAE,gBAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ;6BAClC,CAAC,EAAA;;wBALI,QAAQ,GAAG,SAKf;wBACF,sBAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,KAAK,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAC;;;aAClF;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AA7BW,QAAA,kBAAkB,sBA6B7B;AAEK,IAAM,yBAAyB,GAAG,UACvC,EAAmC,EACnC,SAA4G;AAC5G,4EAA4E;;QAF1E,IAAI,UAAA;IAIN,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAExC,OAAO,IAAA,sBAAQ,EACb,CAAC,kCAAkC,EAAE,EAAE,SAAS,WAAA,EAAE,IAAI,MAAA,EAAE,CAAC,EACzD;QACE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,SAAS,CAAC,sBAAsB,CAAC;gBACtC,IAAI,MAAA;aACL,CAAC,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAC5C,CAAC,EACD;QACE,SAAS,WAAA;QACT,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,kDAAkD,EAAE,GAAG,CAAC,CAAC;QACzE,CAAC;QACD,OAAO,EAAE,CAAC,CAAC,SAAS;KACrB,CACF,CAAC;AACJ,CAAC,CAAC;AAzBW,QAAA,yBAAyB,6BAyBpC;AAEF,4EAA4E;AACrE,IAAM,yBAAyB,GAAG;IACvC,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAExC,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,WAA6B;YACxC,IAAI,SAAS,EAAE,CAAC;gBACd,OAAO,SAAS,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;YACvD,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAXW,QAAA,yBAAyB,6BAWpC;AAEF,4EAA4E;AACrE,IAAM,2BAA2B,GAAG;IACzC,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAExC,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,WAAsC;YACjD,IAAI,SAAS,EAAE,CAAC;gBACd,OAAO,SAAS,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;YACzD,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAC5C,CAAC;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAXW,QAAA,2BAA2B,+BAWtC;AAEK,IAAM,iBAAiB,GAAG,UAAC,EASjC;QARC,OAAO,aAAA,EACP,OAAO,aAAA,EACP,OAAO,aAAA;IAOC,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,sBAAQ,EACb,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAC7B;;;;;yBACM,OAAO,EAAP,wBAAO;oBACT,OAAO,CAAC,GAAG,CAAC,iDAA0C,OAAO,CAAC,EAAE,CAAE,CAAC,CAAC;;;;oBAElE,qBAAM,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,EAAG,EAAE,CAAC,EAAA;;oBAAzD,SAAyD,CAAC;oBAC1D,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;oBAC/C,sBAAO;;;oBAEP,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAG,CAAC,CAAC;oBACzD,MAAM,KAAG,CAAC;wBAGd,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;;;SAClD,EACD;QACE,KAAK,EAAE,CAAC;QACR,OAAO,SAAA;QACP,OAAO,SAAA;QACP,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,CAAC;QACZ,cAAc,EAAE,IAAI;KACrB,CACF,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,iBAAiB,qBAqC5B;AAEK,IAAM,2BAA2B,GAAG,UAAC,EAO3C;QANC,SAAS,eAAA,EACT,WAAW,iBAAA;IAMH,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,yBAAW,EAChB,CAAC,0BAA0B,EAAE,EAAE,SAAS,WAAA,EAAE,CAAC,EAC3C;;;;;yBACM,OAAO,EAAP,wBAAO;oBACT,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;;;;oBAE5C,MAAM,GAAiC,EAAE,CAAC;oBAChD,IAAI,SAAS,EAAE,CAAC;wBACd,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC/B,CAAC;oBACD,IAAI,WAAW,EAAE,CAAC;wBAChB,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;oBACnC,CAAC;oBACY,qBAAM,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAA;;oBAApD,IAAI,GAAG,SAA6C;oBAC1D,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;oBAC1D,sBAAO,IAAI,CAAC,OAAO,EAAC;;;oBAEpB,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAG,CAAC,CAAC;oBACpE,MAAM,KAAG,CAAC;wBAGd,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;;;SAClD,EACD;QACE,KAAK,EAAE,CAAC;KACT,CACF,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,2BAA2B,+BAqCtC;AAEF,4EAA4E;AACrE,IAAM,0BAA0B,GAAG,UAAC,EAA6C;QAA3C,OAAO,aAAA;IAC1C,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,OAAO,IAAA,yBAAW,EAChB,CAAC,yBAAyB,CAAC,EAC3B,UAAO,cAAsB;;;;;yBACvB,OAAO,EAAP,wBAAO;oBACT,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;;;;oBAE3C,MAAM,GAAgC,EAAE,cAAc,gBAAA,EAAE,CAAC;oBAC/D,qBAAM,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAA;;oBAA5C,SAA4C,CAAC;oBAC7C,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;oBACzD,sBAAO;;;oBAEP,IAAI,KAAG,IAAI,KAAG,CAAC,IAAI,KAAK,MAAM,EAAE,CAAC;wBAC/B,0CAA0C;wBAC1C,sBAAO;oBACT,CAAC;oBACD,OAAO,CAAC,KAAK,CAAC,8CAA8C,EAAE,KAAG,CAAC,CAAC;oBACnE,MAAM,KAAG,CAAC;wBAGd,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;;;SAClD,EACD;QACE,KAAK,EAAE,CAAC;QACR,OAAO,SAAA;KACR,CACF,CAAC;AACJ,CAAC,CAAC;AA7BW,QAAA,0BAA0B,8BA6BrC;AAEF,4EAA4E;AACrE,IAAM,8BAA8B,GAAG,UAAC,EAAiC;QAA/B,OAAO,aAAA;IAC9C,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,IAAM,IAAI,GAAG,IAAA,uBAAa,GAAE,CAAC;IAE7B,OAAO,IAAA,sBAAQ,EACb,CAAC,mCAAmC,CAAC,EACrC;;;;;;yBACM,OAAO,EAAP,wBAAO;oBACT,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;;;;oBAEpD,IAAI,CAAC,CAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,0CAAE,EAAE,CAAA,EAAE,CAAC;wBAC/B,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;oBACrE,CAAC;oBACY,qBAAM,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;4BACzD,cAAc,EAAE,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,eAAe,0CAAE,EAAE;yBAC1C,CAAC,EAAA;;oBAFI,IAAI,GAAG,SAEX;oBACF,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;oBAC5D,sBAAO,IAAI,EAAC;;;oBAEZ,OAAO,CAAC,KAAK,CAAC,iDAAiD,EAAE,KAAG,CAAC,CAAC;oBACtE,MAAM,KAAG,CAAC;wBAGd,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;;;SAClD,EACD;QACE,KAAK,EAAE,CAAC;QACR,OAAO,SAAA;QACP,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,CAAC;QACZ,cAAc,EAAE,IAAI;KACrB,CACF,CAAC;AACJ,CAAC,CAAC;AAjCW,QAAA,8BAA8B,kCAiCzC;AAEF;;GAEG;AACH,4EAA4E;AACrE,IAAM,mBAAmB,GAAG,UAAC,EAAkC;QAAhC,EAAE,QAAA;IAC9B,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IACpC,OAAO,IAAA,sBAAQ,EACb,CAAC,wBAAwB,EAAE,EAAE,EAAE,IAAA,EAAE,CAAC,EAClC;QACE,IAAI,OAAO,IAAI,EAAE,EAAE,CAAC;YAClB,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAgB;gBACrC,YAAY,EAAE,eAAe;gBAC7B,EAAE,IAAA;aACH,CAAC,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;IAC/E,CAAC,EACD;QACE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;QACxC,OAAO,EAAE,UAAC,GAAG;YACX,OAAO,CAAC,KAAK,CAAC,4CAA4C,EAAE,GAAG,CAAC,CAAC;QACnE,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,mBAAmB,uBAoB9B;AAEF,4EAA4E;AACrE,IAAM,8BAA8B,GAAG;IAC5C,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IACxC,OAAO,IAAA,yBAAW,EAAC;QACjB,UAAU,EAAE,UAAC,KAAiC;YAC5C,IAAI,SAAS,EAAE,CAAC;gBACd,OAAO,SAAS,CAAC,2BAA2B,cACvC,KAAK,EACR,CAAC;YACL,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACjE,CAAC;QACD,KAAK,EAAE,CAAC;KACT,CAAC,CAAC;AACL,CAAC,CAAC;AAbW,QAAA,8BAA8B,kCAazC;AAEF,4EAA4E;AACrE,IAAM,sBAAsB,GAAG,UAAC,QAA8C;IACnF,IAAM,SAAS,GAAG,IAAA,yCAAmB,GAAE,CAAC;IAExC,IAAM,oBAAoB,GAAG,QAAQ,CAAC,KAAK,KAAK,aAAa,IAAI,QAAQ,CAAC,KAAK,CAAC;IAChF,IAAM,kBAAkB,GAAG,QAAQ,CAAC,KAAK,KAAK,cAAc,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAE1F,OAAO,IAAA,sBAAQ,EACb,CAAC,+BAA+B,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,EACtE;QACE,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,SAAS,CAAC,mBAAmB,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAyC,CAAC;QAC7F,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAC5C,CAAC,EACD;QACE,OAAO,EAAE,CAAC,CAAC,SAAS,IAAI,OAAO,CAAC,oBAAoB,IAAI,kBAAkB,CAAC;QAC3E,KAAK,EAAE,CAAC;QACR,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI;KACzB,CACF,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,sBAAsB,0BAoBjC;AAEF,4EAA4E;AACrE,IAAM,oBAAoB,GAAG;IAC1B,IAAA,OAAO,GAAK,IAAA,6BAAa,GAAE,QAApB,CAAqB;IAEpC,IAAM,SAAS,GAAG;QAChB,IAAA,2BAAe,EAAC,gDAAgD,EAAE;YAChE,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,IAAM,4BAA4B,GAAG,UAAC,IAAkB;QACtD,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,MAAM,CACxB,UAAC,GAAG,EAAE,KAAK;;YACT,IAAM,UAAU,GAAG,MAAA,KAAK,CAAC,UAAU,0CAAE,IAAI,CAAC,UAAC,EAAU,IAAK,OAAA,EAAE,CAAC,MAAM,KAAK,yCAAiC,EAA/C,CAA+C,CAAC,CAAC;YAE3G,IAAI,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,KAAI,KAAK,CAAC,EAAE,EAAE,CAAC;gBAClC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC;YACnC,CAAC;YAED,OAAO,GAAG,CAAC;QACb,CAAC,EACD,EAA4B,CAC7B,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,IAAA,sBAAQ,EACb,CAAC,wBAAwB,CAAC,EAC1B;;;;;oBACE,IAAI,CAAC,OAAO,EAAE,CAAC;wBACb,sBAAO,EAAE,EAAC;oBACZ,CAAC;oBACY,qBAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAa;4BACjD,YAAY,EAAE,YAAY;4BAC1B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,sCAA8B,EAAE,CAAC;yBACxE,CAAC,EAAA;;oBAHI,IAAI,GAAG,SAGX;oBAEF,sBAAO,4BAA4B,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAC;;;SACtD,EACD;QACE,OAAO,EAAE,UAAC,IAAI;YACZ,SAAS,EAAE,CAAC;YACZ,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,gBAAgB,EAAE,IAAI;QACtB,SAAS,EAAE,4BAAgB;KAC5B,CACF,CAAC;AACJ,CAAC,CAAC;AA9CW,QAAA,oBAAoB,wBA8C/B","sourcesContent":["import { ErxConnectPractitionerParams, ErxEnrollPractitionerParams } from '@oystehr/sdk';\nimport {\n  Appointment,\n  Bundle,\n  Coding,\n  DocumentReference,\n  Encounter,\n  FhirResource,\n  InsurancePlan,\n  Location,\n  Medication,\n  Patient,\n  QuestionnaireResponse,\n  RelatedPerson,\n} from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { enqueueSnackbar } from 'notistack';\nimport { useEffect } from 'react';\nimport { useMutation, useQuery, UseQueryResult } from 'react-query';\nimport {\n  APIError,\n  ChartDataFields,\n  ChartDataRequestedFields,\n  createSmsModel,\n  filterResources,\n  GetCreateLabOrderResources,\n  GetMedicationOrdersInput,\n  GetMedicationOrdersResponse,\n  IcdSearchRequestParams,\n  InstructionType,\n  INVENTORY_MEDICATION_TYPE_CODE,\n  MEDICATION_IDENTIFIER_NAME_SYSTEM,\n  MeetingData,\n  RefreshableAppointmentData,\n  relatedPersonAndCommunicationMaps,\n  ReviewAndSignData,\n  SaveChartDataRequest,\n  SchoolWorkNoteExcuseDocFileDTO,\n  TelemedAppointmentInformation,\n  UpdateMedicationOrderInput,\n} from 'utils';\nimport { APPOINTMENT_REFRESH_INTERVAL, CHAT_REFETCH_INTERVAL, QUERY_STALE_TIME } from '../../../constants';\nimport { useApiClients } from '../../../hooks/useAppClients';\nimport useEvolveUser, { EvolveUser } from '../../../hooks/useEvolveUser';\nimport { getSelectors } from '../../../shared/store/getSelectors';\nimport { OystehrTelemedAPIClient, PromiseReturnType } from '../../data';\nimport { useGetAppointmentAccessibility } from '../../hooks';\nimport { useOystehrAPIClient } from '../../hooks/useOystehrAPIClient';\nimport { createRefreshableAppointmentData, extractReviewAndSignAppointmentData } from '../../utils';\nimport { useAppointmentStore } from './appointment.store';\n\nexport const useGetReviewAndSignData = (\n  {\n    appointmentId,\n    runImmediately,\n  }: {\n    appointmentId: string | undefined;\n    runImmediately: boolean;\n  },\n  onSuccess: (data: ReviewAndSignData | undefined) => void\n): UseQueryResult<(Appointment | Encounter)[], unknown> => {\n  const { oystehr } = useApiClients();\n  return useQuery(\n    ['telemed-appointment-review-and-sign', { appointmentId }],\n    async () => {\n      if (oystehr && appointmentId) {\n        return (\n          await oystehr.fhir.search<Appointment | Encounter>({\n            resourceType: 'Appointment',\n            params: [\n              { name: '_id', value: appointmentId },\n              { name: '_revinclude:iterate', value: 'Encounter:appointment' },\n            ],\n          })\n        ).unbundle();\n      }\n      throw new Error('Oystehr client not defined or appointmentId not provided');\n    },\n    {\n      enabled: runImmediately,\n      onSuccess: (data) => {\n        const reviewAndSignData = extractReviewAndSignAppointmentData(data);\n        onSuccess(reviewAndSignData);\n      },\n      onError: (err) => {\n        console.error('Error during fetching get telemed appointment: ', err);\n      },\n    }\n  );\n};\n\nexport const useRefreshableAppointmentData = (\n  {\n    appointmentId,\n    isEnabled,\n  }: {\n    appointmentId: string | undefined;\n    isEnabled: boolean;\n  },\n  onSuccess: (data: RefreshableAppointmentData) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  return useGetTelemedAppointmentPeriodicRefresh(\n    {\n      appointmentId: appointmentId,\n      isEnabled: isEnabled,\n      refreshIntervalMs: APPOINTMENT_REFRESH_INTERVAL,\n    },\n    (originalData) => {\n      const refreshedData = createRefreshableAppointmentData(originalData);\n      onSuccess(refreshedData);\n    }\n  );\n};\n\nexport const useGetTelemedAppointmentPeriodicRefresh = (\n  {\n    appointmentId,\n    isEnabled,\n    refreshIntervalMs,\n  }: {\n    appointmentId: string | undefined;\n    isEnabled: boolean;\n    refreshIntervalMs: number | undefined;\n  },\n  onSuccess: (data: VisitResources[]) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  const { oystehr } = useApiClients();\n  const refetchOptions = refreshIntervalMs ? { refetchInterval: refreshIntervalMs } : {};\n  return useQuery(\n    ['telemed-appointment-periodic-refresh', { appointmentId }],\n    async () => {\n      if (oystehr && appointmentId) {\n        return (\n          await oystehr.fhir.search<VisitResources>({\n            resourceType: 'Appointment',\n            params: [\n              { name: '_id', value: appointmentId },\n              { name: '_revinclude', value: 'DocumentReference:related' },\n            ],\n          })\n        ).unbundle();\n      }\n      throw new Error('fhir client not defined or appointmentId not provided');\n    },\n    {\n      ...refetchOptions,\n      enabled: isEnabled && Boolean(appointmentId) && Boolean(oystehr),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get telemed appointment periodic: ', err);\n      },\n    }\n  );\n};\n\nexport type VisitResources = Appointment | DocumentReference | Encounter | Location | Patient | QuestionnaireResponse;\n\nexport const useGetAppointment = (\n  {\n    appointmentId,\n  }: {\n    appointmentId: string | undefined;\n  },\n  onSuccess: (data: VisitResources[]) => void\n): UseQueryResult<VisitResources[], unknown> => {\n  const { oystehr } = useApiClients();\n  const query = useQuery(\n    ['telemed-appointment', { appointmentId }],\n    async () => {\n      if (oystehr && appointmentId) {\n        return (\n          await oystehr.fhir.search<VisitResources>({\n            resourceType: 'Appointment',\n            params: [\n              { name: '_id', value: appointmentId },\n              {\n                name: '_include',\n                value: 'Appointment:patient',\n              },\n              {\n                name: '_include',\n                value: 'Appointment:location',\n              },\n              {\n                name: '_include:iterate',\n                value: 'Encounter:participant:Practitioner',\n              },\n              {\n                name: '_revinclude:iterate',\n                value: 'Encounter:appointment',\n              },\n              {\n                name: '_revinclude:iterate',\n                value: 'QuestionnaireResponse:encounter',\n              },\n              { name: '_revinclude', value: 'DocumentReference:related' },\n            ],\n          })\n        )\n          .unbundle()\n          .filter(\n            (resource) =>\n              resource.resourceType !== 'QuestionnaireResponse' ||\n              resource.questionnaire?.includes('https://ottehr.com/FHIR/Questionnaire/intake-paperwork-inperson') ||\n              resource.questionnaire?.includes('https://ottehr.com/FHIR/Questionnaire/intake-paperwork-virtual')\n          );\n      }\n      throw new Error('fhir client not defined or appointmentId not provided');\n    },\n    {\n      enabled: Boolean(oystehr) && Boolean(appointmentId),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get telemed appointment: ', err);\n      },\n    }\n  );\n  const { isFetching } = query;\n\n  useEffect(() => {\n    useAppointmentStore.setState({ isAppointmentLoading: isFetching });\n  }, [isFetching]);\n\n  return query;\n};\n\nexport const useGetDocumentReferences = (\n  {\n    appointmentId,\n    patientId,\n  }: {\n    appointmentId: string | undefined;\n    patientId: string | undefined;\n  },\n  onSuccess: (data: Bundle<FhirResource>) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  const { oystehr } = useApiClients();\n  return useQuery(\n    ['telemed-appointment-documents', { appointmentId }],\n    () => {\n      if (oystehr && appointmentId && patientId) {\n        return oystehr.fhir.batch({\n          requests: [\n            {\n              method: 'GET',\n              url: `/DocumentReference?status=current&subject=Patient/${patientId}&related=Appointment/${appointmentId}`,\n            },\n          ],\n        });\n      }\n      throw new Error('fhir client not defined or appointmentId and patientId not provided 3');\n    },\n    {\n      enabled: Boolean(oystehr) && Boolean(appointmentId),\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get telemed appointment related documents: ', err);\n      },\n    }\n  );\n};\n\nexport const useGetTelemedAppointmentWithSMSModel = (\n  {\n    appointmentId,\n    patientId,\n  }: {\n    appointmentId: string | undefined;\n    patientId: string | undefined;\n  },\n  onSuccess: (data: TelemedAppointmentInformation) => void\n): { data: TelemedAppointmentInformation | undefined; isFetching: boolean } => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['telemed-appointment-messaging', { appointmentId }],\n    async () => {\n      if (oystehr && appointmentId) {\n        const appointmentResources = (\n          await oystehr.fhir.search<Appointment | Patient | RelatedPerson>({\n            resourceType: 'Appointment',\n            params: [\n              { name: '_id', value: appointmentId },\n              {\n                name: '_include',\n                value: 'Appointment:patient',\n              },\n              {\n                name: '_revinclude:iterate',\n                value: 'RelatedPerson:patient',\n              },\n            ],\n          })\n        ).unbundle();\n\n        const appointment = filterResources(appointmentResources, 'Appointment')[0];\n\n        const allRelatedPersonMaps = await relatedPersonAndCommunicationMaps(oystehr, appointmentResources);\n\n        const smsModel = createSmsModel(patientId!, allRelatedPersonMaps);\n\n        return { ...appointment, smsModel };\n      }\n      throw new Error('fhir client is not defined or appointmentId and patientId are not provided');\n    },\n    {\n      refetchInterval: CHAT_REFETCH_INTERVAL,\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching appointment or creating SMS model: ', err);\n      },\n      enabled: !!oystehr && !!appointmentId,\n    }\n  );\n};\n\nexport const useGetMeetingData = (\n  getAccessTokenSilently: () => Promise<string>,\n  onSuccess: (data: MeetingData) => void,\n  onError: (error: Error) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  return useQuery(\n    ['meeting-data'],\n    async () => {\n      const appointment = useAppointmentStore.getState();\n      const token = await getAccessTokenSilently();\n\n      if (appointment.encounter.id && token) {\n        const videoTokenResp = await fetch(\n          `${import.meta.env.VITE_APP_PROJECT_API_URL}/telemed/v2/meeting/${appointment.encounter.id}/join`,\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n            method: 'GET',\n          }\n        );\n        const data = await videoTokenResp.json();\n        if (!videoTokenResp.ok) {\n          throw new Error('Error trying to get meeting data for appointment: ' + JSON.stringify(data));\n        }\n        return data as MeetingData;\n      }\n\n      throw new Error('token or encounterId not provided');\n    },\n    {\n      enabled: false,\n      onSuccess,\n      onError,\n    }\n  );\n};\n\nexport const CHART_DATA_QUERY_KEY_BASE = 'telemed-get-chart-data';\n\nexport type ChartDataCacheKey = [\n  typeof CHART_DATA_QUERY_KEY_BASE,\n  OystehrTelemedAPIClient | undefined | null,\n  string | undefined,\n  EvolveUser | undefined,\n  boolean,\n  boolean,\n  { [key: string]: any } | undefined,\n];\n\nexport const useGetChartData = (\n  {\n    apiClient,\n    encounterId,\n    requestedFields,\n    enabled,\n    refetchInterval,\n  }: {\n    apiClient: OystehrTelemedAPIClient | null;\n    encounterId?: string;\n    requestedFields?: ChartDataRequestedFields;\n    enabled?: boolean;\n    refetchInterval?: number;\n  },\n  onSuccess: (data: PromiseReturnType<ReturnType<OystehrTelemedAPIClient['getChartData']>>) => void,\n  onError?: (error: any) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  const user = useEvolveUser();\n  const { isAppointmentLoading } = getSelectors(useAppointmentStore, ['isAppointmentLoading']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  const key: ChartDataCacheKey = [\n    CHART_DATA_QUERY_KEY_BASE,\n    apiClient,\n    encounterId,\n    user,\n    isReadOnly,\n    isAppointmentLoading,\n    requestedFields,\n  ];\n\n  const query = useQuery(\n    key,\n    () => {\n      if (apiClient && encounterId) {\n        return apiClient.getChartData({\n          encounterId,\n          requestedFields,\n        });\n      }\n      throw new Error('api client not defined or encounterId not provided');\n    },\n    {\n      onSuccess: (data) => {\n        onSuccess(data);\n      },\n      onError: (err) => {\n        onError?.(err);\n        console.error('Error during fetching get telemed appointments: ', err);\n      },\n      enabled: !!apiClient && !!encounterId && !!user && !isAppointmentLoading && enabled,\n      staleTime: 0,\n      refetchInterval: refetchInterval || false,\n    }\n  );\n  return {\n    ...query,\n    queryKey: key,\n  };\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useSaveChartData = () => {\n  const apiClient = useOystehrAPIClient();\n  const { encounter } = getSelectors(useAppointmentStore, ['encounter']);\n  const { isAppointmentReadOnly: isReadOnly } = useGetAppointmentAccessibility();\n\n  return useMutation({\n    mutationFn: (chartDataFields: Omit<SaveChartDataRequest, 'encounterId'>) => {\n      // disabled saving chart data in read only mode except addendum note\n      if (isReadOnly && Object.keys(chartDataFields).some((key) => (key as keyof ChartDataFields) !== 'addendumNote')) {\n        throw new Error('update disabled in read only mode');\n      }\n\n      if (apiClient && encounter.id) {\n        return apiClient.saveChartData({\n          encounterId: encounter.id,\n          ...chartDataFields,\n        });\n      }\n      throw new Error('api client not defined or encounterId not provided');\n    },\n    retry: 2,\n  });\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useDeleteChartData = () => {\n  const apiClient = useOystehrAPIClient();\n  const { encounter } = useAppointmentStore.getState();\n\n  return useMutation({\n    mutationFn: (chartDataFields: ChartDataFields & { schoolWorkNotes?: SchoolWorkNoteExcuseDocFileDTO[] }) => {\n      if (apiClient && encounter.id) {\n        return apiClient.deleteChartData({\n          encounterId: encounter.id,\n          ...chartDataFields,\n        });\n      }\n      throw new Error('api client not defined or encounterId not provided');\n    },\n    retry: 2,\n  });\n};\n\nexport type ExtractObjectType<T> = T extends (infer U)[] ? U : never;\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetMedicationsSearch = (medicationSearchTerm: string) => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['medications-search', { medicationSearchTerm }],\n    async () => {\n      if (oystehr) {\n        return oystehr.erx.searchMedications({ name: medicationSearchTerm });\n      }\n      throw new Error('api client not defined');\n    },\n    {\n      onError: (_err) => {\n        enqueueSnackbar('An error occurred during the search. Please try again in a moment', {\n          variant: 'error',\n        });\n      },\n      enabled: Boolean(medicationSearchTerm),\n      keepPreviousData: true,\n      staleTime: QUERY_STALE_TIME,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetAllergiesSearch = (allergiesSearchTerm: string) => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['allergies-search', { allergiesSearchTerm }],\n    async () => {\n      if (oystehr) {\n        return oystehr.erx.searchAllergens({ name: allergiesSearchTerm });\n      }\n      throw new Error('api client not defined');\n    },\n    {\n      onError: (_err) => {\n        enqueueSnackbar('An error occurred during the search. Please try again in a moment', {\n          variant: 'error',\n        });\n      },\n      enabled: Boolean(allergiesSearchTerm),\n      keepPreviousData: true,\n      staleTime: QUERY_STALE_TIME,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetCreateExternalLabResources = ({ patientId, search }: GetCreateLabOrderResources) => {\n  const apiClient = useOystehrAPIClient();\n  return useQuery(\n    ['external lab resource search', { patientId, search }],\n    async () => {\n      return apiClient?.getCreateExternalLabResources({ patientId, search });\n    },\n    {\n      enabled: Boolean(apiClient && (patientId || search)),\n      keepPreviousData: true,\n      staleTime: QUERY_STALE_TIME,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetIcd10Search = ({ search, sabs, radiologyOnly }: IcdSearchRequestParams) => {\n  const apiClient = useOystehrAPIClient();\n  const openError = (): void => {\n    enqueueSnackbar('An error occurred during the search. Please try again in a moment.', {\n      variant: 'error',\n    });\n  };\n\n  return useQuery(\n    ['icd-search', { search, sabs, radiologyOnly }],\n    async () => {\n      return apiClient?.icdSearch({ search, sabs, radiologyOnly });\n    },\n    {\n      onError: (error: APIError) => {\n        openError();\n        return error;\n      },\n      enabled: Boolean(apiClient && search),\n      keepPreviousData: true,\n      staleTime: QUERY_STALE_TIME,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useUpdatePaperwork = () => {\n  const { oystehrZambda } = useApiClients();\n\n  return useMutation({\n    mutationFn: async ({\n      appointmentID,\n      paperwork = {},\n    }: {\n      appointmentID: string;\n      paperwork: Record<string, string>;\n    }) => {\n      const UPDATE_PAPERWORK_ZAMBDA_ID = import.meta.env.VITE_APP_UPDATE_PAPERWORK_ZAMBDA_ID;\n\n      if (!oystehrZambda) {\n        throw new Error('api client not defined');\n      }\n      if (!UPDATE_PAPERWORK_ZAMBDA_ID) {\n        throw new Error('update paperwork zambda id not defined');\n      }\n\n      const response = await oystehrZambda.zambda.execute({\n        id: UPDATE_PAPERWORK_ZAMBDA_ID,\n        appointmentID,\n        paperwork,\n        timezone: DateTime.now().zoneName,\n      });\n      return import.meta.env.VITE_APP_IS_LOCAL === 'true' ? response : response.output;\n    },\n  });\n};\n\nexport const useGetPatientInstructions = (\n  { type }: { type: InstructionType },\n  onSuccess?: (data: PromiseReturnType<ReturnType<OystehrTelemedAPIClient['getPatientInstructions']>>) => void\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n  const apiClient = useOystehrAPIClient();\n\n  return useQuery(\n    ['telemed-get-patient-instructions', { apiClient, type }],\n    () => {\n      if (apiClient) {\n        return apiClient.getPatientInstructions({\n          type,\n        });\n      }\n      throw new Error('api client not defined');\n    },\n    {\n      onSuccess,\n      onError: (err) => {\n        console.error('Error during fetching get patient instructions: ', err);\n      },\n      enabled: !!apiClient,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useSavePatientInstruction = () => {\n  const apiClient = useOystehrAPIClient();\n\n  return useMutation({\n    mutationFn: (instruction: { text: string }) => {\n      if (apiClient) {\n        return apiClient.savePatientInstruction(instruction);\n      }\n      throw new Error('api client not defined');\n    },\n  });\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useDeletePatientInstruction = () => {\n  const apiClient = useOystehrAPIClient();\n\n  return useMutation({\n    mutationFn: (instruction: { instructionId: string }) => {\n      if (apiClient) {\n        return apiClient.deletePatientInstruction(instruction);\n      }\n      throw new Error('api client not defined');\n    },\n  });\n};\n\nexport const useSyncERXPatient = ({\n  patient,\n  enabled,\n  onError,\n}: {\n  patient: Patient;\n  enabled: boolean;\n  onError: (err: any) => void;\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n}) => {\n  const { oystehr } = useApiClients();\n\n  return useQuery(\n    ['erx-sync-patient', patient],\n    async () => {\n      if (oystehr) {\n        console.log(`Start syncing patient with erx patient ${patient.id}`);\n        try {\n          await oystehr.erx.syncPatient({ patientId: patient.id! });\n          console.log('Successfully synced erx patient');\n          return;\n        } catch (err) {\n          console.error('Error during syncing erx patient: ', err);\n          throw err;\n        }\n      }\n      throw new Error('oystehr client is not defined');\n    },\n    {\n      retry: 2,\n      enabled,\n      onError,\n      staleTime: 0,\n      cacheTime: 0,\n      refetchOnMount: true,\n    }\n  );\n};\n\nexport const useConnectPractitionerToERX = ({\n  patientId,\n  encounterId,\n}: {\n  patientId?: string;\n  encounterId?: string;\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n}) => {\n  const { oystehr } = useApiClients();\n\n  return useMutation(\n    ['erx-connect-practitioner', { patientId }],\n    async () => {\n      if (oystehr) {\n        console.log(`Start connecting practitioner to erx`);\n        try {\n          const params: ErxConnectPractitionerParams = {};\n          if (patientId) {\n            params.patientId = patientId;\n          }\n          if (encounterId) {\n            params.encounterId = encounterId;\n          }\n          const resp = await oystehr.erx.connectPractitioner(params);\n          console.log('Successfully connected practitioner to erx');\n          return resp.ssoLink;\n        } catch (err) {\n          console.error('Error during connecting practitioner to erx: ', err);\n          throw err;\n        }\n      }\n      throw new Error('oystehr client is not defined');\n    },\n    {\n      retry: 2,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useEnrollPractitionerToERX = ({ onError }: { onError?: (err: any) => void }) => {\n  const { oystehr } = useApiClients();\n\n  return useMutation(\n    ['erx-enroll-practitioner'],\n    async (practitionerId: string) => {\n      if (oystehr) {\n        console.log(`Start enrolling practitioner to erx`);\n        try {\n          const params: ErxEnrollPractitionerParams = { practitionerId };\n          await oystehr.erx.enrollPractitioner(params);\n          console.log('Successfully enrolled practitioner to erx');\n          return;\n        } catch (err: any) {\n          if (err && err.code === '4006') {\n            // Practitioner is already enrolled to erx\n            return;\n          }\n          console.error('Error during enrolling practitioner to erx: ', err);\n          throw err;\n        }\n      }\n      throw new Error('oystehr client is not defined');\n    },\n    {\n      retry: 2,\n      onError,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useCheckPractitionerEnrollment = ({ enabled }: { enabled: boolean }) => {\n  const { oystehr } = useApiClients();\n  const user = useEvolveUser();\n\n  return useQuery(\n    ['erx-check-practitioner-enrollment'],\n    async () => {\n      if (oystehr) {\n        console.log(`Start checking practitioner enrollment`);\n        try {\n          if (!user?.profileResource?.id) {\n            throw new Error(\"Current user doesn't have a profile resource id\");\n          }\n          const resp = await oystehr.erx.checkPractitionerEnrollment({\n            practitionerId: user?.profileResource?.id,\n          });\n          console.log('Successfully checked practitioner enrollment');\n          return resp;\n        } catch (err) {\n          console.error('Error during checking practitioner enrollment: ', err);\n          throw err;\n        }\n      }\n      throw new Error('oystehr client is not defined');\n    },\n    {\n      retry: 2,\n      enabled,\n      staleTime: 0,\n      cacheTime: 0,\n      refetchOnMount: true,\n    }\n  );\n};\n\n/*\n * This should be deletable now but need to verify that ClaimsQueue feature has been mothballed\n */\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetInsurancePlan = ({ id }: { id: string | undefined }) => {\n  const { oystehr } = useApiClients();\n  return useQuery(\n    ['telemed-insurance-plan', { id }],\n    () => {\n      if (oystehr && id) {\n        return oystehr.fhir.get<InsurancePlan>({\n          resourceType: 'InsurancePlan',\n          id,\n        });\n      }\n      throw new Error('fhir client not defined or Insurance Plan ID not provided');\n    },\n    {\n      enabled: Boolean(oystehr) && Boolean(id),\n      onError: (err) => {\n        console.error('Error during fetching get Insurance Plan: ', err);\n      },\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useCreateUpdateMedicationOrder = () => {\n  const apiClient = useOystehrAPIClient();\n  return useMutation({\n    mutationFn: (props: UpdateMedicationOrderInput) => {\n      if (apiClient) {\n        return apiClient.createUpdateMedicationOrder({\n          ...props,\n        });\n      }\n      throw new Error('error during create update medication order');\n    },\n    retry: 2,\n  });\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetMedicationOrders = (searchBy: GetMedicationOrdersInput['searchBy']) => {\n  const apiClient = useOystehrAPIClient();\n\n  const encounterIdIsDefined = searchBy.field === 'encounterId' && searchBy.value;\n  const encounterIdsHasLen = searchBy.field === 'encounterIds' && searchBy.value.length > 0;\n\n  return useQuery(\n    ['telemed-get-medication-orders', JSON.stringify(searchBy), apiClient],\n    () => {\n      if (apiClient) {\n        return apiClient.getMedicationOrders({ searchBy }) as Promise<GetMedicationOrdersResponse>;\n      }\n      throw new Error('api client not defined');\n    },\n    {\n      enabled: !!apiClient && Boolean(encounterIdIsDefined || encounterIdsHasLen),\n      retry: 2,\n      staleTime: 5 * 60 * 1000,\n    }\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport const useGetMedicationList = () => {\n  const { oystehr } = useApiClients();\n\n  const openError = (): void => {\n    enqueueSnackbar('An error occurred while searching medications.', {\n      variant: 'error',\n    });\n  };\n\n  const getMedicationIdentifierNames = (data: Medication[]): Record<string, string> => {\n    return (data || []).reduce(\n      (acc, entry) => {\n        const identifier = entry.identifier?.find((id: Coding) => id.system === MEDICATION_IDENTIFIER_NAME_SYSTEM);\n\n        if (identifier?.value && entry.id) {\n          acc[entry.id] = identifier.value;\n        }\n\n        return acc;\n      },\n      {} as Record<string, string>\n    );\n  };\n\n  return useQuery(\n    ['medication-list-search'],\n    async () => {\n      if (!oystehr) {\n        return [];\n      }\n      const data = await oystehr.fhir.search<Medication>({\n        resourceType: 'Medication',\n        params: [{ name: 'identifier', value: INVENTORY_MEDICATION_TYPE_CODE }],\n      });\n\n      return getMedicationIdentifierNames(data.unbundle());\n    },\n    {\n      onError: (_err) => {\n        openError();\n        return {};\n      },\n      keepPreviousData: true,\n      staleTime: QUERY_STALE_TIME,\n    }\n  );\n};\n"]}