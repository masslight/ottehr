{"version":3,"file":"getAppointmentStatusChip.js","sourceRoot":"","sources":["getAppointmentStatusChip.tsx"],"names":[],"mappings":";;AAsDS,4DAAwB;AAtDjC,0CAAqC;AACrC,+BAA4C;AAE5C,+DAA4D;AAC5D,+CAAiD;AAkBjD,SAAS,wBAAwB,CAAmB,MAAU,EAAE,IAAyB;IACvF,IAAM,KAAK,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;IAC1D,IAAM,MAAM,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAE,8BAA6B,CAAC;IAEhF,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QACpB,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,sDAAsD;IACtD,IAAM,iBAAiB,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAEpF,OAAO,CACL,CAAC,eAAI,CACH,IAAI,CAAC,OAAO,CACZ,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,UAAG,MAAM,gBAAM,KAAK,CAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAC/C,EAAE,CAAC,CAAC;YACF,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,GAAG;YACf,aAAa,EAAE,WAAW;YAC1B,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO;YAC9E,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO;SAC1E,CAAC,CACF,OAAO,CAAC,UAAU,CAClB,WAAW,CAAC,CAAC,2BAAW,CAAC,cAAc,CAAC,qBAAqB,CAAC,EAC9D,CACH,CAAC;AACJ,CAAC","sourcesContent":["import { Chip } from '@mui/material';\nimport React, { ReactElement } from 'react';\nimport { TelemedAppointmentStatus } from 'utils';\nimport { dataTestIds } from '../../constants/data-test-ids';\nimport { APPT_STATUS_MAP } from './appointments';\n\ntype Mapper<T extends string> = {\n  [status in T]: {\n    background: {\n      primary: string;\n      secondary?: string;\n    };\n    color: {\n      primary: string;\n      secondary?: string;\n    };\n  };\n};\n\n// added to handle different mappers (e.g. IP ones) with same style\nfunction getAppointmentStatusChip<T extends string>(status?: T, map?: Mapper<T>): ReactElement;\nfunction getAppointmentStatusChip(status?: TelemedAppointmentStatus, count?: number): ReactElement;\nfunction getAppointmentStatusChip<T extends string>(status?: T, item?: number | Mapper<T>): ReactElement {\n  const count = typeof item === 'number' ? item : undefined;\n  const mapper = typeof item === 'object' ? item : (APPT_STATUS_MAP as Mapper<T>);\n\n  if (!status) {\n    return <span>todo1</span>;\n  }\n  if (!mapper[status]) {\n    return <span>todo2</span>;\n  }\n\n  // to swap color and background if background is white\n  const isBackgroundWhite = /^#(f{3}|f{6})$/i.test(mapper[status].background.primary);\n\n  return (\n    <Chip\n      size=\"small\"\n      label={count ? `${status} - ${count}` : status}\n      sx={{\n        borderRadius: '4px',\n        border: 'none',\n        fontWeight: 500,\n        textTransform: 'uppercase',\n        background: mapper[status][isBackgroundWhite ? 'color' : 'background'].primary,\n        color: mapper[status][isBackgroundWhite ? 'background' : 'color'].primary,\n      }}\n      variant=\"outlined\"\n      data-testid={dataTestIds.telemedEhrFlow.appointmentStatusChip}\n    />\n  );\n}\n\nexport { getAppointmentStatusChip };\n"]}