{"version":3,"file":"PatientHeader.js","sourceRoot":"","sources":["PatientHeader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAgD;AAChD,sEAAmE;AAEnE;IAGE,uBAAY,IAAU;QAFtB,sCAAY;QAGV,uBAAA,IAAI,uBAAS,IAAI,MAAA,CAAC;IACpB,CAAC;IAEK,6CAAqB,GAA3B,UAA4B,SAAiB;;;;4BAC3C,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAA;;wBAA/F,SAA+F,CAAC;wBAChG,sBAAO,IAAI,EAAC;;;;KACb;IAEK,+CAAuB,GAA7B,UAA8B,WAAmB;;;;4BAC/C,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,EAAA;;wBAAnG,SAAmG,CAAC;wBACpG,sBAAO,IAAI,EAAC;;;;KACb;IAEK,mDAA2B,GAAjC,UAAkC,eAAuB;;;;4BACvD,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,EAAA;;wBAA3G,SAA2G,CAAC;wBAC5G,sBAAO,IAAI,EAAC;;;;KACb;IACK,mDAA2B,GAAjC,UAAkC,eAAuB;;;;4BACvD,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,EAAA;;wBAA3G,SAA2G,CAAC;wBAC5G,sBAAO,IAAI,EAAC;;;;KACb;IAEK,kDAA0B,GAAhC,UAAiC,cAAsB;;;;4BACrD,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAA;;wBAAzG,SAAyG,CAAC;wBAC1G,sBAAO,IAAI,EAAC;;;;KACb;IAEK,sDAA8B,GAApC,UAAqC,kBAA0B;;;;4BAC7D,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAA;;wBAAjH,SAAiH,CAAC;wBAClH,sBAAO,IAAI,EAAC;;;;KACb;IAEK,oDAA4B,GAAlC,UAAmC,gBAAwB;;;;4BACzD,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,2BAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAA;;wBAA7G,SAA6G,CAAC;wBAC9G,sBAAO,IAAI,EAAC;;;;KACb;IACH,oBAAC;AAAD,CAAC,AAxCD,IAwCC;AAxCY,sCAAa","sourcesContent":["import { expect, Page } from '@playwright/test';\nimport { dataTestIds } from '../../../src/constants/data-test-ids';\n\nexport class PatientHeader {\n  #page: Page;\n\n  constructor(page: Page) {\n    this.#page = page;\n  }\n\n  async verifyHeaderPatientID(patientID: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientId)).toHaveText(patientID);\n    return this;\n  }\n\n  async verifyHeaderPatientName(patientName: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientName)).toHaveText(patientName);\n    return this;\n  }\n\n  async verifyHeaderPatientBirthSex(patientBirthSex: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientBirthSex)).toHaveText(patientBirthSex);\n    return this;\n  }\n  async verifyHeaderPatientBirthday(patientBirthday: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientBirthday)).toHaveText(patientBirthday);\n    return this;\n  }\n\n  async verifyHeaderPatientAddress(patientAddress: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientAddress)).toHaveText(patientAddress);\n    return this;\n  }\n\n  async verifyHeaderPatientPhoneNumber(patientPhoneNumber: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.patientPhoneNumber)).toHaveText(patientPhoneNumber);\n    return this;\n  }\n\n  async verifyHeaderEmergencyContact(emergencyContact: string): Promise<PatientHeader> {\n    await expect(this.#page.getByTestId(dataTestIds.patientHeader.emergencyContact)).toHaveText(emergencyContact);\n    return this;\n  }\n}\n"]}