{"version":3,"file":"PatientInfo.js","sourceRoot":"","sources":["PatientInfo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,sDAUC;AA/BD,yCAAgD;AAChD,sEAAmE;AACnE,yCAAwC;AACxC,uCAAsC;AAEtC;IAGE,yBAAY,IAAU;QAFtB,wCAAY;QAGV,uBAAA,IAAI,yBAAS,IAAI,MAAA,CAAC;IACpB,CAAC;IAED,mCAAS,GAAT;QACE,OAAO,IAAI,qBAAS,CAAC,uBAAA,IAAI,6BAAM,CAAC,CAAC;IACnC,CAAC;IAED,kCAAQ,GAAR;QACE,OAAO,IAAI,mBAAQ,CAAC,uBAAA,IAAI,6BAAM,CAAC,CAAC;IAClC,CAAC;IACH,sBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,0CAAe;;AAgB5B,SAAsB,qBAAqB,CAAC,aAAqB,EAAE,IAAU;;;;wBAC3E,qBAAM,IAAI,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,qBAAc,aAAa,kBAAe,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAA;;oBAAjG,SAAiG,CAAC;oBAClG,qBAAM,IAAA,aAAM,EACV,IAAI,CAAC,WAAW,CAAC,2BAAW,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAC3F,CAAC,WAAW,EAAE,EAAA;;oBAFf,SAEe,CAAC;oBAChB,qBAAM,IAAI,CAAC,WAAW,CAAC,2BAAW,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,EAAA;;oBAAjH,SAAiH,CAAC;oBAClH,qBAAM,IAAA,aAAM,EACV,IAAI,CAAC,WAAW,CAAC,2BAAW,CAAC,eAAe,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAC3F,CAAC,WAAW,EAAE,EAAA;;oBAFf,SAEe,CAAC;oBAChB,sBAAO,IAAI,eAAe,CAAC,IAAI,CAAC,EAAC;;;;CAClC","sourcesContent":["import { expect, Page } from '@playwright/test';\nimport { dataTestIds } from '../../../src/constants/data-test-ids';\nimport { CssHeader } from './CssHeader';\nimport { SideMenu } from './SideMenu';\n\nexport class PatientInfoPage {\n  #page: Page;\n\n  constructor(page: Page) {\n    this.#page = page;\n  }\n\n  cssHeader(): CssHeader {\n    return new CssHeader(this.#page);\n  }\n\n  sideMenu(): SideMenu {\n    return new SideMenu(this.#page);\n  }\n}\n\nexport async function expectPatientInfoPage(appointmentId: string, page: Page): Promise<PatientInfoPage> {\n  await page.waitForURL(new RegExp(`/in-person/${appointmentId}/patient-info`), { timeout: 10000 });\n  await expect(\n    page.getByTestId(dataTestIds.patientInfoPage.patientInfoVerifiedCheckbox).locator('input')\n  ).toBeEnabled();\n  await page.getByTestId(dataTestIds.patientInfoPage.patientInfoVerifiedCheckbox).locator('input').setChecked(true);\n  await expect(\n    page.getByTestId(dataTestIds.patientInfoPage.patientInfoVerifiedCheckbox).locator('input')\n  ).toBeEnabled();\n  return new PatientInfoPage(page);\n}\n"]}