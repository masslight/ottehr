{"version":3,"file":"StateDetailsPage.js","sourceRoot":"","sources":["StateDetailsPage.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, Page } from '@playwright/test';\nimport { dataTestIds } from '../../../src/constants/data-test-ids';\n\nexport class StateDetailsPage {\n  #page: Page;\n\n  constructor(page: Page) {\n    this.#page = page;\n  }\n\n  async clickCancelButton(): Promise<void> {\n    await this.#page.getByTestId(dataTestIds.editState.cancelButton).click();\n  }\n\n  async clickSaveChangesButton(): Promise<void> {\n    await this.#page.getByTestId(dataTestIds.editState.saveChangesButton).click();\n    await this.#page.waitForSelector('text=State was updated successfully');\n  }\n\n  async verifyStateNameTitle(stateNameTitle: string): Promise<void> {\n    await expect(this.#page.getByTestId(dataTestIds.editState.stateNameTitle)).toHaveText(\n      new RegExp(stateNameTitle + '.*')\n    );\n  }\n\n  async verifyStateNameField(stateNameText: string): Promise<void> {\n    await expect(this.#page.getByTestId(dataTestIds.editState.stateNameField).locator('input')).toHaveValue(\n      new RegExp(stateNameText + '.*')\n    );\n  }\n\n  async setToggleOff(): Promise<void> {\n    await this.#page.getByTestId(dataTestIds.editState.operateInStateToggle).locator('input').setChecked(false);\n  }\n\n  async verifyToggleOff(): Promise<void> {\n    await expect(this.#page.getByTestId(dataTestIds.editState.operateInStateToggle).locator('input')).toBeChecked({\n      checked: false,\n    });\n  }\n\n  async setToggleOn(): Promise<void> {\n    await this.#page.getByTestId(dataTestIds.editState.operateInStateToggle).locator('input').setChecked(true);\n  }\n\n  async verifyToggleOn(): Promise<void> {\n    await expect(this.#page.getByTestId(dataTestIds.editState.operateInStateToggle).locator('input')).toBeChecked({\n      checked: true,\n    });\n  }\n\n  async isToggleOn(): Promise<boolean> {\n    return this.#page.getByTestId(dataTestIds.editState.operateInStateToggle).locator('input').isChecked();\n  }\n\n  async reloadStateDetailsPage(): Promise<void> {\n    await this.#page.reload();\n  }\n}\n\nexport async function expectStateDetailsPage(state: string, page: Page): Promise<StateDetailsPage> {\n  await page.waitForURL(`/telemed-admin/states/` + state);\n  await expect(page.locator('h3').getByText(state + ' - Telemed')).toBeVisible();\n  return new StateDetailsPage(page);\n}\n"]}