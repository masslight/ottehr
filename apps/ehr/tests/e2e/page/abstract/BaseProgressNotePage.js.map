{"version":3,"file":"BaseProgressNotePage.js","sourceRoot":"","sources":["BaseProgressNotePage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAAgD;AAChD,yEAAsE;AAEtE;IAGE,8BAAY,IAAU;QAFtB,6CAAY;QAGV,uBAAA,IAAI,8BAAS,IAAI,MAAA,CAAC;IACpB,CAAC;IAEK,mDAAoB,GAA1B;;;;;;wBACQ,eAAe,GAAG,uBAAA,IAAI,kCAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;wBAC7F,qBAAM,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,WAAW,EAAE,EAAA;;wBAA3C,SAA2C,CAAC;wBAC5C,qBAAM,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,WAAW,EAAE,EAAA;;wBAA3C,SAA2C,CAAC;wBAC5C,qBAAM,eAAe,CAAC,KAAK,EAAE,EAAA;;wBAA7B,SAA6B,CAAC;wBAC9B,qBAAM,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,UAAU,CAAC,YAAY,CAAC,EAAA;;wBAAtD,SAAsD,CAAC;wBACvD,qBAAM,IAAA,aAAM,EAAC,eAAe,CAAC,CAAC,YAAY,EAAE,EAAA;;wBAA5C,SAA4C,CAAC;;;;;KAC9C;IAEK,uDAAwB,GAA9B;;;;;;wBACQ,mBAAmB,GAAG,uBAAA,IAAI,kCAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;wBACrG,qBAAM,mBAAmB,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,EAAA;;wBAAvD,SAAuD,CAAC;wBACxD,qBAAM,IAAA,aAAM,EAAC,mBAAmB,CAAC,CAAC,WAAW,EAAE,EAAA;;wBAA/C,SAA+C,CAAC;wBAChD,qBAAM,mBAAmB,CAAC,KAAK,EAAE,EAAA;;wBAAjC,SAAiC,CAAC;;;;;KACnC;IAEK,gEAAiC,GAAvC;;;;4BACE,qBAAM,IAAA,aAAM,EAAC,uBAAA,IAAI,kCAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC,YAAY,EAAE,EAAA;;wBAArG,SAAqG,CAAC;;;;;KACvG;IAEK,8CAAe,GAArB;;;;4BACE,qBAAM,uBAAA,IAAI,kCAAM,CAAC,WAAW,CAAC,2BAAW,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,EAAA;;wBAAtE,SAAsE,CAAC;;;;;KACxE;IAGH,2BAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCqB,oDAAoB","sourcesContent":["import { expect, Page } from '@playwright/test';\nimport { dataTestIds } from '../../../../src/constants/data-test-ids';\n\nexport abstract class BaseProgressNotePage {\n  #page: Page;\n\n  constructor(page: Page) {\n    this.#page = page;\n  }\n\n  async clickDischargeButton(): Promise<void> {\n    const dischargeButton = this.#page.getByTestId(dataTestIds.progressNotePage.dischargeButton);\n    await expect(dischargeButton).toBeVisible();\n    await expect(dischargeButton).toBeEnabled();\n    await dischargeButton.click();\n    await expect(dischargeButton).toHaveText('Discharged');\n    await expect(dischargeButton).toBeDisabled();\n  }\n\n  async clickReviewAndSignButton(): Promise<void> {\n    const reviewAndSignButton = this.#page.getByTestId(dataTestIds.progressNotePage.reviewAndSignButton);\n    await reviewAndSignButton.waitFor({ state: 'visible' });\n    await expect(reviewAndSignButton).toBeEnabled();\n    await reviewAndSignButton.click();\n  }\n\n  async verifyReviewAndSignButtonDisabled(): Promise<void> {\n    await expect(this.#page.getByTestId(dataTestIds.progressNotePage.reviewAndSignButton)).toBeDisabled();\n  }\n\n  async clickSignButton(): Promise<void> {\n    await this.#page.getByTestId(dataTestIds.dialog.proceedButton).click();\n  }\n\n  abstract expectLoaded(): Promise<void>;\n}\n"]}