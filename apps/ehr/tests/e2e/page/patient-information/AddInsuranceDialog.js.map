{"version":3,"file":"AddInsuranceDialog.js","sourceRoot":"","sources":["AddInsuranceDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, Locator } from '@playwright/test';\nimport { dataTestIds } from '../../../../src/constants/data-test-ids';\n\nexport class AddInsuranceDialog {\n  #container: Locator;\n\n  constructor(container: Locator) {\n    this.#container = container;\n  }\n\n  async selectInsuranceType(type: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.type).click();\n    await this.#container.page().locator(`li:text(\"${type}\")`).click();\n  }\n\n  async selectInsuranceCarrier(insuranceCarrier: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.insuranceCarrier).click();\n    await this.#container.page().locator(`li:text(\"${insuranceCarrier}\")`).click();\n  }\n\n  async enterMemberId(memberId: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.memberId).locator('input').fill(memberId);\n  }\n\n  async clearMemberId(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.memberId).locator('input').clear();\n  }\n\n  async enterPolicyHolderFirstName(firstName: string): Promise<void> {\n    await this.#container\n      .getByTestId(dataTestIds.addInsuranceDialog.policyHoldersFirstName)\n      .locator('input')\n      .fill(firstName);\n  }\n\n  async clearPolicyHolderFirstName(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.policyHoldersFirstName).locator('input').clear();\n  }\n\n  async enterPolicyHolderMiddleName(middleName: string): Promise<void> {\n    await this.#container\n      .getByTestId(dataTestIds.addInsuranceDialog.policyHoldersMiddleName)\n      .locator('input')\n      .fill(middleName);\n  }\n\n  async clearPolicyHolderMiddleName(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.policyHoldersMiddleName).locator('input').clear();\n  }\n\n  async enterPolicyHolderLastName(lastName: string): Promise<void> {\n    await this.#container\n      .getByTestId(dataTestIds.addInsuranceDialog.policyHoldersLastName)\n      .locator('input')\n      .fill(lastName);\n  }\n\n  async clearPolicyHolderLastName(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.policyHoldersLastName).locator('input').clear();\n  }\n\n  async enterDateOfBirthFromAddInsuranceDialog(dateOfBirth: string): Promise<void> {\n    const locator = this.#container\n      .getByTestId(dataTestIds.addInsuranceDialog.policyHoldersDateOfBirth)\n      .locator('input');\n    await locator.click();\n    await locator.pressSequentially(dateOfBirth);\n  }\n\n  async clearDateOfBirthFromAddInsuranceDialog(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.policyHoldersDateOfBirth).locator('input').clear();\n  }\n\n  async selectPolicyHoldersBirthSex(birthSex: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.policyHoldersSex).click();\n    await this.#container.page().locator(`li:text-is(\"${birthSex}\")`).click();\n  }\n\n  async enterPolicyHolderStreetAddress(street: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.streetAddress).locator('input').fill(street);\n  }\n\n  async clearPolicyHolderStreetAddress(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.streetAddress).locator('input').clear();\n  }\n\n  async enterPolicyHolderAddressLine2(addressLine2: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.addressLine2).locator('input').fill(addressLine2);\n  }\n\n  async enterPolicyHolderCity(city: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.city).locator('input').fill(city);\n  }\n\n  async clearPolicyHolderCity(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.city).locator('input').clear();\n  }\n\n  async selectPolicyHoldersState(state: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.state).click();\n    await this.#container.page().locator(`li:text(\"${state}\")`).click();\n  }\n\n  async enterZipFromAddInsuranceDialog(zip: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.zip).locator('input').fill(zip);\n  }\n\n  async clearZipFromAddInsuranceDialog(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.zip).locator('input').clear();\n  }\n\n  async verifyValidationErrorZipFieldFromAddInsurance(): Promise<void> {\n    await expect(\n      this.#container.getByTestId(dataTestIds.addInsuranceDialog.zip).locator('p:text(\"Must be 5 digits\")')\n    ).toBeVisible();\n  }\n\n  async selectPatientsRelationship(relationship: string): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.relationship).click();\n    await this.#container.page().locator(`li:text(\"${relationship}\")`).click();\n  }\n\n  async enterAdditionalInsuranceInformation(additionalInfo: string): Promise<void> {\n    await this.#container\n      .getByTestId(dataTestIds.addInsuranceDialog.additionalInformation)\n      .locator('input')\n      .fill(additionalInfo);\n  }\n\n  async clickAddInsuranceButtonFromAddInsuranceDialog(): Promise<void> {\n    await this.#container.getByTestId(dataTestIds.addInsuranceDialog.addInsuranceButton).click();\n  }\n\n  async verifyValidationErrorShown(testId: string): Promise<void> {\n    await expect(this.#container.getByTestId(testId).locator('p:text(\"This field is required\")')).toBeVisible();\n  }\n\n  async verifyTypeField(value: string, enabled: boolean): Promise<void> {\n    const locator = this.#container.getByTestId(dataTestIds.addInsuranceDialog.type).locator('input');\n    await expect(locator).toHaveValue(value);\n    await expect(locator).toBeEnabled({ enabled });\n  }\n}\n"]}