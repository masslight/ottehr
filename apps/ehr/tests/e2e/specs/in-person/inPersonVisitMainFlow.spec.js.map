{"version":3,"file":"inPersonVisitMainFlow.spec.js","sourceRoot":"","sources":["inPersonVisitMainFlow.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Page, test } from '@playwright/test';\nimport { QuestionnaireItemAnswerOption } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport { CssHeader } from 'tests/e2e/page/CssHeader';\nimport {\n  chooseJson,\n  getConsentStepAnswers,\n  getContactInformationAnswers,\n  getPatientDetailsStepAnswers,\n  getPaymentOptionInsuranceAnswers,\n  getResponsiblePartyStepAnswers,\n  INSURANCE_PLAN_PAYER_META_TAG_CODE,\n  isoToDateObject,\n} from 'utils';\nimport { ENV_LOCATION_NAME } from '../../../e2e-utils/resource/constants';\nimport {\n  PATIENT_INSURANCE_MEMBER_ID,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_AS_PATIENT,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_CITY,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_STATE,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_AS_PATIENT,\n  PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX,\n  PATIENT_INSURANCE_POLICY_HOLDER_CITY,\n  PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH,\n  PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED,\n  PATIENT_INSURANCE_POLICY_HOLDER_STATE,\n  PATIENT_INSURANCE_POLICY_HOLDER_ZIP,\n  ResourceHandler,\n} from '../../../e2e-utils/resource-handler';\nimport { expectAssessmentPage } from '../../page/in-person/InPersonAssessmentPage';\nimport { expectInPersonProgressNotePage } from '../../page/in-person/InPersonProgressNotePage';\nimport { expectPatientInfoPage, PatientInfoPage } from '../../page/PatientInfo';\nimport { openVisitsPage } from '../../page/VisitsPage';\n\n// cSpell:disable-next inversus\nconst DIAGNOSIS = 'Situs inversus';\nconst EM_CODE = '99201 New Patient - E/M Level 1';\n\ntest.describe('Book appointment', async () => {\n  const PROCESS_ID = `inPersonVisitMainFlow.spec.ts-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID);\n\n  test.beforeEach(async () => {\n    if (process.env.INTEGRATION_TEST === 'true') {\n      await resourceHandler.setResourcesFast();\n    } else {\n      await resourceHandler.setResources();\n      await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment.id!);\n    }\n  });\n\n  test.afterEach(async () => {\n    await resourceHandler.cleanupResources();\n  });\n  test('Book appointment, start and complete Intake, check statuses', async ({ page }) => {\n    const patientInfoPage = await intakeTestAppointment(page, resourceHandler);\n    await patientInfoPage.cssHeader().verifyStatus('intake');\n    await patientInfoPage.sideMenu().clickCompleteIntakeButton();\n    await patientInfoPage.cssHeader().verifyStatus('ready for provider');\n  });\n\n  test('Book appointment, go to Hospitalization page and complete Intake, check statuses', async ({ page }) => {\n    const patientInfoPage = await intakeTestAppointment(page, resourceHandler);\n    const hospitalizationPage = await patientInfoPage.sideMenu().clickHospitalization();\n    await hospitalizationPage.clickCompleteIntakeButton();\n    await patientInfoPage.cssHeader().verifyStatus('ready for provider');\n  });\n\n  test('Book appointment,fill required fields for signing the visit, review and sign progress note', async ({\n    page,\n  }) => {\n    await BookAppointmentFillInfoSignProgressNote(page, resourceHandler);\n  });\n});\n\ntest.describe('Book appointment filling insurances information on payment option step', async () => {\n  let insuranceCarrier1: QuestionnaireItemAnswerOption | undefined;\n  let insuranceCarrier2: QuestionnaireItemAnswerOption | undefined;\n\n  test.beforeAll(async () => {\n    const oystehr = await ResourceHandler.getOystehr();\n    const insuranceCarriersOptionsResponse = await oystehr.zambda.execute({\n      id: process.env.GET_ANSWER_OPTIONS_ZAMBDA_ID!,\n      answerSource: {\n        resourceType: 'InsurancePlan',\n        query: `status=active&_tag=${INSURANCE_PLAN_PAYER_META_TAG_CODE}`,\n      },\n    });\n    const insuranceCarriersOptions = chooseJson(insuranceCarriersOptionsResponse) as QuestionnaireItemAnswerOption[];\n\n    insuranceCarrier1 = insuranceCarriersOptions.at(0);\n    insuranceCarrier2 = insuranceCarriersOptions.at(1);\n  });\n\n  const subProcessId = `inPersonVisitMainFlow.spec.ts-SUB-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(subProcessId, 'in-person', async ({ patientInfo }) => {\n    return [\n      getContactInformationAnswers({\n        firstName: patientInfo.firstName,\n        lastName: patientInfo.lastName,\n        birthDate: isoToDateObject(patientInfo.dateOfBirth || '') || undefined,\n        email: patientInfo.email,\n        phoneNumber: patientInfo.phoneNumber,\n        birthSex: patientInfo.sex,\n      }),\n      getPatientDetailsStepAnswers({}),\n      getPaymentOptionInsuranceAnswers({\n        insuranceCarrier: insuranceCarrier1!,\n        insuranceMemberId: PATIENT_INSURANCE_MEMBER_ID,\n        insurancePolicyHolderFirstName: PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME,\n        insurancePolicyHolderLastName: PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME,\n        insurancePolicyHolderMiddleName: PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME,\n        insurancePolicyHolderDateOfBirth: PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH,\n        insurancePolicyHolderBirthSex: PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX,\n        insurancePolicyHolderAddressAsPatient: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_AS_PATIENT,\n        insurancePolicyHolderAddress: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS,\n        insurancePolicyHolderAddressAdditionalLine: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE,\n        insurancePolicyHolderCity: PATIENT_INSURANCE_POLICY_HOLDER_CITY,\n        insurancePolicyHolderState: PATIENT_INSURANCE_POLICY_HOLDER_STATE,\n        insurancePolicyHolderZip: PATIENT_INSURANCE_POLICY_HOLDER_ZIP,\n        insurancePolicyHolderRelationshipToInsured: PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED,\n        insuranceCarrier2: insuranceCarrier2!,\n        insuranceMemberId2: PATIENT_INSURANCE_MEMBER_ID,\n        insurancePolicyHolderFirstName2: PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME,\n        insurancePolicyHolderLastName2: PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME,\n        insurancePolicyHolderMiddleName2: PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME,\n        insurancePolicyHolderDateOfBirth2: PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH,\n        insurancePolicyHolderBirthSex2: PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX,\n        insurancePolicyHolderAddressAsPatient2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_AS_PATIENT,\n        insurancePolicyHolderAddress2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS,\n        insurancePolicyHolderAddressAdditionalLine2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE,\n        insurancePolicyHolderCity2: PATIENT_INSURANCE_POLICY_HOLDER_2_CITY,\n        insurancePolicyHolderState2: PATIENT_INSURANCE_POLICY_HOLDER_2_STATE,\n        insurancePolicyHolderZip2: PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP,\n        insurancePolicyHolderRelationshipToInsured2: PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED,\n      }),\n      getResponsiblePartyStepAnswers({}),\n      getConsentStepAnswers({}),\n    ];\n  });\n  test.beforeEach(async () => {\n    if (process.env.INTEGRATION_TEST === 'true') {\n      await resourceHandler.setResourcesFast();\n    } else {\n      await resourceHandler.setResources();\n    }\n  });\n\n  test.afterEach(async () => {\n    await resourceHandler.cleanupResources();\n  });\n  test('Book appointment, fill required fields for signing the visit, review and sign progress note', async ({\n    page,\n  }) => {\n    await BookAppointmentFillInfoSignProgressNote(page, resourceHandler);\n  });\n});\n\nasync function intakeTestAppointment(page: Page, resourceHandler: ResourceHandler): Promise<PatientInfoPage> {\n  const visitsPage = await openVisitsPage(page);\n  await visitsPage.selectLocation(ENV_LOCATION_NAME!);\n  await visitsPage.clickPrebookedTab();\n  await visitsPage.clickArrivedButton(resourceHandler.appointment.id!);\n  await visitsPage.clickInOfficeTab();\n  await visitsPage.clickIntakeButton(resourceHandler.appointment.id!);\n  const cssHeader = new CssHeader(page);\n  await cssHeader.selectIntakePractitioner();\n  await cssHeader.selectProviderPractitioner();\n  return await expectPatientInfoPage(resourceHandler.appointment.id!, page);\n}\n\nasync function BookAppointmentFillInfoSignProgressNote(page: Page, resourceHandler: ResourceHandler): Promise<void> {\n  await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment.id!);\n  const patientInfoPage = await intakeTestAppointment(page, resourceHandler);\n  await patientInfoPage.sideMenu().clickCompleteIntakeButton();\n  await patientInfoPage.cssHeader().clickSwitchModeButton('provider');\n  await patientInfoPage.cssHeader().changeStatus('provider');\n  const progressNotePage = await expectInPersonProgressNotePage(page);\n  await progressNotePage.verifyReviewAndSignButtonDisabled();\n  await patientInfoPage.sideMenu().clickAssessment();\n  const assessmentPage = await expectAssessmentPage(page);\n  await assessmentPage.selectDiagnosis({ diagnosisNamePart: DIAGNOSIS });\n  await assessmentPage.selectEmCode(EM_CODE);\n  await patientInfoPage.sideMenu().clickProgressNote();\n  await progressNotePage.clickDischargeButton();\n  await progressNotePage.clickReviewAndSignButton();\n  await progressNotePage.clickSignButton();\n  await patientInfoPage.cssHeader().verifyStatus('completed');\n  const visitsPage = await openVisitsPage(page);\n  await visitsPage.selectLocation(ENV_LOCATION_NAME!);\n  await visitsPage.clickDischargedTab();\n  await visitsPage.verifyVisitPresent(resourceHandler.appointment.id!);\n}\n"]}