{"version":3,"file":"patientRecordPage.spec.js","sourceRoot":"","sources":["patientRecordPage.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { BrowserContext, Page, test } from '@playwright/test';\nimport { DateTime } from 'luxon';\nimport { waitForResponseWithData } from 'test-utils';\nimport {\n  CreateAppointmentResponse,\n  DEMO_VISIT_CITY,\n  DEMO_VISIT_MARKETING_MESSAGING,\n  DEMO_VISIT_PATIENT_ETHNICITY,\n  DEMO_VISIT_PATIENT_RACE,\n  DEMO_VISIT_PHYSICIAN_ADDRESS,\n  DEMO_VISIT_PHYSICIAN_MOBILE,\n  DEMO_VISIT_POINT_OF_DISCOVERY,\n  DEMO_VISIT_PRACTICE_NAME,\n  DEMO_VISIT_PREFERRED_LANGUAGE,\n  DEMO_VISIT_PROVIDER_FIRST_NAME,\n  DEMO_VISIT_PROVIDER_LAST_NAME,\n  DEMO_VISIT_RESPONSIBLE_BIRTH_SEX,\n  DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_DAY,\n  DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_MONTH,\n  DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_YEAR,\n  DEMO_VISIT_RESPONSIBLE_FIRST_NAME,\n  DEMO_VISIT_RESPONSIBLE_LAST_NAME,\n  DEMO_VISIT_RESPONSIBLE_PHONE,\n  DEMO_VISIT_RESPONSIBLE_RELATIONSHIP,\n  DEMO_VISIT_STATE,\n  DEMO_VISIT_STREET_ADDRESS,\n  DEMO_VISIT_STREET_ADDRESS_OPTIONAL,\n  DEMO_VISIT_ZIP,\n  unpackFhirResponse,\n} from 'utils';\nimport { dataTestIds } from '../../../src/constants/data-test-ids';\nimport { ENV_LOCATION_NAME } from '../../e2e-utils/resource/constants';\nimport {\n  PATIENT_BIRTH_DATE_SHORT,\n  PATIENT_EMAIL,\n  PATIENT_FIRST_NAME,\n  PATIENT_GENDER,\n  PATIENT_LAST_NAME,\n  PATIENT_PHONE_NUMBER,\n  ResourceHandler,\n} from '../../e2e-utils/resource-handler';\nimport { openAddPatientPage } from '../page/AddPatientPage';\nimport { expectDiscardChangesDialog } from '../page/patient-information/DiscardChangesDialog';\nimport { expectPatientInformationPage, Field, openPatientInformationPage } from '../page/PatientInformationPage';\nimport { expectPatientRecordPage } from '../page/PatientRecordPage';\nimport { expectPatientsPage } from '../page/PatientsPage';\n\nconst NEW_PATIENT_LAST_NAME = 'Test_last_name';\nconst NEW_PATIENT_FIRST_NAME = 'Test_first_name';\nconst NEW_PATIENT_MIDDLE_NAME = 'Test_middle';\nconst NEW_PATIENT_SUFFIX = 'Mrs';\nconst NEW_PATIENT_PREFERRED_NAME = 'Test_pref';\nconst NEW_PATIENT_DATE_OF_BIRTH = '01/01/2024';\nconst NEW_PATIENT_PREFERRED_PRONOUNS = 'They/them';\nconst NEW_PATIENT_BIRTH_SEX = 'Female';\nconst NEW_STREET_ADDRESS = 'Test address, 1';\nconst NEW_STREET_ADDRESS_OPTIONAL = 'test, optional';\nconst NEW_CITY = 'New York';\nconst NEW_STATE = 'CA';\nconst NEW_ZIP = '05000';\nconst NEW_PATIENT_EMAIL = 'testemail@getMaxListeners.com';\nconst NEW_PATIENT_MOBILE = '2027139680';\nconst NEW_PATIENT_ETHNICITY = 'Hispanic or Latino';\nconst NEW_PATIENT_RACE = 'Asian';\nconst NEW_PATIENT_SEXUAL_ORIENTATION = 'Straight';\nconst NEW_PATIENT_GENDER_IDENTITY = 'Female';\nconst NEW_PATIENT_HOW_DID_YOU_HEAR = 'Webinar';\nconst NEW_SEND_MARKETING_MESSAGES = 'No';\nconst NEW_PREFERRED_LANGUAGE = 'Spanish';\nconst NEW_COMMON_WELL_CONSENT = 'Yes';\nconst NEW_RELATIONSHIP_FROM_RESPONSIBLE_CONTAINER = 'Parent';\nconst NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER = 'First name';\nconst NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER = 'Last name';\nconst NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER = '10/10/2000';\nconst NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER = 'Male';\nconst NEW_PHONE_FROM_RESPONSIBLE_CONTAINER = '(202) 111-1111';\nconst NEW_ADDRESS_RESPONSIBLE_PARTY = '123 fake lane';\nconst NEW_CITY_RESPONSIBLE_PARTY = 'Los Angeles';\nconst NEW_STATE_RESPONSIBLE_PARTY = 'NY';\nconst NEW_ZIP_RESPONSIBLE_PARTY = '10003';\nconst NEW_PROVIDER_FIRST_NAME = 'John';\nconst NEW_PROVIDER_LAST_NAME = 'Doe';\nconst NEW_PRACTICE_NAME = 'Dental';\nconst NEW_PHYSICIAN_ADDRESS = '5th avenue';\nconst NEW_PHYSICIAN_MOBILE = '(202) 222-2222';\nconst NEW_PATIENT_DETAILS_PLEASE_SPECIFY_FIELD = 'testing gender';\n\n//const RELEASE_OF_INFO = 'Yes, Release Allowed';\n//const RX_HISTORY_CONSENT = 'Rx history consent signed by the patient';\n\ntest.describe('Patient Record Page non-mutating tests', () => {\n  const PROCESS_ID = `patientRecordPage-non-mutating-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID);\n\n  test.beforeAll(async () => {\n    if (process.env.INTEGRATION_TEST === 'true') {\n      await resourceHandler.setResourcesFast();\n    } else {\n      await resourceHandler.setResources();\n      await resourceHandler.waitTillHarvestingDone(resourceHandler.appointment.id!);\n    }\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test('Click on \"See all patient info button\", Patient Info Page is opened', async ({ page }) => {\n    await page.goto('/patient/' + resourceHandler.patient.id);\n    const patientRecordPage = await expectPatientRecordPage(resourceHandler.patient.id!, page);\n    await patientRecordPage.clickSeeAllPatientInfoButton();\n    await expectPatientInformationPage(page, resourceHandler.patient.id!);\n  });\n\n  test('Verify required data from Patient info block is displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyPatientLastName(PATIENT_LAST_NAME);\n    await patientInformationPage.verifyPatientFirstName(PATIENT_FIRST_NAME);\n    await patientInformationPage.verifyPatientDateOfBirth(PATIENT_BIRTH_DATE_SHORT);\n    await patientInformationPage.verifyPatientBirthSex(PATIENT_GENDER);\n  });\n\n  test('Verify required data from Contact info block is displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyStreetAddress(DEMO_VISIT_STREET_ADDRESS);\n    await patientInformationPage.verifyAddressLineOptional(DEMO_VISIT_STREET_ADDRESS_OPTIONAL);\n    await patientInformationPage.verifyCity(DEMO_VISIT_CITY);\n    await patientInformationPage.verifyState(DEMO_VISIT_STATE);\n    await patientInformationPage.verifyZip(DEMO_VISIT_ZIP);\n    await patientInformationPage.verifyPatientEmail(PATIENT_EMAIL);\n    await patientInformationPage.verifyPatientMobile(PATIENT_PHONE_NUMBER);\n  });\n\n  test('Verify data from Responsible party information block is displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyRelationshipFromResponsibleContainer(DEMO_VISIT_RESPONSIBLE_RELATIONSHIP);\n    await patientInformationPage.verifyFirstNameFromResponsibleContainer(DEMO_VISIT_RESPONSIBLE_FIRST_NAME);\n    await patientInformationPage.verifyLastNameFromResponsibleContainer(DEMO_VISIT_RESPONSIBLE_LAST_NAME);\n    await patientInformationPage.verifyDateOfBirthFromResponsibleContainer(\n      DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_MONTH +\n        '/' +\n        DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_DAY +\n        '/' +\n        DEMO_VISIT_RESPONSIBLE_DATE_OF_BIRTH_YEAR\n    );\n    await patientInformationPage.verifyBirthSexFromResponsibleContainer(DEMO_VISIT_RESPONSIBLE_BIRTH_SEX);\n    await patientInformationPage.verifyPhoneFromResponsibleContainer(DEMO_VISIT_RESPONSIBLE_PHONE);\n  });\n\n  test('Verify entered by patient data from Patient details block is displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyPatientEthnicity(DEMO_VISIT_PATIENT_ETHNICITY);\n    await patientInformationPage.verifyPatientRace(DEMO_VISIT_PATIENT_RACE);\n    await patientInformationPage.verifyHowDidYouHear(DEMO_VISIT_POINT_OF_DISCOVERY);\n    await patientInformationPage.verifyMarketingMessaging(DEMO_VISIT_MARKETING_MESSAGING ? 'Yes' : 'No');\n    await patientInformationPage.verifyPreferredLanguage(DEMO_VISIT_PREFERRED_LANGUAGE);\n  });\n\n  test('Verify data from Primary Care Physician block is displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyFirstNameFromPcp(DEMO_VISIT_PROVIDER_FIRST_NAME);\n    await patientInformationPage.verifyLastNameFromPcp(DEMO_VISIT_PROVIDER_LAST_NAME);\n    await patientInformationPage.verifyPracticeNameFromPcp(DEMO_VISIT_PRACTICE_NAME);\n    await patientInformationPage.verifyAddressFromPcp(DEMO_VISIT_PHYSICIAN_ADDRESS);\n    await patientInformationPage.verifyMobileFromPcp(DEMO_VISIT_PHYSICIAN_MOBILE);\n  });\n\n  test('Check all fields from Primary Care Physician block are hidden when checkbox is checked', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.setCheckboxOn();\n    await patientInformationPage.verifyFirstNameFromPcpIsNotVisible();\n    await patientInformationPage.verifyLastNameFromPcpIsNotVisible();\n    await patientInformationPage.verifyPracticeNameFromPcpIsNotVisible();\n    await patientInformationPage.verifyAddressFromPcpIsNotVisible();\n    await patientInformationPage.verifyMobileFromPcpIsNotVisible();\n  });\n\n  test.skip('Check all fields from Primary Care Physician block after toggling the checkbox on and off', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n\n    await patientInformationPage.setCheckboxOn();\n    await patientInformationPage.setCheckboxOff();\n\n    await patientInformationPage.verifyFirstNameFromPcp(DEMO_VISIT_PROVIDER_FIRST_NAME);\n    await patientInformationPage.verifyLastNameFromPcp(DEMO_VISIT_PROVIDER_LAST_NAME);\n    await patientInformationPage.verifyPracticeNameFromPcp(DEMO_VISIT_PRACTICE_NAME);\n    await patientInformationPage.verifyAddressFromPcp(DEMO_VISIT_PHYSICIAN_ADDRESS);\n    await patientInformationPage.verifyMobileFromPcp(DEMO_VISIT_PHYSICIAN_MOBILE);\n  });\n\n  test('Check validation error is displayed for invalid phone number from Primary Care Physician block', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clearMobileFromPcp();\n    await patientInformationPage.enterMobileFromPcp('2222245');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidPhoneFromPcp();\n  });\n\n  //to do: uncomment when https://github.com/masslight/ottehr/issues/2200 will be fixed\n  /* test('Click [x] from Patient info page without updating any data, Patient Record page is opened', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clickCloseButton();\n    await expectPatientRecordPage(resourceHandler.patient.id!, page);\n  });\n\n  test('Click [x] from Patient info page after updating any field and reverting this changes, Patient Record page is opened', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.enterPatientFirstName(PATIENT_FIRST_NAME);\n    await patientInformationPage.clickCloseButton();\n    await expectPatientRecordPage(resourceHandler.patient.id!, page);\n  });*/\n\n  test('Click on Patients Name breadcrumb, Patient Record page is opened', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clickPatientNameBreadcrumb(\n      resourceHandler.patient.name?.[0]?.given?.[0] + ' ' + resourceHandler.patient.name?.[0].family\n    );\n    await expectPatientRecordPage(resourceHandler.patient.id!, page);\n  });\n\n  test('Click on Patients breadcrumb, Patients page is opened', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clickPatientsBreadcrumb();\n    await expectPatientsPage(page);\n  });\n\n  test('Click on [Discard changes] button, Patient Record page is opened', async ({ page }) => {\n    await page.goto('/patient/' + resourceHandler.patient.id);\n    let patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.clickCloseButton();\n    const discardChangesDialog = await expectDiscardChangesDialog(page);\n    await discardChangesDialog.clickDiscardChangesButton();\n    await expectPatientRecordPage(resourceHandler.patient.id!, page);\n    patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyPatientFirstName(PATIENT_FIRST_NAME);\n  });\n\n  test('Click on [Cancel] button, user stays on Patient Information page', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.clickCloseButton();\n    const discardChangesDialog = await expectDiscardChangesDialog(page);\n    await discardChangesDialog.clickCancelButton();\n    await expectPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyPatientFirstName(NEW_PATIENT_FIRST_NAME);\n  });\n\n  test('Click on [x] icon, user stays on Patient Information page', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.clickCloseButton();\n    const discardChangesDialog = await expectDiscardChangesDialog(page);\n    await discardChangesDialog.clickCloseButton();\n    await expectPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyPatientFirstName(NEW_PATIENT_FIRST_NAME);\n  });\n});\n\ntest.describe('Patient Record Page mutating tests', () => {\n  const PROCESS_ID = `patientRecordPage-mutating-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID);\n\n  test.beforeEach(async () => {\n    await resourceHandler.setResources();\n    await resourceHandler.waitTillHarvestingDone(resourceHandler.appointment.id!);\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test('Fill and save required values on Patient Info Page, values are saved and updated successfully- Happy path', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientLastName(NEW_PATIENT_LAST_NAME);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.enterPatientDateOfBirth(NEW_PATIENT_DATE_OF_BIRTH);\n    await patientInformationPage.selectPatientBirthSex(NEW_PATIENT_BIRTH_SEX);\n    await patientInformationPage.enterStreetAddress(NEW_STREET_ADDRESS);\n    await patientInformationPage.enterCity(NEW_CITY);\n    await patientInformationPage.selectState(NEW_STATE);\n    await patientInformationPage.enterZip(NEW_ZIP);\n    await patientInformationPage.enterPatientEmail(NEW_PATIENT_EMAIL);\n    await patientInformationPage.enterPatientMobile(NEW_PATIENT_MOBILE);\n    await patientInformationPage.selectPatientEthnicity(NEW_PATIENT_ETHNICITY);\n    await patientInformationPage.selectPatientRace(NEW_PATIENT_RACE);\n    await patientInformationPage.selectRelationshipFromResponsibleContainer(\n      NEW_RELATIONSHIP_FROM_RESPONSIBLE_CONTAINER\n    );\n    await patientInformationPage.enterFirstNameFromResponsibleContainer(NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterLastNameFromResponsibleContainer(NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterDateOfBirthFromResponsibleContainer(NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.selectBirthSexFromResponsibleContainer(NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterPhoneFromResponsibleContainer(NEW_PHONE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterStreetLine1FromResponsibleContainer(NEW_ADDRESS_RESPONSIBLE_PARTY);\n    await patientInformationPage.enterResponsiblePartyCity(NEW_CITY_RESPONSIBLE_PARTY);\n    await patientInformationPage.selectResponsiblePartyState(NEW_STATE_RESPONSIBLE_PARTY);\n    await patientInformationPage.enterResponsiblePartyZip(NEW_ZIP_RESPONSIBLE_PARTY);\n    // await patientInformationPage.selectReleaseOfInfo(RELEASE_OF_INFO);\n    // await patientInformationPage.selectRxHistoryConsent(RX_HISTORY_CONSENT);\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyPatientLastName(NEW_PATIENT_LAST_NAME);\n    await patientInformationPage.verifyPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.verifyPatientDateOfBirth(NEW_PATIENT_DATE_OF_BIRTH);\n    await patientInformationPage.verifyPatientBirthSex(NEW_PATIENT_BIRTH_SEX);\n    await patientInformationPage.verifyStreetAddress(NEW_STREET_ADDRESS);\n    await patientInformationPage.verifyCity(NEW_CITY);\n    await patientInformationPage.verifyState(NEW_STATE);\n    await patientInformationPage.verifyZip(NEW_ZIP);\n    await patientInformationPage.verifyPatientEmail(NEW_PATIENT_EMAIL);\n    await patientInformationPage.verifyPatientMobile(NEW_PATIENT_MOBILE);\n    await patientInformationPage.verifyPatientEthnicity(NEW_PATIENT_ETHNICITY);\n    await patientInformationPage.verifyPatientRace(NEW_PATIENT_RACE);\n    await patientInformationPage.verifyRelationshipFromResponsibleContainer(\n      NEW_RELATIONSHIP_FROM_RESPONSIBLE_CONTAINER\n    );\n    await patientInformationPage.verifyFirstNameFromResponsibleContainer(NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyLastNameFromResponsibleContainer(NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyDateOfBirthFromResponsibleContainer(NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyBirthSexFromResponsibleContainer(NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyPhoneFromResponsibleContainer(NEW_PHONE_FROM_RESPONSIBLE_CONTAINER);\n\n    /*\n    skipping these tests because this component has been hidden while await requirement clarification from product team\n    await patientInformationPage.verifyReleaseOfInfo(RELEASE_OF_INFO);\n    await patientInformationPage.verifyRxHistoryConsent(RX_HISTORY_CONSENT);\n    */\n  });\n\n  test('Check validation error is displayed if any required field in Patient info block is missing', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clearPatientLastName();\n    await patientInformationPage.clearPatientFirstName();\n    await patientInformationPage.clearPatientDateOfBirth();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.PATIENT_LAST_NAME);\n    await patientInformationPage.verifyValidationErrorShown(Field.PATIENT_FIRST_NAME);\n    await patientInformationPage.verifyValidationErrorShown(Field.PATIENT_DOB);\n  });\n\n  test('Updated values from Patient info block are saved and displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterPatientLastName(NEW_PATIENT_LAST_NAME);\n    await patientInformationPage.enterPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.enterPatientMiddleName(NEW_PATIENT_MIDDLE_NAME);\n    await patientInformationPage.enterPatientSuffix(NEW_PATIENT_SUFFIX);\n    await patientInformationPage.enterPatientPreferredName(NEW_PATIENT_PREFERRED_NAME);\n    await patientInformationPage.enterPatientDateOfBirth(NEW_PATIENT_DATE_OF_BIRTH);\n    await patientInformationPage.selectPatientPreferredPronouns(NEW_PATIENT_PREFERRED_PRONOUNS);\n    await patientInformationPage.selectPatientBirthSex(NEW_PATIENT_BIRTH_SEX);\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyPatientLastName(NEW_PATIENT_LAST_NAME);\n    await patientInformationPage.verifyPatientFirstName(NEW_PATIENT_FIRST_NAME);\n    await patientInformationPage.verifyPatientMiddleName(NEW_PATIENT_MIDDLE_NAME);\n    await patientInformationPage.verifyPatientSuffix(NEW_PATIENT_SUFFIX);\n    await patientInformationPage.verifyPatientPreferredName(NEW_PATIENT_PREFERRED_NAME);\n    await patientInformationPage.verifyPatientDateOfBirth(NEW_PATIENT_DATE_OF_BIRTH);\n    await patientInformationPage.verifyPatientPreferredPronouns(NEW_PATIENT_PREFERRED_PRONOUNS);\n    await patientInformationPage.verifyPatientBirthSex(NEW_PATIENT_BIRTH_SEX);\n  });\n\n  test('Check validation error is displayed if any required field in Contact info block is missing', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clearStreetAddress();\n    await patientInformationPage.clearCity();\n    await patientInformationPage.clearZip();\n    await patientInformationPage.clearPatientEmail();\n    await patientInformationPage.clearPatientMobile();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_STREET_ADDRESS);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_CITY);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_ZIP);\n    await patientInformationPage.verifyValidationErrorShown(Field.PATIENT_EMAIL);\n    await patientInformationPage.verifyValidationErrorShown(Field.PATIENT_PHONE_NUMBER);\n  });\n\n  test('Enter invalid email,zip and mobile on Contract info block, validation errors are shown', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterZip('11');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorZipField();\n    await patientInformationPage.enterZip('11223344');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorZipField();\n    await patientInformationPage.enterPatientEmail('testEmailGetMaxListeners.com');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidEmail();\n    await patientInformationPage.enterPatientEmail('@testEmailGetMaxListeners.com');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidEmail();\n    await patientInformationPage.enterPatientEmail('testEmailGetMaxListeners@.com');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidEmail();\n    await patientInformationPage.clearPatientMobile();\n    await patientInformationPage.enterPatientMobile('111');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidMobile();\n  });\n\n  test('Updated values from Contact info block are saved and displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterStreetAddress(NEW_STREET_ADDRESS);\n    await patientInformationPage.enterAddressLineOptional(NEW_STREET_ADDRESS_OPTIONAL);\n    await patientInformationPage.enterCity(NEW_CITY);\n    await patientInformationPage.selectState(NEW_STATE);\n    await patientInformationPage.enterZip(NEW_ZIP);\n    await patientInformationPage.enterPatientEmail(NEW_PATIENT_EMAIL);\n    await patientInformationPage.enterPatientMobile(NEW_PATIENT_MOBILE);\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyStreetAddress(NEW_STREET_ADDRESS);\n    await patientInformationPage.verifyAddressLineOptional(NEW_STREET_ADDRESS_OPTIONAL);\n    await patientInformationPage.verifyCity(NEW_CITY);\n    await patientInformationPage.verifyState(NEW_STATE);\n    await patientInformationPage.verifyZip(NEW_ZIP);\n    await patientInformationPage.verifyPatientEmail(NEW_PATIENT_EMAIL);\n    await patientInformationPage.verifyPatientMobile(NEW_PATIENT_MOBILE);\n  });\n\n  test('Check validation error is displayed if any required field in Responsible party information block is missing or phone number is invalid', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.clearFirstNameFromResponsibleContainer();\n    await patientInformationPage.clearLastNameFromResponsibleContainer();\n    await patientInformationPage.clearDateOfBirthFromResponsibleContainer();\n    await patientInformationPage.clearPhoneFromResponsibleContainer();\n    await patientInformationPage.clickSaveChangesButton();\n\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_RESPONSIBLE_FIRST_NAME);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_RESPONSIBLE_LAST_NAME);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_RESPONSIBLE_BIRTHDATE);\n    await patientInformationPage.enterPhoneFromResponsibleContainer('111');\n    await patientInformationPage.enterDateOfBirthFromResponsibleContainer('10/10/2024');\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidPhoneFromResponsibleContainer();\n  });\n\n  test('Updated values from Responsible party information block  are saved and displayed correctly', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.selectRelationshipFromResponsibleContainer(\n      NEW_RELATIONSHIP_FROM_RESPONSIBLE_CONTAINER\n    );\n    await patientInformationPage.enterFirstNameFromResponsibleContainer(NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterLastNameFromResponsibleContainer(NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterDateOfBirthFromResponsibleContainer(NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.selectBirthSexFromResponsibleContainer(NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterPhoneFromResponsibleContainer(NEW_PHONE_FROM_RESPONSIBLE_CONTAINER);\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyRelationshipFromResponsibleContainer(\n      NEW_RELATIONSHIP_FROM_RESPONSIBLE_CONTAINER\n    );\n    await patientInformationPage.verifyFirstNameFromResponsibleContainer(NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyLastNameFromResponsibleContainer(NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyDateOfBirthFromResponsibleContainer(NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyBirthSexFromResponsibleContainer(NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.verifyPhoneFromResponsibleContainer(NEW_PHONE_FROM_RESPONSIBLE_CONTAINER);\n  });\n\n  test('Updated values from Patient details  block  are saved and displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.selectPatientEthnicity(NEW_PATIENT_ETHNICITY);\n    await patientInformationPage.selectPatientRace(NEW_PATIENT_RACE);\n    await patientInformationPage.selectSexualOrientation(NEW_PATIENT_SEXUAL_ORIENTATION);\n    await patientInformationPage.selectGenderIdentity(NEW_PATIENT_GENDER_IDENTITY);\n    await patientInformationPage.selectHowDidYouHear(NEW_PATIENT_HOW_DID_YOU_HEAR);\n    await patientInformationPage.selectMarketingMessaging(NEW_SEND_MARKETING_MESSAGES);\n    await patientInformationPage.selectPreferredLanguage(NEW_PREFERRED_LANGUAGE);\n    await patientInformationPage.selectCommonWellConsent(NEW_COMMON_WELL_CONSENT);\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyPatientEthnicity(NEW_PATIENT_ETHNICITY);\n    await patientInformationPage.verifyPatientRace(NEW_PATIENT_RACE);\n    await patientInformationPage.verifySexualOrientation(NEW_PATIENT_SEXUAL_ORIENTATION);\n    await patientInformationPage.verifyGenderIdentity(NEW_PATIENT_GENDER_IDENTITY);\n    await patientInformationPage.verifyHowDidYouHear(NEW_PATIENT_HOW_DID_YOU_HEAR);\n    await patientInformationPage.verifyMarketingMessaging(NEW_SEND_MARKETING_MESSAGES);\n    await patientInformationPage.verifyPreferredLanguage(NEW_PREFERRED_LANGUAGE);\n    await patientInformationPage.verifyCommonWellConsent(NEW_COMMON_WELL_CONSENT);\n  });\n\n  test('If \"Other\" gender is selected from Patient details  block, additional field appears and it is required', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.selectGenderIdentity('Other');\n    await patientInformationPage.verifyOtherGenderFieldIsVisible();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.GENDER_IDENTITY_ADDITIONAL_FIELD);\n    await patientInformationPage.enterOtherGenderField(NEW_PATIENT_DETAILS_PLEASE_SPECIFY_FIELD);\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n    await patientInformationPage.verifyGenderIdentity('Other');\n    await patientInformationPage.verifyOtherGenderInput(NEW_PATIENT_DETAILS_PLEASE_SPECIFY_FIELD);\n    await patientInformationPage.selectGenderIdentity(NEW_PATIENT_GENDER_IDENTITY);\n    await patientInformationPage.verifyOtherGenderFieldIsNotVisible();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n    await patientInformationPage.verifyGenderIdentity(NEW_PATIENT_GENDER_IDENTITY);\n    await patientInformationPage.verifyOtherGenderFieldIsNotVisible();\n  });\n\n  test('Check all fields from Primary Care Physician block are visible and required when checkbox is unchecked', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyCheckboxOff();\n    await patientInformationPage.verifyFirstNameFromPcpIsVisible();\n    await patientInformationPage.verifyLastNameFromPcpIsVisible();\n    await patientInformationPage.verifyPracticeNameFromPcpIsVisible();\n    await patientInformationPage.verifyAddressFromPcpIsVisible();\n    await patientInformationPage.verifyMobileFromPcpIsVisible();\n\n    await patientInformationPage.clearFirstNameFromPcp();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PROVIDER_FIRST_NAME);\n\n    await patientInformationPage.enterFirstNameFromPcp(NEW_PROVIDER_FIRST_NAME);\n    await patientInformationPage.clearLastNameFromPcp();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PROVIDER_LAST_NAME);\n\n    await patientInformationPage.enterLastNameFromPcp(NEW_PROVIDER_LAST_NAME);\n    await patientInformationPage.clearPracticeNameFromPcp();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PRACTICE_NAME);\n\n    await patientInformationPage.enterPracticeNameFromPcp(NEW_PRACTICE_NAME);\n    await patientInformationPage.clearAddressFromPcp();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PHYSICIAN_ADDRESS);\n\n    await patientInformationPage.enterAddressFromPcp(NEW_PHYSICIAN_ADDRESS);\n    await patientInformationPage.clearMobileFromPcp();\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyValidationErrorInvalidPhoneFromPcp();\n  });\n\n  test('Updated values from Primary Care Physician block are saved and displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.enterFirstNameFromPcp(NEW_PROVIDER_FIRST_NAME);\n    await patientInformationPage.enterLastNameFromPcp(NEW_PROVIDER_LAST_NAME);\n    await patientInformationPage.enterPracticeNameFromPcp(NEW_PRACTICE_NAME);\n    await patientInformationPage.enterAddressFromPcp(NEW_PHYSICIAN_ADDRESS);\n    await patientInformationPage.enterMobileFromPcp(NEW_PHYSICIAN_MOBILE);\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n\n    await patientInformationPage.verifyFirstNameFromPcp(NEW_PROVIDER_FIRST_NAME);\n    await patientInformationPage.verifyLastNameFromPcp(NEW_PROVIDER_LAST_NAME);\n    await patientInformationPage.verifyPracticeNameFromPcp(NEW_PRACTICE_NAME);\n    await patientInformationPage.verifyAddressFromPcp(NEW_PHYSICIAN_ADDRESS);\n    await patientInformationPage.verifyMobileFromPcp(NEW_PHYSICIAN_MOBILE);\n  });\n\n  const INSURANCE_MEMBER_ID = 'abc1234567';\n  const INSURANCE_POLICY_HOLDER_ADDRESS = 'street 17';\n  const INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE = 'additional';\n  const INSURANCE_POLICY_HOLDER_BIRTH_SEX = 'Intersex';\n  const INSURANCE_POLICY_HOLDER_CITY = 'Anchorage';\n  const INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH = '04/04/1992';\n  const INSURANCE_POLICY_HOLDER_FIRST_NAME = 'James';\n  const INSURANCE_POLICY_HOLDER_LAST_NAME = 'Cannoli';\n  const INSURANCE_POLICY_HOLDER_MIDDLE_NAME = 'Bob';\n  const INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED = 'Common Law Spouse';\n  const INSURANCE_POLICY_HOLDER_STATE = 'AK';\n  const INSURANCE_POLICY_HOLDER_ZIP = '78956';\n  const INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO = 'testing';\n  const INSURANCE_CARRIER = '6 Degrees Health Incorporated';\n\n  const INSURANCE_MEMBER_ID_2 = '987548ert';\n  const INSURANCE_POLICY_HOLDER_ADDRESS_2 = 'second street';\n  const INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE_2 = 'additional2';\n  const INSURANCE_POLICY_HOLDER_BIRTH_SEX_2 = 'Male';\n  const INSURANCE_POLICY_HOLDER_CITY_2 = 'Denver';\n  const INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH_2 = '03/03/1991';\n  const INSURANCE_POLICY_HOLDER_FIRST_NAME_2 = 'David';\n  const INSURANCE_POLICY_HOLDER_LAST_NAME_2 = 'Sorbet';\n  const INSURANCE_POLICY_HOLDER_MIDDLE_NAME_2 = 'Roger';\n  const INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED_2 = 'Injured Party';\n  const INSURANCE_POLICY_HOLDER_STATE_2 = 'CO';\n  const INSURANCE_POLICY_HOLDER_ZIP_2 = '21211';\n  const INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2 = 'testing2';\n  const INSURANCE_CARRIER_2 = 'ACTIN Care Groups';\n\n  test('Check validation error is displayed if any required field in Add insurance dialog is missing', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const addInsuranceDialog = await patientInformationPage.clickAddInsuranceButton();\n\n    await addInsuranceDialog.enterMemberId(INSURANCE_MEMBER_ID);\n    await addInsuranceDialog.enterPolicyHolderFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME);\n    await addInsuranceDialog.enterPolicyHolderLastName(INSURANCE_POLICY_HOLDER_LAST_NAME);\n    await addInsuranceDialog.enterDateOfBirthFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH);\n    await addInsuranceDialog.enterPolicyHolderStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS);\n    await addInsuranceDialog.enterPolicyHolderCity(INSURANCE_POLICY_HOLDER_CITY);\n    await addInsuranceDialog.enterZipFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_ZIP);\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.insuranceCarrier);\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.policyHoldersSex);\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.relationship);\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.state);\n\n    await addInsuranceDialog.selectInsuranceCarrier(INSURANCE_CARRIER);\n    await addInsuranceDialog.selectPolicyHoldersBirthSex(INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n    await addInsuranceDialog.selectPatientsRelationship(INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED);\n    await addInsuranceDialog.selectPolicyHoldersState(INSURANCE_POLICY_HOLDER_STATE);\n\n    await addInsuranceDialog.clearMemberId();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.memberId);\n    await addInsuranceDialog.enterMemberId(INSURANCE_MEMBER_ID);\n\n    await addInsuranceDialog.clearPolicyHolderFirstName();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.policyHoldersFirstName);\n    await addInsuranceDialog.enterPolicyHolderFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME);\n\n    await addInsuranceDialog.clearPolicyHolderLastName();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.policyHoldersLastName);\n    await addInsuranceDialog.enterPolicyHolderLastName(INSURANCE_POLICY_HOLDER_LAST_NAME);\n\n    await addInsuranceDialog.clearDateOfBirthFromAddInsuranceDialog();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.policyHoldersDateOfBirth);\n    await addInsuranceDialog.enterDateOfBirthFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH);\n\n    await addInsuranceDialog.clearPolicyHolderStreetAddress();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.streetAddress);\n    await addInsuranceDialog.enterPolicyHolderStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS);\n\n    await addInsuranceDialog.clearPolicyHolderCity();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.city);\n    await addInsuranceDialog.enterPolicyHolderCity(INSURANCE_POLICY_HOLDER_CITY);\n\n    await addInsuranceDialog.clearZipFromAddInsuranceDialog();\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorShown(dataTestIds.addInsuranceDialog.zip);\n  });\n\n  test('Check validation error is displayed for invalid zip', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const addInsuranceDialog = await patientInformationPage.clickAddInsuranceButton();\n    await addInsuranceDialog.enterZipFromAddInsuranceDialog('11');\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorZipFieldFromAddInsurance();\n    await addInsuranceDialog.enterZipFromAddInsuranceDialog('11223344');\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n    await addInsuranceDialog.verifyValidationErrorZipFieldFromAddInsurance();\n  });\n\n  test('Fill fields and add primary and secondary insurances, verify insurances are saved successfully with correct data', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const addInsuranceDialog = await patientInformationPage.clickAddInsuranceButton();\n    await addInsuranceDialog.selectInsuranceType('Primary');\n    await addInsuranceDialog.enterMemberId(INSURANCE_MEMBER_ID);\n    await addInsuranceDialog.enterPolicyHolderFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME);\n    await addInsuranceDialog.enterPolicyHolderMiddleName(INSURANCE_POLICY_HOLDER_MIDDLE_NAME);\n    await addInsuranceDialog.enterPolicyHolderLastName(INSURANCE_POLICY_HOLDER_LAST_NAME);\n    await addInsuranceDialog.enterDateOfBirthFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH);\n    await addInsuranceDialog.enterPolicyHolderStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS);\n    await addInsuranceDialog.enterPolicyHolderAddressLine2(INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE);\n    await addInsuranceDialog.enterPolicyHolderCity(INSURANCE_POLICY_HOLDER_CITY);\n    await addInsuranceDialog.enterZipFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_ZIP);\n    await addInsuranceDialog.selectInsuranceCarrier(INSURANCE_CARRIER);\n    await addInsuranceDialog.selectPolicyHoldersBirthSex(INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n    await addInsuranceDialog.selectPatientsRelationship(INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED);\n    await addInsuranceDialog.selectPolicyHoldersState(INSURANCE_POLICY_HOLDER_STATE);\n    await addInsuranceDialog.enterAdditionalInsuranceInformation(INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO);\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await primaryInsuranceCard.verifyInsuranceType('Primary');\n    await primaryInsuranceCard.verifyInsuranceCarrier(INSURANCE_CARRIER);\n    await primaryInsuranceCard.verifyMemberId(INSURANCE_MEMBER_ID);\n    await primaryInsuranceCard.verifyPolicyHoldersFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersLastName(INSURANCE_POLICY_HOLDER_LAST_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersMiddleName(INSURANCE_POLICY_HOLDER_MIDDLE_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersDateOfBirth(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH);\n    await primaryInsuranceCard.verifyPolicyHoldersSex(INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n    await primaryInsuranceCard.verifyInsuranceStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS);\n    await primaryInsuranceCard.verifyInsuranceAddressLine2(INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE);\n    await primaryInsuranceCard.verifyInsuranceCity(INSURANCE_POLICY_HOLDER_CITY);\n    await primaryInsuranceCard.verifyInsuranceState(INSURANCE_POLICY_HOLDER_STATE);\n    await primaryInsuranceCard.verifyInsuranceZip(INSURANCE_POLICY_HOLDER_ZIP);\n    await primaryInsuranceCard.verifyPatientsRelationshipToInjured(INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED);\n    await primaryInsuranceCard.verifyAdditionalInsuranceInformation(INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO);\n\n    await patientInformationPage.clickAddInsuranceButton();\n    await addInsuranceDialog.verifyTypeField('Secondary', false);\n    await addInsuranceDialog.enterMemberId(INSURANCE_MEMBER_ID_2);\n    await addInsuranceDialog.enterPolicyHolderFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME_2);\n    await addInsuranceDialog.enterPolicyHolderMiddleName(INSURANCE_POLICY_HOLDER_MIDDLE_NAME_2);\n    await addInsuranceDialog.enterPolicyHolderLastName(INSURANCE_POLICY_HOLDER_LAST_NAME_2);\n    await addInsuranceDialog.enterDateOfBirthFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH_2);\n    await addInsuranceDialog.enterPolicyHolderStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS_2);\n    await addInsuranceDialog.enterPolicyHolderAddressLine2(INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE_2);\n    await addInsuranceDialog.enterPolicyHolderCity(INSURANCE_POLICY_HOLDER_CITY_2);\n    await addInsuranceDialog.enterZipFromAddInsuranceDialog(INSURANCE_POLICY_HOLDER_ZIP_2);\n    await addInsuranceDialog.selectInsuranceCarrier(INSURANCE_CARRIER_2);\n    await addInsuranceDialog.selectPolicyHoldersBirthSex(INSURANCE_POLICY_HOLDER_BIRTH_SEX_2);\n    await addInsuranceDialog.selectPatientsRelationship(INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED_2);\n    await addInsuranceDialog.selectPolicyHoldersState(INSURANCE_POLICY_HOLDER_STATE_2);\n    await addInsuranceDialog.enterAdditionalInsuranceInformation(INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2);\n    await addInsuranceDialog.clickAddInsuranceButtonFromAddInsuranceDialog();\n\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n    await secondaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.verifyInsuranceType('Secondary');\n    await secondaryInsuranceCard.verifyInsuranceCarrier(INSURANCE_CARRIER_2);\n    await secondaryInsuranceCard.verifyMemberId(INSURANCE_MEMBER_ID_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersFirstName(INSURANCE_POLICY_HOLDER_FIRST_NAME_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersLastName(INSURANCE_POLICY_HOLDER_LAST_NAME_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersMiddleName(INSURANCE_POLICY_HOLDER_MIDDLE_NAME_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersDateOfBirth(INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersSex(INSURANCE_POLICY_HOLDER_BIRTH_SEX_2);\n    await secondaryInsuranceCard.verifyInsuranceStreetAddress(INSURANCE_POLICY_HOLDER_ADDRESS_2);\n    await secondaryInsuranceCard.verifyInsuranceAddressLine2(INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE_2);\n    await secondaryInsuranceCard.verifyInsuranceCity(INSURANCE_POLICY_HOLDER_CITY_2);\n    await secondaryInsuranceCard.verifyInsuranceState(INSURANCE_POLICY_HOLDER_STATE_2);\n    await secondaryInsuranceCard.verifyInsuranceZip(INSURANCE_POLICY_HOLDER_ZIP_2);\n    await secondaryInsuranceCard.verifyPatientsRelationshipToInjured(INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED_2);\n    await secondaryInsuranceCard.verifyAdditionalInsuranceInformation(INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2);\n  });\n});\n\ntest.describe('Patient Record Page tests with zero patient data filled in', async () => {\n  const PROCESS_ID = `patientRecordPage-zero-data-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID);\n\n  let context: BrowserContext;\n  let page: Page;\n\n  test.beforeAll(async ({ browser }) => {\n    await resourceHandler.setResources();\n    context = await browser.newContext();\n    page = await context.newPage();\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test('Check state, ethnicity, race, relationship to patient are required', async () => {\n    await page.goto('/patient/' + resourceHandler.patient.id);\n    const addPatientPage = await openAddPatientPage(page);\n    await addPatientPage.selectOffice(ENV_LOCATION_NAME!);\n    await addPatientPage.enterMobilePhone(NEW_PATIENT_MOBILE);\n    await addPatientPage.clickSearchForPatientsButton();\n    await addPatientPage.clickPatientNotFoundButton();\n    await addPatientPage.enterFirstName(NEW_PATIENT_FIRST_NAME);\n    await addPatientPage.enterLastName(NEW_PATIENT_FIRST_NAME);\n    await addPatientPage.enterDateOfBirth(NEW_PATIENT_DATE_OF_BIRTH);\n    await addPatientPage.selectSexAtBirth(NEW_PATIENT_BIRTH_SEX);\n    await addPatientPage.selectReasonForVisit('Injury to head');\n    await addPatientPage.selectVisitType('Walk-in In Person Visit');\n    const appointmentCreationResponse = waitForResponseWithData(page, /\\/create-appointment\\//);\n    await addPatientPage.clickAddButton();\n\n    const response = await unpackFhirResponse<CreateAppointmentResponse>(await appointmentCreationResponse);\n    const appointmentId = response.appointmentId;\n    if (!appointmentId) {\n      throw new Error('Appointment ID should be present in the response');\n    }\n\n    const patientId = await resourceHandler.patientIdByAppointmentId(appointmentId);\n    const patientInformationPage = await openPatientInformationPage(page, patientId);\n    await patientInformationPage.enterStreetAddress(NEW_STREET_ADDRESS);\n    await patientInformationPage.enterCity(NEW_CITY);\n    await patientInformationPage.enterPatientEmail(NEW_PATIENT_EMAIL);\n    await patientInformationPage.enterPatientMobile(NEW_PATIENT_MOBILE);\n    await patientInformationPage.enterFirstNameFromResponsibleContainer(NEW_FIRST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterLastNameFromResponsibleContainer(NEW_LAST_NAME_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.enterDateOfBirthFromResponsibleContainer(NEW_BIRTHDATE_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.selectBirthSexFromResponsibleContainer(NEW_BIRTH_SEX_FROM_RESPONSIBLE_CONTAINER);\n    await patientInformationPage.clickSaveChangesButton();\n\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_STATE);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PATIENT_ETHNICITY);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_PATIENT_RACE);\n    await patientInformationPage.verifyValidationErrorShown(Field.DEMO_VISIT_RESPONSIBLE_RELATIONSHIP);\n  });\n});\n"]}