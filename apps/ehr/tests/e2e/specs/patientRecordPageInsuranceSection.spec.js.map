{"version":3,"file":"patientRecordPageInsuranceSection.spec.js","sourceRoot":"","sources":["patientRecordPageInsuranceSection.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { test } from '@playwright/test';\nimport { QuestionnaireItemAnswerOption } from 'fhir/r4b';\nimport { DateTime } from 'luxon';\nimport {\n  chooseJson,\n  getConsentStepAnswers,\n  getContactInformationAnswers,\n  getPatientDetailsStepAnswers,\n  getPaymentOptionInsuranceAnswers,\n  getPrimaryCarePhysicianStepAnswers,\n  getResponsiblePartyStepAnswers,\n  isoToDateObject,\n  ORG_TYPE_CODE_SYSTEM,\n  ORG_TYPE_PAYER_CODE,\n} from 'utils';\nimport { dataTestIds } from '../../../src/constants/data-test-ids';\nimport {\n  PATIENT_INSURANCE_MEMBER_ID,\n  PATIENT_INSURANCE_MEMBER_ID_2,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_AS_PATIENT,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_CITY,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_STATE,\n  PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE,\n  PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_AS_PATIENT,\n  PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX,\n  PATIENT_INSURANCE_POLICY_HOLDER_CITY,\n  PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH,\n  PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME,\n  PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED,\n  PATIENT_INSURANCE_POLICY_HOLDER_STATE,\n  PATIENT_INSURANCE_POLICY_HOLDER_ZIP,\n  ResourceHandler,\n} from '../../e2e-utils/resource-handler';\nimport { openPatientInformationPage } from '../page/PatientInformationPage';\n\nconst POLICY_HOLDER_DATE_OF_BIRTH = '01/01/1990';\nconst POLICY_HOLDER_2_DATE_OF_BIRTH = '01/01/1991';\nconst NEW_PATIENT_INSURANCE_MEMBER_ID = 'abc1234567';\nconst NEW_PATIENT_INSURANCE_MEMBER_ID_2 = '125897ftr';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS = 'street 21';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE = 'additional2';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX = 'Intersex';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_CITY = 'Las Vegas';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH = '03/03/1993';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME = 'Alice';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME = 'Wonder';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME = 'Louisa';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED = 'Child';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_STATE = 'NJ';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP = '32567';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS = 'street 17';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE = 'additional';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX = 'Intersex';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_CITY = 'Anchorage';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH = '04/04/1992';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME = 'James';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME = 'Cannoli';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME = 'Bob';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED = 'Common Law Spouse';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_STATE = 'AK';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_ZIP = '78956';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO = 'testing';\nconst NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2 = 'testing2';\nconst NEW_PATIENT_INSURANCE_CARRIER = '6 Degrees Health Incorporated';\nconst NEW_PATIENT_INSURANCE_CARRIER_2 = 'AAA - Minnesota/Iowa';\n\ntest.describe('Insurance Information Section non-mutating tests', () => {\n  let resourceHandler: ResourceHandler;\n  let primaryInsuranceCarrier: string;\n  let secondaryInsuranceCarrier: string;\n\n  test.beforeAll(async () => {\n    const [createdResourceHandler, createdPrimaryInsuranceCarrier, createdSecondaryInsuranceCarrier] =\n      await createResourceHandler();\n    resourceHandler = createdResourceHandler;\n    primaryInsuranceCarrier = createdPrimaryInsuranceCarrier;\n    secondaryInsuranceCarrier = createdSecondaryInsuranceCarrier;\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test(\n    'Verify data from Primary and Secondary Insurances blocks are displayed correctly',\n    { tag: '@flaky' },\n    async ({ page }) => {\n      const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n      const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n      await primaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n      await primaryInsuranceCard.verifyAdditionalFieldsAreHidden();\n      await primaryInsuranceCard.verifyInsuranceType('Primary');\n      await primaryInsuranceCard.verifyInsuranceCarrier(primaryInsuranceCarrier);\n      await primaryInsuranceCard.verifyMemberId(PATIENT_INSURANCE_MEMBER_ID);\n      await primaryInsuranceCard.clickShowMoreButton();\n      await primaryInsuranceCard.verifyAdditionalFieldsAreVisible();\n      await primaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n      await primaryInsuranceCard.verifyPolicyHoldersFirstName(PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME);\n      await primaryInsuranceCard.verifyPolicyHoldersLastName(PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME);\n      await primaryInsuranceCard.verifyPolicyHoldersMiddleName(PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME);\n      await primaryInsuranceCard.verifyPolicyHoldersDateOfBirth(POLICY_HOLDER_DATE_OF_BIRTH);\n      await primaryInsuranceCard.verifyPolicyHoldersSex(PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n      await primaryInsuranceCard.verifyInsuranceStreetAddress(PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS);\n      await primaryInsuranceCard.verifyInsuranceAddressLine2(PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE);\n      await primaryInsuranceCard.verifyInsuranceCity(PATIENT_INSURANCE_POLICY_HOLDER_CITY);\n      await primaryInsuranceCard.verifyInsuranceState(PATIENT_INSURANCE_POLICY_HOLDER_STATE);\n      await primaryInsuranceCard.verifyInsuranceZip(PATIENT_INSURANCE_POLICY_HOLDER_ZIP);\n      await primaryInsuranceCard.verifyPatientsRelationshipToInjured(\n        PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED\n      );\n      await primaryInsuranceCard.verifyAdditionalInsuranceInformation('');\n      await primaryInsuranceCard.clickShowMoreButton();\n      await primaryInsuranceCard.verifyAdditionalFieldsAreHidden();\n      await primaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n\n      const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n      await secondaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n      await secondaryInsuranceCard.verifyAdditionalFieldsAreHidden();\n      await secondaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n      await secondaryInsuranceCard.verifyInsuranceType('Secondary');\n      await secondaryInsuranceCard.verifyInsuranceCarrier(secondaryInsuranceCarrier);\n      await secondaryInsuranceCard.verifyMemberId(PATIENT_INSURANCE_MEMBER_ID_2);\n      await secondaryInsuranceCard.clickShowMoreButton();\n      await secondaryInsuranceCard.verifyAdditionalFieldsAreVisible();\n      await secondaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n      await secondaryInsuranceCard.verifyPolicyHoldersFirstName(PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME);\n      await secondaryInsuranceCard.verifyPolicyHoldersLastName(PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME);\n      await secondaryInsuranceCard.verifyPolicyHoldersMiddleName(PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME);\n      await secondaryInsuranceCard.verifyPolicyHoldersDateOfBirth(POLICY_HOLDER_2_DATE_OF_BIRTH);\n      await secondaryInsuranceCard.verifyPolicyHoldersSex(PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX);\n      await secondaryInsuranceCard.verifyInsuranceStreetAddress(PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS);\n      await secondaryInsuranceCard.verifyInsuranceAddressLine2(\n        PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE\n      );\n      await secondaryInsuranceCard.verifyInsuranceCity(PATIENT_INSURANCE_POLICY_HOLDER_2_CITY);\n      await secondaryInsuranceCard.verifyInsuranceState(PATIENT_INSURANCE_POLICY_HOLDER_2_STATE);\n      await secondaryInsuranceCard.verifyInsuranceZip(PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP);\n      await secondaryInsuranceCard.verifyPatientsRelationshipToInjured(\n        PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED\n      );\n      await secondaryInsuranceCard.verifyAdditionalInsuranceInformation('');\n      await secondaryInsuranceCard.clickShowMoreButton();\n      await secondaryInsuranceCard.verifyAdditionalFieldsAreHidden();\n      await primaryInsuranceCard.verifyAlwaysShownFieldsAreVisible();\n    }\n  );\n\n  test('Check validation error is displayed if any required field in Insurance information block is missing', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await primaryInsuranceCard.clearMemberIdField();\n    await primaryInsuranceCard.clearPolicyHolderFirstNameField();\n    await primaryInsuranceCard.clearPolicyHolderLastNameField();\n    await primaryInsuranceCard.clearDateOfBirthFromInsuranceContainer();\n    await primaryInsuranceCard.clearStreetAddressFromInsuranceContainer();\n    await primaryInsuranceCard.clearCityFromInsuranceContainer();\n    await primaryInsuranceCard.clearZipFromInsuranceContainer();\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n    await secondaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clearMemberIdField();\n    await secondaryInsuranceCard.clearPolicyHolderFirstNameField();\n    await secondaryInsuranceCard.clearPolicyHolderLastNameField();\n    await secondaryInsuranceCard.clearDateOfBirthFromInsuranceContainer();\n    await secondaryInsuranceCard.clearStreetAddressFromInsuranceContainer();\n    await secondaryInsuranceCard.clearCityFromInsuranceContainer();\n    await secondaryInsuranceCard.clearZipFromInsuranceContainer();\n    await patientInformationPage.clickSaveChangesButton();\n\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.memberId);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersFirstName);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersLastName);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersDateOfBirth);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.streetAddress);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.city);\n    await primaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.zip);\n\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.memberId);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersFirstName);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersLastName);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.policyHoldersDateOfBirth);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.streetAddress);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.city);\n    await secondaryInsuranceCard.verifyValidationErrorShown(dataTestIds.insuranceContainer.zip);\n  });\n});\n\ntest.describe('Insurance Information Section mutating tests', () => {\n  let resourceHandler: ResourceHandler;\n\n  test.beforeAll(async () => {\n    const [createdResourceHandler, _createdPrimaryInsuranceCarrier, _createdSecondaryInsuranceCarrier] =\n      await createResourceHandler();\n    resourceHandler = createdResourceHandler;\n  });\n\n  test.beforeEach(async () => {\n    await resourceHandler.setResources();\n    await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment.id!);\n  });\n\n  test.afterEach(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test('Enter invalid zip on Insurance information block, validation error are shown', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await primaryInsuranceCard.enterZipFromInsuranceContainer('11');\n    await patientInformationPage.clickSaveChangesButton();\n    await primaryInsuranceCard.verifyValidationErrorZipFieldFromInsurance();\n    await primaryInsuranceCard.enterZipFromInsuranceContainer('11223344');\n    await patientInformationPage.clickSaveChangesButton();\n    await primaryInsuranceCard.verifyValidationErrorZipFieldFromInsurance();\n\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n    await secondaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.enterZipFromInsuranceContainer('11');\n    await patientInformationPage.clickSaveChangesButton();\n    await secondaryInsuranceCard.verifyValidationErrorZipFieldFromInsurance();\n    await secondaryInsuranceCard.enterZipFromInsuranceContainer('11223344');\n    await patientInformationPage.clickSaveChangesButton();\n    await secondaryInsuranceCard.verifyValidationErrorZipFieldFromInsurance();\n  });\n\n  test('Updated values from Insurance information block are saved and displayed correctly', async ({ page }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await primaryInsuranceCard.selectInsuranceCarrier(NEW_PATIENT_INSURANCE_CARRIER);\n    await primaryInsuranceCard.enterMemberId(NEW_PATIENT_INSURANCE_MEMBER_ID);\n    await primaryInsuranceCard.enterPolicyHolderFirstName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME);\n    await primaryInsuranceCard.enterPolicyHolderMiddleName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME);\n    await primaryInsuranceCard.enterPolicyHolderLastName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME);\n    await primaryInsuranceCard.enterDateOfBirthFromInsuranceContainer(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH\n    );\n    await primaryInsuranceCard.selectPolicyHoldersBirthSex(NEW_PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n    await primaryInsuranceCard.enterPolicyHolderStreetAddress(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS);\n    await primaryInsuranceCard.enterPolicyHolderAddressLine2(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE\n    );\n    await primaryInsuranceCard.enterPolicyHolderCity(NEW_PATIENT_INSURANCE_POLICY_HOLDER_CITY);\n    await primaryInsuranceCard.selectPolicyHoldersState(NEW_PATIENT_INSURANCE_POLICY_HOLDER_STATE);\n    await primaryInsuranceCard.enterZipFromInsuranceContainer(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ZIP);\n    await primaryInsuranceCard.selectPatientsRelationship(NEW_PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED);\n    await primaryInsuranceCard.enterAdditionalInsuranceInformation(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO);\n\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n    await secondaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.selectInsuranceCarrier(NEW_PATIENT_INSURANCE_CARRIER_2);\n    await secondaryInsuranceCard.enterMemberId(NEW_PATIENT_INSURANCE_MEMBER_ID_2);\n    await secondaryInsuranceCard.enterPolicyHolderFirstName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME);\n    await secondaryInsuranceCard.enterPolicyHolderMiddleName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME);\n    await secondaryInsuranceCard.enterPolicyHolderLastName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME);\n    await secondaryInsuranceCard.enterDateOfBirthFromInsuranceContainer(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH\n    );\n    await secondaryInsuranceCard.selectPolicyHoldersBirthSex(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX);\n    await secondaryInsuranceCard.enterPolicyHolderStreetAddress(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS);\n    await secondaryInsuranceCard.enterPolicyHolderAddressLine2(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE\n    );\n    await secondaryInsuranceCard.enterPolicyHolderCity(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_CITY);\n    await secondaryInsuranceCard.selectPolicyHoldersState(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_STATE);\n    await secondaryInsuranceCard.enterZipFromInsuranceContainer(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP);\n    await secondaryInsuranceCard.selectPatientsRelationship(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED\n    );\n    await secondaryInsuranceCard.enterAdditionalInsuranceInformation(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2\n    );\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n    await patientInformationPage.reloadPatientInformationPage();\n    await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clickShowMoreButton();\n\n    await primaryInsuranceCard.verifyInsuranceCarrier(NEW_PATIENT_INSURANCE_CARRIER);\n    await primaryInsuranceCard.verifyMemberId(NEW_PATIENT_INSURANCE_MEMBER_ID);\n    await primaryInsuranceCard.verifyPolicyHoldersFirstName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersMiddleName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersLastName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME);\n    await primaryInsuranceCard.verifyPolicyHoldersDateOfBirth(NEW_PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH);\n    await primaryInsuranceCard.verifyPolicyHoldersSex(NEW_PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX);\n    await primaryInsuranceCard.verifyInsuranceStreetAddress(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS);\n    await primaryInsuranceCard.verifyInsuranceAddressLine2(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE);\n    await primaryInsuranceCard.verifyInsuranceCity(NEW_PATIENT_INSURANCE_POLICY_HOLDER_CITY);\n    await primaryInsuranceCard.verifyInsuranceState(NEW_PATIENT_INSURANCE_POLICY_HOLDER_STATE);\n    await primaryInsuranceCard.verifyInsuranceZip(NEW_PATIENT_INSURANCE_POLICY_HOLDER_ZIP);\n    await primaryInsuranceCard.verifyPatientsRelationshipToInjured(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED\n    );\n    await primaryInsuranceCard.verifyAdditionalInsuranceInformation(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO\n    );\n\n    await secondaryInsuranceCard.verifyInsuranceCarrier(NEW_PATIENT_INSURANCE_CARRIER_2);\n    await secondaryInsuranceCard.verifyMemberId(NEW_PATIENT_INSURANCE_MEMBER_ID_2);\n    await secondaryInsuranceCard.verifyPolicyHoldersFirstName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME);\n    await secondaryInsuranceCard.verifyPolicyHoldersMiddleName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME);\n    await secondaryInsuranceCard.verifyPolicyHoldersLastName(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME);\n    await secondaryInsuranceCard.verifyPolicyHoldersDateOfBirth(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH);\n    await secondaryInsuranceCard.verifyPolicyHoldersSex(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX);\n    await secondaryInsuranceCard.verifyInsuranceStreetAddress(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS);\n    await secondaryInsuranceCard.verifyInsuranceAddressLine2(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE\n    );\n    await secondaryInsuranceCard.verifyInsuranceCity(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_CITY);\n    await secondaryInsuranceCard.verifyInsuranceState(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_STATE);\n    await secondaryInsuranceCard.verifyInsuranceZip(NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP);\n    await secondaryInsuranceCard.verifyPatientsRelationshipToInjured(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED\n    );\n    await secondaryInsuranceCard.verifyAdditionalInsuranceInformation(\n      NEW_PATIENT_INSURANCE_POLICY_HOLDER_ADDITIONAL_INFO_2\n    );\n  });\n\n  test('Set and remove Additional Insurance Information for both primary and secondary insurance, then verify it is cleared after save', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n\n    await primaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clickShowMoreButton();\n\n    await primaryInsuranceCard.enterAdditionalInsuranceInformation('Primary test info');\n    await secondaryInsuranceCard.enterAdditionalInsuranceInformation('Secondary test info');\n\n    await primaryInsuranceCard.waitUntilInsuranceCarrierIsRendered();\n    await secondaryInsuranceCard.waitUntilInsuranceCarrierIsRendered();\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n\n    await patientInformationPage.reloadPatientInformationPage();\n    await primaryInsuranceCard.waitUntilInsuranceCarrierIsRendered();\n    await secondaryInsuranceCard.waitUntilInsuranceCarrierIsRendered();\n\n    await primaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clickShowMoreButton();\n\n    await primaryInsuranceCard.verifyAdditionalInsuranceInformation('Primary test info');\n    await secondaryInsuranceCard.verifyAdditionalInsuranceInformation('Secondary test info');\n\n    await primaryInsuranceCard.enterAdditionalInsuranceInformation('');\n    await secondaryInsuranceCard.enterAdditionalInsuranceInformation('');\n\n    await patientInformationPage.clickSaveChangesButton();\n    await patientInformationPage.verifyUpdatedSuccessfullyMessageShown();\n\n    await patientInformationPage.reloadPatientInformationPage();\n    await primaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clickShowMoreButton();\n\n    await primaryInsuranceCard.verifyAdditionalInsuranceInformation('');\n    await secondaryInsuranceCard.verifyAdditionalInsuranceInformation('');\n  });\n\n  test('Check [Add insurance] button is hidden when both primary and secondary insurances are present,[Add insurance] button is present if primary insurance is removed and \"Type\" on \"Add insurance\" screen is pre-filled with \"Primary\"', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    await patientInformationPage.verifyAddInsuranceButtonIsHidden();\n    const primaryInsuranceCard = patientInformationPage.getInsuranceCard(0);\n    await primaryInsuranceCard.clickShowMoreButton();\n    await primaryInsuranceCard.clickRemoveInsuranceButton();\n    await patientInformationPage.verifyCoverageRemovedMessageShown();\n    const addInsuranceDialog = await patientInformationPage.clickAddInsuranceButton();\n    await addInsuranceDialog.verifyTypeField('Primary', false);\n  });\n\n  test('Check [Add insurance] button is present if Primary insurance is removed and \"Type\" on \"Add insurance\" screen is pre-filled with \"Secondary\"', async ({\n    page,\n  }) => {\n    const patientInformationPage = await openPatientInformationPage(page, resourceHandler.patient.id!);\n    const secondaryInsuranceCard = patientInformationPage.getInsuranceCard(1);\n    await secondaryInsuranceCard.clickShowMoreButton();\n    await secondaryInsuranceCard.clickRemoveInsuranceButton();\n    await patientInformationPage.verifyCoverageRemovedMessageShown();\n    const addInsuranceDialog = await patientInformationPage.clickAddInsuranceButton();\n    await addInsuranceDialog.verifyTypeField('Secondary', false);\n  });\n});\n\nasync function createResourceHandler(): Promise<[ResourceHandler, string, string]> {\n  let insuranceCarrier1: QuestionnaireItemAnswerOption | undefined = undefined;\n  let insuranceCarrier2: QuestionnaireItemAnswerOption | undefined = undefined;\n  const PROCESS_ID = `patientRecordInsuranceSection-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID, 'in-person', async ({ patientInfo }) => {\n    return [\n      getContactInformationAnswers({\n        firstName: patientInfo.firstName,\n        lastName: patientInfo.lastName,\n        birthDate: isoToDateObject(patientInfo.dateOfBirth || '') || undefined,\n        email: patientInfo.email,\n        phoneNumber: patientInfo.phoneNumber,\n        birthSex: patientInfo.sex,\n      }),\n      getPatientDetailsStepAnswers({}),\n      getPaymentOptionInsuranceAnswers({\n        insuranceCarrier: insuranceCarrier1!,\n        insuranceMemberId: PATIENT_INSURANCE_MEMBER_ID,\n        insurancePolicyHolderFirstName: PATIENT_INSURANCE_POLICY_HOLDER_FIRST_NAME,\n        insurancePolicyHolderLastName: PATIENT_INSURANCE_POLICY_HOLDER_LAST_NAME,\n        insurancePolicyHolderMiddleName: PATIENT_INSURANCE_POLICY_HOLDER_MIDDLE_NAME,\n        insurancePolicyHolderDateOfBirth: PATIENT_INSURANCE_POLICY_HOLDER_DATE_OF_BIRTH,\n        insurancePolicyHolderBirthSex: PATIENT_INSURANCE_POLICY_HOLDER_BIRTH_SEX,\n        insurancePolicyHolderAddressAsPatient: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_AS_PATIENT,\n        insurancePolicyHolderAddress: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS,\n        insurancePolicyHolderAddressAdditionalLine: PATIENT_INSURANCE_POLICY_HOLDER_ADDRESS_ADDITIONAL_LINE,\n        insurancePolicyHolderCity: PATIENT_INSURANCE_POLICY_HOLDER_CITY,\n        insurancePolicyHolderState: PATIENT_INSURANCE_POLICY_HOLDER_STATE,\n        insurancePolicyHolderZip: PATIENT_INSURANCE_POLICY_HOLDER_ZIP,\n        insurancePolicyHolderRelationshipToInsured: PATIENT_INSURANCE_POLICY_HOLDER_RELATIONSHIP_TO_INSURED,\n        insuranceCarrier2: insuranceCarrier2!,\n        insuranceMemberId2: PATIENT_INSURANCE_MEMBER_ID_2,\n        insurancePolicyHolderFirstName2: PATIENT_INSURANCE_POLICY_HOLDER_2_FIRST_NAME,\n        insurancePolicyHolderLastName2: PATIENT_INSURANCE_POLICY_HOLDER_2_LAST_NAME,\n        insurancePolicyHolderMiddleName2: PATIENT_INSURANCE_POLICY_HOLDER_2_MIDDLE_NAME,\n        insurancePolicyHolderDateOfBirth2: PATIENT_INSURANCE_POLICY_HOLDER_2_DATE_OF_BIRTH,\n        insurancePolicyHolderBirthSex2: PATIENT_INSURANCE_POLICY_HOLDER_2_BIRTH_SEX,\n        insurancePolicyHolderAddressAsPatient2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_AS_PATIENT,\n        insurancePolicyHolderAddress2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS,\n        insurancePolicyHolderAddressAdditionalLine2: PATIENT_INSURANCE_POLICY_HOLDER_2_ADDRESS_ADDITIONAL_LINE,\n        insurancePolicyHolderCity2: PATIENT_INSURANCE_POLICY_HOLDER_2_CITY,\n        insurancePolicyHolderState2: PATIENT_INSURANCE_POLICY_HOLDER_2_STATE,\n        insurancePolicyHolderZip2: PATIENT_INSURANCE_POLICY_HOLDER_2_ZIP,\n        insurancePolicyHolderRelationshipToInsured2: PATIENT_INSURANCE_POLICY_HOLDER_2_RELATIONSHIP_TO_INSURED,\n      }),\n      getResponsiblePartyStepAnswers({}),\n      getConsentStepAnswers({}),\n      getPrimaryCarePhysicianStepAnswers({}),\n    ];\n  });\n  const oystehr = await ResourceHandler.getOystehr();\n  const insuranceCarriersOptionsResponse = await oystehr.zambda.execute({\n    id: 'get-answer-options',\n    answerSource: {\n      resourceType: 'Organization',\n      query: `active=true&type=${ORG_TYPE_CODE_SYSTEM}|${ORG_TYPE_PAYER_CODE}`,\n    },\n  });\n\n  const insuranceCarriersOptions = chooseJson(insuranceCarriersOptionsResponse) as QuestionnaireItemAnswerOption[];\n  insuranceCarrier1 = insuranceCarriersOptions.at(0);\n  insuranceCarrier2 = insuranceCarriersOptions.at(1);\n\n  await resourceHandler.setResources();\n  await Promise.all([\n    resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment.id!),\n    resourceHandler.waitTillHarvestingDone(resourceHandler.appointment.id!),\n  ]);\n  return [\n    resourceHandler,\n    insuranceCarrier1?.valueReference?.display ?? '',\n    insuranceCarrier2?.valueReference?.display ?? '',\n  ];\n}\n"]}