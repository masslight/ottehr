{"version":3,"file":"statesPage.spec.js","sourceRoot":"","sources":["statesPage.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { test } from '@playwright/test';\nimport { expectStateDetailsPage } from '../page/StateDetailsPage';\nimport { expectStatesPage, openStatesPage } from '../page/StatesPage';\n\ntest.beforeEach(async ({ page }) => {\n  await page.waitForTimeout(2000); // TODO what is this actually waiting for? Replace it with something faster.\n  await page.goto('/telemed-admin/states');\n});\n\ntest('Open \"States page\", enter state abbreviation,  correct search result is displayed', async ({ page }) => {\n  const statesPage = await expectStatesPage(page);\n  const state = await statesPage.getFirstState();\n  await statesPage.searchStates(state);\n  await statesPage.verifyStatePresent(state);\n  await statesPage.verifyPaginationState('1–1 of 1');\n\n  await statesPage.searchStates('AA');\n  await statesPage.verifyPaginationState('0–0 of 0');\n});\n\ntest('Open \"States page\", click on state,  state details page is opened', async ({ page }) => {\n  const statesPage = await expectStatesPage(page);\n  const state = await statesPage.getFirstState();\n  await statesPage.clickState(state);\n  await expectStateDetailsPage(state, page);\n});\n\ntest('Open \"States details page\", click cancel button,  states page is opened', async ({ page }) => {\n  const statesPage = await expectStatesPage(page);\n  const state = await statesPage.getFirstState();\n  await statesPage.clickState(state);\n  const stateDetailsPage = await expectStateDetailsPage(state, page);\n  await stateDetailsPage.clickCancelButton();\n  await expectStatesPage(page);\n});\n\ntest('Open \"States details page\", check title and state name field,  verify state name is correct in title', async ({\n  page,\n}) => {\n  const statesPage = await expectStatesPage(page);\n  const state = await statesPage.getFirstState();\n  await statesPage.clickState(state);\n  const stateDetailsPage = await expectStateDetailsPage(state, page);\n  await stateDetailsPage.verifyStateNameTitle(state);\n  await stateDetailsPage.verifyStateNameField(state);\n});\n\ntest('Open \"States details page\", toggle \"Operate in state\" and save changes, verify changes are saved', async ({\n  page,\n}) => {\n  let statesPage = await expectStatesPage(page);\n  const state = await statesPage.getFirstState();\n  await statesPage.clickState(state);\n  const stateDetailsPage = await expectStateDetailsPage(state, page);\n\n  if (await stateDetailsPage.isToggleOn()) {\n    await stateDetailsPage.setToggleOff();\n    await stateDetailsPage.clickSaveChangesButton();\n    await stateDetailsPage.reloadStateDetailsPage();\n    await stateDetailsPage.verifyToggleOff();\n    statesPage = await openStatesPage(page);\n    await statesPage.verifyOperateInState(state, false);\n  } else {\n    await stateDetailsPage.setToggleOn();\n    await stateDetailsPage.clickSaveChangesButton();\n    await stateDetailsPage.reloadStateDetailsPage();\n    await stateDetailsPage.verifyToggleOn();\n    statesPage = await openStatesPage(page);\n    await statesPage.verifyOperateInState(state, true);\n  }\n});\n"]}