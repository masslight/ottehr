{"version":3,"file":"assessmentTab.spec.js","sourceRoot":"","sources":["assessmentTab.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { BrowserContext, expect, Locator, Page, test } from '@playwright/test';\nimport { DateTime } from 'luxon';\nimport { waitForChartDataDeletion, waitForSaveChartDataResponse } from 'test-utils';\nimport { MDM_FIELD_DEFAULT_TEXT, TelemedAppointmentVisitTabs } from 'utils';\nimport { dataTestIds } from '../../../../src/constants/data-test-ids';\nimport { assignAppointmentIfNotYetAssignedToMeAndVerifyPreVideo } from '../../../e2e-utils/helpers/telemed.test-helpers';\nimport { ResourceHandler } from '../../../e2e-utils/resource-handler';\nimport { TelemedAssessmentPage } from '../../page/telemed/TelemedAssessmentPage';\nimport { TelemedProgressNotePage } from '../../page/telemed/TelemedProgressNotePage';\n\nconst PROCESS_ID = `assessmentTab.spec.ts-telemed-${DateTime.now().toMillis()}`;\nconst resourceHandler = new ResourceHandler(PROCESS_ID, 'telemed');\nlet assessmentPage: TelemedAssessmentPage;\nlet progressNotePage: TelemedProgressNotePage;\nlet context: BrowserContext;\nlet page: Page;\n\nconst DEFAULT_TIMEOUT = { timeout: 15000 };\n\nconst DIAGNOSIS_CODE = 'J45.901';\nconst DIAGNOSIS_NAME = 'injury';\nconst E_M_CODE = '99201';\n\ntest.describe.configure({ mode: 'serial' });\n\ntest.beforeAll(async ({ browser }) => {\n  context = await browser.newContext();\n  page = await context.newPage();\n  assessmentPage = new TelemedAssessmentPage(page);\n  progressNotePage = new TelemedProgressNotePage(page);\n  await resourceHandler.setResources();\n  await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment!.id!);\n});\n\ntest.afterAll(async () => {\n  await page.close();\n  await context.close();\n  await resourceHandler.cleanupResources();\n});\n\ntest('Check assessment page initial state and default MDM saving', async () => {\n  await page.goto(`telemed/appointments/${resourceHandler.appointment.id}`);\n  await assignAppointmentIfNotYetAssignedToMeAndVerifyPreVideo(page, { forceWaitForAssignButton: true });\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n\n  await assessmentPage.expectDiagnosisDropdown();\n  await expect(page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis)).not.toBeVisible();\n  await expect(page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis)).not.toBeVisible();\n  await assessmentPage.expectMdmField({ text: MDM_FIELD_DEFAULT_TEXT });\n});\n\ntest('Remove MDM and check missing required fields on review and sign page', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectMdmField();\n  await assessmentPage.fillMdmField('');\n  await waitForChartDataDeletion(page);\n\n  await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n  await progressNotePage.expectLoaded();\n  await progressNotePage.verifyReviewAndSignButtonDisabled();\n  await test.step('Verify missing card is visible and has all required missing fields', async () => {\n    await expect(page.getByTestId(dataTestIds.progressNotePage.missingCard)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.progressNotePage.emCodeLink)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.progressNotePage.medicalDecisionLink)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.progressNotePage.primaryDiagnosisLink)).toBeVisible();\n  });\n  await page.getByTestId(dataTestIds.progressNotePage.primaryDiagnosisLink).click();\n  await assessmentPage.expectDiagnosisDropdown();\n  await assessmentPage.expectEmCodeDropdown();\n  await assessmentPage.expectMdmField();\n});\n\ntest('Search and select diagnoses', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectDiagnosisDropdown();\n\n  // Test ICD 10 code search\n  await test.step('Search for ICD 10 code', async () => {\n    await assessmentPage.selectDiagnosis({ diagnosisCode: DIAGNOSIS_CODE });\n    await waitForSaveChartDataResponse(\n      page,\n      (json) =>\n        !!json.chartData.diagnosis?.some((x) => x.code.toLocaleLowerCase().includes(DIAGNOSIS_CODE.toLocaleLowerCase()))\n    );\n  });\n\n  let primaryDiagnosisValue: string | null = null;\n  let primaryDiagnosis: Locator | null = null;\n  await test.step('Verify primary diagnosis is visible', async () => {\n    primaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis);\n    await expect(primaryDiagnosis).toBeVisible();\n\n    primaryDiagnosisValue = await primaryDiagnosis.textContent();\n    expect(primaryDiagnosisValue).toContain(DIAGNOSIS_CODE);\n  });\n\n  // Test diagnosis name search\n  await test.step('Search for diagnosis name', async () => {\n    await assessmentPage.selectDiagnosis({ diagnosisNamePart: DIAGNOSIS_NAME });\n    await waitForSaveChartDataResponse(\n      page,\n      (json) =>\n        !!json.chartData.diagnosis?.some((x) =>\n          x.display.toLocaleLowerCase().includes(DIAGNOSIS_NAME.toLocaleLowerCase())\n        )\n    );\n  });\n\n  let secondaryDiagnosis: Locator | null = null;\n  let secondaryDiagnosisValue: string | null = null;\n  await test.step('Verify secondary diagnosis is visible', async () => {\n    secondaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis);\n    await expect(secondaryDiagnosis).toBeVisible();\n\n    secondaryDiagnosisValue = await secondaryDiagnosis.textContent();\n    expect(secondaryDiagnosisValue?.toLocaleLowerCase()).toContain(DIAGNOSIS_NAME.toLocaleLowerCase());\n  });\n\n  // Verify diagnoses on Review and Sign page\n  await test.step('Verify diagnoses on Review and Sign page', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await progressNotePage.expectLoaded();\n\n    // Verify both diagnoses are present\n    await expect(page.getByText(primaryDiagnosisValue!, { exact: false })).toBeVisible();\n    await expect(page.getByText(secondaryDiagnosisValue!, { exact: false })).toBeVisible();\n  });\n});\n\ntest('Change primary diagnosis', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectDiagnosisDropdown();\n  // Get initial values\n  const initialPrimaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis);\n  const initialSecondaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis);\n  const initialPrimaryValue = await initialPrimaryDiagnosis.textContent();\n  const initialSecondaryValue = await initialSecondaryDiagnosis.textContent();\n\n  // Make secondary diagnosis primary\n  await test.step('Make secondary diagnosis primary', async () => {\n    await page.getByTestId(dataTestIds.diagnosisContainer.makePrimaryButton).click();\n    await waitForSaveChartDataResponse(page);\n\n    // After the primary diagnosis is updated, the secondary diagnosis should be updated, they should be swapped\n    const newPrimaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis);\n    const newSecondaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis);\n    await expect(newPrimaryDiagnosis).toHaveText(initialSecondaryValue!, { ignoreCase: true });\n    await expect(newSecondaryDiagnosis).toHaveText(initialPrimaryValue!, { ignoreCase: true });\n  });\n\n  // Verify on Review and Sign page\n  await test.step('Verify swapped diagnoses on Review and Sign page', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await progressNotePage.expectLoaded();\n\n    // Verify both diagnoses are present\n    await expect(page.getByText(initialSecondaryValue!, { exact: false })).toBeVisible();\n    await expect(page.getByText(initialPrimaryValue!, { exact: false })).toBeVisible();\n  });\n});\n\ntest('Delete primary diagnosis', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectDiagnosisDropdown();\n  const primaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis);\n  const primaryDiagnosisValue = await primaryDiagnosis.textContent();\n\n  // Get secondary diagnosis value before deletion\n  const secondaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis);\n  const secondaryDiagnosisValue = await secondaryDiagnosis.textContent();\n\n  // Delete primary diagnosis\n  await test.step('Delete primary diagnosis', async () => {\n    await page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosisDeleteButton).first().click();\n    await waitForChartDataDeletion(page);\n    await waitForSaveChartDataResponse(page);\n\n    // Verify secondary diagnosis is promoted to primary\n    await expect(page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.diagnosisContainer.secondaryDiagnosis)).not.toBeVisible();\n\n    const newPrimaryDiagnosis = page.getByTestId(dataTestIds.diagnosisContainer.primaryDiagnosis);\n    const newPrimaryValue = await newPrimaryDiagnosis.textContent();\n    expect(newPrimaryValue?.toLocaleLowerCase()).toEqual(secondaryDiagnosisValue?.toLocaleLowerCase());\n  });\n\n  // Verify on Review and Sign page\n  await test.step('Verify promoted diagnosis on Review and Sign page, deleted diagnosis is not present', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await progressNotePage.expectLoaded();\n\n    // Verify only one diagnosis is present\n    await expect(page.getByText(secondaryDiagnosisValue!, { exact: false })).toBeVisible();\n    await expect(page.getByText(primaryDiagnosisValue!, { exact: false })).not.toBeVisible(DEFAULT_TIMEOUT);\n  });\n});\n\ntest('Medical Decision Making functionality', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectDiagnosisDropdown();\n\n  // Check default text\n  await assessmentPage.expectMdmField({ text: '' });\n\n  // Edit the text\n  const newText = 'Updated medical decision making text';\n  await assessmentPage.fillMdmField(newText);\n\n  // Verify text is updated\n  await assessmentPage.expectMdmField({ text: newText });\n\n  // Navigate to Review and Sign to verify text is displayed\n  await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n  await progressNotePage.expectLoaded();\n  await expect(page.getByText(newText)).toBeVisible();\n});\n\ntest('Add E&M code', async () => {\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n  await assessmentPage.expectDiagnosisDropdown();\n\n  // Select E&M code\n  await test.step('Select E&M code', async () => {\n    await assessmentPage.selectEmCode(E_M_CODE);\n    await waitForSaveChartDataResponse(page, (json) => json.chartData.emCode?.code === E_M_CODE);\n  });\n\n  await test.step('Verify E&M code is added', async () => {\n    const value = await page.getByTestId(dataTestIds.assessmentCard.emCodeDropdown).locator('input').inputValue();\n\n    // Navigate to Review and Sign to verify code is displayed\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await progressNotePage.expectLoaded();\n    await expect(page.getByText(value)).toBeVisible();\n  });\n\n  await test.step('Verify E&M code is added', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await progressNotePage.expectLoaded();\n    await expect(page.getByText(E_M_CODE)).toBeVisible();\n  });\n  await test.step('Verify missing card is not visible', async () => {\n    await expect(page.getByTestId(dataTestIds.progressNotePage.missingCard)).not.toBeVisible();\n  });\n});\n"]}