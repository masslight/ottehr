{"version":3,"file":"examTab.spec.js","sourceRoot":"","sources":["examTab.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { rgbToHex } from '@mui/system';\nimport { expect, Locator, Page, test } from '@playwright/test';\nimport { DateTime } from 'luxon';\nimport { waitForSaveChartDataResponse } from 'test-utils';\nimport {\n  ExamFieldsNames,\n  ExamObservationFieldItem,\n  ExamObservationFieldsDetails,\n  examObservationFieldsDetailsArray,\n  ExamTabCardNames,\n  TelemedAppointmentVisitTabs,\n} from 'utils';\nimport { dataTestIds } from '../../../../src/constants/data-test-ids';\nimport { assignAppointmentIfNotYetAssignedToMeAndVerifyPreVideo } from '../../../e2e-utils/helpers/telemed.test-helpers';\nimport { getDropdownOption } from '../../../e2e-utils/helpers/tests-utils';\nimport { ResourceHandler } from '../../../e2e-utils/resource-handler';\n\nasync function checkCheckboxValueInLocator(locator: Locator, value: boolean): Promise<void> {\n  if (value) {\n    await expect(locator.locator('input').first()).toBeChecked();\n  } else {\n    await expect(locator.locator('input').first()).not.toBeChecked();\n  }\n}\n\nasync function checkRadioButtonValueInLocator(locator: Locator, value: boolean): Promise<void> {\n  if (value) {\n    await expect(locator.locator('input[type=\"radio\"][value=\"true\"]')).toBeChecked();\n    await expect(locator.locator('input[type=\"radio\"][value=\"false\"]')).not.toBeChecked();\n  } else {\n    await expect(locator.locator('input[type=\"radio\"][value=\"true\"]')).not.toBeChecked();\n    await expect(locator.locator('input[type=\"radio\"][value=\"false\"]')).toBeChecked();\n  }\n}\n\nasync function checkValuesInCheckboxes(page: Page, examObservationFields: ExamObservationFieldItem[]): Promise<void> {\n  for (const field of examObservationFields) {\n    const fieldLocator = page.getByTestId(dataTestIds.telemedEhrFlow.examTabField(field.field as ExamFieldsNames));\n    await checkCheckboxValueInLocator(fieldLocator, field.defaultValue);\n  }\n}\n\nasync function checkValuesInRadioButtons(page: Page, examObservationFields: ExamObservationFieldItem[]): Promise<void> {\n  for (const field of examObservationFields) {\n    const fieldLocator = page.getByTestId(dataTestIds.telemedEhrFlow.examTabField(field.field as ExamFieldsNames));\n    await checkRadioButtonValueInLocator(fieldLocator, field.defaultValue);\n  }\n}\n\ntest.describe('Fields tests', async () => {\n  const PROCESS_ID = `examTab.spec.ts-fields-tests-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID, 'telemed');\n  let page: Page;\n  // this color i've found in the palette\n  const greenColorFromPalette = '#2E7D32';\n  const redColorFromPalette = '#D32F2F';\n  const boldFontSize = 600;\n  const defaultUncheckedNormalField = ExamObservationFieldsDetails['playful-and-active'];\n  const defaultUncheckedAbnormalField = ExamObservationFieldsDetails['tired-appearing'];\n  const providerComment = 'Lorem ipsum';\n  const distressDropdownOption = ExamObservationFieldsDetails['moderate-distress'].label;\n  const tenderDropdownOption = ExamObservationFieldsDetails['left-lower-quadrant-abdomen'].label;\n  const rashWithoutDescriptionDropdownOption = ExamObservationFieldsDetails['consistent-with-insect-bites'].label;\n  const rashWithDescriptionDropdownOption = ExamObservationFieldsDetails['consistent-with-impetigo'].label;\n  const rashDescription = 'rash description';\n\n  test.beforeAll(async ({ browser }) => {\n    const context = await browser.newContext();\n    page = await context.newPage();\n    await resourceHandler.setResources();\n    await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment.id!);\n\n    await page.goto(`telemed/appointments/${resourceHandler.appointment.id}`);\n    await assignAppointmentIfNotYetAssignedToMeAndVerifyPreVideo(page, { forceWaitForAssignButton: true });\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.hpiMedicalConditionColumn)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.hpiFieldListLoadingSkeleton).first()).not.toBeVisible();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.exam)).click();\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test.describe.configure({ mode: 'serial' });\n\n  test('Should check default selected checkboxes', async () => {\n    await test.step(\"Check 'General' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter(\n        (field) => field.card === 'general' && ['normal', 'abnormal'].includes(field.group)\n      );\n      await checkValuesInCheckboxes(page, filteredFields);\n    });\n\n    await test.step(\"Check 'Head' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'head');\n      await checkValuesInCheckboxes(page, filteredFields);\n    });\n\n    await test.step(\"Check 'Eyes' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'eyes');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n      await checkValuesInRadioButtons(\n        page,\n        filteredFields.filter((field) => ['rightEye', 'leftEye'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Nose' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('nose')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'nose');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Ears' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('ears')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'ears');\n      await checkValuesInRadioButtons(\n        page,\n        filteredFields.filter((field) => ['rightEar', 'leftEar'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Mouth' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('mouth')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'mouth');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Neck' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('neck')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'neck');\n      await checkValuesInCheckboxes(page, filteredFields);\n    });\n\n    await test.step(\"Check 'Chest' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'chest');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Back' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('back')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'back');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Skin' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'skin');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Abdomen' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('abdomen')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'abdomen');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Musculoskeletal' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'musculoskeletal');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Neurological' card\", async () => {\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'neurological');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal'].includes(field.group))\n      );\n    });\n\n    await test.step(\"Check 'Psych' card\", async () => {\n      await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('psych')).click();\n      const filteredFields = examObservationFieldsDetailsArray.filter((field) => field.card === 'psych');\n      await checkValuesInCheckboxes(\n        page,\n        filteredFields.filter((field) => ['normal', 'abnormal'].includes(field.group))\n      );\n    });\n  });\n\n  test(\"Should select value from 'Normal' list and verify checkbox become green\", async () => {\n    const normalListField = page.getByTestId(\n      dataTestIds.telemedEhrFlow.examTabField(defaultUncheckedNormalField.field)\n    );\n    const checkbox = normalListField.locator('input');\n    await checkbox.click();\n    await expect(checkbox).toBeEnabled();\n    await checkCheckboxValueInLocator(normalListField, true);\n\n    const color = await normalListField\n      .locator('span')\n      .first()\n      .evaluate((el) => {\n        return window.getComputedStyle(el).getPropertyValue('color');\n      });\n\n    expect(rgbToHex(color)).toBe(greenColorFromPalette.toLowerCase());\n  });\n\n  test(\"Should select value from 'Abnormal' list and verify checkbox become red and text is bold\", async () => {\n    const abnormalListField = page.getByTestId(\n      dataTestIds.telemedEhrFlow.examTabField(defaultUncheckedAbnormalField.field)\n    );\n    const checkbox = abnormalListField.locator('input');\n    await checkbox.click();\n    await expect(checkbox).toBeEnabled();\n    await checkCheckboxValueInLocator(abnormalListField, true);\n\n    const color = await abnormalListField\n      .locator('span')\n      .first()\n      .evaluate((el) => {\n        return window.getComputedStyle(el).getPropertyValue('color');\n      });\n\n    await expect(abnormalListField.locator('p')).toHaveCSS('font-weight', `${boldFontSize}`);\n    expect(rgbToHex(color)).toBe(redColorFromPalette.toLowerCase());\n  });\n\n  test(\"Should enter some text in 'Provider' field\", async () => {\n    await page\n      .getByTestId(dataTestIds.telemedEhrFlow.examTabCardsComments('general'))\n      .locator('input')\n      .fill(providerComment);\n    await waitForSaveChartDataResponse(page);\n  });\n\n  test(\"Should check 'Distress' checkbox and select dropdown option\", async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabDistressCheckbox).click();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabDistressDropdown).click();\n    await (await getDropdownOption(page, distressDropdownOption)).click();\n    await waitForSaveChartDataResponse(page);\n  });\n\n  test(\"Should check 'Tender' checkbox and select dropdown option\", async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards('abdomen')).click();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabTenderCheckbox).click();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabTenderDropdown).click();\n    await (await getDropdownOption(page, tenderDropdownOption)).click();\n    await waitForSaveChartDataResponse(page);\n  });\n\n  test(\"Should check 'Rashes' checkbox and rashes form appeared\", async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesCheckbox).locator('input').click();\n    await waitForSaveChartDataResponse(page);\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesDropdown)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesDescription)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAddButton)).toBeVisible();\n  });\n\n  test('Should add skin rash without description', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesDropdown).click();\n    await (await getDropdownOption(page, rashWithoutDescriptionDropdownOption)).click();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAddButton).click();\n    await waitForSaveChartDataResponse(page);\n  });\n\n  test('Should check rash saved in abnormal subsection without description', async () => {\n    const rashesSubsection = page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAbnormalSubsection);\n    await expect(rashesSubsection).toHaveText(rashWithoutDescriptionDropdownOption);\n    await expect(rashesSubsection).not.toHaveText('|'); // it means we don't have description saved\n  });\n\n  test('Should add skin rash with description', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesDropdown).click();\n    await (await getDropdownOption(page, rashWithDescriptionDropdownOption)).click();\n    await page\n      .getByTestId(dataTestIds.telemedEhrFlow.examTabRashesDescription)\n      .locator('textarea')\n      .first()\n      .fill(rashDescription);\n    await page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAddButton).click();\n    await waitForSaveChartDataResponse(page);\n  });\n\n  test('Should check rash with description is saved', async () => {\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAbnormalSubsection)).toHaveText(\n      new RegExp(`${rashWithDescriptionDropdownOption}|${rashDescription}`)\n    );\n  });\n\n  test('Should check all fields are saved on Review&Sign tab', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await expect(page.getByTestId(dataTestIds.progressNotePage.visitNoteCard)).toBeVisible();\n    const examinationsContainer = page.getByTestId(dataTestIds.telemedEhrFlow.reviewTabExaminationsContainer);\n\n    await expect(examinationsContainer).toHaveText(new RegExp(defaultUncheckedNormalField.label));\n    await expect(examinationsContainer).toHaveText(new RegExp(defaultUncheckedAbnormalField.label));\n    await expect(examinationsContainer).toHaveText(new RegExp(providerComment));\n\n    await expect(examinationsContainer).toHaveText(new RegExp(distressDropdownOption));\n    await expect(examinationsContainer).toHaveText(new RegExp(tenderDropdownOption));\n    await expect(examinationsContainer).toHaveText(new RegExp(rashWithoutDescriptionDropdownOption));\n    await expect(examinationsContainer).toHaveText(\n      new RegExp(`${rashWithDescriptionDropdownOption}|${rashDescription}`)\n    );\n  });\n\n  test('Should remove rashes and check it removed from abnormal subsection', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.exam)).click();\n    const rashElementDeleteButton = page\n      .getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAbnormalSubsection)\n      .getByTestId(dataTestIds.telemedEhrFlow.examTabRashElementInSubsection)\n      .filter({ hasText: rashWithDescriptionDropdownOption })\n      .locator('button');\n    await rashElementDeleteButton.click();\n    await waitForSaveChartDataResponse(page);\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.examTabRashesAbnormalSubsection)).not.toHaveText(\n      rashWithDescriptionDropdownOption\n    );\n  });\n\n  test('Should check rash was removed from Review&Sign tab', async () => {\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n    await expect(page.getByTestId(dataTestIds.progressNotePage.visitNoteCard)).toBeVisible();\n    const examinationsContainer = page.getByTestId(dataTestIds.telemedEhrFlow.reviewTabExaminationsContainer);\n\n    await expect(examinationsContainer).not.toHaveText(rashWithDescriptionDropdownOption);\n    await expect(examinationsContainer).not.toHaveText(rashDescription);\n  });\n});\n\ntest.describe('Cards tests', () => {\n  const PROCESS_ID = `examTab.spec.ts-cards-tests-${DateTime.now().toMillis()}`;\n  const resourceHandler = new ResourceHandler(PROCESS_ID, 'telemed');\n  const collapsedSections: ExamTabCardNames[] = ['nose', 'ears', 'mouth', 'neck', 'abdomen', 'back', 'psych'];\n  const expandedSections: ExamTabCardNames[] = [\n    'general',\n    'head',\n    'eyes',\n    'chest',\n    'skin',\n    'musculoskeletal',\n    'neurological',\n  ];\n\n  test.beforeAll(async () => {\n    await resourceHandler.setResources();\n    await resourceHandler.waitTillAppointmentPreprocessed(resourceHandler.appointment!.id!);\n  });\n\n  test.afterAll(async () => {\n    await resourceHandler.cleanupResources();\n  });\n\n  test.beforeEach(async ({ page }) => {\n    await page.goto(`telemed/appointments/${resourceHandler.appointment.id}`);\n    await assignAppointmentIfNotYetAssignedToMeAndVerifyPreVideo(page);\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.hpiMedicalConditionColumn)).toBeVisible();\n    await expect(page.getByTestId(dataTestIds.telemedEhrFlow.hpiFieldListLoadingSkeleton).first()).not.toBeVisible();\n    await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.exam)).click();\n  });\n\n  test('Check that sections are collapsed by default', async ({ page }) => {\n    for (const section of collapsedSections) {\n      const cardLocator = page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards(section));\n      await expect(cardLocator).toBeVisible();\n      await expect(cardLocator.getByTestId(dataTestIds.telemedEhrFlow.examTabCardsComments(section))).not.toBeVisible();\n    }\n  });\n\n  test('Check that sections are expanded by default', async ({ page }) => {\n    for (const section of expandedSections) {\n      const cardLocator = page.getByTestId(dataTestIds.telemedEhrFlow.examTabCards(section));\n      await expect(cardLocator).toBeVisible();\n      await expect(cardLocator.getByTestId(dataTestIds.telemedEhrFlow.examTabCardsComments(section))).toBeVisible();\n    }\n  });\n});\n"]}