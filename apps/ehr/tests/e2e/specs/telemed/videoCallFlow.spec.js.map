{"version":3,"file":"videoCallFlow.spec.js","sourceRoot":"","sources":["videoCallFlow.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, Page, test } from '@playwright/test';\nimport { DateTime } from 'luxon';\nimport { waitForGetChartDataResponse } from 'test-utils';\nimport { ApptTelemedTab, TelemedAppointmentStatusEnum, TelemedAppointmentVisitTabs } from 'utils';\nimport { dataTestIds } from '../../../../src/constants/data-test-ids';\nimport { awaitAppointmentsTableToBeVisible, telemedDialogConfirm } from '../../../e2e-utils/helpers/tests-utils';\nimport { ResourceHandler } from '../../../e2e-utils/resource-handler';\n\nconst PROCESS_ID = `videoCallFlow.spec.ts-${DateTime.now().toMillis()}`;\nconst resourceHandler = new ResourceHandler(PROCESS_ID, 'telemed');\nlet page: Page;\n\ntest.beforeAll(async ({ browser }) => {\n  const context = await browser.newContext();\n  page = await context.newPage();\n  await resourceHandler.setResources();\n});\n\ntest.afterAll(async () => {\n  await resourceHandler.cleanupResources();\n});\n\ntest.describe.configure({ mode: 'serial' });\n\ntest('Should assign visit to practitioner', async () => {\n  await page.goto(`telemed/appointments`);\n  await awaitAppointmentsTableToBeVisible(page);\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.trackingBoardTableRow(resourceHandler.appointment.id!))\n    .getByTestId(dataTestIds.telemedEhrFlow.trackingBoardAssignButton)\n    .click();\n  await telemedDialogConfirm(page);\n  const statusChip = page.getByTestId(dataTestIds.telemedEhrFlow.appointmentStatusChip);\n  await expect(statusChip).toBeVisible();\n  await expect(statusChip).toHaveText(TelemedAppointmentStatusEnum['pre-video']);\n});\n\ntest('Should start video call', async () => {\n  const connectButton = page.getByTestId(dataTestIds.telemedEhrFlow.footerButtonConnectToPatient);\n  await expect(connectButton).toBeVisible();\n  await connectButton.click();\n\n  await telemedDialogConfirm(page);\n\n  await expect(page.getByTestId(dataTestIds.telemedEhrFlow.videoRoomContainer)).toBeVisible();\n});\n\ntest('Appointment status should be \"on-video\" during the call', async () => {\n  const statusChip = page.getByTestId(dataTestIds.telemedEhrFlow.appointmentStatusChip);\n  await expect(statusChip).toBeVisible();\n  await expect(statusChip).toHaveText(TelemedAppointmentStatusEnum['on-video']);\n});\n\ntest('Should end video call and check status \"unsigned\"', async () => {\n  await page.getByTestId(dataTestIds.telemedEhrFlow.endVideoCallButton).click();\n  await telemedDialogConfirm(page);\n  const statusChip = page.getByTestId(dataTestIds.telemedEhrFlow.appointmentStatusChip);\n  await expect(statusChip).toBeVisible();\n  await expect(statusChip).toHaveText(TelemedAppointmentStatusEnum['unsigned']);\n});\n\ntest('Visit should be in \"unsigned\" tab on the tracking board', async () => {\n  await page.goto(`telemed/appointments`);\n  await page.getByTestId(dataTestIds.telemedEhrFlow.telemedAppointmentsTabs(ApptTelemedTab['not-signed'])).click();\n  await awaitAppointmentsTableToBeVisible(page);\n  await expect(\n    page.getByTestId(dataTestIds.telemedEhrFlow.trackingBoardTableRow(resourceHandler.appointment.id!))\n  ).toBeVisible();\n});\n\ntest('Should fill all required fields', async () => {\n  await page.goto(`telemed/appointments/${resourceHandler.appointment.id}`);\n  await page\n    .getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.assessment))\n    .click();\n\n  const diagnosisAutocomplete = page.getByTestId(dataTestIds.diagnosisContainer.diagnosisDropdown);\n  await expect(diagnosisAutocomplete).toBeVisible();\n  await diagnosisAutocomplete.click();\n  await diagnosisAutocomplete.locator('input').fill('fever');\n  // Wait for dropdown options to appear\n  let dropdownOptions = page.getByRole('option');\n  await dropdownOptions.first().waitFor();\n  await page.keyboard.press('ArrowDown');\n  await page.keyboard.press('Enter');\n  await expect(diagnosisAutocomplete.locator('input')).toBeEnabled();\n\n  const emAutocomplete = page.getByTestId(dataTestIds.assessmentCard.emCodeDropdown);\n  await expect(emAutocomplete).toBeVisible();\n  await emAutocomplete.click();\n  await emAutocomplete.locator('input').fill('1');\n  dropdownOptions = page.getByRole('option');\n  await dropdownOptions.first().waitFor();\n  await page.keyboard.press('ArrowDown');\n  await page.keyboard.press('Enter');\n  await expect(emAutocomplete.locator('input')).toBeEnabled();\n\n  await page.getByTestId(dataTestIds.telemedEhrFlow.appointmentVisitTabs(TelemedAppointmentVisitTabs.sign)).click();\n\n  await waitForGetChartDataResponse(page, (json) => !!json.prescribedMedications);\n\n  const patientInfoConfirmationCheckbox = page.getByTestId(dataTestIds.telemedEhrFlow.patientInfoConfirmationCheckbox);\n  const confirmationChecked = await patientInfoConfirmationCheckbox.isChecked();\n  if (!confirmationChecked) {\n    await expect(patientInfoConfirmationCheckbox).toBeVisible();\n    await patientInfoConfirmationCheckbox.click();\n    await expect(patientInfoConfirmationCheckbox).toBeEnabled();\n  }\n});\n\ntest('Should sign visit', async () => {\n  await page.getByTestId(dataTestIds.progressNotePage.reviewAndSignButton).click();\n  await telemedDialogConfirm(page);\n\n  const statusChip = page.getByTestId(dataTestIds.telemedEhrFlow.appointmentStatusChip);\n  await expect(statusChip).toBeVisible();\n  await expect(statusChip).toHaveText(TelemedAppointmentStatusEnum['complete']);\n});\n"]}