import { expect, test } from '@playwright/test';
import { FillingInfo } from '../../utils/in-person/FillingInfo';
import { UploadImage } from '../../utils/UploadImage';
import { BookPrebookVisit } from '../../utils/in-person/BookPrebookVisit';
import { Paperwork } from '../../utils/in-person/Paperwork';

test.describe.skip('TC52', () => {
  let PaperworkURL: string;
  let FilledfirstName: string;
  let FilledlastName: string;
  let FilledMiddleName: string;
  test.beforeAll(async ({ browser }) => {
    const context = await browser.newContext();
    const page = await context.newPage();

    const fillingInfo = new FillingInfo(page);
    const continueButton = page.getByRole('button', { name: 'Continue' });
    const BookVisit = new BookPrebookVisit(page);
    await page.goto(`/location/${process.env.STATE_ONE}/${process.env.SLUG_ONE}/prebook`);
    await expect(page.getByRole('tab', { name: 'Today' })).toBeVisible({ timeout: 15000 });
    await fillingInfo.selectRandomSlot();
    await expect(page.getByRole('heading', { name: 'Get ready for your visit' })).toBeVisible({ timeout: 15000 });
    await continueButton.click();
    await expect(page.getByRole('heading', { name: 'Welcome back!' })).toBeVisible({ timeout: 15000 });
    const bookingData = await BookVisit.bookNewPatientGT18yoAsParentFromPatientsScreen();
    FilledfirstName = bookingData.firstName;
    FilledlastName = bookingData.lastName;
    FilledMiddleName = bookingData.middleName;
    await page.getByRole('button', { name: 'Proceed to Paperwork' }).click();
    await expect(page.getByRole('heading', { name: 'Contact information' })).toBeVisible({ timeout: 15000 });
    PaperworkURL = page.url();
  });
  test('TC52 Complete/Missing chips on Review screen', async ({ page }) => {
    const continueButton = page.getByRole('button', { name: 'Continue' });
    const FillPaperwork = new Paperwork(page);
    const uploadPhoto = new UploadImage(page);
    const fillingInfo = new FillingInfo(page);
    await page.goto(PaperworkURL || '/');
    await page.getByRole('heading', { name: 'Contact information' }).isVisible({ timeout: 15000 });
    await FillPaperwork.FillPaperworkOnlyRequiredFields();
    await page.getByRole('heading', { name: 'Review and submit' }).isVisible({ timeout: 15000 });
    await expect(page.getByText(`${FilledfirstName} ${FilledMiddleName} ${FilledlastName}`)).toHaveCount(1);
    await expect(page.locator('.MuiChip-root').nth(0)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(1)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(2)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(3)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(4)).toHaveClass(/MuiChip-filledDefault/);
    await expect(page.locator('.MuiChip-root').nth(5)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.getByRole('button', { name: 'Continue' })).toBeVisible();
    await page.locator('button[aria-label=edit]').nth(4).click();
    await expect(page.getByRole('heading', { name: 'Photo ID' })).toBeVisible();
    await uploadPhoto.fillPhotoFrontID();
    await uploadPhoto.fillPhotoBackID();
    await continueButton.click();
    await continueButton.click();
    await expect(page.locator('.MuiChip-root').nth(0)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(1)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(2)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(3)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(4)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(5)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.getByRole('button', { name: 'Finish' })).toBeVisible();
    await page.locator('button[aria-label=edit]').nth(2).click();
    await expect(page.getByRole('heading', { name: 'How would you like to pay for your visit?' })).toBeVisible();
    await page.getByLabel('I have insurance').check();
    await expect(page.getByRole('heading', { name: 'Insurance details' })).toBeVisible();
    await fillingInfo.fillInsuranceRequiredFields();
    await continueButton.click();
    await continueButton.click();
    await continueButton.click();
    await continueButton.click();
    await expect(page.locator('.MuiChip-root').nth(0)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(1)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(2)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(3)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(4)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(5)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.getByRole('button', { name: 'Finish' })).toBeVisible();
    await page.reload();
    await expect(page.locator('.MuiChip-root').nth(0)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(1)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(2)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(3)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(4)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.locator('.MuiChip-root').nth(5)).toHaveClass(/MuiChip-filledInfo/);
    await expect(page.getByRole('button', { name: 'Finish' })).toBeVisible();
  });
});
